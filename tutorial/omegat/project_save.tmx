<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="OmegaT-4.1.5" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065129Z" creationid="pingfangx" creationdate="20180521T065129Z">
        <seg>!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>!(year % 100 == 0))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082515Z" creationid="pingfangx" creationdate="20180521T082515Z">
        <seg>!(year % 100 == 0))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>" MM tires.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094007Z" creationid="pingfangx" creationdate="20190102T094007Z">
        <seg>" MM tires.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>" and " + phoneNumber2);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123228Z" creationid="pingfangx" creationdate="20180705T123228Z">
        <seg>" and " + phoneNumber2);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>" and the string is %s",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064834Z" creationid="pingfangx" creationdate="20190103T064834Z">
        <seg>" and the string is %s",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>" and travelling at a speed of " + this.speed + ".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093236Z" creationid="pingfangx" creationdate="20190102T093236Z">
        <seg>" and travelling at a speed of " + this.speed + ".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>" digits after decimal point.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065439Z" creationid="pingfangx" creationdate="20190103T065439Z">
        <seg>" digits after decimal point.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"%-10.4f%n%n", pi); // --&gt;  "3,1416"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033622Z" creationid="pingfangx" creationdate="20190103T033622Z">
        <seg>"%-10.4f%n%n", pi); // --&gt;  "3,1416"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"%f, while the value of the " + "integer variable is %d, " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032811Z" creationid="pingfangx" creationdate="20190103T032811Z">
        <seg>"%f, while the value of the " + "integer variable is %d, " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>");
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093238Z" creationid="pingfangx" creationdate="20190102T093238Z">
        <seg>");
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"; using default time zone instead.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061344Z" creationid="pingfangx" creationdate="20190102T061344Z">
        <seg>"; using default time zone instead.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"; using the default time zone instead.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063525Z" creationid="pingfangx" creationdate="20190102T063525Z">
        <seg>"; using the default time zone instead.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"A nested class declared within a method...has access to any</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020758Z" creationid="pingfangx" creationdate="20190102T020704Z">
        <seg>"A nested class declared within a method...has access to any</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Found it" : "Didn't find it");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090649Z" creationid="pingfangx" creationdate="20180521T090649Z">
        <seg>"Found it" : "Didn't find it");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Hello World!" for Microsoft Windows</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034016Z" creationid="pingfangx" creationdate="20180518T034016Z">
        <seg>"Hello World!" for Microsoft Windows</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Hello World!" for Microsoft Windows (The Java™ Tutorials &gt; Getting Started &gt; The "Hello World!" Application)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034242Z" creationid="pingfangx" creationdate="20180518T034242Z">
        <seg>"Hello World!" for Microsoft Windows (The Java™ Tutorials &gt; Getting Started &gt; The "Hello World!" Application)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Hello World!" for Solaris OS and Linux</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034018Z" creationid="pingfangx" creationdate="20180518T034018Z">
        <seg>"Hello World!" for Solaris OS and Linux</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Hello World!" for the NetBeans IDE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034014Z" creationid="pingfangx" creationdate="20180518T034007Z">
        <seg>"Hello World!" for the NetBeans IDE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Hello, world!"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064421Z" creationid="pingfangx" creationdate="20190103T064421Z">
        <seg>"Hello, world!"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Hello," + " world" + "!"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064415Z" creationid="pingfangx" creationdate="20190103T064415Z">
        <seg>"Hello," + " world" + "!"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"InnerClass2 version of getAnotherString invoked".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021204Z" creationid="pingfangx" creationdate="20190102T021204Z">
        <seg>"InnerClass2 version of getAnotherString invoked".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"My name is ".concat("Rumplestiltskin");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064409Z" creationid="pingfangx" creationdate="20190103T064409Z">
        <seg>"My name is ".concat("Rumplestiltskin");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Now is the time for all good " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064553Z" creationid="pingfangx" creationdate="20190103T064553Z">
        <seg>"Now is the time for all good " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Patricia", "Robert", "Michael", "Linda" };
Arrays.sort(stringArray, String::compareToIgnoreCase);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084754Z" creationid="pingfangx" creationdate="20181228T084754Z">
        <seg>"Patricia", "Robert", "Michael", "Linda" };
Arrays.sort(stringArray, String::compareToIgnoreCase);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"The value of the float " + "variable is %f, while the " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033137Z" creationid="pingfangx" creationdate="20190103T033137Z">
        <seg>"The value of the float " + "variable is %f, while the " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Was it a car or a cat I saw?".substring(9, 12)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085236Z" creationid="pingfangx" creationdate="20190103T085236Z">
        <seg>"Was it a car or a cat I saw?".substring(9, 12)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"and the string is %s",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064830Z" creationid="pingfangx" creationdate="20190103T064830Z">
        <seg>"and the string is %s",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"and the string is %s", floatVar, intVar, stringVar);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032811Z" creationid="pingfangx" creationdate="20190103T032811Z">
        <seg>"and the string is %s", floatVar, intVar, stringVar);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"before decimal point.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065438Z" creationid="pingfangx" creationdate="20190103T065438Z">
        <seg>"before decimal point.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"integer variable is %d, " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064829Z" creationid="pingfangx" creationdate="20190103T064829Z">
        <seg>"integer variable is %d, " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"men to come to the aid of their country.";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064553Z" creationid="pingfangx" creationdate="20190103T064553Z">
        <seg>"men to come to the aid of their country.";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"requires two command-line arguments.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065209Z" creationid="pingfangx" creationdate="20190103T065209Z">
        <seg>"requires two command-line arguments.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"the value of the " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064829Z" creationid="pingfangx" creationdate="20190103T064829Z">
        <seg>"the value of the " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"value of the integer variable " + "is %d, and the string is %s%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033138Z" creationid="pingfangx" creationdate="20190103T033138Z">
        <seg>"value of the integer variable " + "is %d, and the string is %s%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"variable is %f, while " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064828Z" creationid="pingfangx" creationdate="20190103T064828Z">
        <seg>"variable is %f, while " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>###,###.###</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034144Z" creationid="pingfangx" creationdate="20190103T034144Z">
        <seg>###,###.###</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>###.##</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034234Z" creationid="pingfangx" creationdate="20190103T034234Z">
        <seg>###.##</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#CLASS_DEF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035300Z" creationid="pingfangx" creationdate="20180518T035300Z">
        <seg>#CLASS_DEF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#COMMENTS</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035249Z" creationid="pingfangx" creationdate="20180518T035249Z">
        <seg>#COMMENTS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#FOOT</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033103Z" creationid="pingfangx" creationdate="20180518T033103Z">
        <seg>#FOOT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#MAIN</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035301Z" creationid="pingfangx" creationdate="20180518T035301Z">
        <seg>#MAIN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#accessing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060350Z" creationid="pingfangx" creationdate="20180706T060350Z">
        <seg>#accessing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#accessing-local-variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083855Z" creationid="pingfangx" creationdate="20180706T083855Z">
        <seg>#accessing-local-variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#accessing-members-of-an-enclosing-class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121257Z" creationid="pingfangx" creationdate="20180705T121257Z">
        <seg>#accessing-members-of-an-enclosing-class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#approach1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083722Z" creationid="pingfangx" creationdate="20180706T083722Z">
        <seg>#approach1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#approach2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083733Z" creationid="pingfangx" creationdate="20180706T083733Z">
        <seg>#approach2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#approach3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083751Z" creationid="pingfangx" creationdate="20180706T083751Z">
        <seg>#approach3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#approach4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083759Z" creationid="pingfangx" creationdate="20180706T083759Z">
        <seg>#approach4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#approach5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083807Z" creationid="pingfangx" creationdate="20180706T083807Z">
        <seg>#approach5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#approach6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083811Z" creationid="pingfangx" creationdate="20180706T083811Z">
        <seg>#approach6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#approach7</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083833Z" creationid="pingfangx" creationdate="20180706T083833Z">
        <seg>#approach7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#approach8</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083836Z" creationid="pingfangx" creationdate="20180706T083836Z">
        <seg>#approach8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#approach9</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083841Z" creationid="pingfangx" creationdate="20180706T083841Z">
        <seg>#approach9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#declaring-anonymous-classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060344Z" creationid="pingfangx" creationdate="20180706T060344Z">
        <seg>#declaring-anonymous-classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#declaring-local-classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121256Z" creationid="pingfangx" creationdate="20180705T121256Z">
        <seg>#declaring-local-classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#examples-of-anonymous-classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060957Z" creationid="pingfangx" creationdate="20180706T060957Z">
        <seg>#examples-of-anonymous-classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#lambda-expressions-in-gui-applications</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083849Z" creationid="pingfangx" creationdate="20180706T083849Z">
        <seg>#lambda-expressions-in-gui-applications</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#local-classes-are-similar-to-inner-classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121528Z" creationid="pingfangx" creationdate="20180705T121528Z">
        <seg>#local-classes-are-similar-to-inner-classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#serialization</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083919Z" creationid="pingfangx" creationdate="20180706T083919Z">
        <seg>#serialization</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#shadowing-and-local-classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121314Z" creationid="pingfangx" creationdate="20180705T121314Z">
        <seg>#shadowing-and-local-classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#syntax</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083852Z" creationid="pingfangx" creationdate="20180706T083852Z">
        <seg>#syntax</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#syntax-of-anonymous-classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060347Z" creationid="pingfangx" creationdate="20180706T060347Z">
        <seg>#syntax-of-anonymous-classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#target-types-and-method-arguments</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083908Z" creationid="pingfangx" creationdate="20180706T083908Z">
        <seg>#target-types-and-method-arguments</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#target-typing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083859Z" creationid="pingfangx" creationdate="20180706T083859Z">
        <seg>#target-typing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#use-case</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083715Z" creationid="pingfangx" creationdate="20180706T083715Z">
        <seg>#use-case</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#win32-1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034325Z" creationid="pingfangx" creationdate="20180518T034325Z">
        <seg>#win32-1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#win32-2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034343Z" creationid="pingfangx" creationdate="20180518T034343Z">
        <seg>#win32-2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#win32-2a</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034345Z" creationid="pingfangx" creationdate="20180518T034345Z">
        <seg>#win32-2a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#win32-2b</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034348Z" creationid="pingfangx" creationdate="20180518T034348Z">
        <seg>#win32-2b</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#win32-2c</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034351Z" creationid="pingfangx" creationdate="20180518T034351Z">
        <seg>#win32-2c</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$ java Planet 175
Your weight on MERCURY is 66.107583
Your weight on VENUS is 158.374842
Your weight on EARTH is 175.000000
Your weight on MARS is 66.279007
Your weight on JUPITER is 442.847567
Your weight on SATURN is 186.552719
Your weight on URANUS is 158.397260
Your weight on NEPTUNE is 199.207413</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020045Z" creationid="pingfangx" creationdate="20190102T020045Z">
        <seg>$ java Planet 175
Your weight on MERCURY is 66.107583
Your weight on VENUS is 158.374842
Your weight on EARTH is 175.000000
Your weight on MARS is 66.279007
Your weight on JUPITER is 442.847567
Your weight on SATURN is 186.552719
Your weight on URANUS is 158.397260
Your weight on NEPTUNE is 199.207413</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$###,###.###</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034304Z" creationid="pingfangx" creationdate="20190103T034304Z">
        <seg>$###,###.###</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$12,345.67</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034305Z" creationid="pingfangx" creationdate="20190103T034305Z">
        <seg>$12,345.67</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>%</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064429Z" creationid="pingfangx" creationdate="20180521T064429Z">
        <seg>%</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063044Z" creationid="pingfangx" creationdate="20180521T063044Z">
        <seg>&amp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063147Z" creationid="pingfangx" creationdate="20180521T063147Z">
        <seg>&amp;&amp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp;      Conditional-AND
||      Conditional-OR
?:      Ternary (shorthand for</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071714Z" creationid="pingfangx" creationdate="20180521T071714Z">
        <seg>&amp;&amp;      条件与
||      条件或
?:      三元</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp; Conditional-AND
|| Conditional-OR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070208Z" creationid="pingfangx" creationdate="20180521T070208Z">
        <seg>&amp;&amp; 条件与
|| 条件或</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp; p.getAge() &lt;= 25</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075440Z" creationid="pingfangx" creationdate="20181228T075440Z">
        <seg>&amp;&amp; p.getAge() &lt;= 25</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp; p.getAge() &lt;= 25
);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093732Z" creationid="pingfangx" creationdate="20180706T093732Z">
        <seg>&amp;&amp; p.getAge() &lt;= 25
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp; p.getAge() &lt;= 25)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074347Z" creationid="pingfangx" creationdate="20181228T074347Z">
        <seg>&amp;&amp; p.getAge() &lt;= 25)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp; p.getAge() &lt;= 25,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094225Z" creationid="pingfangx" creationdate="20180706T094225Z">
        <seg>&amp;&amp; p.getAge() &lt;= 25,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp; p.getAge() &lt;= 25;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091513Z" creationid="pingfangx" creationdate="20180706T091513Z">
        <seg>&amp;&amp; p.getAge() &lt;= 25;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp; p.getAge() &lt;= 25;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075520Z" creationid="pingfangx" creationdate="20181228T075520Z">
        <seg>&amp;&amp; p.getAge() &lt;= 25;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp; p.getAge() &lt;= 25&lt;/s0&gt;
);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092039Z" creationid="pingfangx" creationdate="20180706T092039Z">
        <seg>&amp;&amp; p.getAge() &lt;= 25&lt;/s0&gt;
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp; p.getAge() &gt;= 18</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091513Z" creationid="pingfangx" creationdate="20180706T091513Z">
        <seg>&amp;&amp; p.getAge() &gt;= 18</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>'\u0000'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082204Z" creationid="pingfangx" creationdate="20180518T082204Z">
        <seg>'\u0000'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>'i', 'n', 'a', 't', 'e', 'd'};</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043354Z" creationid="pingfangx" creationdate="20180521T043354Z">
        <seg>'i', 'n', 'a', 't', 'e', 'd'};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(A &lt;e0&gt;constant variable&lt;/e0&gt; is a variable of primitive type or type &lt;c1&gt;String&lt;/c1&gt; that is declared final and initialized with a compile-time constant expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144834Z" creationid="pingfangx" creationdate="20180705T144834Z">
        <seg>（&lt;e0&gt;常量变量&lt;/e0&gt; 是基本类型或 &lt;c1&gt;String&lt;/c1&gt; 类型的变量，它被声明为 final 并使用编译时常量表达式进行初始化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(A functional interface may contain one or more &lt;a3&gt;default methods&lt;/a3&gt; or &lt;a4&gt;static methods&lt;/a4&gt;.) Because a functional interface contains only one abstract method, you can omit the name of that method when you implement it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092021Z" creationid="pingfangx" creationdate="20180706T092021Z">
        <seg>(函数式接口可能包含一个或多个 &lt;a3&gt;default methods（默认方法）&lt;/a3&gt; 或 &lt;a4&gt;static methods（静态方法）&lt;/a4&gt;。)因为函数式接口只包含一个抽象方法，所以当您实现它时可省略该方法的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(A static method is a method that is associated with the class in which it is defined rather than with any object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064811Z" creationid="pingfangx" creationdate="20190102T064811Z">
        <seg>（静态方法是一种与定义它的类相关联的方法，而不是与任何对象相关联的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(As a result, you can simplify the method &lt;c4&gt;getZonedDateTime&lt;/c4&gt;):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064906Z" creationid="pingfangx" creationdate="20190102T064906Z">
        <seg>(因此，您可以简化方法 &lt;c4&gt;getZonedDateTime&lt;/c4&gt;)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(By default, annotations are not included in Javadoc.) For more information, see the &lt;a3&gt;Javadoc tools page&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033929Z" creationid="pingfangx" creationdate="20190102T033929Z">
        <seg>(默认情况下，注解不包含在 Javadoc 中。)有关更多信息，请参阅 &lt;a3&gt;Javadoc tools page&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Call the</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021201Z" creationid="pingfangx" creationdate="20190102T021201Z">
        <seg>(Call the</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(For more information about generics, see the &lt;a1&gt;Generics (Updated)&lt;/a1&gt; lesson.) Generic types (such as generic interfaces) specify one or more type parameters within angle brackets (&lt;c2&gt;&lt;&gt;&lt;/c2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093331Z" creationid="pingfangx" creationdate="20180706T093116Z">
        <seg>（有关泛型的更多信息，请参阅 &lt;a1&gt;Generics (Updated)&lt;/a1&gt; 课程。）泛型类型（如泛型接口）在尖括号（&lt;c2&gt;&lt;&gt;&lt;/c2&gt; ）内指定一个或多个类型参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(It can be used, but it is unnecessary.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T020155Z" creationid="pingfangx" creationdate="20190103T020155Z">
        <seg>(可以使用，但不需要。)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Make sure you download the &lt;b1&gt;JDK&lt;/b1&gt;, &lt;i2&gt;not&lt;/i2&gt; the JRE.) Consult the &lt;a3&gt;installation instructions&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034431Z" creationid="pingfangx" creationdate="20180518T034431Z">
        <seg>(请确保您下载 &lt;b1&gt;JDK&lt;/b1&gt;，&lt;i2&gt;不是&lt;/i2&gt; JRE。)请参阅 &lt;a3&gt;installation instructions&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Many of the examples in the tutorial use public fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041927Z" creationid="pingfangx" creationdate="20180607T041927Z">
        <seg>（本教程中的许多示例使用公共字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Note that hiding fields is generally bad programming practice.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023244Z" creationid="pingfangx" creationdate="20190103T023244Z">
        <seg>(请注意，隐藏字段通常是糟糕的编程习惯。)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Person a, Person b) -&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084140Z" creationid="pingfangx" creationdate="20181228T084140Z">
        <seg>(Person a, Person b) -&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Recall that outer classes can only be declared &lt;c5&gt;public&lt;/c5&gt; or &lt;i6&gt;package private&lt;/i6&gt;.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090704Z" creationid="pingfangx" creationdate="20180705T090704Z">
        <seg>(回想一下，外部类只能声明为 &lt;c5&gt;public&lt;/c5&gt; 或 &lt;i6&gt;package private&lt;/i6&gt;。)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Remember that an &lt;a6&gt;abstract method&lt;/a6&gt; is a method declared without an implementation.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061339Z" creationid="pingfangx" creationdate="20190102T061339Z">
        <seg>(请记住，&lt;a6&gt;abstract method&lt;/a6&gt; 是在没有实现的情况下声明的方法。)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The Java™ Tutorials &gt; Getting Started &gt; The Java Technology Phenomenon)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033558Z" creationid="pingfangx" creationdate="20180518T033558Z">
        <seg>(The Java™ Tutorials &gt; Getting Started &gt; The Java Technology Phenomenon)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The Java™ Tutorials &gt; Learning the Java Language &gt; Object-Oriented Programming Concepts)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T060906Z" creationid="pingfangx" creationdate="20180518T060906Z">
        <seg>(The Java™ Tutorials &gt; Learning the Java Language &gt; Object-Oriented Programming Concepts)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The notation &lt;c4&gt;Object... args&lt;/c4&gt; is called &lt;e5&gt;varargs&lt;/e5&gt;, which means that the number of arguments may vary.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032904Z" creationid="pingfangx" creationdate="20190103T032904Z">
        <seg>(符号 &lt;c4&gt;Object... args&lt;/c4&gt; 称为 &lt;e5&gt;varargs&lt;/e5&gt;，这意味着参数的数量可能会有所不同。)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(This explains why there is a semicolon after the closing brace.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T064805Z" creationid="pingfangx" creationdate="20180706T062951Z">
        <seg>(这解释了为什么在右花括号后边有一个分号。)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(This is not true by default.) When the user queries the annotation type and the class has no annotation for this type, the class' superclass is queried for the annotation type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034034Z" creationid="pingfangx" creationdate="20190102T034034Z">
        <seg>(默认情况下不是这样。)当用户查询注解类型并且该类没有此类型的注解时，将查询类的超类以获取注解类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(a % b));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065208Z" creationid="pingfangx" creationdate="20190103T065208Z">
        <seg>(a % b));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(a * b));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065206Z" creationid="pingfangx" creationdate="20190103T065206Z">
        <seg>(a * b));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(a + b));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065203Z" creationid="pingfangx" creationdate="20190103T065203Z">
        <seg>(a + b));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(a - b));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065204Z" creationid="pingfangx" creationdate="20190103T065204Z">
        <seg>(a - b));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(a / b));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065207Z" creationid="pingfangx" creationdate="20190103T065207Z">
        <seg>(a / b));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(a WindowAdapter), which you can look at for syntax help.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021149Z" creationid="pingfangx" creationdate="20190102T021149Z">
        <seg>(a WindowAdapter), which you can look at for syntax help.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(a, b) -&gt; Person.compareByAge(a, b)
);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084200Z" creationid="pingfangx" creationdate="20181228T084200Z">
        <seg>(a, b) -&gt; Person.compareByAge(a, b)
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(firstCard, secondCard) -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071303Z" creationid="pingfangx" creationdate="20190102T071303Z">
        <seg>(firstCard, secondCard) -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(firstCard, secondCard) -&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071846Z" creationid="pingfangx" creationdate="20190102T071846Z">
        <seg>(firstCard, secondCard) -&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(in a .java source file)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083005Z" creationid="pingfangx" creationdate="20180705T083005Z">
        <seg>(in a .java source file)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(makes the program exit).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021147Z" creationid="pingfangx" creationdate="20190102T021147Z">
        <seg>(makes the program exit).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(not about instances of the enclosing class) and is used</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021016Z" creationid="pingfangx" creationdate="20190102T021016Z">
        <seg>(not about instances of the enclosing class) and is used</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(x + y) / 100  // unambiguous, recommended</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074559Z" creationid="pingfangx" creationdate="20180521T074559Z">
        <seg>(x + y) / 100  //明确的，推荐</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075331Z" creationid="pingfangx" creationdate="20181228T075331Z">
        <seg>);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075804Z" creationid="pingfangx" creationdate="20180518T075804Z">
        <seg>*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* (corners[1].x - corners[0].x)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033049Z" creationid="pingfangx" creationdate="20180601T033049Z">
        <seg>* (corners[1].x - corners[0].x)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* (corners[1].y - corners[0].y);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033052Z" creationid="pingfangx" creationdate="20180601T033052Z">
        <seg>* (corners[1].y - corners[0].y);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* / %</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063007Z" creationid="pingfangx" creationdate="20180521T063007Z">
        <seg>* / %</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* &lt;c1&gt;openFrontDoor&lt;/c1&gt; or</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041706Z" creationid="pingfangx" creationdate="20190102T041706Z">
        <seg>* &lt;c1&gt;openFrontDoor&lt;/c1&gt; or</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* &lt;c2&gt;openBackDoor&lt;/c2&gt; instead.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041707Z" creationid="pingfangx" creationdate="20190102T041707Z">
        <seg>* &lt;c2&gt;openBackDoor&lt;/c2&gt; instead.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* &lt;i0&gt;@deprecated&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033406Z" creationid="pingfangx" creationdate="20190102T033406Z">
        <seg>* &lt;i0&gt;@deprecated&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* &lt;i1&gt;explanation of why it was deprecated&lt;/i1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033407Z" creationid="pingfangx" creationdate="20190102T033407Z">
        <seg>* &lt;i1&gt;explanation of why it was deprecated&lt;/i1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* @deprecated use of &lt;c0&gt;open&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041705Z" creationid="pingfangx" creationdate="20190102T041705Z">
        <seg>* @deprecated use of &lt;c0&gt;open&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Describes the Request-for-Enhancement (RFE) annotation type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041813Z" creationid="pingfangx" creationdate="20190102T041813Z">
        <seg>* Describes the Request-for-Enhancement (RFE) annotation type.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* The HelloWorldApp class implements an application that</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035433Z" creationid="pingfangx" creationdate="20180518T035433Z">
        <seg>* The HelloWorldApp class implements an application that</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* is discouraged, use</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041705Z" creationid="pingfangx" creationdate="20190102T041705Z">
        <seg>* is discouraged, use</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* simply displays "Hello World!" to the standard output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035550Z" creationid="pingfangx" creationdate="20180518T035550Z">
        <seg>* simply displays "Hello World!" to the standard output.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* simply prints "Hello World!" to standard output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035433Z" creationid="pingfangx" creationdate="20180518T035433Z">
        <seg>* simply prints "Hello World!" to standard output.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075823Z" creationid="pingfangx" creationdate="20180518T075823Z">
        <seg>**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>***</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075830Z" creationid="pingfangx" creationdate="20180518T075830Z">
        <seg>***</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>****</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075833Z" creationid="pingfangx" creationdate="20180518T075833Z">
        <seg>****</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033408Z" creationid="pingfangx" creationdate="20190102T033408Z">
        <seg>*/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*/
&lt;b0&gt;class HelloWorldApp {&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035551Z" creationid="pingfangx" creationdate="20180518T035551Z">
        <seg>*/
&lt;b0&gt;class HelloWorldApp {&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*/
class HelloWorldApp {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035626Z" creationid="pingfangx" creationdate="20180518T035626Z">
        <seg>*/
class HelloWorldApp {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*/
public @interface RequestForEnhancement {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041813Z" creationid="pingfangx" creationdate="20190102T041813Z">
        <seg>*/
public @interface RequestForEnhancement {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*/&lt;/b0&gt;
class HelloWorldApp {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035434Z" creationid="pingfangx" creationdate="20180518T035434Z">
        <seg>*/&lt;/b0&gt;
class HelloWorldApp {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064407Z" creationid="pingfangx" creationdate="20180521T064407Z">
        <seg>+</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+       Additive operator (also used</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071159Z" creationid="pingfangx" creationdate="20180521T071159Z">
        <seg>+       加法运算符（也可用于</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+       Unary plus operator; indicates</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071307Z" creationid="pingfangx" creationdate="20180521T071307Z">
        <seg>+       一元加运算符；</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ " with a cadence of " + this.cadence +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093236Z" creationid="pingfangx" creationdate="20190102T093236Z">
        <seg>+ " with a cadence of " + this.cadence +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ "strings are anagrams:");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085930Z" creationid="pingfangx" creationdate="20190103T085930Z">
        <seg>+ "strings are anagrams:");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ (corners[1].y - corners[0].y)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033052Z" creationid="pingfangx" creationdate="20180601T033052Z">
        <seg>+ (corners[1].y - corners[0].y)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ (obj1 instanceof Child));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070506Z" creationid="pingfangx" creationdate="20180521T070506Z">
        <seg>+ (obj1 instanceof Child));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ (obj1 instanceof MyInterface));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070507Z" creationid="pingfangx" creationdate="20180521T070507Z">
        <seg>+ (obj1 instanceof MyInterface));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ (obj1 instanceof Parent));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070505Z" creationid="pingfangx" creationdate="20180521T070505Z">
        <seg>+ (obj1 instanceof Parent));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ (obj2 instanceof Child));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070509Z" creationid="pingfangx" creationdate="20180521T070509Z">
        <seg>+ (obj2 instanceof Child));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ (obj2 instanceof MyInterface));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070510Z" creationid="pingfangx" creationdate="20180521T070510Z">
        <seg>+ (obj2 instanceof MyInterface));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ (obj2 instanceof Parent));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070508Z" creationid="pingfangx" creationdate="20180521T070508Z">
        <seg>+ (obj2 instanceof Parent));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ -</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063013Z" creationid="pingfangx" creationdate="20180521T063013Z">
        <seg>+ -</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ anArray[0]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021711Z" creationid="pingfangx" creationdate="20180521T021711Z">
        <seg>+ anArray[0]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ anArray[1]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021712Z" creationid="pingfangx" creationdate="20180521T021712Z">
        <seg>+ anArray[1]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ anArray[2]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021713Z" creationid="pingfangx" creationdate="20180521T021713Z">
        <seg>+ anArray[2]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ anArray[3]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021714Z" creationid="pingfangx" creationdate="20180521T021714Z">
        <seg>+ anArray[3]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ anArray[4]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021715Z" creationid="pingfangx" creationdate="20180521T021715Z">
        <seg>+ anArray[4]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ anArray[5]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021716Z" creationid="pingfangx" creationdate="20180521T021716Z">
        <seg>+ anArray[5]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ anArray[6]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021717Z" creationid="pingfangx" creationdate="20180521T021717Z">
        <seg>+ anArray[6]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ anArray[7]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021718Z" creationid="pingfangx" creationdate="20180521T021718Z">
        <seg>+ anArray[7]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ anArray[8]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021719Z" creationid="pingfangx" creationdate="20180521T021719Z">
        <seg>+ anArray[8]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ anArray[9]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021720Z" creationid="pingfangx" creationdate="20180521T021720Z">
        <seg>+ anArray[9]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+ numDays);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082526Z" creationid="pingfangx" creationdate="20180521T082526Z">
        <seg>+ numDays);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>++</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065052Z" creationid="pingfangx" creationdate="20180521T065052Z">
        <seg>++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>++&lt;e0&gt;expr&lt;/e0&gt; --&lt;e1&gt;expr&lt;/e1&gt; +&lt;e2&gt;expr&lt;/e2&gt; -&lt;e3&gt;expr&lt;/e3&gt; ~ !</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062959Z" creationid="pingfangx" creationdate="20180521T062959Z">
        <seg>++&lt;e0&gt;expr&lt;/e0&gt; --&lt;e1&gt;expr&lt;/e1&gt; +&lt;e2&gt;expr&lt;/e2&gt; -&lt;e3&gt;expr&lt;/e3&gt; ~ !</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>++i;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065519Z" creationid="pingfangx" creationdate="20180521T065519Z">
        <seg>++i;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033539Z" creationid="pingfangx" creationdate="20190103T033539Z">
        <seg>,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064416Z" creationid="pingfangx" creationdate="20180521T064416Z">
        <seg>-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- ((&lt;b7&gt;futureValue&lt;/b7&gt; * partial1) / denominator);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032104Z" creationid="pingfangx" creationdate="20180601T032104Z">
        <seg>- ((&lt;b7&gt;futureValue&lt;/b7&gt; * partial1) / denominator);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- &lt;b5&gt;numPeriods&lt;/b5&gt;);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032103Z" creationid="pingfangx" creationdate="20180601T032103Z">
        <seg>- &lt;b5&gt;numPeriods&lt;/b5&gt;);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- A &lt;code&gt;main&lt;/code&gt; method that creates an instance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021207Z" creationid="pingfangx" creationdate="20190102T021207Z">
        <seg>- A &lt;code&gt;main&lt;/code&gt; method that creates an instance</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- A no-argument constructor that initializes the inherited</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021205Z" creationid="pingfangx" creationdate="20190102T021205Z">
        <seg>- A no-argument constructor that initializes the inherited</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065120Z" creationid="pingfangx" creationdate="20180521T065120Z">
        <seg>--</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---------</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020643Z" creationid="pingfangx" creationdate="20190102T020643Z">
        <seg>---------</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-descending</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035749Z" creationid="pingfangx" creationdate="20180518T035749Z">
        <seg>-descending</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-i : i;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084615Z" creationid="pingfangx" creationdate="20190103T084615Z">
        <seg>-i : i;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035559Z" creationid="pingfangx" creationdate="20180518T035559Z">
        <seg>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065417Z" creationid="pingfangx" creationdate="20180525T065417Z">
        <seg>...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>...
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091931Z" creationid="pingfangx" creationdate="20180601T091931Z">
        <seg>...
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>......</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054136Z" creationid="pingfangx" creationdate="20190102T054136Z">
        <seg>......</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../../images/sourceIcon.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083006Z" creationid="pingfangx" creationdate="20180705T083006Z">
        <seg>../../../images/sourceIcon.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../../index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064632Z" creationid="pingfangx" creationdate="20180518T064632Z">
        <seg>../../../index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../../java/javaOO/innerclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013954Z" creationid="pingfangx" creationdate="20190102T013954Z">
        <seg>../../../java/javaOO/innerclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../IandI/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041544Z" creationid="pingfangx" creationdate="20190102T041544Z">
        <seg>../../IandI/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../TOC.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064634Z" creationid="pingfangx" creationdate="20180518T064634Z">
        <seg>../../TOC.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../annotations/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020143Z" creationid="pingfangx" creationdate="20190102T020143Z">
        <seg>../../annotations/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../collections/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085525Z" creationid="pingfangx" creationdate="20180521T085525Z">
        <seg>../../collections/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../collections/streams/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074930Z" creationid="pingfangx" creationdate="20181228T074930Z">
        <seg>../../collections/streams/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../data/examples/ValueOfDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041539Z" creationid="pingfangx" creationdate="20190103T041539Z">
        <seg>../../data/examples/ValueOfDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../data/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023444Z" creationid="pingfangx" creationdate="20190103T023444Z">
        <seg>../../data/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../essential/io/formatting.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033625Z" creationid="pingfangx" creationdate="20190103T033625Z">
        <seg>../../essential/io/formatting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/getStarted/check.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034359Z" creationid="pingfangx" creationdate="20180518T034359Z">
        <seg>../../figures/getStarted/check.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/getStarted/dos.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034737Z" creationid="pingfangx" creationdate="20180518T034737Z">
        <seg>../../figures/getStarted/dos.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/getStarted/getStarted-compiler.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033205Z" creationid="pingfangx" creationdate="20180518T033205Z">
        <seg>../../figures/getStarted/getStarted-compiler.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/getStarted/getStarted-jvm.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033415Z" creationid="pingfangx" creationdate="20180518T033415Z">
        <seg>../../figures/getStarted/getStarted-jvm.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/getStarted/helloWorld.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033240Z" creationid="pingfangx" creationdate="20180518T033240Z">
        <seg>../../figures/getStarted/helloWorld.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/getStarted/saveas.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034710Z" creationid="pingfangx" creationdate="20180518T034710Z">
        <seg>../../figures/getStarted/saveas.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/getStarted/typeA.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034548Z" creationid="pingfangx" creationdate="20180518T034548Z">
        <seg>../../figures/getStarted/typeA.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/getStarted/typea2.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034549Z" creationid="pingfangx" creationdate="20180518T034549Z">
        <seg>../../figures/getStarted/typea2.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/classes-access.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041358Z" creationid="pingfangx" creationdate="20180607T041358Z">
        <seg>../../figures/java/classes-access.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/classes-graphicObject.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022229Z" creationid="pingfangx" creationdate="20190103T022229Z">
        <seg>../../figures/java/classes-graphicObject.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/classes-hierarchy.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091921Z" creationid="pingfangx" creationdate="20180601T091921Z">
        <seg>../../figures/java/classes-hierarchy.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/classes-object.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081852Z" creationid="pingfangx" creationdate="20190102T081852Z">
        <seg>../../figures/java/classes-object.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/concepts-bicycleObject.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061724Z" creationid="pingfangx" creationdate="20180518T061724Z">
        <seg>../../figures/java/concepts-bicycleObject.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/concepts-bikeHierarchy.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063450Z" creationid="pingfangx" creationdate="20180518T063450Z">
        <seg>../../figures/java/concepts-bikeHierarchy.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/concepts-object.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061355Z" creationid="pingfangx" creationdate="20180518T061355Z">
        <seg>../../figures/java/concepts-object.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/objects-charAt.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072609Z" creationid="pingfangx" creationdate="20190103T072609Z">
        <seg>../../figures/java/objects-charAt.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/objects-lastIndexOf.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075100Z" creationid="pingfangx" creationdate="20190103T075100Z">
        <seg>../../figures/java/objects-lastIndexOf.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/objects-multipleRefs.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071422Z" creationid="pingfangx" creationdate="20180601T071422Z">
        <seg>../../figures/java/objects-multipleRefs.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/objects-null.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042827Z" creationid="pingfangx" creationdate="20180601T042827Z">
        <seg>../../figures/java/objects-null.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/objects-numberHierarchy.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030144Z" creationid="pingfangx" creationdate="20190103T030144Z">
        <seg>../../figures/java/objects-numberHierarchy.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/objects-oneRef.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062551Z" creationid="pingfangx" creationdate="20180601T062551Z">
        <seg>../../figures/java/objects-oneRef.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/objects-stringBuffer.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081336Z" creationid="pingfangx" creationdate="20190103T081336Z">
        <seg>../../figures/java/objects-stringBuffer.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/objects-substring.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072956Z" creationid="pingfangx" creationdate="20190103T072956Z">
        <seg>../../figures/java/objects-substring.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../figures/java/objects-tenElementArray.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021543Z" creationid="pingfangx" creationdate="20180521T021543Z">
        <seg>../../figures/java/objects-tenElementArray.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../generics/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085126Z" creationid="pingfangx" creationdate="20190103T085126Z">
        <seg>../../generics/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032707Z" creationid="pingfangx" creationdate="20180518T032707Z">
        <seg>../../index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/IandI/QandE/interfaces-answers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060813Z" creationid="pingfangx" creationdate="20190102T060813Z">
        <seg>../../java/IandI/QandE/interfaces-answers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/IandI/abstract.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091550Z" creationid="pingfangx" creationdate="20180706T091550Z">
        <seg>../../java/IandI/abstract.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/IandI/createinterface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055911Z" creationid="pingfangx" creationdate="20190102T055911Z">
        <seg>../../java/IandI/createinterface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/IandI/defaultmethods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091552Z" creationid="pingfangx" creationdate="20180706T091552Z">
        <seg>../../java/IandI/defaultmethods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/IandI/defaultmethods.html#static</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091553Z" creationid="pingfangx" creationdate="20180706T091553Z">
        <seg>../../java/IandI/defaultmethods.html#static</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/IandI/interfaceAsType.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084951Z" creationid="pingfangx" creationdate="20190102T084951Z">
        <seg>../../java/IandI/interfaceAsType.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/concepts/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023404Z" creationid="pingfangx" creationdate="20180525T023404Z">
        <seg>../../java/concepts/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/concepts/object.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084208Z" creationid="pingfangx" creationdate="20190102T084208Z">
        <seg>../../java/concepts/object.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/generics/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092919Z" creationid="pingfangx" creationdate="20180706T092919Z">
        <seg>../../java/generics/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/javaOO/QandE/creating-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065159Z" creationid="pingfangx" creationdate="20190102T065159Z">
        <seg>../../java/javaOO/QandE/creating-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/javaOO/classvars.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064743Z" creationid="pingfangx" creationdate="20190102T064743Z">
        <seg>../../java/javaOO/classvars.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/javaOO/lambdaexpressions.html#approach6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071306Z" creationid="pingfangx" creationdate="20190102T071306Z">
        <seg>../../java/javaOO/lambdaexpressions.html#approach6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/javaOO/methodreferences.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071717Z" creationid="pingfangx" creationdate="20190102T071717Z">
        <seg>../../java/javaOO/methodreferences.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/javaOO/nested.html#shadowing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123253Z" creationid="pingfangx" creationdate="20180705T123253Z">
        <seg>../../java/javaOO/nested.html#shadowing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/nutsandbolts/expressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121610Z" creationid="pingfangx" creationdate="20180705T121610Z">
        <seg>../../java/nutsandbolts/expressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../java/nutsandbolts/variables.html#naming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064309Z" creationid="pingfangx" creationdate="20180525T064309Z">
        <seg>../../java/nutsandbolts/variables.html#naming</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../javaOO/QandE/creating-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023453Z" creationid="pingfangx" creationdate="20190103T023453Z">
        <seg>../../javaOO/QandE/creating-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../javaOO/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091017Z" creationid="pingfangx" creationdate="20180521T091017Z">
        <seg>../../javaOO/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../jndi/objects/serial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091705Z" creationid="pingfangx" creationdate="20180705T091705Z">
        <seg>../../jndi/objects/serial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../nutsandbolts/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064634Z" creationid="pingfangx" creationdate="20180518T064634Z">
        <seg>../../nutsandbolts/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../reflect/member/methodparameterreflection.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091707Z" creationid="pingfangx" creationdate="20180705T091707Z">
        <seg>../../reflect/member/methodparameterreflection.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../../reflect/member/methodparameterreflection.html#implcit_and_synthetic</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091706Z" creationid="pingfangx" creationdate="20180705T091706Z">
        <seg>../../reflect/member/methodparameterreflection.html#implcit_and_synthetic</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../IandI/createinterface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T020015Z" creationid="pingfangx" creationdate="20190103T020015Z">
        <seg>../IandI/createinterface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../IandI/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064143Z" creationid="pingfangx" creationdate="20180518T064143Z">
        <seg>../IandI/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../IandI/multipleinheritance.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015532Z" creationid="pingfangx" creationdate="20190102T015532Z">
        <seg>../IandI/multipleinheritance.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/characters-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041359Z" creationid="pingfangx" creationdate="20190103T041359Z">
        <seg>../QandE/characters-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/creating-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082808Z" creationid="pingfangx" creationdate="20180705T082808Z">
        <seg>../QandE/creating-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/enum-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082456Z" creationid="pingfangx" creationdate="20180705T082456Z">
        <seg>../QandE/enum-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/inherit-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074510Z" creationid="pingfangx" creationdate="20190102T074510Z">
        <seg>../QandE/inherit-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/interfaces-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074650Z" creationid="pingfangx" creationdate="20190102T074650Z">
        <seg>../QandE/interfaces-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/nested-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082453Z" creationid="pingfangx" creationdate="20180705T082453Z">
        <seg>../QandE/nested-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/numbers-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041710Z" creationid="pingfangx" creationdate="20190103T041710Z">
        <seg>../QandE/numbers-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/objects-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082446Z" creationid="pingfangx" creationdate="20180705T082446Z">
        <seg>../QandE/objects-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035234Z" creationid="pingfangx" creationdate="20180518T035234Z">
        <seg>../QandE/questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/questions_expressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061740Z" creationid="pingfangx" creationdate="20180521T061740Z">
        <seg>../QandE/questions_expressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/questions_flow.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061748Z" creationid="pingfangx" creationdate="20180521T061748Z">
        <seg>../QandE/questions_flow.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/questions_operators.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061738Z" creationid="pingfangx" creationdate="20180521T061738Z">
        <seg>../QandE/questions_operators.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../QandE/questions_variables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061940Z" creationid="pingfangx" creationdate="20180521T061940Z">
        <seg>../QandE/questions_variables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../TOC.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032711Z" creationid="pingfangx" creationdate="20180518T032711Z">
        <seg>../TOC.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../abstract.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074509Z" creationid="pingfangx" creationdate="20190102T074509Z">
        <seg>../abstract.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../accesscontrol.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082443Z" creationid="pingfangx" creationdate="20180705T082443Z">
        <seg>../accesscontrol.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../annotations/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042710Z" creationid="pingfangx" creationdate="20190102T042710Z">
        <seg>../annotations/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../anonymousclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082451Z" creationid="pingfangx" creationdate="20180705T082451Z">
        <seg>../anonymousclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../application/examples/HelloWorldApp.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034511Z" creationid="pingfangx" creationdate="20180518T034511Z">
        <seg>../application/examples/HelloWorldApp.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../arguments.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082438Z" creationid="pingfangx" creationdate="20180705T082438Z">
        <seg>../arguments.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../arrays.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061732Z" creationid="pingfangx" creationdate="20180521T061732Z">
        <seg>../arrays.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../autoboxing.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041359Z" creationid="pingfangx" creationdate="20190103T041359Z">
        <seg>../autoboxing.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../basics.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041540Z" creationid="pingfangx" creationdate="20190102T041540Z">
        <seg>../basics.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../beyondmath.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041352Z" creationid="pingfangx" creationdate="20190103T041352Z">
        <seg>../beyondmath.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../branch.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061746Z" creationid="pingfangx" creationdate="20180521T061746Z">
        <seg>../branch.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../buffers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041358Z" creationid="pingfangx" creationdate="20190103T041358Z">
        <seg>../buffers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../characters.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041355Z" creationid="pingfangx" creationdate="20190103T041355Z">
        <seg>../characters.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../class.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064628Z" creationid="pingfangx" creationdate="20180518T064628Z">
        <seg>../class.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../classdecl.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082435Z" creationid="pingfangx" creationdate="20180705T082435Z">
        <seg>../classdecl.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../classes.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082435Z" creationid="pingfangx" creationdate="20180705T082435Z">
        <seg>../classes.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../classvars.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082444Z" creationid="pingfangx" creationdate="20180705T082444Z">
        <seg>../classvars.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../comparestrings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041358Z" creationid="pingfangx" creationdate="20190103T041358Z">
        <seg>../comparestrings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../concepts/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072505Z" creationid="pingfangx" creationdate="20180518T072505Z">
        <seg>../concepts/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../concepts/object.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073042Z" creationid="pingfangx" creationdate="20180518T073042Z">
        <seg>../concepts/object.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../constructors.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082437Z" creationid="pingfangx" creationdate="20180705T082437Z">
        <seg>../constructors.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../converting.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041357Z" creationid="pingfangx" creationdate="20190103T041357Z">
        <seg>../converting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../createinterface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074459Z" creationid="pingfangx" creationdate="20190102T074459Z">
        <seg>../createinterface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../cupojava/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033740Z" creationid="pingfangx" creationdate="20180518T033740Z">
        <seg>../cupojava/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../data/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081439Z" creationid="pingfangx" creationdate="20180518T081439Z">
        <seg>../data/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../datatypes.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061730Z" creationid="pingfangx" creationdate="20180521T061730Z">
        <seg>../datatypes.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../declaring.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041541Z" creationid="pingfangx" creationdate="20190102T041541Z">
        <seg>../declaring.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../defaultmethods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074502Z" creationid="pingfangx" creationdate="20190102T074502Z">
        <seg>../defaultmethods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../enum.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082456Z" creationid="pingfangx" creationdate="20180705T082456Z">
        <seg>../enum.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../essential/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040635Z" creationid="pingfangx" creationdate="20180518T040635Z">
        <seg>../essential/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/Card.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083003Z" creationid="pingfangx" creationdate="20180705T083003Z">
        <seg>../examples/Card.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/Card2.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023835Z" creationid="pingfangx" creationdate="20190103T023835Z">
        <seg>../examples/Card2.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/Card3.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020349Z" creationid="pingfangx" creationdate="20190102T020349Z">
        <seg>../examples/Card3.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/CharSequenceDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074812Z" creationid="pingfangx" creationdate="20190102T074812Z">
        <seg>../examples/CharSequenceDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/DataStructure.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013953Z" creationid="pingfangx" creationdate="20190102T013953Z">
        <seg>../examples/DataStructure.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/Deck.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083017Z" creationid="pingfangx" creationdate="20180705T083017Z">
        <seg>../examples/Deck.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/Deck3.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020358Z" creationid="pingfangx" creationdate="20190102T020358Z">
        <seg>../examples/Deck3.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/DisplayDeck.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083024Z" creationid="pingfangx" creationdate="20180705T083024Z">
        <seg>../examples/DisplayDeck.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/Rank.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020350Z" creationid="pingfangx" creationdate="20190102T020350Z">
        <seg>../examples/Rank.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/Suit.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020349Z" creationid="pingfangx" creationdate="20190102T020349Z">
        <seg>../examples/Suit.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../examples/TimeClient.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074824Z" creationid="pingfangx" creationdate="20190102T074824Z">
        <seg>../examples/TimeClient.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../expressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061739Z" creationid="pingfangx" creationdate="20180521T061739Z">
        <seg>../expressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../final.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074508Z" creationid="pingfangx" creationdate="20190102T074508Z">
        <seg>../final.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../flow.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061741Z" creationid="pingfangx" creationdate="20180521T061741Z">
        <seg>../flow.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../flowsummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061747Z" creationid="pingfangx" creationdate="20180521T061747Z">
        <seg>../flowsummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../for.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061744Z" creationid="pingfangx" creationdate="20180521T061744Z">
        <seg>../for.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../generics/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033608Z" creationid="pingfangx" creationdate="20190102T033608Z">
        <seg>../generics/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../hidevariables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074506Z" creationid="pingfangx" creationdate="20190102T074506Z">
        <seg>../hidevariables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../if.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061741Z" creationid="pingfangx" creationdate="20180521T061741Z">
        <seg>../if.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../images/coreTrail.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040635Z" creationid="pingfangx" creationdate="20180518T040635Z">
        <seg>../images/coreTrail.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../images/getStartedIcon.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032143Z" creationid="pingfangx" creationdate="20180518T032143Z">
        <seg>../images/getStartedIcon.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../images/javaIcon.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042131Z" creationid="pingfangx" creationdate="20180518T042131Z">
        <seg>../images/javaIcon.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../images/javaTrail.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040612Z" creationid="pingfangx" creationdate="20180518T040612Z">
        <seg>../images/javaTrail.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../images/networkingTrail.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093108Z" creationid="pingfangx" creationdate="20180521T093108Z">
        <seg>../images/networkingTrail.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../images/uiTrail.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093102Z" creationid="pingfangx" creationdate="20180521T093102Z">
        <seg>../images/uiTrail.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032048Z" creationid="pingfangx" creationdate="20180518T032048Z">
        <seg>../index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../inheritance.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064629Z" creationid="pingfangx" creationdate="20180518T064629Z">
        <seg>../inheritance.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../initial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082444Z" creationid="pingfangx" creationdate="20180705T082444Z">
        <seg>../initial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../innerclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082449Z" creationid="pingfangx" creationdate="20180705T082449Z">
        <seg>../innerclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../interface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064630Z" creationid="pingfangx" creationdate="20180518T064630Z">
        <seg>../interface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../interfaceAsType.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074501Z" creationid="pingfangx" creationdate="20190102T074501Z">
        <seg>../interfaceAsType.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../interfaceDef.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074500Z" creationid="pingfangx" creationdate="20190102T074500Z">
        <seg>../interfaceDef.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../intro/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034020Z" creationid="pingfangx" creationdate="20180518T034020Z">
        <seg>../intro/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../java/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040614Z" creationid="pingfangx" creationdate="20180518T040614Z">
        <seg>../java/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javaOO/enum.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081454Z" creationid="pingfangx" creationdate="20180521T081454Z">
        <seg>../javaOO/enum.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javaOO/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064142Z" creationid="pingfangx" creationdate="20180518T064142Z">
        <seg>../javaOO/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javaOO/methods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090734Z" creationid="pingfangx" creationdate="20180521T090734Z">
        <seg>../javaOO/methods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javaOO/objectcreation.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063900Z" creationid="pingfangx" creationdate="20180521T063900Z">
        <seg>../javaOO/objectcreation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javaOO/objects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T015246Z" creationid="pingfangx" creationdate="20180607T015246Z">
        <seg>../javaOO/objects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../lambdaexpressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082452Z" creationid="pingfangx" creationdate="20180705T082452Z">
        <seg>../lambdaexpressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../localclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082450Z" creationid="pingfangx" creationdate="20180705T082450Z">
        <seg>../localclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../manipstrings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041357Z" creationid="pingfangx" creationdate="20190103T041357Z">
        <seg>../manipstrings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../methodreferences.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082452Z" creationid="pingfangx" creationdate="20180705T082452Z">
        <seg>../methodreferences.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../methods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082437Z" creationid="pingfangx" creationdate="20180705T082437Z">
        <seg>../methods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../more.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082441Z" creationid="pingfangx" creationdate="20180705T082441Z">
        <seg>../more.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../multipleinheritance.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074504Z" creationid="pingfangx" creationdate="20190102T074504Z">
        <seg>../multipleinheritance.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../nested.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082447Z" creationid="pingfangx" creationdate="20180705T082447Z">
        <seg>../nested.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../networking/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093108Z" creationid="pingfangx" creationdate="20180521T093108Z">
        <seg>../networking/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../nogrow.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074502Z" creationid="pingfangx" creationdate="20190102T074502Z">
        <seg>../nogrow.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../numberclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041352Z" creationid="pingfangx" creationdate="20190103T041352Z">
        <seg>../numberclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../numberformat.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041352Z" creationid="pingfangx" creationdate="20190103T041352Z">
        <seg>../numberformat.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../numbers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041351Z" creationid="pingfangx" creationdate="20190103T041351Z">
        <seg>../numbers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../numbersummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041353Z" creationid="pingfangx" creationdate="20190103T041353Z">
        <seg>../numbersummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../nutsandbolts/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022859Z" creationid="pingfangx" creationdate="20180525T022859Z">
        <seg>../nutsandbolts/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../object.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064625Z" creationid="pingfangx" creationdate="20180518T064625Z">
        <seg>../object.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../objectclass.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074507Z" creationid="pingfangx" creationdate="20190102T074507Z">
        <seg>../objectclass.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../objectcreation.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082439Z" creationid="pingfangx" creationdate="20180705T082439Z">
        <seg>../objectcreation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../objects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082438Z" creationid="pingfangx" creationdate="20180705T082438Z">
        <seg>../objects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../op1.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061735Z" creationid="pingfangx" creationdate="20180521T061735Z">
        <seg>../op1.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../op2.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061736Z" creationid="pingfangx" creationdate="20180521T061736Z">
        <seg>../op2.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../op3.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061736Z" creationid="pingfangx" creationdate="20180521T061736Z">
        <seg>../op3.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../operators.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061734Z" creationid="pingfangx" creationdate="20180521T061734Z">
        <seg>../operators.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../opsummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061737Z" creationid="pingfangx" creationdate="20180521T061737Z">
        <seg>../opsummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../override.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074505Z" creationid="pingfangx" creationdate="20190102T074505Z">
        <seg>../override.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../package.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064631Z" creationid="pingfangx" creationdate="20180518T064631Z">
        <seg>../package.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../package/usepkgs.html#staticimport</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035251Z" creationid="pingfangx" creationdate="20190103T035251Z">
        <seg>../package/usepkgs.html#staticimport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../polymorphism.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074506Z" creationid="pingfangx" creationdate="20190102T074506Z">
        <seg>../polymorphism.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../predefined.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041541Z" creationid="pingfangx" creationdate="20190102T041541Z">
        <seg>../predefined.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../problems/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034133Z" creationid="pingfangx" creationdate="20180518T034133Z">
        <seg>../problems/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../repeating.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041542Z" creationid="pingfangx" creationdate="20190102T041542Z">
        <seg>../repeating.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../returnvalue.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082442Z" creationid="pingfangx" creationdate="20180705T082442Z">
        <seg>../returnvalue.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../strings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041356Z" creationid="pingfangx" creationdate="20190103T041356Z">
        <seg>../strings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../stringsummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041358Z" creationid="pingfangx" creationdate="20190103T041358Z">
        <seg>../stringsummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../subclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074504Z" creationid="pingfangx" creationdate="20190102T074504Z">
        <seg>../subclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../summary-interface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074503Z" creationid="pingfangx" creationdate="20190102T074503Z">
        <seg>../summary-interface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../summaryclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082445Z" creationid="pingfangx" creationdate="20180705T082445Z">
        <seg>../summaryclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../summaryinherit.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074509Z" creationid="pingfangx" creationdate="20190102T074509Z">
        <seg>../summaryinherit.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../super.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074507Z" creationid="pingfangx" creationdate="20190102T074507Z">
        <seg>../super.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../switch.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061742Z" creationid="pingfangx" creationdate="20180521T061742Z">
        <seg>../switch.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../thiskey.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082443Z" creationid="pingfangx" creationdate="20180705T082443Z">
        <seg>../thiskey.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../type_annotations.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041542Z" creationid="pingfangx" creationdate="20190102T041542Z">
        <seg>../type_annotations.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../uiswing/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093103Z" creationid="pingfangx" creationdate="20180521T093103Z">
        <seg>../uiswing/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../usinginterface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074500Z" creationid="pingfangx" creationdate="20190102T074500Z">
        <seg>../usinginterface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../usingobject.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082440Z" creationid="pingfangx" creationdate="20180705T082440Z">
        <seg>../usingobject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../variables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061729Z" creationid="pingfangx" creationdate="20180521T061729Z">
        <seg>../variables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../variablesummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061732Z" creationid="pingfangx" creationdate="20180521T061732Z">
        <seg>../variablesummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../whentouse.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082453Z" creationid="pingfangx" creationdate="20180705T082453Z">
        <seg>../whentouse.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../while.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061743Z" creationid="pingfangx" creationdate="20180521T061743Z">
        <seg>../while.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>./TOC.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032053Z" creationid="pingfangx" creationdate="20180518T032053Z">
        <seg>./TOC.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>./concepts/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042024Z" creationid="pingfangx" creationdate="20180518T042024Z">
        <seg>./concepts/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>./index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040703Z" creationid="pingfangx" creationdate="20180518T040703Z">
        <seg>./index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>./intro/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032053Z" creationid="pingfangx" creationdate="20180518T032053Z">
        <seg>./intro/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033549Z" creationid="pingfangx" creationdate="20190103T033549Z">
        <seg>.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.comparing(Card::getRank)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071938Z" creationid="pingfangx" creationdate="20190102T071938Z">
        <seg>.comparing(Card::getRank)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.filter(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074346Z" creationid="pingfangx" creationdate="20181228T074346Z">
        <seg>.filter(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.forEach(email -&gt; System.out.println(email));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074348Z" creationid="pingfangx" creationdate="20181228T074348Z">
        <seg>.forEach(email -&gt; System.out.println(email));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.map(p -&gt; p.getEmailAddress())</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074348Z" creationid="pingfangx" creationdate="20181228T074348Z">
        <seg>.map(p -&gt; p.getEmailAddress())</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.reversed()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072145Z" creationid="pingfangx" creationdate="20190102T072145Z">
        <seg>.reversed()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.stream()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074344Z" creationid="pingfangx" creationdate="20181228T074344Z">
        <seg>.stream()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.thenComparing(Comparator.comparing(Card::getSuit)));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071938Z" creationid="pingfangx" creationdate="20190102T071938Z">
        <seg>.thenComparing(Comparator.comparing(Card::getSuit)));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064421Z" creationid="pingfangx" creationdate="20180521T064421Z">
        <seg>/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/* &lt;e0&gt;text&lt;/e0&gt; */</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035448Z" creationid="pingfangx" creationdate="20180518T035448Z">
        <seg>/* &lt;e0&gt;text&lt;/e0&gt; */</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035548Z" creationid="pingfangx" creationdate="20180518T035548Z">
        <seg>/**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
 * The HelloWorldApp class implements an application that
 * simply prints "Hello World!" to standard output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034534Z" creationid="pingfangx" creationdate="20180518T034534Z">
        <seg>/**
 * The HelloWorldApp class implements an application that
 * simply prints "Hello World!" to standard output.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/** &lt;e0&gt;documentation&lt;/e0&gt; */</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035453Z" creationid="pingfangx" creationdate="20180518T035453Z">
        <seg>/** &lt;e0&gt;documentation&lt;/e0&gt; */</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075957Z" creationid="pingfangx" creationdate="20181228T075957Z">
        <seg>//</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//  wheel revolutions per minute</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064220Z" creationid="pingfangx" creationdate="20180518T063855Z">
        <seg>//每分钟车轮转数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// - suppressed</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033606Z" creationid="pingfangx" creationdate="20190102T033606Z">
        <seg>// - suppressed</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// ...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085438Z" creationid="pingfangx" creationdate="20180706T085438Z">
        <seg>// ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// ...
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080036Z" creationid="pingfangx" creationdate="20181228T080036Z">
        <seg>// ...
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084605Z" creationid="pingfangx" creationdate="20190103T084605Z">
        <seg>// 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// 2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084610Z" creationid="pingfangx" creationdate="20190103T084610Z">
        <seg>// 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b0&gt;add an instance variable for the object ID&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043045Z" creationid="pingfangx" creationdate="20180607T043045Z">
        <seg>// &lt;b0&gt;add an instance variable for the object ID&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b0&gt;increment number of Bicycles&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043210Z" creationid="pingfangx" creationdate="20180607T043210Z">
        <seg>// &lt;b0&gt;increment number of Bicycles&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b0&gt;the Bicycle class has three &lt;i1&gt;fields&lt;/i1&gt;&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081935Z" creationid="pingfangx" creationdate="20190102T081935Z">
        <seg>// &lt;b0&gt;the Bicycle class has three &lt;i1&gt;fields&lt;/i1&gt;&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b0&gt;the Bicycle class has&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025645Z" creationid="pingfangx" creationdate="20180525T025645Z">
        <seg>// &lt;b0&gt;the Bicycle class has&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b0&gt;the MountainBike subclass adds one &lt;i1&gt;field&lt;/i1&gt;&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081937Z" creationid="pingfangx" creationdate="20190102T081937Z">
        <seg>// &lt;b0&gt;the MountainBike subclass adds one &lt;i1&gt;field&lt;/i1&gt;&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b0&gt;the MountainBike subclass has&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025709Z" creationid="pingfangx" creationdate="20180525T025709Z">
        <seg>// &lt;b0&gt;the MountainBike subclass has&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b1&gt;add a class variable for the&lt;/b1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043046Z" creationid="pingfangx" creationdate="20180607T043046Z">
        <seg>// &lt;b1&gt;add a class variable for the&lt;/b1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b1&gt;and assign ID number&lt;/b1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043211Z" creationid="pingfangx" creationdate="20180607T043211Z">
        <seg>// &lt;b1&gt;and assign ID number&lt;/b1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b1&gt;one &lt;i2&gt;field&lt;/i2&gt;&lt;/b1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025709Z" creationid="pingfangx" creationdate="20180525T025709Z">
        <seg>// &lt;b1&gt;one &lt;i2&gt;field&lt;/i2&gt;&lt;/b1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b1&gt;three &lt;i2&gt;fields&lt;/i2&gt;&lt;/b1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025649Z" creationid="pingfangx" creationdate="20180525T025649Z">
        <seg>// &lt;b1&gt;three &lt;i2&gt;fields&lt;/i2&gt;&lt;/b1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b2&gt;number of Bicycle objects instantiated&lt;/b2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043047Z" creationid="pingfangx" creationdate="20180607T043047Z">
        <seg>// &lt;b2&gt;number of Bicycle objects instantiated&lt;/b2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b2&gt;the Bicycle class has one &lt;i3&gt;constructor&lt;/i3&gt;&lt;/b2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081935Z" creationid="pingfangx" creationdate="20190102T081935Z">
        <seg>// &lt;b2&gt;the Bicycle class has one &lt;i3&gt;constructor&lt;/i3&gt;&lt;/b2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b2&gt;the MountainBike subclass has one &lt;i3&gt;constructor&lt;/i3&gt;&lt;/b2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081938Z" creationid="pingfangx" creationdate="20190102T081938Z">
        <seg>// &lt;b2&gt;the MountainBike subclass has one &lt;i3&gt;constructor&lt;/i3&gt;&lt;/b2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b3&gt;new method to return the ID instance variable&lt;/b3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043221Z" creationid="pingfangx" creationdate="20180607T043221Z">
        <seg>// &lt;b3&gt;new method to return the ID instance variable&lt;/b3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b3&gt;the Bicycle class has&lt;/b3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025652Z" creationid="pingfangx" creationdate="20180525T025652Z">
        <seg>// &lt;b3&gt;the Bicycle class has&lt;/b3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b3&gt;the MountainBike subclass has&lt;/b3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025711Z" creationid="pingfangx" creationdate="20180525T025711Z">
        <seg>// &lt;b3&gt;the MountainBike subclass has&lt;/b3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b4&gt;one &lt;i5&gt;constructor&lt;/i5&gt;&lt;/b4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025653Z" creationid="pingfangx" creationdate="20180525T025653Z">
        <seg>// &lt;b4&gt;one &lt;i5&gt;constructor&lt;/i5&gt;&lt;/b4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b4&gt;the Bicycle class has four &lt;i5&gt;methods&lt;/i5&gt;&lt;/b4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081936Z" creationid="pingfangx" creationdate="20190102T081936Z">
        <seg>// &lt;b4&gt;the Bicycle class has four &lt;i5&gt;methods&lt;/i5&gt;&lt;/b4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b4&gt;the MountainBike subclass adds one &lt;i5&gt;method&lt;/i5&gt;&lt;/b4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081940Z" creationid="pingfangx" creationdate="20190102T081940Z">
        <seg>// &lt;b4&gt;the MountainBike subclass adds one &lt;i5&gt;method&lt;/i5&gt;&lt;/b4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b6&gt;the Bicycle class has&lt;/b6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025655Z" creationid="pingfangx" creationdate="20180525T025655Z">
        <seg>// &lt;b6&gt;the Bicycle class has&lt;/b6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b6&gt;the MountainBike subclass has&lt;/b6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025713Z" creationid="pingfangx" creationdate="20180525T025713Z">
        <seg>// &lt;b6&gt;the MountainBike subclass has&lt;/b6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b7&gt;four &lt;i8&gt;methods&lt;/i8&gt;&lt;/b7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025656Z" creationid="pingfangx" creationdate="20180525T025656Z">
        <seg>// &lt;b7&gt;four &lt;i8&gt;methods&lt;/i8&gt;&lt;/b7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;b7&gt;one &lt;i8&gt;method&lt;/i8&gt;&lt;/b7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025715Z" creationid="pingfangx" creationdate="20180525T025715Z">
        <seg>// &lt;b7&gt;one &lt;i8&gt;method&lt;/i8&gt;&lt;/b7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;e0&gt;text&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035519Z" creationid="pingfangx" creationdate="20180518T035519Z">
        <seg>// &lt;e0&gt;text&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;i0&gt;mark method as a superclass method&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033430Z" creationid="pingfangx" creationdate="20190102T033430Z">
        <seg>// &lt;i0&gt;mark method as a superclass method&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;i0&gt;use a deprecated method and tell&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033602Z" creationid="pingfangx" creationdate="20190102T033602Z">
        <seg>// &lt;i0&gt;use a deprecated method and tell&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;i1&gt;compiler not to generate a warning&lt;/i1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033603Z" creationid="pingfangx" creationdate="20190102T033603Z">
        <seg>// &lt;i1&gt;compiler not to generate a warning&lt;/i1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;i1&gt;that has been overridden&lt;/i1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033431Z" creationid="pingfangx" creationdate="20190102T033431Z">
        <seg>// &lt;i1&gt;that has been overridden&lt;/i1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// &lt;s0&gt;Invalid: cannot put underscores&lt;/s0&gt;
// &lt;s1&gt;adjacent to a decimal point&lt;/s1&gt;
float pi1 = 3_.1415F;
// &lt;s2&gt;Invalid: cannot put underscores&lt;/s2&gt; 
// &lt;s3&gt;adjacent to a decimal point&lt;/s3&gt;
float pi2 = 3._1415F;
// &lt;s4&gt;Invalid: cannot put underscores&lt;/s4&gt; 
// &lt;s5&gt;prior to an L suffix&lt;/s5&gt;
long socialSecurityNumber1 = 999_99_9999_L;

// OK (decimal literal)
int x1 = 5_2;
// &lt;s6&gt;Invalid: cannot put underscores&lt;/s6&gt;
// &lt;s7&gt;At the end of a literal&lt;/s7&gt;
int x2 = 52_;
// OK (decimal literal)
int x3 = 5_______2;

// &lt;s8&gt;Invalid: cannot put underscores&lt;/s8&gt;
// &lt;s9&gt;in the 0x radix prefix&lt;/s9&gt;
int x4 = 0_x52;
// &lt;s10&gt;Invalid: cannot put underscores&lt;/s10&gt;
// &lt;s11&gt;at the beginning of a number&lt;/s11&gt;
int x5 = 0x_52;
// OK (hexadecimal literal)
int x6 = 0x5_2; 
// &lt;s12&gt;Invalid: cannot put underscores&lt;/s12&gt;
// &lt;s13&gt;at the end of a number&lt;/s13&gt;
int x7 = 0x52_;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T085736Z" creationid="pingfangx" creationdate="20180518T084721Z">
        <seg>// &lt;s0&gt;无效：不能放置下划线&lt;/s0&gt;
// &lt;s1&gt;靠近小数点&lt;/s1&gt;
float pi1 = 3_.1415F;
// &lt;s2&gt;无效：不能放置下划线&lt;/s2&gt; 
// &lt;s3&gt;靠近小数点&lt;/s3&gt;
float pi2 = 3._1415F;
// &lt;s4&gt;无效：不能放置下划线&lt;/s4&gt; 
// &lt;s5&gt;在 L 后缀之前&lt;/s5&gt;
long socialSecurityNumber1 = 999_99_9999_L;

// OK（十进制文字）
int x1 = 5_2;
// &lt;s6&gt;无效：不能放置下划线&lt;/s6&gt;
// &lt;s7&gt;在字面量的末尾&lt;/s7&gt;
int x2 = 52_;
// OK（十进制文字）
int x3 = 5_______2;

// &lt;s8&gt;无效：不能放置下划线&lt;/s8&gt;
// &lt;s9&gt;在 0x 基数前缀中&lt;/s9&gt;
int x4 = 0_x52;
// &lt;s10&gt;无效：不能放置下划线&lt;/s10&gt;
// &lt;s11&gt;在一个数字的开头&lt;/s11&gt;
int x5 = 0x_52;
// OK（十六进制文字）
int x6 = 0x5_2; 
// &lt;s12&gt;无效：不能放置下划线&lt;/s12&gt;
// &lt;s13&gt;在一个数字的末尾&lt;/s13&gt;
int x7 = 0x52_;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// An enum with values RIGHT, LEFT</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054129Z" creationid="pingfangx" creationdate="20190102T054129Z">
        <seg>// An enum with values RIGHT, LEFT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Annotation element definitions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025859Z" creationid="pingfangx" creationdate="20190102T025859Z">
        <seg>// Annotation element definitions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Author: John Doe</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024825Z" creationid="pingfangx" creationdate="20190102T024825Z">
        <seg>// Author: John Doe</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Bicycle objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062705Z" creationid="pingfangx" creationdate="20180518T062705Z">
        <seg>// Bicycle objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// By: Jane Doe</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024828Z" creationid="pingfangx" creationdate="20190102T024828Z">
        <seg>// By: Jane Doe</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Check if the current element is the last in the array</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101104Z" creationid="pingfangx" creationdate="20180705T101104Z">
        <seg>//检查当前元素是否是数组中的最后一个元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Create an array</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100900Z" creationid="pingfangx" creationdate="20180705T100900Z">
        <seg>//创建一个数组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Create two different</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062704Z" creationid="pingfangx" creationdate="20180518T062704Z">
        <seg>// Create two different</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Current revision: 6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024826Z" creationid="pingfangx" creationdate="20190102T024826Z">
        <seg>// Current revision: 6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Date: 3/17/2002</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024826Z" creationid="pingfangx" creationdate="20190102T024826Z">
        <seg>// Date: 3/17/2002</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Declare and create a point object and two rectangle objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040016Z" creationid="pingfangx" creationdate="20180601T040016Z">
        <seg>//声明并创建一个点对象和两个矩形对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Fill the array with integer values and print out only</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101118Z" creationid="pingfangx" creationdate="20180705T101118Z">
        <seg>//使用整数值填充数组并仅打印输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Get the next even element</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101110Z" creationid="pingfangx" creationdate="20180705T101110Z">
        <seg>//获取下一个偶数元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Implementation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091801Z" creationid="pingfangx" creationdate="20190102T091801Z">
        <seg>// Implementation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// In millimeters (mm)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094000Z" creationid="pingfangx" creationdate="20190102T094000Z">
        <seg>// In millimeters (mm)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Inner class implements the DataStructureIterator interface,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100921Z" creationid="pingfangx" creationdate="20180705T100921Z">
        <seg>//内部类实现 DataStructureIterator 接口，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Invoke methods on</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062706Z" creationid="pingfangx" creationdate="20180518T062706Z">
        <seg>// Invoke methods on</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Javadoc comment follows</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033405Z" creationid="pingfangx" creationdate="20190102T033405Z">
        <seg>// Javadoc comment follows</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Last modified: 4/12/2004</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024827Z" creationid="pingfangx" creationdate="20190102T024827Z">
        <seg>// Last modified: 4/12/2004</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Method body</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063125Z" creationid="pingfangx" creationdate="20190102T063125Z">
        <seg>// Method body</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Mr. Smith</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042315Z" creationid="pingfangx" creationdate="20180521T042315Z">
        <seg>// Mr. Smith</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Ms. Jones</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042316Z" creationid="pingfangx" creationdate="20180521T042316Z">
        <seg>// Ms. Jones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Note array notation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025149Z" creationid="pingfangx" creationdate="20190102T025149Z">
        <seg>// Note array notation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Note use of array</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024844Z" creationid="pingfangx" creationdate="20190102T024844Z">
        <seg>// Note use of array</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Print out values of even indices of the array</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100910Z" creationid="pingfangx" creationdate="20180705T100910Z">
        <seg>//打印出数组偶数索引的值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Record a value of an even index of the array</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101108Z" creationid="pingfangx" creationdate="20180705T101108Z">
        <seg>//记录数组的偶数索引的值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Reviewers: Alice, Bill, Cindy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024828Z" creationid="pingfangx" creationdate="20190102T024828Z">
        <seg>// Reviewers: Alice, Bill, Cindy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Start stepping through the array from the beginning</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101058Z" creationid="pingfangx" creationdate="20180705T101058Z">
        <seg>//从头开始迭代数组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Swing Tutorial, 2nd edition
Book firstBook  = new Book("0201914670");
Book secondBook = new Book("0201914670");
if (firstBook.equals(secondBook)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102638Z" creationid="pingfangx" creationdate="20190102T102638Z">
        <seg>// Swing Tutorial, 2nd edition
Book firstBook  = new Book("0201914670");
Book secondBook = new Book("0201914670");
if (firstBook.equals(secondBook)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// The compiler will now require that methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063951Z" creationid="pingfangx" creationdate="20180518T063919Z">
        <seg>//编译器现在需要这些方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// The documentation is</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041718Z" creationid="pingfangx" creationdate="20190102T041718Z">
        <seg>// The documentation is</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// The following statement causes the compiler to generate</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080452Z" creationid="pingfangx" creationdate="20181228T075946Z">
        <seg>// The following statement causes the compiler to generate</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// The number 26, in decimal
int decVal = 26;
//  The number 26, in hexadecimal
int hexVal = 0x1a;
// The number 26, in binary
int binVal = 0b11010;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T085410Z" creationid="pingfangx" creationdate="20180518T082902Z">
        <seg>//数字 26，十进制
int decVal = 26;
//数字 26，十六进制
int hexVal = 0x1a;
//数字 26，二进制
int binVal = 0b11010;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// The valueOf class method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065344Z" creationid="pingfangx" creationdate="20190103T065344Z">
        <seg>// The valueOf class method.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Valid in JDK 8 and later:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122454Z" creationid="pingfangx" creationdate="20180705T122454Z">
        <seg>//在 JDK 8 及更高版本中有效：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Valid in JDK 8 and later:

//            public void printOriginalNumbers() {
//                System.out.println("Original numbers are " + phoneNumber1 +
//                    " and " + phoneNumber2);
//            }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122519Z" creationid="pingfangx" creationdate="20180705T122519Z">
        <seg>// Valid in JDK 8 and later:

//            public void printOriginalNumbers() {
//                System.out.println("Original numbers are " + phoneNumber1 +
//                    " and " + phoneNumber2);
//            }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Valid in JDK 8 and later:

//        myNumber1.printOriginalNumbers();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122522Z" creationid="pingfangx" creationdate="20180705T122522Z">
        <seg>// Valid in JDK 8 and later:

//        myNumber1.printOriginalNumbers();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// a method for computing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062159Z" creationid="pingfangx" creationdate="20190102T062159Z">
        <seg>// a method for computing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// a method for computing the area of the rectangle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091604Z" creationid="pingfangx" creationdate="20180601T062622Z">
        <seg>//计算矩形面积的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// a method for moving the rectangle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062621Z" creationid="pingfangx" creationdate="20180601T062621Z">
        <seg>// a method for moving the rectangle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// a method required to implement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062200Z" creationid="pingfangx" creationdate="20190102T062200Z">
        <seg>// a method required to implement</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// a mountain bike would go here

}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063520Z" creationid="pingfangx" creationdate="20180518T063520Z">
        <seg>// a mountain bike would go here

}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// all be implemented.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063958Z" creationid="pingfangx" creationdate="20180518T063925Z">
        <seg>//全部实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// allocates memory for 10 integers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021652Z" creationid="pingfangx" creationdate="20180521T021652Z">
        <seg>//为 10 个整数分配内存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// and cadence and given the</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091713Z" creationid="pingfangx" creationdate="20180601T091713Z">
        <seg>// and cadence and given the</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// and other must be instances of</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061941Z" creationid="pingfangx" creationdate="20190102T061941Z">
        <seg>// and other must be instances of</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// and so forth</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021705Z" creationid="pingfangx" creationdate="20180521T021705Z">
        <seg>//等等</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// arguments on the command line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065200Z" creationid="pingfangx" creationdate="20190103T065200Z">
        <seg>// arguments on the command line</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// array of chars</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064015Z" creationid="pingfangx" creationdate="20190103T064015Z">
        <seg>// array of chars</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// assignment statement
aValue = 8933.234;
// increment statement
aValue++;
// method invocation statement
System.out.println("Hello World!");
// object creation statement
Bicycle myBike = new Bicycle();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074943Z" creationid="pingfangx" creationdate="20180521T074911Z">
        <seg>//赋值语句
aValue = 8933.234;
//递增语句
aValue++;
//方法调用语句
System.out.println("Hello World!");
//对象创建语句
Bicycle myBike = new Bicycle();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// base of natural logarithms</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061522Z" creationid="pingfangx" creationdate="20190102T061522Z">
        <seg>// base of natural logarithms</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// change parameter in passMethod()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034026Z" creationid="pingfangx" creationdate="20180601T034026Z">
        <seg>//更改 passMethod() 中的参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// changeCadence, changeGear, speedUp, and applyBrakes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063922Z" creationid="pingfangx" creationdate="20180518T063922Z">
        <seg>// changeCadence, changeGear, speedUp, and applyBrakes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// class code goes here

}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024829Z" creationid="pingfangx" creationdate="20190102T024829Z">
        <seg>// class code goes here

}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// code to assign a new reference to circle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034341Z" creationid="pingfangx" creationdate="20180601T034341Z">
        <seg>//代码分配一个新的引用给 circle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// code to calculate which bike is</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091711Z" creationid="pingfangx" creationdate="20180601T091711Z">
        <seg>// code to calculate which bike is</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// code to move origin of circle to x+deltaX, y+deltaY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034317Z" creationid="pingfangx" creationdate="20180601T034317Z">
        <seg>//代码将圆的原点移动到 x + deltaX，y + deltaY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// code to turn BMW's LEFT turn indicator lights off</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054206Z" creationid="pingfangx" creationdate="20190102T054206Z">
        <seg>// code to turn BMW's LEFT turn indicator lights off</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// code to turn BMW's LEFT turn indicator lights on</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054206Z" creationid="pingfangx" creationdate="20190102T054206Z">
        <seg>// code to turn BMW's LEFT turn indicator lights on</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// code to turn BMW's RIGHT turn indicator lights off</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054208Z" creationid="pingfangx" creationdate="20190102T054208Z">
        <seg>// code to turn BMW's RIGHT turn indicator lights off</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// code to turn BMW's RIGHT turn indicator lights on</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054207Z" creationid="pingfangx" creationdate="20190102T054207Z">
        <seg>// code to turn BMW's RIGHT turn indicator lights on</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// constant declarations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061522Z" creationid="pingfangx" creationdate="20190102T061522Z">
        <seg>// constant declarations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// constant declarations, if any</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054128Z" creationid="pingfangx" creationdate="20190102T054128Z">
        <seg>// constant declarations, if any</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// convert strings to numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065201Z" creationid="pingfangx" creationdate="20190103T065201Z">
        <seg>// convert strings to numbers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// create an array of integers
anArray = new int[10];</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041213Z" creationid="pingfangx" creationdate="20180521T041213Z">
        <seg>//创建一个整型数组
anArray = new int[10];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// creates empty builder, capacity 16
StringBuilder sb = new StringBuilder();
// adds 9 character string at beginning
sb.append("Greetings");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081212Z" creationid="pingfangx" creationdate="20190103T081212Z">
        <seg>// creates empty builder, capacity 16
StringBuilder sb = new StringBuilder();
// adds 9 character string at beginning
sb.append("Greetings");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// declaration statement
double aValue = 8933.234;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075213Z" creationid="pingfangx" creationdate="20180521T075213Z">
        <seg>//声明语句
double aValue = 8933.234;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// declare fields</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T015955Z" creationid="pingfangx" creationdate="20190103T015955Z">
        <seg>// declare fields</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// declare nonabstract methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T015955Z" creationid="pingfangx" creationdate="20190103T015955Z">
        <seg>// declare nonabstract methods</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// declares an array of integers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021648Z" creationid="pingfangx" creationdate="20180521T021648Z">
        <seg>//声明一个整型数组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// declares an array of integers
int[] anArray;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T033231Z" creationid="pingfangx" creationdate="20180521T033231Z">
        <seg>//声明一个整型数组
int[] anArray;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// deprecation warning</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033605Z" creationid="pingfangx" creationdate="20190102T033605Z">
        <seg>// deprecation warning</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// display rectOne's width, height, and area</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040023Z" creationid="pingfangx" creationdate="20180601T040023Z">
        <seg>//显示 rectOne 的宽度，高度和面积</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// display rectTwo's position</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040033Z" creationid="pingfangx" creationdate="20180601T040033Z">
        <seg>//显示 rectTwo 的位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// do some arithmetic</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065202Z" creationid="pingfangx" creationdate="20190103T065202Z">
        <seg>// do some arithmetic</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// environment (terrain and wind)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091713Z" creationid="pingfangx" creationdate="20180601T091713Z">
        <seg>// environment (terrain and wind)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// equal to, or less than other</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061943Z" creationid="pingfangx" creationdate="20190102T061943Z">
        <seg>// equal to, or less than other</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065228Z" creationid="pingfangx" creationdate="20180521T065228Z">
        <seg>// false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// faster, given each bike's gear</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091712Z" creationid="pingfangx" creationdate="20180601T091712Z">
        <seg>// faster, given each bike's gear</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// field, constructor, and</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025903Z" creationid="pingfangx" creationdate="20180525T025903Z">
        <seg>// field, constructor, and</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// fill the array with ascending integer values</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100905Z" creationid="pingfangx" creationdate="20180705T100905Z">
        <seg>//用升序整数值填充数组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// for example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054205Z" creationid="pingfangx" creationdate="20190102T054205Z">
        <seg>// for example:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// four constructors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062612Z" creationid="pingfangx" creationdate="20180601T062612Z">
        <seg>// four constructors</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// gets filename without extension</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074932Z" creationid="pingfangx" creationdate="20190103T074932Z">
        <seg>// gets filename without extension</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// if this is greater than,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061942Z" creationid="pingfangx" creationdate="20190102T061942Z">
        <seg>// if this is greater than,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// implements all but one method of Y
}

class XX extends X {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022432Z" creationid="pingfangx" creationdate="20190103T022432Z">
        <seg>// implements all but one method of Y
}

class XX extends X {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// implements the remaining method in Y
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022432Z" creationid="pingfangx" creationdate="20190103T022432Z">
        <seg>// implements the remaining method in Y
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// import this to use &lt;c0&gt;@Documented&lt;/c0&gt;
import java.lang.annotation.*;

@Documented
@interface ClassPreamble {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025857Z" creationid="pingfangx" creationdate="20190102T025857Z">
        <seg>// import this to use &lt;c0&gt;@Documented&lt;/c0&gt;
import java.lang.annotation.*;

@Documented
@interface ClassPreamble {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// infinite loop
for ( ; ; ) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085523Z" creationid="pingfangx" creationdate="20180521T085523Z">
        <seg>// infinite loop
for ( ; ; ) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// inherited from the interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041718Z" creationid="pingfangx" creationdate="20190102T041718Z">
        <seg>// inherited from the interface.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// initialization code goes here</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070550Z" creationid="pingfangx" creationdate="20180705T070550Z">
        <seg>//初始化代码在这里</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// initialize first element</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021656Z" creationid="pingfangx" creationdate="20180521T021656Z">
        <seg>//初始化第一个元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// initialize second element</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021658Z" creationid="pingfangx" creationdate="20180521T021658Z">
        <seg>//初始化第二个元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// initialize to 10</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065705Z" creationid="pingfangx" creationdate="20180705T065702Z">
        <seg>//初始化为 10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// initialize to false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065709Z" creationid="pingfangx" creationdate="20180705T065709Z">
        <seg>//初始化为 false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// int numberLength = 10;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122455Z" creationid="pingfangx" creationdate="20180705T122455Z">
        <seg>// int numberLength = 10;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// interested only in p's</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090514Z" creationid="pingfangx" creationdate="20180521T090514Z">
        <seg>// interested only in p's</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// invoke passMethod() with</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033934Z" creationid="pingfangx" creationdate="20180601T033930Z">
        <seg>//调用 passMethod()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// method body goes here
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032650Z" creationid="pingfangx" creationdate="20180601T032650Z">
        <seg>// method body goes here
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// method declarations
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025904Z" creationid="pingfangx" creationdate="20180525T025904Z">
        <seg>// method declarations
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// method signatures</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054128Z" creationid="pingfangx" creationdate="20190102T054128Z">
        <seg>// method signatures</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// methods are missing from this class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064057Z" creationid="pingfangx" creationdate="20180518T063933Z">
        <seg>//如果这个类中缺少方法，编译将会失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// more method body code follows that creates and returns a</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033054Z" creationid="pingfangx" creationdate="20180601T033054Z">
        <seg>// more method body code follows that creates and returns a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// more method signatures
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054137Z" creationid="pingfangx" creationdate="20190102T054137Z">
        <seg>// more method signatures
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// move rectTwo and display its new position</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040037Z" creationid="pingfangx" creationdate="20180601T040037Z">
        <seg>//移动 rectTwo 并显示其新的位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// must be final or effectively final" in statement A:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075955Z" creationid="pingfangx" creationdate="20181228T075955Z">
        <seg>// must be final or effectively final" in statement A:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// new fields and methods defining</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063519Z" creationid="pingfangx" creationdate="20180518T063519Z">
        <seg>// new fields and methods defining</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// numberLength = 7;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122457Z" creationid="pingfangx" creationdate="20180705T122457Z">
        <seg>// numberLength = 7;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// other members, as needed -- for example, helper classes not</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054209Z" creationid="pingfangx" creationdate="20190102T054209Z">
        <seg>// other members, as needed -- for example, helper classes not</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// overrides printMethod in Superclass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094943Z" creationid="pingfangx" creationdate="20190102T094943Z">
        <seg>// overrides printMethod in Superclass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// polygon connecting the Points
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033054Z" creationid="pingfangx" creationdate="20180601T033054Z">
        <seg>// polygon connecting the Points
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// print x to see if its</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034012Z" creationid="pingfangx" creationdate="20180601T033956Z">
        <seg>//打印 x 看看它</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// prints "2"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070954Z" creationid="pingfangx" creationdate="20180521T070954Z">
        <seg>//打印 "2"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// prints 4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065518Z" creationid="pingfangx" creationdate="20180521T065518Z">
        <seg>//打印 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// prints 5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065521Z" creationid="pingfangx" creationdate="20180521T065521Z">
        <seg>//打印 5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// prints 6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065523Z" creationid="pingfangx" creationdate="20180521T065523Z">
        <seg>//打印 6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// prints 7</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065534Z" creationid="pingfangx" creationdate="20180521T065529Z">
        <seg>//打印 7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// process p's</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090526Z" creationid="pingfangx" creationdate="20180521T090526Z">
        <seg>// process p's</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// put original string in an</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064015Z" creationid="pingfangx" creationdate="20190103T064015Z">
        <seg>// put original string in an</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// result is now -1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065224Z" creationid="pingfangx" creationdate="20180521T065224Z">
        <seg>//结果现在是-1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// result is now 0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065219Z" creationid="pingfangx" creationdate="20180521T065219Z">
        <seg>//结果现在为 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// result is now 1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065216Z" creationid="pingfangx" creationdate="20180521T065216Z">
        <seg>//结果现在是 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// result is now 10</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064539Z" creationid="pingfangx" creationdate="20180521T064539Z">
        <seg>//结果现在是 10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// result is now 2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064528Z" creationid="pingfangx" creationdate="20180521T064528Z">
        <seg>//结果现在是 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// result is now 3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064522Z" creationid="pingfangx" creationdate="20180521T064522Z">
        <seg>//结果现在是 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// result is now 4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064531Z" creationid="pingfangx" creationdate="20180521T064531Z">
        <seg>//结果现在是 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// reverse array of chars</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064019Z" creationid="pingfangx" creationdate="20190103T064019Z">
        <seg>// reverse array of chars</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// same as above, but without braces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081011Z" creationid="pingfangx" creationdate="20180521T081011Z">
        <seg>//同上，但没有大括号</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// set rectTwo's position</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040030Z" creationid="pingfangx" creationdate="20180601T040030Z">
        <seg>//设置 rectTwo 的位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// the "if" clause: bicycle must be moving</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080928Z" creationid="pingfangx" creationdate="20180521T080912Z">
        <seg>//"if" 子句：自行车必须移动</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// the "then" clause: decrease current speed</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080933Z" creationid="pingfangx" creationdate="20180521T080933Z">
        <seg>//"then" 子句：降低当前速度</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// the OperateCar method signatures, with implementation --</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054205Z" creationid="pingfangx" creationdate="20190102T054205Z">
        <seg>// the OperateCar method signatures, with implementation --</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// the Relatable interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062201Z" creationid="pingfangx" creationdate="20190102T062201Z">
        <seg>// the Relatable interface</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// the area of the rectangle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062159Z" creationid="pingfangx" creationdate="20190102T062159Z">
        <seg>// the area of the rectangle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// the error "local variables referenced from a lambda expression</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075955Z" creationid="pingfangx" creationdate="20181228T075955Z">
        <seg>// the error "local variables referenced from a lambda expression</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// the same class returns 1, 0, -1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061942Z" creationid="pingfangx" creationdate="20190102T061942Z">
        <seg>// the same class returns 1, 0, -1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// this (object calling isLargerThan)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061941Z" creationid="pingfangx" creationdate="20190102T061941Z">
        <seg>// this (object calling isLargerThan)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// this form is discouraged
float anArrayOfFloats[];</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T034906Z" creationid="pingfangx" creationdate="20180521T034906Z">
        <seg>//这种形式是不鼓励的
float anArrayOfFloats[];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// this program requires two</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065200Z" creationid="pingfangx" creationdate="20190103T065200Z">
        <seg>// this program requires two</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// those objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062707Z" creationid="pingfangx" creationdate="20180518T062707Z">
        <seg>// those objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065229Z" creationid="pingfangx" creationdate="20180521T065229Z">
        <seg>// true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// universal gravitational constant  (m3 kg-1 s-2)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020029Z" creationid="pingfangx" creationdate="20190102T020029Z">
        <seg>// universal gravitational constant  (m3 kg-1 s-2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// value has changed</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034017Z" creationid="pingfangx" creationdate="20180601T034007Z">
        <seg>//的值是否已更改</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// values of even indices</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101129Z" creationid="pingfangx" creationdate="20180705T101123Z">
        <seg>//偶数指数的值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// visible to clients of the interface
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054209Z" creationid="pingfangx" creationdate="20190102T054209Z">
        <seg>// visible to clients of the interface
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// whatever code is needed for initialization goes here
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070119Z" creationid="pingfangx" creationdate="20180705T070119Z">
        <seg>// whatever code is needed for initialization goes here
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// which extends the Iterator&lt;Integer&gt; interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101022Z" creationid="pingfangx" creationdate="20180705T100922Z">
        <seg>//继承了 Iterator &lt;Integer&gt;接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// x = 99;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075958Z" creationid="pingfangx" creationdate="20181228T075958Z">
        <seg>// x = 99;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// x as argument</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033937Z" creationid="pingfangx" creationdate="20180601T033937Z">
        <seg>// x 作为参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// your code goes here
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083015Z" creationid="pingfangx" creationdate="20180521T083015Z">
        <seg>// your code goes here
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//button.addActionListener(new MyActionListener());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021141Z" creationid="pingfangx" creationdate="20190102T021141Z">
        <seg>//button.addActionListener(new MyActionListener());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//constructor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062443Z" creationid="pingfangx" creationdate="20180601T062443Z">
        <seg>//constructor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//do the calculation here
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064733Z" creationid="pingfangx" creationdate="20180525T064733Z">
        <seg>//do the calculation here
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082159Z" creationid="pingfangx" creationdate="20180518T082159Z">
        <seg>0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>0 2 4 6 8 10 12 14</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101133Z" creationid="pingfangx" creationdate="20180705T101133Z">
        <seg>0 2 4 6 8 10 12 14</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>0.0d</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082202Z" creationid="pingfangx" creationdate="20180518T082202Z">
        <seg>0.0d</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>0.0f</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082201Z" creationid="pingfangx" creationdate="20180518T082201Z">
        <seg>0.0f</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>000000.000</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034253Z" creationid="pingfangx" creationdate="20190103T034253Z">
        <seg>000000.000</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>000123.780</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034255Z" creationid="pingfangx" creationdate="20190103T034255Z">
        <seg>000123.780</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>08</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033525Z" creationid="pingfangx" creationdate="20190103T033525Z">
        <seg>08</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>0L</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082200Z" creationid="pingfangx" creationdate="20180518T082200Z">
        <seg>0L</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1 * 2 * 3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074410Z" creationid="pingfangx" creationdate="20180521T074410Z">
        <seg>1 * 2 * 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1 + 2 = 3
3 - 1 = 2
2 * 2 = 4
4 / 2 = 2
2 + 8 = 10
10 % 7 = 3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064549Z" creationid="pingfangx" creationdate="20180521T064549Z">
        <seg>1 + 2 = 3
3 - 1 = 2
2 * 2 = 4
4 / 2 = 2
2 + 8 = 10
10 % 7 = 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1 File(s)            267 bytes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034854Z" creationid="pingfangx" creationdate="20180518T034854Z">
        <seg>1 File(s)            267 bytes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020644Z" creationid="pingfangx" creationdate="20190102T020644Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033553Z" creationid="pingfangx" creationdate="20190103T033553Z">
        <seg>10.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>100, 200, 300,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041910Z" creationid="pingfangx" creationdate="20180521T041910Z">
        <seg>100, 200, 300,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12, 1076, 2000,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085844Z" creationid="pingfangx" creationdate="20180521T085844Z">
        <seg>12, 1076, 2000,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>123,456.789</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034144Z" creationid="pingfangx" creationdate="20190103T034144Z">
        <seg>123,456.789</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>123.78</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034253Z" creationid="pingfangx" creationdate="20190103T034253Z">
        <seg>123.78</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12345.67</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034304Z" creationid="pingfangx" creationdate="20190103T034304Z">
        <seg>12345.67</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>123456.789</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034143Z" creationid="pingfangx" creationdate="20190103T034143Z">
        <seg>123456.789</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>123456.789  ###,###.###  123,456.789
123456.789  ###.##  123456.79
123.78  000000.000  000123.780
12345.67  $###,###.###  $12,345.67</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034054Z" creationid="pingfangx" creationdate="20190103T034054Z">
        <seg>123456.789  ###,###.###  123,456.789
123456.789  ###.##  123456.79
123.78  000000.000  000123.780
12345.67  $###,###.###  $12,345.67</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>123456.79</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034234Z" creationid="pingfangx" creationdate="20190103T034234Z">
        <seg>123456.79</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1a.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085338Z" creationid="pingfangx" creationdate="20180706T085338Z">
        <seg>1a.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2 Dir(s)  93,297,991,680 bytes free

C:\myapplication&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034855Z" creationid="pingfangx" creationdate="20180518T034855Z">
        <seg>2 Dir(s)  93,297,991,680 bytes free

C:\myapplication&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2 Dir(s)  93,298,032,640 bytes free

C:\myapplication&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034922Z" creationid="pingfangx" creationdate="20180518T034922Z">
        <seg>2 Dir(s)  93,298,032,640 bytes free

C:\myapplication&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2 File(s)            699 bytes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034921Z" creationid="pingfangx" creationdate="20180518T034921Z">
        <seg>2 File(s)            699 bytes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2 digits after decimal point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065441Z" creationid="pingfangx" creationdate="20190103T065441Z">
        <seg>2 digits after decimal point.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020759Z" creationid="pingfangx" creationdate="20190102T020759Z">
        <seg>2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2014-04-24  01:34 PM               267 HelloWorldApp.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034854Z" creationid="pingfangx" creationdate="20180518T034854Z">
        <seg>2014-04-24  01:34 PM               267 HelloWorldApp.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2014-04-24  01:34 PM    &lt;DIR&gt;          ..</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034853Z" creationid="pingfangx" creationdate="20180518T034853Z">
        <seg>2014-04-24  01:34 PM    &lt;DIR&gt;          ..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2014-04-24  02:07 PM               432 HelloWorldApp.class
2014-04-24  01:34 PM               267 HelloWorldApp.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034920Z" creationid="pingfangx" creationdate="20180518T034920Z">
        <seg>2014-04-24  02:07 PM               432 HelloWorldApp.class
2014-04-24  01:34 PM               267 HelloWorldApp.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2014-04-24  02:07 PM    &lt;DIR&gt;          ..</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034919Z" creationid="pingfangx" creationdate="20180518T034919Z">
        <seg>2014-04-24  02:07 PM    &lt;DIR&gt;          ..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2d/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031829Z" creationid="pingfangx" creationdate="20180518T031829Z">
        <seg>2d/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3 digits before decimal point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065441Z" creationid="pingfangx" creationdate="20190103T065441Z">
        <seg>3 digits before decimal point.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3 is greater than or equal to 0, so execution progresses to the second &lt;c0&gt;if&lt;/c0&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091557Z" creationid="pingfangx" creationdate="20180521T091557Z">
        <seg>3 大于或等于 0，因此执行进行到第二个 &lt;c0&gt;if&lt;/c0&gt; 语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082657Z" creationid="pingfangx" creationdate="20180705T082657Z">
        <seg>3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>40 + 2 = 42
20 - 10 = 10</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075701Z" creationid="pingfangx" creationdate="20181228T075701Z">
        <seg>40 + 2 = 42
20 - 10 = 10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>400, 500, 600,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041911Z" creationid="pingfangx" creationdate="20180521T041911Z">
        <seg>400, 500, 600,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>700, 800, 900, 1000
};</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041911Z" creationid="pingfangx" creationdate="20180521T041911Z">
        <seg>700, 800, 900, 1000
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8, 622, 127 };</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085844Z" creationid="pingfangx" creationdate="20180521T085844Z">
        <seg>8, 622, 127 };</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063153Z" creationid="pingfangx" creationdate="20180521T063153Z">
        <seg>:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt; &gt; &lt;= &gt;= instanceof</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063030Z" creationid="pingfangx" creationdate="20180521T063030Z">
        <seg>&lt; &gt; &lt;= &gt;= instanceof</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;&lt; &gt;&gt; &gt;&gt;&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063025Z" creationid="pingfangx" creationdate="20180521T063025Z">
        <seg>&lt;&lt; &gt;&gt; &gt;&gt;&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;R&gt; Stream&lt;R&gt; &lt;s0&gt;map&lt;/s0&gt;(Function&lt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074609Z" creationid="pingfangx" creationdate="20181228T074609Z">
        <seg>&lt;R&gt; Stream&lt;R&gt; &lt;s0&gt;map&lt;/s0&gt;(Function&lt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt; Download the latest Java Tutorials bundle&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030628Z" creationid="pingfangx" creationdate="20180518T030628Z">
        <seg>&lt;a0&gt;下载最新的 Java 教程包&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;"Hello World!" for Microsoft Windows&lt;/a0&gt; These command-line instructions are for users of Windows XP Professional, Windows XP Home, Windows Server 2003, Windows 2000 Professional, and Windows Vista.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034132Z" creationid="pingfangx" creationdate="20180518T034132Z">
        <seg>&lt;a0&gt;"Hello World!" for Microsoft Windows&lt;/a0&gt; 这些命令行说明适用于 Windows XP Professional，Windows XP Home，Windows Server 2003，Windows 2000 Professional 和 Windows Vista 的用户。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;"Hello World!" for Solaris OS and Linux&lt;/a0&gt; These command-line instructions are for users of Solaris OS and Linux.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034135Z" creationid="pingfangx" creationdate="20180518T034135Z">
        <seg>&lt;a0&gt;"Hello World!" for Solaris OS and Linux&lt;/a0&gt; 这些命令行指令适用于 Solaris OS 和 Linux 用户。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;"Hello World!" for the NetBeans IDE&lt;/a0&gt; These instructions are for users of the NetBeans IDE.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034118Z" creationid="pingfangx" creationdate="20180518T034118Z">
        <seg>&lt;a0&gt;"Hello World!" for the NetBeans IDE&lt;/a0&gt; 这些说明适用于 NetBeans IDE 的用户。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;2D Graphics&lt;/a0&gt; — How to display and print 2D graphics in applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031832Z" creationid="pingfangx" creationdate="20180518T031832Z">
        <seg>&lt;a0&gt;2D Graphics&lt;/a0&gt;  - 如何在应用程序中显示和打印 2D 图形。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;Card2&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023837Z" creationid="pingfangx" creationdate="20190103T023837Z">
        <seg>&lt;a0&gt;&lt;c1&gt;Card2&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;StringBuilder&lt;/c1&gt; &lt;/a0&gt; objects are like &lt;a2&gt;&lt;c3&gt;String&lt;/c3&gt; &lt;/a2&gt; objects, except that they can be modified.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080427Z" creationid="pingfangx" creationdate="20190103T080427Z">
        <seg>&lt;a0&gt;&lt;c1&gt;StringBuilder&lt;/c1&gt; &lt;/a0&gt; 对象类似于 &lt;a2&gt;&lt;c3&gt;String&lt;/c3&gt; &lt;/a2&gt; 对象，但可以修改它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;A Closer Look at "Hello World!"&lt;/b2&gt;&lt;/a0&gt; Discusses the "Hello World!" application, describing each section of code in detail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032455Z" creationid="pingfangx" creationdate="20180518T032455Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;A Closer Look at "Hello World!"&lt;/b2&gt;&lt;/a0&gt; 讨论 "Hello World!" 应用程序，详细描述每个代码段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Annotations&lt;/b2&gt;&lt;/a0&gt; are a form of metadata and provide information for the compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042315Z" creationid="pingfangx" creationdate="20180518T042315Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Annotations&lt;/b2&gt;&lt;/a0&gt; 是一种元数据形式，为编译器提供信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Classes and Objects&lt;/b2&gt;&lt;/a0&gt; describes how to write the classes from which objects are created, and how to create and use the objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042258Z" creationid="pingfangx" creationdate="20180518T042258Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Classes and Objects&lt;/b2&gt;&lt;/a0&gt; 描述了如何编写创建对象的类，以及如何创建和使用对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Common Problems (and Their Solutions)&lt;/b2&gt;&lt;/a0&gt; This is the place to go if you have trouble compiling or running the programs in this trail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032544Z" creationid="pingfangx" creationdate="20180518T032544Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Common Problems (and Their Solutions)&lt;/b2&gt;&lt;/a0&gt; 如果您在编译或运行此路径中的程序时遇到困难，则可以查看的页面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Generics&lt;/b2&gt;&lt;/a0&gt; are a powerful feature of the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042605Z" creationid="pingfangx" creationdate="20180518T042605Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Generics&lt;/b2&gt;&lt;/a0&gt; 是 Java 编程语言的一个强大功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Interfaces and Inheritance&lt;/b2&gt;&lt;/a0&gt; describes interfaceswhat they are, why you would want to write one, and how to write one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042345Z" creationid="pingfangx" creationdate="20180518T042345Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Interfaces and Inheritance&lt;/b2&gt;&lt;/a0&gt; 描述了接口，它们是什么，为什么要编写一个，以及如何编写一个接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Language Basics&lt;/b2&gt;&lt;/a0&gt; describes the traditional features of the language, including variables, arrays, data types, operators, and control flow.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042242Z" creationid="pingfangx" creationdate="20180518T042242Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Language Basics&lt;/b2&gt;&lt;/a0&gt; 描述了该语言的传统功能，包括变量，数组，数据类型，运算符和控制流。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Numbers and Strings&lt;/b2&gt;&lt;/a0&gt; This lesson describes how to use &lt;c3&gt;Number&lt;/c3&gt; and &lt;c4&gt;String&lt;/c4&gt; objects The lesson also shows you how to format data for output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042552Z" creationid="pingfangx" creationdate="20180518T042453Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Numbers and Strings&lt;/b2&gt;&lt;/a0&gt; 该课程描述如何使用 &lt;c3&gt;Number&lt;/c3&gt; 和 &lt;c4&gt;String&lt;/c4&gt; 对象，也为你显示如何格式化数据输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Object-Oriented Programming Concepts&lt;/b2&gt;&lt;/a0&gt; teaches you the core concepts behind object-oriented programming: objects, messages, classes, and inheritance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042202Z" creationid="pingfangx" creationdate="20180518T042202Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Object-Oriented Programming Concepts&lt;/b2&gt;&lt;/a0&gt; 教你面向对象编程背后的核心概念：对象，消息，类和继承。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Packages&lt;/b2&gt;&lt;/a0&gt; are a feature of the Java programming language that help you to organize and structure your classes and their relationships to one another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T065324Z" creationid="pingfangx" creationdate="20180518T042627Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;Packages&lt;/b2&gt;&lt;/a0&gt; 是 Java 编程语言的一个功能，可帮助您组织和构建类和它们之间的关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;The "Hello World!" Application&lt;/b2&gt;&lt;/a0&gt; This hands-on approach describes what to download, what to install, and what to type, for creating a simple "Hello World!" application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032418Z" creationid="pingfangx" creationdate="20180518T032418Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;The "Hello World!" Application&lt;/b2&gt;&lt;/a0&gt; 这种动手方式描述了要创建一个简单的 "Hello World!" 应用要下载什么内容，要安装什么以及要输入什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;The Java Technology Phenomenon&lt;/b2&gt;&lt;/a0&gt; Provides an overview of Java technology as a whole.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032213Z" creationid="pingfangx" creationdate="20180518T032150Z">
        <seg>&lt;a0&gt;&lt;i1/&gt; &lt;b2&gt;The Java Technology Phenomenon&lt;/b2&gt;&lt;/a0&gt; 提供 Java 技术整体概述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;About Oracle&lt;/a0&gt; | &lt;a1&gt;Contact Us&lt;/a1&gt; | &lt;a2&gt;Legal Notices&lt;/a2&gt; | &lt;a3&gt;Terms of Use&lt;/a3&gt; | &lt;a4&gt;Your Privacy Rights&lt;/a4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031850Z" creationid="pingfangx" creationdate="20180518T031850Z">
        <seg>&lt;a0&gt;About Oracle&lt;/a0&gt; | &lt;a1&gt;Contact Us&lt;/a1&gt; | &lt;a2&gt;Legal Notices&lt;/a2&gt; | &lt;a3&gt;Terms of Use&lt;/a3&gt; | &lt;a4&gt;Your Privacy Rights&lt;/a4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Anonymous class&lt;/a0&gt;: Use it if you need to declare fields or additional methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013349Z" creationid="pingfangx" creationdate="20190102T013349Z">
        <seg>&lt;a0&gt;Anonymous class&lt;/a0&gt;：如果需要声明字段或其他方法，请使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Collections&lt;/a0&gt; — Lessons on using and extending the Java Collections Framework.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031251Z" creationid="pingfangx" creationdate="20180518T031251Z">
        <seg>&lt;a0&gt;Collections&lt;/a0&gt;  - 使用和扩展 Java 集合框架的课程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Creating a GUI With JFC/Swing&lt;/a0&gt;: Once you know how to create applications or applets, follow this trail to learn how to create their user interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093107Z" creationid="pingfangx" creationdate="20180521T093107Z">
        <seg>&lt;a0&gt;Creating a GUI With JFC/Swing&lt;/a0&gt;：一旦您知道如何创建应用程序或小程序，请按照此线索学习如何创建其用户界面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Creating a GUI with Swing&lt;/a0&gt; — A comprehensive introduction to GUI creation on the Java platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031350Z" creationid="pingfangx" creationdate="20180518T031350Z">
        <seg>&lt;a0&gt;Creating a GUI with Swing&lt;/a0&gt;  - 全面介绍 Java 平台上的 GUI 创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Creating a JavaFX GUI&lt;/a0&gt; — A collection of JavaFX tutorials.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031359Z" creationid="pingfangx" creationdate="20180518T031359Z">
        <seg>&lt;a0&gt;Creating a JavaFX GUI&lt;/a0&gt;  - 一组 JavaFX 教程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Custom Networking&lt;/a0&gt; — An introduction to the Java platform's powerful networking features.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031506Z" creationid="pingfangx" creationdate="20180518T031506Z">
        <seg>&lt;a0&gt;Custom Networking&lt;/a0&gt;  - 介绍 Java 平台强大的网络功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Custom Networking&lt;/a0&gt;: If you're interested in writing applications or applets that use the network, follow this trail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093118Z" creationid="pingfangx" creationdate="20180521T093118Z">
        <seg>&lt;a0&gt;Custom Networking&lt;/a0&gt;：如果您有兴趣编写使用网络的应用程序或小应用程序，请遵循以下路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Date-Time APIs&lt;/a0&gt; — How to use the &lt;t1&gt;java.time&lt;/t1&gt; pages to write date and time code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031306Z" creationid="pingfangx" creationdate="20180518T031306Z">
        <seg>&lt;a0&gt;Date-Time APIs&lt;/a0&gt;  - 如何使用 &lt;t1&gt;java.time&lt;/t1&gt; 页编写日期和时间代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Default methods&lt;/a0&gt; and &lt;a1&gt;abstract methods&lt;/a1&gt; in interfaces are inherited like instance methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091235Z" creationid="pingfangx" creationdate="20190102T091235Z">
        <seg>&lt;a0&gt;Default methods&lt;/a0&gt; 和 &lt;a1&gt;abstract methods&lt;/a1&gt; 与实例方法一样是继承的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Deployment&lt;/a0&gt; — How to package applications and applets using JAR files, and deploy them using Java Web Start and Java Plug-in.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031320Z" creationid="pingfangx" creationdate="20180518T031320Z">
        <seg>&lt;a0&gt;Deployment&lt;/a0&gt;  - 如何使用 JAR 文件打包应用程序和 applet，并使用 Java Web Start 和 Java 插件部署它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Essential Classes&lt;/a0&gt;: By taking this trail, you can find out about strings, exceptions, threads, and other Java features that are used in all kinds of Java programs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040650Z" creationid="pingfangx" creationdate="20180518T040650Z">
        <seg>&lt;a0&gt;Essential Classes&lt;/a0&gt;：通过这一步，您可以了解用于各种 Java 程序的字符串，异常，线程和其他 Java 功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Essential Classes&lt;/a0&gt;: Learn about the most-used classes in the JDK APIs including &lt;c1&gt;String&lt;/c1&gt;, &lt;c2&gt;System&lt;/c2&gt;, &lt;c3&gt;Thread&lt;/c3&gt; and the classes in &lt;c4&gt;java.io&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093101Z" creationid="pingfangx" creationdate="20180521T093101Z">
        <seg>&lt;a0&gt;Essential Classes&lt;/a0&gt;：了解 JDK API 中最常用的类，包括 &lt;c1&gt;String&lt;/c1&gt;，&lt;c2&gt;System&lt;/c2&gt;，&lt;c3&gt;Thread&lt;/c3&gt; 和 &lt;c4&gt;java.io&lt;/c4&gt; 中的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Essential Java Classes&lt;/a0&gt; — Lessons on exceptions, basic input/output, concurrency, regular expressions, and the platform environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031225Z" creationid="pingfangx" creationdate="20180518T031225Z">
        <seg>&lt;a0&gt;Essential Java Classes&lt;/a0&gt;  - 关于异常，基本输入/输出，并发，正则表达式和平台环境的课程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Full-Screen Exclusive Mode API&lt;/a0&gt; — How to write applications that more fully utilize the user's graphics hardware.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031533Z" creationid="pingfangx" creationdate="20180518T031533Z">
        <seg>&lt;a0&gt;Full-Screen Exclusive Mode API&lt;/a0&gt;  - 如何编写更充分利用用户图形硬件的应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Generics&lt;/a0&gt; — An enhancement to the type system that supports operations on objects of various types while providing compile-time type safety.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031554Z" creationid="pingfangx" creationdate="20180518T031554Z">
        <seg>&lt;a0&gt;Generics&lt;/a0&gt;  - 对类型系统的增强，支持对各种类型对象的操作，同时提供编译时类型安全性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Getting Started&lt;/a0&gt; — An introduction to Java technology and lessons on installing Java development software and using it to create a simple program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031129Z" creationid="pingfangx" creationdate="20180518T031129Z">
        <seg>&lt;a0&gt;Getting Started&lt;/a0&gt;  - Java 技术的介绍以入安装 Java 开发软件并使用它创建简单程序的课程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Getting Started&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032709Z" creationid="pingfangx" creationdate="20180518T032709Z">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Getting Started&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Getting Started&lt;/a1&gt; &gt; &lt;a2&gt;The "Hello World!" Application&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034245Z" creationid="pingfangx" creationdate="20180518T034245Z">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Getting Started&lt;/a1&gt; &gt; &lt;a2&gt;The "Hello World!" Application&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Getting Started&lt;/a1&gt; &gt; &lt;a2&gt;The Java Technology Phenomenon&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032818Z" creationid="pingfangx" creationdate="20180518T032818Z">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Getting Started&lt;/a1&gt; &gt; &lt;a2&gt;The Java Technology Phenomenon&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042803Z" creationid="pingfangx" creationdate="20180518T042803Z">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Annotations&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023822Z" creationid="pingfangx" creationdate="20190102T023822Z">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Annotations&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Classes and Objects&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023402Z" creationid="pingfangx" creationdate="20180525T023402Z">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Classes and Objects&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Interfaces and Inheritance&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T043128Z" creationid="pingfangx" creationdate="20190102T043128Z">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Interfaces and Inheritance&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Language Basics&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073028Z" creationid="pingfangx" creationdate="20180518T073028Z">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Language Basics&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Numbers and Strings&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024819Z" creationid="pingfangx" creationdate="20190103T024819Z">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Numbers and Strings&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Object-Oriented Programming Concepts&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T060915Z" creationid="pingfangx" creationdate="20180518T060915Z">
        <seg>&lt;a0&gt;Home Page&lt;/a0&gt; &gt; &lt;a1&gt;Learning the Java Language&lt;/a1&gt; &gt; &lt;a2&gt;Object-Oriented Programming Concepts&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Internationalization&lt;/a0&gt; — An introduction to designing software so that it can be easily adapted (localized) to various languages and regions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031632Z" creationid="pingfangx" creationdate="20180518T031632Z">
        <seg>&lt;a0&gt;Internationalization&lt;/a0&gt;  - 介绍设计软件的方法，使其可以轻松适应(本地化)到各种语言和地区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;JAXB&lt;/a0&gt; — Introduces the Java architecture for XML Binding (JAXB) technology.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031728Z" creationid="pingfangx" creationdate="20180518T031728Z">
        <seg>&lt;a0&gt;JAXB&lt;/a0&gt;  - 介绍用于 XML 绑定(JAXB)技术的 Java 体系结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;JAXP&lt;/a0&gt; — Introduces the Java API for XML Processing (JAXP) technology.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031719Z" creationid="pingfangx" creationdate="20180518T031719Z">
        <seg>&lt;a0&gt;JAXP&lt;/a0&gt;  - 介绍用于 XML 处理的 Java API(JAXP)技术。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;JDBC Database Access&lt;/a0&gt; — Introduces an API for connectivity between the Java applications and a wide range of databases and data sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031645Z" creationid="pingfangx" creationdate="20180518T031645Z">
        <seg>&lt;a0&gt;JDBC Database Access&lt;/a0&gt;  - 介绍用于 Java 应用程序和各种数据库和数据源之间连接的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;JMX&lt;/a0&gt;— Java Management Extensions provides a standard way of managing resources such as applications, devices, and services.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031657Z" creationid="pingfangx" creationdate="20180518T031657Z">
        <seg>&lt;a0&gt;JMX&lt;/a0&gt;  -  Java Management Extensions 提供了管理资源（如应用程序，设备和服务）的标准方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;JNDI&lt;/a0&gt;— Java Naming and Directory Interface enables accessing the Naming and Directory Service such as DNS and LDAP.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031709Z" creationid="pingfangx" creationdate="20180518T031709Z">
        <seg>&lt;a0&gt;JNDI&lt;/a0&gt;  -  Java 命名和目录接口允许访问命名和目录服务，例如 DNS 和 LDAP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;JavaBeans&lt;/a0&gt; — The Java platform's component technology.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031636Z" creationid="pingfangx" creationdate="20180518T031636Z">
        <seg>&lt;a0&gt;JavaBeans&lt;/a0&gt;  -  Java 平台的组件技术。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Lambda expression&lt;/a0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013359Z" creationid="pingfangx" creationdate="20190102T013359Z">
        <seg>&lt;a0&gt;Lambda expression&lt;/a0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Learning the Java Language&lt;/a0&gt; — Lessons describing the essential concepts and features of the Java Programming Language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031206Z" creationid="pingfangx" creationdate="20180518T031206Z">
        <seg>&lt;a0&gt;Learning the Java Language&lt;/a0&gt;  - 描述 Java 编程语言基本概念和功能的课程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Learning the Java Language&lt;/a0&gt;: This trail is a gentle introduction to object-oriented concepts and how the Java language implements them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040628Z" creationid="pingfangx" creationdate="20180518T040628Z">
        <seg>&lt;a0&gt;Learning the Java Language&lt;/a0&gt;：这个路径是对面向对象概念的一种温和的介绍，以及 Java 语言如何实现它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Local class&lt;/a0&gt;: Use it if you need to create more than one instance of a class, access its constructor, or introduce a new, named type (because, for example, you need to invoke additional methods later).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013340Z" creationid="pingfangx" creationdate="20190102T013340Z">
        <seg>&lt;a0&gt;Local class&lt;/a0&gt;：如果您需要创建多个类的实例，访问其构造函数或引入新的命名类型(例如，因为您需要稍后调用其他方法)，请使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Nested class&lt;/a0&gt;: Use it if your requirements are similar to those of a local class, you want to make the type more widely available, and you don't require access to local variables or method parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013643Z" creationid="pingfangx" creationdate="20190102T013643Z">
        <seg>&lt;a0&gt;Nested class&lt;/a0&gt;：如果您的要求与局部类的要求类似，则要使用它，您希望更广泛地使用该类型，并且不需要访问局部变量或方法参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Preparation for Java Programming Language Certification&lt;/a0&gt; — List of available training and tutorial resources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031332Z" creationid="pingfangx" creationdate="20180518T031332Z">
        <seg>&lt;a0&gt;Preparation for Java Programming Language Certification&lt;/a0&gt;  - 可用的培训和教程资源列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;RMI&lt;/a0&gt; — The Remote Method Invocation API allows an object to invoke methods of an object running on another Java Virtual Machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031743Z" creationid="pingfangx" creationdate="20180518T031743Z">
        <seg>&lt;a0&gt;RMI&lt;/a0&gt;  - 远程方法调用 API 允许对象调用在另一个 Java 虚拟机上运行的对象的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Reflection&lt;/a0&gt; — An API that represents ("reflects") the classes, interfaces, and objects in the current Java Virtual Machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031816Z" creationid="pingfangx" creationdate="20180518T031816Z">
        <seg>&lt;a0&gt;Reflection&lt;/a0&gt;  - 表示("反射")当前 Java 虚拟机中的类，接口和对象的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Security&lt;/a0&gt; — Java platform features that help protect applications from malicious software.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031824Z" creationid="pingfangx" creationdate="20180518T031824Z">
        <seg>&lt;a0&gt;Security&lt;/a0&gt;  - 有助于保护应用程序免受恶意软件攻击的 Java 平台功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Serialization&lt;/a0&gt; of inner classes, including &lt;a1&gt;local&lt;/a1&gt; and &lt;a2&gt;anonymous&lt;/a2&gt; classes, is strongly discouraged.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T092641Z" creationid="pingfangx" creationdate="20180705T091730Z">
        <seg>强烈建议不要使用 &lt;a0&gt;Serialization（序列化）&lt;/a0&gt; 内部类，包括 &lt;a1&gt;local（局部类）&lt;/a1&gt; 和 &lt;a2&gt;anonymous（匿名类）&lt;/a2&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Sockets Direct Protocol&lt;/a0&gt; — How to enable the Sockets Direct Protocol to take advantage of InfiniBand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031842Z" creationid="pingfangx" creationdate="20180518T031842Z">
        <seg>&lt;a0&gt;Sockets Direct Protocol&lt;/a0&gt;  - 如何启用套接字直接协议以利用 InfiniBand。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Sound&lt;/a0&gt; — An API for playing sound data from applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031828Z" creationid="pingfangx" creationdate="20180518T031828Z">
        <seg>&lt;a0&gt;Sound&lt;/a0&gt;  - 用于播放应用程序声音数据的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;The Extension Mechanism&lt;/a0&gt; — How to make custom APIs available to all applications running on the Java platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031525Z" creationid="pingfangx" creationdate="20180518T031525Z">
        <seg>&lt;a0&gt;The Extension Mechanism&lt;/a0&gt;  - 如何使自定义 API 可用于在 Java 平台上运行的所有应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;The Java Tutorials' Blog&lt;/a0&gt; has news and updates about the Java SE tutorials.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030548Z" creationid="pingfangx" creationdate="20180518T030548Z">
        <seg>&lt;a0&gt;The Java Tutorials' Blog&lt;/a0&gt; 有关于 Java SE 教程的新闻和更新。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;TOC&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040353Z" creationid="pingfangx" creationdate="20180518T040353Z">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;TOC&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;TOC&lt;/a1&gt; • &lt;a2&gt;Next »&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032546Z" creationid="pingfangx" creationdate="20180518T032546Z">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;TOC&lt;/a1&gt; • &lt;a2&gt;Next »&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;Trail&lt;/a1&gt; • &lt;a2&gt;Next »&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032124Z" creationid="pingfangx" creationdate="20180518T032124Z">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;Trail&lt;/a1&gt; • &lt;a2&gt;Next »&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;TOC&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040212Z" creationid="pingfangx" creationdate="20180518T040212Z">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;TOC&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;Trail&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040532Z" creationid="pingfangx" creationdate="20180518T040532Z">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;Trail&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;Trail&lt;/a1&gt; • &lt;a2&gt;Next »&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032712Z" creationid="pingfangx" creationdate="20180518T032712Z">
        <seg>&lt;a0&gt;« Previous&lt;/a0&gt; • &lt;a1&gt;Trail&lt;/a1&gt; • &lt;a2&gt;Next »&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a1&gt;Common Problems (and Their Solutions)&lt;/a1&gt; Consult this page if you have problems compiling or running your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034138Z" creationid="pingfangx" creationdate="20180518T034138Z">
        <seg>&lt;a1&gt;Common Problems (and Their Solutions)&lt;/a1&gt; 如果您在编译或运行应用程序时遇到问题，请参阅此页面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a1&gt;Default methods&lt;/a1&gt; introduce one form of multiple inheritance of implementation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084931Z" creationid="pingfangx" creationdate="20190102T084931Z">
        <seg>&lt;a1&gt;Default methods&lt;/a1&gt; 引入了一种形式的多重继承实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a8&gt;Numbers and Strings&lt;/a8&gt; covers &lt;c9&gt;BigDecimal&lt;/c9&gt; and other useful classes provided by the Java platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081754Z" creationid="pingfangx" creationdate="20180518T081754Z">
        <seg>&lt;a8&gt;Numbers and Strings&lt;/a8&gt; 涵盖了 Java 平台提供的 &lt;c9&gt;BigDecimal&lt;/c9&gt; 和其他有用的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092756Z" creationid="pingfangx" creationdate="20180601T092756Z">
        <seg>&lt;b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;/**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035432Z" creationid="pingfangx" creationdate="20180518T035432Z">
        <seg>&lt;b0&gt;/**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;@Deprecated&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Deprecated&lt;/c2&gt;&lt;/a1&gt; annotation indicates that the marked element is &lt;i3&gt;deprecated&lt;/i3&gt; and should no longer be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033315Z" creationid="pingfangx" creationdate="20190102T033315Z">
        <seg>&lt;b0&gt;@Deprecated&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Deprecated&lt;/c2&gt;&lt;/a1&gt; 注解表示标记的元素 &lt;i3&gt;deprecated&lt;/i3&gt; 且不应再使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;@Documented&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Documented&lt;/c2&gt;&lt;/a1&gt; annotation indicates that whenever the specified annotation is used those elements should be documented using the Javadoc tool.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033923Z" creationid="pingfangx" creationdate="20190102T033923Z">
        <seg>&lt;b0&gt;@Documented&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Documented&lt;/c2&gt;&lt;/a1&gt; 注解表示无论何时使用指定的注解，都应使用 Javadoc 工具记录这些元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;@FunctionalInterface&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@FunctionalInterface&lt;/c2&gt;&lt;/a1&gt; annotation, introduced in Java SE 8, indicates that the type declaration is intended to be a functional interface, as defined by the Java Language Specification.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034158Z" creationid="pingfangx" creationdate="20190102T033814Z">
        <seg>&lt;b0&gt;@FunctionalInterface&lt;/b0&gt; Java SE 8 中引入的 &lt;a1&gt;&lt;c2&gt;@FunctionalInterface&lt;/c2&gt;&lt;/a1&gt; 注解表明类型声明旨在成为一个函数式接口，由 Java 语言规范。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;@Inherited&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Inherited&lt;/c2&gt;&lt;/a1&gt; annotation indicates that the annotation type can be inherited from the super class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034018Z" creationid="pingfangx" creationdate="20190102T034018Z">
        <seg>&lt;b0&gt;@Inherited&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Inherited&lt;/c2&gt;&lt;/a1&gt; 注解表示注解类型可以从超类继承。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;@Override&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Override&lt;/c2&gt;&lt;/a1&gt; annotation informs the compiler that the element is meant to override an element declared in a superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033423Z" creationid="pingfangx" creationdate="20190102T033423Z">
        <seg>&lt;b0&gt;@Override&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Override&lt;/c2&gt;&lt;/a1&gt; 注解通知编译器该元素是要覆盖超类中声明的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;@Repeatable&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Repeatable&lt;/c2&gt;&lt;/a1&gt; annotation, introduced in Java SE 8, indicates that the marked annotation can be applied more than once to the same declaration or type use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034225Z" creationid="pingfangx" creationdate="20190102T034048Z">
        <seg>&lt;b0&gt;@Repeatable&lt;/b0&gt; Java SE 8 中引入的 &lt;a1&gt;&lt;c2&gt;@Repeatable&lt;/c2&gt;&lt;/a1&gt; 注解表明标记的注解可以多次应用于同一声明或类型使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;@Retention&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Retention&lt;/c2&gt;&lt;/a1&gt; annotation specifies how the marked annotation is stored:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033845Z" creationid="pingfangx" creationdate="20190102T033845Z">
        <seg>&lt;b0&gt;@Retention&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Retention&lt;/c2&gt;&lt;/a1&gt; 注解指定标记注解的存储方式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;@SafeVarargs&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@SafeVarargs&lt;/c2&gt;&lt;/a1&gt; annotation, when applied to a method or constructor, asserts that the code does not perform potentially unsafe operations on its &lt;c3&gt;varargs&lt;/c3&gt; parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033742Z" creationid="pingfangx" creationdate="20190102T033742Z">
        <seg>&lt;b0&gt;@SafeVarargs&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@SafeVarargs&lt;/c2&gt;&lt;/a1&gt; 注解，当应用于方法或构造函数时，断言代码不会对其 &lt;c3&gt;varargs&lt;/c3&gt; 参数执行潜在的不安全操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;@SuppressWarnings&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@SuppressWarnings&lt;/c2&gt;&lt;/a1&gt; annotation tells the compiler to suppress specific warnings that it would otherwise generate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033551Z" creationid="pingfangx" creationdate="20190102T033551Z">
        <seg>&lt;b0&gt;@SuppressWarnings&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@SuppressWarnings&lt;/c2&gt;&lt;/a1&gt; 注解告诉编译器抑制否则会生成的特定警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;@Target&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Target&lt;/c2&gt;&lt;/a1&gt; annotation marks another annotation to restrict what kind of Java elements the annotation can be applied to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033941Z" creationid="pingfangx" creationdate="20190102T033941Z">
        <seg>&lt;b0&gt;@Target&lt;/b0&gt; &lt;a1&gt;&lt;c2&gt;@Target&lt;/c2&gt;&lt;/a1&gt; 注解标记另一个注解，以限制可以应用注解的 Java 元素类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Answer 1&lt;/b0&gt;: Bytecode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040231Z" creationid="pingfangx" creationdate="20180518T040231Z">
        <seg>&lt;b0&gt;Answer 1&lt;/b0&gt;：字节码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Answer 1&lt;/b0&gt;: This is the only line of code that must change:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040326Z" creationid="pingfangx" creationdate="20180518T040326Z">
        <seg>&lt;b0&gt;Answer 1&lt;/b0&gt;：这是唯一必须更改的代码行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Answer 2&lt;/b0&gt;: Here's the error you get when you try to compile the program:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040333Z" creationid="pingfangx" creationdate="20180518T040333Z">
        <seg>&lt;b0&gt;Answer 2&lt;/b0&gt;：这是您尝试编译程序时遇到的错误：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Answer 2&lt;/b0&gt;: c is an invalid comment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040244Z" creationid="pingfangx" creationdate="20180518T040244Z">
        <seg>&lt;b0&gt;Answer 2&lt;/b0&gt;：c 是无效注释。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Answer 3&lt;/b0&gt;: Check your classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040248Z" creationid="pingfangx" creationdate="20180518T040248Z">
        <seg>&lt;b0&gt;Answer 3&lt;/b0&gt;：检查你的类路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Answer 4&lt;/b0&gt;: The correct signature is &lt;c1&gt;public static void main(String[] args)&lt;/c1&gt; or &lt;c2&gt;public static void main(String... args)&lt;/c2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040259Z" creationid="pingfangx" creationdate="20180518T040259Z">
        <seg>&lt;b0&gt;Answer 4&lt;/b0&gt;：正确的签名是 &lt;c1&gt;public static void main(String[] args)&lt;/c1&gt; 或 &lt;c2&gt;public static void main(String... args)&lt;/c2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Answer 5&lt;/b0&gt;: They can be in either order, but the convention is &lt;c1&gt;public static&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040315Z" creationid="pingfangx" creationdate="20180518T040315Z">
        <seg>&lt;b0&gt;Answer 5&lt;/b0&gt;：它们可以按任意顺序排列，但约定是 &lt;c1&gt;public static&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Answer 6&lt;/b0&gt;: The &lt;c1&gt;main&lt;/c1&gt; method defines a single parameter, usually named &lt;c2&gt;args&lt;/c2&gt;, whose type is an array of &lt;c3&gt;String&lt;/c3&gt; objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090307Z" creationid="pingfangx" creationdate="20180518T040320Z">
        <seg>&lt;b0&gt;Answer 6&lt;/b0&gt;: &lt;c1&gt;main&lt;/c1&gt; 方法定义了一个单独的参数，通常名为 &lt;c2&gt;args&lt;/c2&gt;，其类型是 &lt;c3&gt;String&lt;/c3&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Be Careful When You Type&lt;/b0&gt; &lt;i1/&gt;   &lt;i2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034552Z" creationid="pingfangx" creationdate="20180518T034552Z">
        <seg>&lt;b0&gt;Be Careful When You Type&lt;/b0&gt; &lt;i1/&gt;   &lt;i2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Compile-time and deployment-time processing&lt;/b0&gt;  Software tools can process annotation information to generate code, XML files, and so forth.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023653Z" creationid="pingfangx" creationdate="20190102T023653Z">
        <seg>&lt;b0&gt;编译时和部署时处理&lt;/b0&gt; 软件工具可以处理注解信息以生成代码，XML 文件等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Exercise 1&lt;/b0&gt;: Change the &lt;a1&gt;&lt;c2&gt;HelloWorldApp.java&lt;/c2&gt;&lt;/a1&gt; program so that it displays &lt;c3&gt;Hola Mundo!&lt;/c3&gt; instead of &lt;c4&gt;Hello World!&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040144Z" creationid="pingfangx" creationdate="20180518T040144Z">
        <seg>&lt;b0&gt;Exercise 1&lt;/b0&gt;：更改 &lt;a1&gt;&lt;c2&gt;HelloWorldApp.java&lt;/c2&gt;&lt;/a1&gt; 程序，使其显示 &lt;c3&gt;Hola Mundo!&lt;/c3&gt; 而不是 &lt;c4&gt;Hello World!&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Exercise 2&lt;/b0&gt;: You can find a slightly modified version of &lt;c1&gt;HelloWorldApp&lt;/c1&gt; here: &lt;a2&gt;&lt;c3&gt;HelloWorldApp2.java&lt;/c3&gt;&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040153Z" creationid="pingfangx" creationdate="20180518T040153Z">
        <seg>&lt;b0&gt;Exercise 2&lt;/b0&gt;：您可以在这里找到 &lt;c1&gt;HelloWorldApp&lt;/c1&gt; 的稍微修改版本：&lt;a2&gt;&lt;c3&gt;HelloWorldApp2.java&lt;/c3&gt;&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Information for the compiler&lt;/b0&gt;  Annotations can be used by the compiler to detect errors or suppress warnings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023658Z" creationid="pingfangx" creationdate="20190102T023621Z">
        <seg>&lt;b0&gt;为编译器提供信息&lt;/b0&gt; 编译器可以使用注解来检测错误或抑制警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Note&lt;/b0&gt;: A &lt;a1&gt;&lt;c2&gt;List&lt;/c2&gt;&lt;/a1&gt; is an ordered &lt;a3&gt;&lt;c4&gt;Collection&lt;/c4&gt;&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085638Z" creationid="pingfangx" creationdate="20180706T085638Z">
        <seg>&lt;b0&gt;Note&lt;/b0&gt;：&lt;a1&gt;&lt;c2&gt;List&lt;/c2&gt;&lt;/a1&gt; 是有序的 &lt;a3&gt;&lt;c4&gt;Collection&lt;/c4&gt;&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Note&lt;/b0&gt;: You can omit the data type of the parameters in a lambda expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075427Z" creationid="pingfangx" creationdate="20181228T075427Z">
        <seg>&lt;b0&gt;Note&lt;/b0&gt;：您可以省略 lambda 表达式中参数的数据类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; "Hello World!" for the NetBeans IDE &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034952Z" creationid="pingfangx" creationdate="20180518T034952Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; "Hello World!" for the NetBeans IDE &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040728Z" creationid="pingfangx" creationdate="20180518T040728Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; A Closer Look at the "Hello World!" Application &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040205Z" creationid="pingfangx" creationdate="20180518T040205Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; A Closer Look at the "Hello World!" Application &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; About the Java Technology &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033721Z" creationid="pingfangx" creationdate="20180518T033721Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; About the Java Technology &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Abstract Methods and Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023419Z" creationid="pingfangx" creationdate="20190103T023419Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Abstract Methods and Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Annotations &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024227Z" creationid="pingfangx" creationdate="20190102T024227Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Annotations &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Annotations Basics &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025904Z" creationid="pingfangx" creationdate="20190102T025904Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Annotations Basics &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Anonymous Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021228Z" creationid="pingfangx" creationdate="20190102T021228Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Anonymous Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Arrays</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093127Z" creationid="pingfangx" creationdate="20180521T093127Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Arrays</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Arrays &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061648Z" creationid="pingfangx" creationdate="20180521T061648Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Arrays &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Assignment, Arithmetic, and Unary Operators &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070523Z" creationid="pingfangx" creationdate="20180521T070523Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Assignment, Arithmetic, and Unary Operators &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Autoboxing and Unboxing &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085559Z" creationid="pingfangx" creationdate="20190103T085559Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Autoboxing and Unboxing &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Beginning of Tutorial &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032550Z" creationid="pingfangx" creationdate="20180518T032550Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Beginning of Tutorial &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Beyond Basic Arithmetic &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041320Z" creationid="pingfangx" creationdate="20190103T041320Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Beyond Basic Arithmetic &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Bitwise and Bit Shift Operators &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071848Z" creationid="pingfangx" creationdate="20180521T071848Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Bitwise and Bit Shift Operators &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Branching Statements &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090956Z" creationid="pingfangx" creationdate="20180521T090956Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Branching Statements &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Characters &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064835Z" creationid="pingfangx" creationdate="20190103T064835Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Characters &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030948Z" creationid="pingfangx" creationdate="20180525T030948Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Classes and Objects &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025748Z" creationid="pingfangx" creationdate="20180525T025748Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Classes and Objects &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Common Problems (and Their Solutions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040651Z" creationid="pingfangx" creationdate="20180518T040651Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Common Problems (and Their Solutions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Comparing Strings and Portions of Strings &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083122Z" creationid="pingfangx" creationdate="20190103T083122Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Comparing Strings and Portions of Strings &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Control Flow Statements &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081231Z" creationid="pingfangx" creationdate="20180521T081231Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Control Flow Statements &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Controlling Access to Members of a Class &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065621Z" creationid="pingfangx" creationdate="20180705T065621Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Controlling Access to Members of a Class &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Converting Between Numbers and Strings &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075228Z" creationid="pingfangx" creationdate="20190103T075228Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Converting Between Numbers and Strings &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Creating Objects &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085914Z" creationid="pingfangx" creationdate="20180601T085914Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Creating Objects &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Declaring Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064411Z" creationid="pingfangx" creationdate="20180525T064411Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Declaring Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Declaring Member Variables &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065528Z" creationid="pingfangx" creationdate="20180525T065528Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Declaring Member Variables &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Declaring an Annotation Type &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034106Z" creationid="pingfangx" creationdate="20190102T034106Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Declaring an Annotation Type &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Default Methods &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074441Z" creationid="pingfangx" creationdate="20190102T074441Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Default Methods &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Defining Methods &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180529T065443Z" creationid="pingfangx" creationdate="20180529T065443Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Defining Methods &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Defining an Interface &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062248Z" creationid="pingfangx" creationdate="20190102T062248Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Defining an Interface &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Enum Types &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020238Z" creationid="pingfangx" creationdate="20190102T020238Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Enum Types &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Equality, Relational, and Conditional Operators &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070955Z" creationid="pingfangx" creationdate="20180521T070955Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Equality, Relational, and Conditional Operators &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Evolving Interfaces &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072221Z" creationid="pingfangx" creationdate="20190102T072221Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Evolving Interfaces &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Expressions, Statements, and Blocks &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075542Z" creationid="pingfangx" creationdate="20180521T075542Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Expressions, Statements, and Blocks &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Formatting Numeric Print Output &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040655Z" creationid="pingfangx" creationdate="20190103T040655Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Formatting Numeric Print Output &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Hiding Fields &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095900Z" creationid="pingfangx" creationdate="20190102T095900Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Hiding Fields &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Implementing an Interface &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062752Z" creationid="pingfangx" creationdate="20190102T062752Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Implementing an Interface &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Inheritance &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085058Z" creationid="pingfangx" creationdate="20190102T085058Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Inheritance &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Initializing Fields &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082344Z" creationid="pingfangx" creationdate="20180705T082344Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Initializing Fields &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Inner Class Example &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T145243Z" creationid="pingfangx" creationdate="20180705T145243Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Inner Class Example &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Interfaces &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061744Z" creationid="pingfangx" creationdate="20190102T061744Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Interfaces &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Interfaces and Inheritance &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055826Z" creationid="pingfangx" creationdate="20190102T055826Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Interfaces and Inheritance &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Lambda Expressions &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021230Z" creationid="pingfangx" creationdate="20190102T021230Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Lambda Expressions &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Language Basics &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074604Z" creationid="pingfangx" creationdate="20180518T074604Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Language Basics &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Local Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070019Z" creationid="pingfangx" creationdate="20180706T070019Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Local Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Manipulating Characters in a String &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080013Z" creationid="pingfangx" creationdate="20190103T080013Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Manipulating Characters in a String &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Method References &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013705Z" creationid="pingfangx" creationdate="20190102T013705Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Method References &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; More on Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092154Z" creationid="pingfangx" creationdate="20180601T092154Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; More on Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Multiple Inheritance of State, Implementation, and Type &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092746Z" creationid="pingfangx" creationdate="20190102T092746Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Multiple Inheritance of State, Implementation, and Type &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Nested Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101415Z" creationid="pingfangx" creationdate="20180705T101415Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Nested Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Numbers &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T031128Z" creationid="pingfangx" creationdate="20190103T031128Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Numbers &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Numbers and Strings &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025006Z" creationid="pingfangx" creationdate="20190103T025006Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Numbers and Strings &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Object as a Superclass &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104800Z" creationid="pingfangx" creationdate="20190102T104800Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Object as a Superclass &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Object-Oriented Programming Concepts &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062059Z" creationid="pingfangx" creationdate="20180518T062059Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Object-Oriented Programming Concepts &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Objects &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071819Z" creationid="pingfangx" creationdate="20180601T071819Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Objects &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Operators &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065535Z" creationid="pingfangx" creationdate="20180521T065535Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Operators &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Overriding and Hiding Methods &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094133Z" creationid="pingfangx" creationdate="20190102T094133Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Overriding and Hiding Methods &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Passing Information to a Method or a Constructor &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040149Z" creationid="pingfangx" creationdate="20180601T040149Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Passing Information to a Method or a Constructor &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Polymorphism &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094352Z" creationid="pingfangx" creationdate="20190102T094352Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Polymorphism &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Predefined Annotation Types &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040937Z" creationid="pingfangx" creationdate="20190102T040937Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Predefined Annotation Types &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Previous Lesson &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034139Z" creationid="pingfangx" creationdate="20180518T034139Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Previous Lesson &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Primitive Data Types &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T054906Z" creationid="pingfangx" creationdate="20180521T054906Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Primitive Data Types &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Providing Constructors for Your Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034515Z" creationid="pingfangx" creationdate="20180601T034515Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Providing Constructors for Your Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041817Z" creationid="pingfangx" creationdate="20190102T041817Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Annotations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Characters and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085934Z" creationid="pingfangx" creationdate="20190103T085934Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Characters and Strings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083026Z" creationid="pingfangx" creationdate="20180705T083026Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083307Z" creationid="pingfangx" creationdate="20180705T083307Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Control Flow Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091647Z" creationid="pingfangx" creationdate="20180521T091647Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Control Flow Statements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Creating and Using Packages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093124Z" creationid="pingfangx" creationdate="20180521T093124Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Creating and Using Packages</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Enum Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020422Z" creationid="pingfangx" creationdate="20190102T020422Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Enum Types</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Expressions, Statements, and Blocks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075631Z" creationid="pingfangx" creationdate="20180521T075631Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Expressions, Statements, and Blocks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Expressions, Statements, and Blocks &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080757Z" creationid="pingfangx" creationdate="20180521T080757Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Expressions, Statements, and Blocks &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040353Z" creationid="pingfangx" creationdate="20180518T040353Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Getting Started</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023838Z" creationid="pingfangx" creationdate="20190103T023838Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Inheritance</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074833Z" creationid="pingfangx" creationdate="20190102T074833Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Interfaces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Interfaces &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084038Z" creationid="pingfangx" creationdate="20190102T084038Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Interfaces &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Nested Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015153Z" creationid="pingfangx" creationdate="20190102T015153Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Nested Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Nested Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020047Z" creationid="pingfangx" creationdate="20190102T020047Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Nested Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041844Z" creationid="pingfangx" creationdate="20190103T041844Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Numbers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Numbers &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062620Z" creationid="pingfangx" creationdate="20190103T062620Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Numbers &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Object-Oriented Programming Concepts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064943Z" creationid="pingfangx" creationdate="20180518T064943Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Object-Oriented Programming Concepts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083733Z" creationid="pingfangx" creationdate="20180705T083733Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Objects &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091953Z" creationid="pingfangx" creationdate="20180705T091953Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Objects &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073412Z" creationid="pingfangx" creationdate="20180521T073412Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Operators</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Operators &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075357Z" creationid="pingfangx" creationdate="20180521T075357Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Operators &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062039Z" creationid="pingfangx" creationdate="20180521T062039Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Variables &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063348Z" creationid="pingfangx" creationdate="20180521T063348Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Questions and Exercises: Variables &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Repeating Annotations &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041642Z" creationid="pingfangx" creationdate="20190102T041642Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Repeating Annotations &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Returning a Value from a Method &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020413Z" creationid="pingfangx" creationdate="20180607T020413Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Returning a Value from a Method &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Strings &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065442Z" creationid="pingfangx" creationdate="20190103T065442Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Strings &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Characters and Strings &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084705Z" creationid="pingfangx" creationdate="20190103T084705Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Characters and Strings &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Control Flow Statements &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091219Z" creationid="pingfangx" creationdate="20180521T091219Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Control Flow Statements &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Creating and Using Classes and Objects &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082713Z" creationid="pingfangx" creationdate="20180705T082713Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Creating and Using Classes and Objects &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Inheritance &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023608Z" creationid="pingfangx" creationdate="20190103T023608Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Inheritance &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Interfaces &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074643Z" creationid="pingfangx" creationdate="20190102T074643Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Interfaces &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Numbers &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041655Z" creationid="pingfangx" creationdate="20190103T041655Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Numbers &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Operators &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072727Z" creationid="pingfangx" creationdate="20180521T072727Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Operators &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Variables &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091857Z" creationid="pingfangx" creationdate="20180521T091857Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Summary of Variables &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Table of Contents &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032729Z" creationid="pingfangx" creationdate="20180518T032729Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Table of Contents &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The Java Technology Phenomenon &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033441Z" creationid="pingfangx" creationdate="20180518T033441Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The Java Technology Phenomenon &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The Numbers Classes &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034324Z" creationid="pingfangx" creationdate="20190103T034324Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The Numbers Classes &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The StringBuilder Class &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083501Z" creationid="pingfangx" creationdate="20190103T083501Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The StringBuilder Class &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The for Statement &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090742Z" creationid="pingfangx" creationdate="20180521T090742Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The for Statement &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The if-then and if-then-else Statements &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082704Z" creationid="pingfangx" creationdate="20180521T082704Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The if-then and if-then-else Statements &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The switch Statement &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083048Z" creationid="pingfangx" creationdate="20180521T083048Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The switch Statement &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The while and do-while Statements &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085641Z" creationid="pingfangx" creationdate="20180521T085641Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; The while and do-while Statements &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Type Annotations and Pluggable Type Systems &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041457Z" creationid="pingfangx" creationdate="20190102T041457Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Type Annotations and Pluggable Type Systems &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Understanding Class Members &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070920Z" creationid="pingfangx" creationdate="20180705T070920Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Understanding Class Members &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Using Objects &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T090212Z" creationid="pingfangx" creationdate="20180601T090212Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Using Objects &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Using an Interface as a Type &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063152Z" creationid="pingfangx" creationdate="20190102T063152Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Using an Interface as a Type &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Using the Keyword super &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104114Z" creationid="pingfangx" creationdate="20190102T104114Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Using the Keyword super &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Using the this Keyword &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042038Z" creationid="pingfangx" creationdate="20180607T042038Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Using the this Keyword &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Variables &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084724Z" creationid="pingfangx" creationdate="20180518T084724Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Variables &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Can Java Technology Do?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033828Z" creationid="pingfangx" creationdate="20180518T033828Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Can Java Technology Do?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Is Inheritance?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064203Z" creationid="pingfangx" creationdate="20180518T064203Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Is Inheritance?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Is a Class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063632Z" creationid="pingfangx" creationdate="20180518T063632Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Is a Class?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Is a Package?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064826Z" creationid="pingfangx" creationdate="20180518T064826Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Is a Package?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Is an Interface?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064551Z" creationid="pingfangx" creationdate="20180518T064551Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Is an Interface?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Is an Object?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062731Z" creationid="pingfangx" creationdate="20180518T062731Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; What Is an Object?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; When to Use Nested Classes, Local Classes, Anonymous Classes, and Lambda Expressions &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014210Z" creationid="pingfangx" creationdate="20190102T014210Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; When to Use Nested Classes, Local Classes, Anonymous Classes, and Lambda Expressions &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Writing Final Classes and Methods &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022728Z" creationid="pingfangx" creationdate="20190103T022728Z">
        <seg>&lt;b0&gt;Previous page:&lt;/b0&gt; Writing Final Classes and Methods &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Question 1&lt;/b0&gt;: When you compile a program written in the Java programming language, the compiler converts the human-readable source file into platform-independent code that a Java Virtual Machine can understand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040002Z" creationid="pingfangx" creationdate="20180518T040002Z">
        <seg>&lt;b0&gt;Question 1&lt;/b0&gt;：编译用 Java 编程语言编写的程序时，编译器将可读的源文件转换为 Java 虚拟机可以理解的与平台无关的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Question 2&lt;/b0&gt;: Which of the following is &lt;i1&gt;not&lt;/i1&gt; a valid comment:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040035Z" creationid="pingfangx" creationdate="20180518T040035Z">
        <seg>&lt;b0&gt;Question 2&lt;/b0&gt;：以下哪项 &lt;i1&gt;不&lt;/i1&gt; 是有效注释：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Question 3&lt;/b0&gt;: What is the first thing you should check if you see the following error at runtime:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040050Z" creationid="pingfangx" creationdate="20180518T040050Z">
        <seg>&lt;b0&gt;Question 3&lt;/b0&gt;：如果在运行时看到以下错误，应该检查的第一件事是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Question 4&lt;/b0&gt;: What is the correct signature of the &lt;c1&gt;main&lt;/c1&gt; method?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040107Z" creationid="pingfangx" creationdate="20180518T040107Z">
        <seg>&lt;b0&gt;Question 4&lt;/b0&gt;：&lt;c1&gt;main&lt;/c1&gt; 方法的正确签名是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Question 5&lt;/b0&gt;: When declaring the &lt;c1&gt;main&lt;/c1&gt; method, which modifier must come first, &lt;c2&gt;public&lt;/c2&gt; or &lt;c3&gt;static&lt;/c3&gt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040115Z" creationid="pingfangx" creationdate="20180518T040115Z">
        <seg>&lt;b0&gt;Question 5&lt;/b0&gt;：在声明 &lt;c1&gt;main&lt;/c1&gt; 方法时，哪个修饰符必须先放置，&lt;c2&gt;public&lt;/c2&gt; 或 &lt;c3&gt;static&lt;/c3&gt;？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Question 6&lt;/b0&gt;: What parameters does the &lt;c1&gt;main&lt;/c1&gt; method define?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040124Z" creationid="pingfangx" creationdate="20180518T040124Z">
        <seg>&lt;b0&gt;Question 6&lt;/b0&gt;：&lt;c1&gt;main&lt;/c1&gt; 方法定义了哪些参数？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Runtime processing&lt;/b0&gt;  Some annotations are available to be examined at runtime.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023715Z" creationid="pingfangx" creationdate="20190102T023715Z">
        <seg>&lt;b0&gt;运行时处理&lt;/b0&gt; 某些注解可在运行时检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Trail:&lt;/b0&gt; Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032706Z" creationid="pingfangx" creationdate="20180518T032706Z">
        <seg>&lt;b0&gt;Trail:&lt;/b0&gt; Getting Started</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Trail:&lt;/b0&gt; Getting Started &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032816Z" creationid="pingfangx" creationdate="20180518T032816Z">
        <seg>&lt;b0&gt;Trail:&lt;/b0&gt; Getting Started &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Trail:&lt;/b0&gt; Learning the Java Language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042754Z" creationid="pingfangx" creationdate="20180518T042754Z">
        <seg>&lt;b0&gt;Trail:&lt;/b0&gt; 学习 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Trail:&lt;/b0&gt; Learning the Java Language &lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T060913Z" creationid="pingfangx" creationdate="20180518T060913Z">
        <seg>&lt;b0&gt;Trail:&lt;/b0&gt; Learning the Java Language &lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;event -&gt; System.out.println("Hello World!")&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075331Z" creationid="pingfangx" creationdate="20181228T075331Z">
        <seg>&lt;b0&gt;event -&gt; System.out.println("Hello World!")&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;final&lt;/b0&gt; ChessPlayer getFirstPlayer() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104640Z" creationid="pingfangx" creationdate="20190102T104640Z">
        <seg>&lt;b0&gt;final&lt;/b0&gt; ChessPlayer getFirstPlayer() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;public static void main(String[] args) {&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035627Z" creationid="pingfangx" creationdate="20180518T035627Z">
        <seg>&lt;b0&gt;public static void main(String[] args) {&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;this(0, 0, 1, 1);&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020143Z" creationid="pingfangx" creationdate="20180607T020143Z">
        <seg>&lt;b0&gt;this(0, 0, 1, 1);&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b10&gt;if (!text.matches("[a-z, A-Z]")) {&lt;/b10&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070004Z" creationid="pingfangx" creationdate="20180706T070004Z">
        <seg>&lt;b10&gt;if (!text.matches("[a-z, A-Z]")) {&lt;/b10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b11&gt;super.replaceSelection(text);&lt;/b11&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070004Z" creationid="pingfangx" creationdate="20180706T070004Z">
        <seg>&lt;b11&gt;super.replaceSelection(text);&lt;/b11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b12&gt;}&lt;/b12&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070005Z" creationid="pingfangx" creationdate="20180706T070005Z">
        <seg>&lt;b12&gt;}&lt;/b12&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b13&gt;}&lt;/b13&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070006Z" creationid="pingfangx" creationdate="20180706T070006Z">
        <seg>&lt;b13&gt;}&lt;/b13&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b14&gt;};&lt;/b14&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070006Z" creationid="pingfangx" creationdate="20180706T070006Z">
        <seg>&lt;b14&gt;};&lt;/b14&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b1&gt;@Override&lt;/b1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065642Z" creationid="pingfangx" creationdate="20180706T065642Z">
        <seg>&lt;b1&gt;@Override&lt;/b1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b1&gt;this(0, 0, width, height);&lt;/b1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020144Z" creationid="pingfangx" creationdate="20180607T020144Z">
        <seg>&lt;b1&gt;this(0, 0, width, height);&lt;/b1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b1&gt;}&lt;/b1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035628Z" creationid="pingfangx" creationdate="20180518T035628Z">
        <seg>&lt;b1&gt;}&lt;/b1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;@Deprecated&lt;/b2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033409Z" creationid="pingfangx" creationdate="20190102T033409Z">
        <seg>&lt;b2&gt;@Deprecated&lt;/b2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;@Override&lt;/b2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033432Z" creationid="pingfangx" creationdate="20190102T033432Z">
        <seg>&lt;b2&gt;@Override&lt;/b2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;@SuppressWarnings("deprecation")&lt;/b2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033604Z" creationid="pingfangx" creationdate="20190102T033604Z">
        <seg>&lt;b2&gt;@SuppressWarnings("deprecation")&lt;/b2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023821Z" creationid="pingfangx" creationdate="20190102T023821Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; 注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Classes and Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023226Z" creationid="pingfangx" creationdate="20180525T023226Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; 类和对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Classes and Objects &lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082831Z" creationid="pingfangx" creationdate="20180525T025833Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; 类和对象&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Interfaces and Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T043123Z" creationid="pingfangx" creationdate="20190102T043123Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; 接口和继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Interfaces and Inheritance &lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055859Z" creationid="pingfangx" creationdate="20190102T055859Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; 接口和继承&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Language Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073027Z" creationid="pingfangx" creationdate="20180518T073027Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; 语言基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Language Basics &lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075925Z" creationid="pingfangx" creationdate="20180518T075925Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; 语言基础&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Numbers and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024819Z" creationid="pingfangx" creationdate="20190103T024819Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; 数字和字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Numbers and Strings &lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025023Z" creationid="pingfangx" creationdate="20190103T025023Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; 数字和字符串&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Object-Oriented Programming Concepts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T060914Z" creationid="pingfangx" creationdate="20180518T060914Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; Object-Oriented Programming Concepts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; The "Hello World!" Application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034244Z" creationid="pingfangx" creationdate="20180518T034244Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; The "Hello World!" Application</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; The Java Technology Phenomenon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032817Z" creationid="pingfangx" creationdate="20180518T032817Z">
        <seg>&lt;b2&gt;Lesson:&lt;/b2&gt; The Java Technology Phenomenon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040728Z" creationid="pingfangx" creationdate="20180518T040728Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; "Hello World!" for Solaris OS and Linux</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034953Z" creationid="pingfangx" creationdate="20180518T034953Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; "Hello World!" for Solaris OS and Linux</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; "Hello World!" for the NetBeans IDE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034140Z" creationid="pingfangx" creationdate="20180518T034140Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; "Hello World!" for the NetBeans IDE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; About the Java Technology</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032732Z" creationid="pingfangx" creationdate="20180518T032732Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; About the Java Technology</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Abstract Methods and Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104800Z" creationid="pingfangx" creationdate="20190102T104800Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Abstract Methods and Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020238Z" creationid="pingfangx" creationdate="20190102T020238Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Annotations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Annotations Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023747Z" creationid="pingfangx" creationdate="20190102T023747Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Annotations Basics</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Anonymous Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T145243Z" creationid="pingfangx" creationdate="20180705T145243Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Anonymous Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Arrays</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084725Z" creationid="pingfangx" creationdate="20180518T084725Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Arrays</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Assignment, Arithmetic, and Unary Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063349Z" creationid="pingfangx" creationdate="20180521T063349Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Assignment, Arithmetic, and Unary Operators</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Autoboxing and Unboxing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083501Z" creationid="pingfangx" creationdate="20190103T083501Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Autoboxing and Unboxing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Beyond Basic Arithmetic</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034325Z" creationid="pingfangx" creationdate="20190103T034325Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Beyond Basic Arithmetic</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Bitwise and Bit Shift Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070523Z" creationid="pingfangx" creationdate="20180521T070523Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Bitwise and Bit Shift Operators</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Branching Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085641Z" creationid="pingfangx" creationdate="20180521T085641Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Branching Statements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Characters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041656Z" creationid="pingfangx" creationdate="20190103T041656Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Characters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023159Z" creationid="pingfangx" creationdate="20180525T023159Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Classes and Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091220Z" creationid="pingfangx" creationdate="20180521T091220Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Classes and Objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Common Problems (and Their Solutions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040206Z" creationid="pingfangx" creationdate="20180518T040206Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Common Problems (and Their Solutions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Comparing Strings and Portions of Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075229Z" creationid="pingfangx" creationdate="20190103T075229Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Comparing Strings and Portions of Strings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Control Flow Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075543Z" creationid="pingfangx" creationdate="20180521T075543Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Control Flow Statements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Controlling Access to Members of a Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020413Z" creationid="pingfangx" creationdate="20180607T020413Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Controlling Access to Members of a Class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Converting Between Numbers and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064836Z" creationid="pingfangx" creationdate="20190103T064836Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Converting Between Numbers and Strings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Creating Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040149Z" creationid="pingfangx" creationdate="20180601T040149Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Creating Objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Declaring Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025749Z" creationid="pingfangx" creationdate="20180525T025749Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Declaring Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Declaring Member Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030949Z" creationid="pingfangx" creationdate="20180525T030949Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Declaring Member Variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Declaring an Annotation Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024228Z" creationid="pingfangx" creationdate="20190102T024228Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Declaring an Annotation Type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Default Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063153Z" creationid="pingfangx" creationdate="20190102T063153Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Default Methods</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Defining Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064411Z" creationid="pingfangx" creationdate="20180525T064411Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Defining Methods</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Defining an Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055827Z" creationid="pingfangx" creationdate="20190102T055827Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Defining an Interface</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Enum Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014210Z" creationid="pingfangx" creationdate="20190102T014210Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Enum Types</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Equality, Relational, and Conditional Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065536Z" creationid="pingfangx" creationdate="20180521T065536Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Equality, Relational, and Conditional Operators</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Evolving Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062753Z" creationid="pingfangx" creationdate="20190102T062753Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Evolving Interfaces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Expressions, Statements, and Blocks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072727Z" creationid="pingfangx" creationdate="20180521T072727Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Expressions, Statements, and Blocks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Formatting Numeric Print Output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T031129Z" creationid="pingfangx" creationdate="20190103T031129Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Formatting Numeric Print Output</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Generics (Updated)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085601Z" creationid="pingfangx" creationdate="20190103T085601Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Generics (Updated)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Hiding Fields</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094134Z" creationid="pingfangx" creationdate="20190102T094134Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Hiding Fields</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; How Will Java Technology Change My Life?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033723Z" creationid="pingfangx" creationdate="20180518T033723Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; How Will Java Technology Change My Life?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Implementing an Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061745Z" creationid="pingfangx" creationdate="20190102T061745Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Implementing an Interface</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074644Z" creationid="pingfangx" creationdate="20190102T074644Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Inheritance</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Initializing Fields</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065621Z" creationid="pingfangx" creationdate="20180705T065621Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Initializing Fields</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Inner Class Example</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091954Z" creationid="pingfangx" creationdate="20180705T091954Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Inner Class Example</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T043105Z" creationid="pingfangx" creationdate="20190102T043105Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Interfaces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Interfaces and Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041644Z" creationid="pingfangx" creationdate="20190102T041644Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Interfaces and Inheritance</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Lambda Expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070019Z" creationid="pingfangx" creationdate="20180706T070019Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Lambda Expressions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Language Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064827Z" creationid="pingfangx" creationdate="20180518T064827Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Language Basics</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Local Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101415Z" creationid="pingfangx" creationdate="20180705T101415Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Local Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Manipulating Characters in a String</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065443Z" creationid="pingfangx" creationdate="20190103T065443Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Manipulating Characters in a String</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Method References</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021229Z" creationid="pingfangx" creationdate="20190102T021229Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Method References</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; More on Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085915Z" creationid="pingfangx" creationdate="20180601T085915Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; More on Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Multiple Inheritance of State, Implementation, and Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084038Z" creationid="pingfangx" creationdate="20190102T084038Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Multiple Inheritance of State, Implementation, and Type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Nested Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083308Z" creationid="pingfangx" creationdate="20180705T083308Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Nested Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024754Z" creationid="pingfangx" creationdate="20190103T024754Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Numbers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Numbers and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023608Z" creationid="pingfangx" creationdate="20190103T023608Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Numbers and Strings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Object as a Superclass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095901Z" creationid="pingfangx" creationdate="20190102T095901Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Object as a Superclass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Object-Oriented Programming Concepts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042628Z" creationid="pingfangx" creationdate="20180518T042628Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Object-Oriented Programming Concepts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034516Z" creationid="pingfangx" creationdate="20180601T034516Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091858Z" creationid="pingfangx" creationdate="20180521T091858Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Operators</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Overriding and Hiding Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085058Z" creationid="pingfangx" creationdate="20190102T085058Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Overriding and Hiding Methods</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Passing Information to a Method or a Constructor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180529T065444Z" creationid="pingfangx" creationdate="20180529T065444Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Passing Information to a Method or a Constructor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Polymorphism</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092747Z" creationid="pingfangx" creationdate="20190102T092747Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Polymorphism</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Predefined Annotation Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025904Z" creationid="pingfangx" creationdate="20190102T025904Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Predefined Annotation Types</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Primitive Data Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074604Z" creationid="pingfangx" creationdate="20180518T074604Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Primitive Data Types</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Providing Constructors for Your Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065528Z" creationid="pingfangx" creationdate="20180525T065528Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Providing Constructors for Your Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041457Z" creationid="pingfangx" creationdate="20190102T041457Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Annotations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Characters and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084720Z" creationid="pingfangx" creationdate="20190103T084720Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Characters and Strings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082345Z" creationid="pingfangx" creationdate="20180705T082345Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Control Flow Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090956Z" creationid="pingfangx" creationdate="20180521T090956Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Control Flow Statements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Enum Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020047Z" creationid="pingfangx" creationdate="20190102T020047Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Enum Types</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Expressions, Statements, and Blocks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075358Z" creationid="pingfangx" creationdate="20180521T075358Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Expressions, Statements, and Blocks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035816Z" creationid="pingfangx" creationdate="20180518T035816Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Getting Started</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023420Z" creationid="pingfangx" creationdate="20190103T023420Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Inheritance</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074442Z" creationid="pingfangx" creationdate="20190102T074442Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Interfaces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Nested Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013706Z" creationid="pingfangx" creationdate="20190102T013706Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Nested Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041321Z" creationid="pingfangx" creationdate="20190103T041321Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Numbers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Object-Oriented Programming Concepts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064552Z" creationid="pingfangx" creationdate="20180518T064552Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Object-Oriented Programming Concepts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082713Z" creationid="pingfangx" creationdate="20180705T082713Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071848Z" creationid="pingfangx" creationdate="20180521T071848Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Operators</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061649Z" creationid="pingfangx" creationdate="20180521T061649Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Questions and Exercises: Variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Repeating Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040939Z" creationid="pingfangx" creationdate="20190102T040939Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Repeating Annotations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Returning a Value from a Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T090213Z" creationid="pingfangx" creationdate="20180601T090213Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Returning a Value from a Method</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062621Z" creationid="pingfangx" creationdate="20190103T062621Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Strings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Characters and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083122Z" creationid="pingfangx" creationdate="20190103T083122Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Characters and Strings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Control Flow Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090742Z" creationid="pingfangx" creationdate="20180521T090742Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Control Flow Statements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Creating and Using Classes and Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070921Z" creationid="pingfangx" creationdate="20180705T070921Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Creating and Using Classes and Objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022729Z" creationid="pingfangx" creationdate="20190103T022729Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Inheritance</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072222Z" creationid="pingfangx" creationdate="20190102T072222Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Interfaces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040655Z" creationid="pingfangx" creationdate="20190103T040655Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Numbers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070956Z" creationid="pingfangx" creationdate="20180521T070956Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Operators</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T054907Z" creationid="pingfangx" creationdate="20180521T054907Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Summary of Variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The "Hello World!" Application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033829Z" creationid="pingfangx" creationdate="20180518T033829Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The "Hello World!" Application</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The Java Technology Phenomenon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032551Z" creationid="pingfangx" creationdate="20180518T032551Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The Java Technology Phenomenon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The Numbers Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025007Z" creationid="pingfangx" creationdate="20190103T025007Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The Numbers Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The StringBuilder Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080014Z" creationid="pingfangx" creationdate="20190103T080014Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The StringBuilder Class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The for Statement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083049Z" creationid="pingfangx" creationdate="20180521T083049Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The for Statement</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The if-then and if-then-else Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080757Z" creationid="pingfangx" creationdate="20180521T080757Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The if-then and if-then-else Statements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The switch Statement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081231Z" creationid="pingfangx" creationdate="20180521T081231Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The switch Statement</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The while and do-while Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082707Z" creationid="pingfangx" creationdate="20180521T082707Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; The while and do-while Statements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Type Annotations and Pluggable Type Systems</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034107Z" creationid="pingfangx" creationdate="20190102T034107Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Type Annotations and Pluggable Type Systems</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Understanding Class Members</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042039Z" creationid="pingfangx" creationdate="20180607T042039Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Understanding Class Members</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Using Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071819Z" creationid="pingfangx" creationdate="20180601T071819Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Using Objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Using an Interface as a Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062249Z" creationid="pingfangx" creationdate="20190102T062249Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Using an Interface as a Type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Using the Keyword super</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094352Z" creationid="pingfangx" creationdate="20190102T094352Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Using the Keyword super</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Using the this Keyword</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092155Z" creationid="pingfangx" creationdate="20180601T092155Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Using the this Keyword</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072836Z" creationid="pingfangx" creationdate="20180518T072836Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Can Java Technology Do?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033442Z" creationid="pingfangx" creationdate="20180518T033442Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Can Java Technology Do?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Is Inheritance?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062733Z" creationid="pingfangx" creationdate="20180518T062733Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Is Inheritance?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Is a Class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062059Z" creationid="pingfangx" creationdate="20180518T062059Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Is a Class?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Is a Package?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064204Z" creationid="pingfangx" creationdate="20180518T064204Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Is a Package?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Is an Interface?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063633Z" creationid="pingfangx" creationdate="20180518T063633Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Is an Interface?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Is an Object?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T043115Z" creationid="pingfangx" creationdate="20180518T043115Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; What Is an Object?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; When to Use Nested Classes, Local Classes, Anonymous Classes, and Lambda Expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021231Z" creationid="pingfangx" creationdate="20190102T021231Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; When to Use Nested Classes, Local Classes, Anonymous Classes, and Lambda Expressions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Writing Final Classes and Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104114Z" creationid="pingfangx" creationdate="20190102T104114Z">
        <seg>&lt;b2&gt;Next page:&lt;/b2&gt; Writing Final Classes and Methods</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;id = ++numberOfBicycles;&lt;/b2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043213Z" creationid="pingfangx" creationdate="20180607T043213Z">
        <seg>&lt;b2&gt;id = ++numberOfBicycles;&lt;/b2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;public void handle(ActionEvent event) {&lt;/b2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065643Z" creationid="pingfangx" creationdate="20180706T065643Z">
        <seg>&lt;b2&gt;public void handle(ActionEvent event) {&lt;/b2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b2&gt;public void replaceText(int start, int end, String text) {&lt;/b2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070000Z" creationid="pingfangx" creationdate="20180706T070000Z">
        <seg>&lt;b2&gt;public void replaceText(int start, int end, String text) {&lt;/b2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b3&gt;System.out.println("Hello World!");&lt;/b3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065643Z" creationid="pingfangx" creationdate="20180706T065643Z">
        <seg>&lt;b3&gt;System.out.println("Hello World!");&lt;/b3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b3&gt;if (!text.matches("[a-z, A-Z]")) {&lt;/b3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070001Z" creationid="pingfangx" creationdate="20180706T070001Z">
        <seg>&lt;b3&gt;if (!text.matches("[a-z, A-Z]")) {&lt;/b3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025850Z" creationid="pingfangx" creationdate="20180525T025850Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Control Flow Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080815Z" creationid="pingfangx" creationdate="20180521T080815Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 控制流程语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084122Z" creationid="pingfangx" creationdate="20190102T084122Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055910Z" creationid="pingfangx" creationdate="20190102T055910Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; More on Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091115Z" creationid="pingfangx" creationdate="20180601T091115Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 更多关于类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Nested Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100447Z" creationid="pingfangx" creationdate="20180705T100447Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 嵌套类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Nested Classes &lt;br5/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082629Z" creationid="pingfangx" creationdate="20181228T082629Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 嵌套类&lt;br5/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025027Z" creationid="pingfangx" creationdate="20190103T025027Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 数字</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021225Z" creationid="pingfangx" creationdate="20190102T021225Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063808Z" creationid="pingfangx" creationdate="20180521T063808Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065010Z" creationid="pingfangx" creationdate="20190103T065010Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075932Z" creationid="pingfangx" creationdate="20180518T075932Z">
        <seg>&lt;b4&gt;Section:&lt;/b4&gt; 变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;super.replaceText(start, end, text);                     &lt;/b4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070001Z" creationid="pingfangx" creationdate="20180706T070001Z">
        <seg>&lt;b4&gt;super.replaceText(start, end, text);                     &lt;/b4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b4&gt;}&lt;/b4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065644Z" creationid="pingfangx" creationdate="20180706T065644Z">
        <seg>&lt;b4&gt;}&lt;/b4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b5&gt;}&lt;/b5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070002Z" creationid="pingfangx" creationdate="20180706T070002Z">
        <seg>&lt;b5&gt;}&lt;/b5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b5&gt;}&lt;/b5&gt;);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065645Z" creationid="pingfangx" creationdate="20180706T065645Z">
        <seg>&lt;b5&gt;}&lt;/b5&gt;);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b6&gt;Subsection:&lt;/b6&gt; Lambda Expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082638Z" creationid="pingfangx" creationdate="20181228T082638Z">
        <seg>&lt;b6&gt;Subsection:&lt;/b6&gt; Lambda 表达式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b6&gt;label.setText("Enter a numeric value");&lt;/b6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070002Z" creationid="pingfangx" creationdate="20180706T070002Z">
        <seg>&lt;b6&gt;label.setText("Enter a numeric value");&lt;/b6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b7&gt;}&lt;/b7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070003Z" creationid="pingfangx" creationdate="20180706T070003Z">
        <seg>&lt;b7&gt;}&lt;/b7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b8&gt;@Override&lt;/b8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070003Z" creationid="pingfangx" creationdate="20180706T070003Z">
        <seg>&lt;b8&gt;@Override&lt;/b8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b9&gt;public void replaceSelection(String text) {&lt;/b9&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070004Z" creationid="pingfangx" creationdate="20180706T070004Z">
        <seg>&lt;b9&gt;public void replaceSelection(String text) {&lt;/b9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033828Z" creationid="pingfangx" creationdate="20180518T033828Z">
        <seg>&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;br13/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T080503Z" creationid="pingfangx" creationdate="20190102T080503Z">
        <seg>&lt;br13/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023505Z" creationid="pingfangx" creationdate="20190103T023505Z">
        <seg>&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;br5/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034610Z" creationid="pingfangx" creationdate="20180518T034610Z">
        <seg>&lt;br5/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;br9/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T080210Z" creationid="pingfangx" creationdate="20190102T080210Z">
        <seg>&lt;br9/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;/** comment */&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040038Z" creationid="pingfangx" creationdate="20180518T040038Z">
        <seg>&lt;c0&gt;/** comment */&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Bicycle yourBike = new Bicycle();&lt;/c0&gt; invokes the no-argument constructor to create a new &lt;c1&gt;Bicycle&lt;/c1&gt; object called &lt;c2&gt;yourBike&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034810Z" creationid="pingfangx" creationdate="20180528T034810Z">
        <seg>&lt;c0&gt;Bicycle yourBike = new Bicycle();&lt;/c0&gt; 调用无参数构造函数来创建一个名为 &lt;c2&gt;yourBike&lt;/c2&gt; 的新 &lt;c1&gt;Bicycle&lt;/c1&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;DecimalFormat.java&lt;/c0&gt; Output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034125Z" creationid="pingfangx" creationdate="20190103T034125Z">
        <seg>&lt;c0&gt;DecimalFormat.java&lt;/c0&gt; 输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ElementType.ANNOTATION_TYPE&lt;/c0&gt; can be applied to an annotation type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033954Z" creationid="pingfangx" creationdate="20190102T033954Z">
        <seg>&lt;c0&gt;ElementType.ANNOTATION_TYPE&lt;/c0&gt; 可以应用于注解类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ElementType.CONSTRUCTOR&lt;/c0&gt; can be applied to a constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033956Z" creationid="pingfangx" creationdate="20190102T033956Z">
        <seg>&lt;c0&gt;ElementType.CONSTRUCTOR&lt;/c0&gt; 可以应用于构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ElementType.FIELD&lt;/c0&gt; can be applied to a field or property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033958Z" creationid="pingfangx" creationdate="20190102T033958Z">
        <seg>&lt;c0&gt;ElementType.FIELD&lt;/c0&gt; 可以应用于字段或属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ElementType.LOCAL_VARIABLE&lt;/c0&gt; can be applied to a local variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034000Z" creationid="pingfangx" creationdate="20190102T034000Z">
        <seg>&lt;c0&gt;ElementType.LOCAL_VARIABLE&lt;/c0&gt; 可以应用于局部变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ElementType.METHOD&lt;/c0&gt; can be applied to a method-level annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034003Z" creationid="pingfangx" creationdate="20190102T034003Z">
        <seg>&lt;c0&gt;ElementType.METHOD&lt;/c0&gt; 可以应用于方法级注解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ElementType.PACKAGE&lt;/c0&gt; can be applied to a package declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034005Z" creationid="pingfangx" creationdate="20190102T034005Z">
        <seg>&lt;c0&gt;ElementType.PACKAGE&lt;/c0&gt; 可以应用于包声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ElementType.PARAMETER&lt;/c0&gt; can be applied to the parameters of a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034007Z" creationid="pingfangx" creationdate="20190102T034007Z">
        <seg>&lt;c0&gt;ElementType.PARAMETER&lt;/c0&gt; 可以应用于方法的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ElementType.TYPE&lt;/c0&gt; can be applied to any element of a class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034010Z" creationid="pingfangx" creationdate="20190102T034010Z">
        <seg>&lt;c0&gt;ElementType.TYPE&lt;/c0&gt; 可以应用于类的任何元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Math.E&lt;/c0&gt;, which is the base of natural logarithms, and</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035458Z" creationid="pingfangx" creationdate="20190103T035458Z">
        <seg>&lt;c0&gt;Math.E&lt;/c0&gt;，它是自然对数的底</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Math.PI&lt;/c0&gt;, which is the ratio of the circumference of a circle to its diameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035508Z" creationid="pingfangx" creationdate="20190103T035508Z">
        <seg>&lt;c0&gt;Math.PI&lt;/c0&gt;，它是圆周长与直径的比值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;MountainBike&lt;/c0&gt; inherits all the fields and methods of &lt;c1&gt;Bicycle&lt;/c1&gt; and adds the field &lt;c2&gt;seatHeight&lt;/c2&gt; and a method to set it (mountain bikes have seats that can be moved up and down as the terrain demands).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025747Z" creationid="pingfangx" creationdate="20180525T025717Z">
        <seg>&lt;c0&gt;MountainBike&lt;/c0&gt; 继承 &lt;c1&gt;Bicycle&lt;/c1&gt; 的所有字段和方法，并添加字段 &lt;c2&gt;seatHeight&lt;/c2&gt; 以及设置它的方法(山地自行车有可移动的座位根据地形要求上下)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;MountainBike&lt;/c0&gt; inherits all the fields and methods of &lt;c1&gt;Bicycle&lt;/c1&gt; and adds the field &lt;c2&gt;seatHeight&lt;/c2&gt; and a method to set it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082025Z" creationid="pingfangx" creationdate="20190102T082025Z">
        <seg>&lt;c0&gt;MountainBike&lt;/c0&gt; 继承 &lt;c1&gt;Bicycle&lt;/c1&gt; 的所有字段和方法，并添加字段 &lt;c2&gt;seatHeight&lt;/c2&gt; 以及设置它的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;MountainBike&lt;/c0&gt; is descended from &lt;c1&gt;Bicycle&lt;/c1&gt; and &lt;c2&gt;Object&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083118Z" creationid="pingfangx" creationdate="20190102T083118Z">
        <seg>&lt;c0&gt;MountainBike&lt;/c0&gt; 来自 &lt;c1&gt;Bicycle&lt;/c1&gt; 和 &lt;c2&gt;Object&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Object&lt;/c0&gt;'s implementation of this method checks to see whether the object on which &lt;c1&gt;clone()&lt;/c1&gt; was invoked implements the &lt;c2&gt;Cloneable&lt;/c2&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101541Z" creationid="pingfangx" creationdate="20190102T101541Z">
        <seg>&lt;c0&gt;Object&lt;/c0&gt; 的此方法的实现检查以查看调用 &lt;c1&gt;clone()&lt;/c1&gt; 的对象是否实现 &lt;c2&gt;Cloneable&lt;/c2&gt; 接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;RetentionPolicy.CLASS&lt;/c0&gt; – The marked annotation is retained by the compiler at compile time, but is ignored by the Java Virtual Machine (JVM).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033906Z" creationid="pingfangx" creationdate="20190102T033906Z">
        <seg>&lt;c0&gt;RetentionPolicy.CLASS&lt;/c0&gt;  - 标记的注解在编译时由编译器保留，但 Java 虚拟机(JVM)会忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;RetentionPolicy.RUNTIME&lt;/c0&gt; – The marked annotation is retained by the JVM so it can be used by the runtime environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033911Z" creationid="pingfangx" creationdate="20190102T033911Z">
        <seg>&lt;c0&gt;RetentionPolicy.RUNTIME&lt;/c0&gt;  - 标记的注解由 JVM 保留，因此运行时环境可以使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;RetentionPolicy.SOURCE&lt;/c0&gt; – The marked annotation is retained only in the source level and is ignored by the compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033858Z" creationid="pingfangx" creationdate="20190102T033858Z">
        <seg>&lt;c0&gt;RetentionPolicy.SOURCE&lt;/c0&gt;  - 标记的注解仅保留在源级别中，并被编译器忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;StringBuilder&lt;/c0&gt; Constructors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081032Z" creationid="pingfangx" creationdate="20190103T081032Z">
        <seg>&lt;c0&gt;StringBuilder&lt;/c0&gt; 构造函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;StringDemo&lt;/c0&gt; reversed a palindrome.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082644Z" creationid="pingfangx" creationdate="20190103T082644Z">
        <seg>&lt;c0&gt;StringDemo&lt;/c0&gt; 颠倒回文。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;String[] split(String regex)&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073023Z" creationid="pingfangx" creationdate="20190103T073023Z">
        <seg>&lt;c0&gt;String[] split(String regex)&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;assert&lt;/c0&gt;&lt;s1&gt;***&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075734Z" creationid="pingfangx" creationdate="20180518T075734Z">
        <seg>&lt;c0&gt;assert&lt;/c0&gt;&lt;s1&gt;***&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;const&lt;/c0&gt;&lt;s1&gt;*&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075800Z" creationid="pingfangx" creationdate="20180518T075800Z">
        <seg>&lt;c0&gt;const&lt;/c0&gt;&lt;s1&gt;*&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;enum&lt;/c0&gt;&lt;s1&gt;****&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075745Z" creationid="pingfangx" creationdate="20180518T075745Z">
        <seg>&lt;c0&gt;enum&lt;/c0&gt;&lt;s1&gt;****&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;goto&lt;/c0&gt;&lt;s1&gt;*&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075735Z" creationid="pingfangx" creationdate="20180518T075735Z">
        <seg>&lt;c0&gt;goto&lt;/c0&gt;&lt;s1&gt;*&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;if-then-else&lt;/c0&gt; statement)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071728Z" creationid="pingfangx" creationdate="20180521T071728Z">
        <seg>（&lt;c0&gt;if-then-else&lt;/c0&gt; 语句的缩写）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;implements&lt;/c0&gt; clause:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024204Z" creationid="pingfangx" creationdate="20190102T024204Z">
        <seg>&lt;c0&gt;implements&lt;/c0&gt; 子句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;int &lt;s1&gt;cadence = 0&lt;/s1&gt;;&lt;/c0&gt;
&lt;c2&gt;&lt;s3&gt;anArray[0] = 100&lt;/s3&gt;;&lt;/c2&gt;
&lt;c4&gt;System.out.println(&lt;s5&gt;"Element 1 at index 0: " + anArray[0]&lt;/s5&gt;);&lt;/c4&gt;

&lt;c6&gt;int &lt;s7&gt;result = 1 + 2&lt;/s7&gt;; // result is now 3&lt;/c6&gt;
&lt;c8&gt;if (&lt;s9&gt;value1 == value2&lt;/s9&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074046Z" creationid="pingfangx" creationdate="20180521T074046Z">
        <seg>&lt;c0&gt;int &lt;s1&gt;cadence = 0&lt;/s1&gt;;&lt;/c0&gt;
&lt;c2&gt;&lt;s3&gt;anArray[0] = 100&lt;/s3&gt;;&lt;/c2&gt;
&lt;c4&gt;System.out.println(&lt;s5&gt;"Element 1 at index 0: " + anArray[0]&lt;/s5&gt;);&lt;/c4&gt;

&lt;c6&gt;int &lt;s7&gt;result = 1 + 2&lt;/s7&gt;; // result is now 3&lt;/c6&gt;
&lt;c8&gt;if (&lt;s9&gt;value1 == value2&lt;/s9&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;new Bicycle(30, 0, 8)&lt;/c0&gt; creates space in memory for the object and initializes its fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034737Z" creationid="pingfangx" creationdate="20180528T034737Z">
        <seg>&lt;c0&gt;new Bicycle(30, 0, 8)&lt;/c0&gt; 为对象创建内存空间并初始化其字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;private&lt;/c0&gt; modifierthe field is accessible only within its own class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063824Z" creationid="pingfangx" creationdate="20180525T063824Z">
        <seg>&lt;c0&gt;private&lt;/c0&gt; 修饰符该字段只能在其自己的类中访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;processElements&lt;/c0&gt; Action</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074502Z" creationid="pingfangx" creationdate="20181228T074502Z">
        <seg>&lt;c0&gt;processElements&lt;/c0&gt; 操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;protected Object clone() throws CloneNotSupportedException&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100614Z" creationid="pingfangx" creationdate="20190102T100614Z">
        <seg>&lt;c0&gt;protected Object clone() throws CloneNotSupportedException&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;protected void finalize() throws Throwable&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100643Z" creationid="pingfangx" creationdate="20190102T100643Z">
        <seg>&lt;c0&gt;protected void finalize() throws Throwable&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;public String toString()&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100910Z" creationid="pingfangx" creationdate="20190102T100910Z">
        <seg>&lt;c0&gt;public String toString()&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;public boolean equals(Object obj)&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100633Z" creationid="pingfangx" creationdate="20190102T100633Z">
        <seg>&lt;c0&gt;public boolean equals(Object obj)&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;public final Class getClass()&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100852Z" creationid="pingfangx" creationdate="20190102T100852Z">
        <seg>&lt;c0&gt;public final Class getClass()&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;public int hashCode()&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100905Z" creationid="pingfangx" creationdate="20190102T100905Z">
        <seg>&lt;c0&gt;public int hashCode()&lt;/c0&gt;&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;public static void printPersons(List&lt;Person&gt; roster, CheckPerson tester)&lt;/c0&gt; in &lt;a1&gt;Approach 3: Specify Search Criteria Code in a Local Class&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081455Z" creationid="pingfangx" creationdate="20181228T081455Z">
        <seg>&lt;c0&gt;public static void printPersons(List&lt;Person&gt; roster, CheckPerson tester)&lt;/c0&gt; in &lt;a1&gt;Approach 3: Specify Search Criteria Code in a Local Class&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;public void printPersonsWithPredicate(List&lt;Person&gt; roster, Predicate&lt;Person&gt; tester)&lt;/c0&gt; in &lt;a1&gt;Approach 6: Use Standard Functional Interfaces with Lambda Expressions&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081459Z" creationid="pingfangx" creationdate="20181228T081459Z">
        <seg>&lt;c0&gt;public void printPersonsWithPredicate(List&lt;Person&gt; roster, Predicate&lt;Person&gt; tester)&lt;/c0&gt; in &lt;a1&gt;Approach 6: Use Standard Functional Interfaces with Lambda Expressions&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;public&lt;/c0&gt; modifierthe field is accessible from all classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063800Z" creationid="pingfangx" creationdate="20180525T063800Z">
        <seg>&lt;c0&gt;public&lt;/c0&gt; 修饰符该字段可以从所有类访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;strictfp&lt;/c0&gt;&lt;s1&gt;**&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075758Z" creationid="pingfangx" creationdate="20180518T075758Z">
        <seg>&lt;c0&gt;strictfp&lt;/c0&gt;&lt;s1&gt;**&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c1&gt;Math&lt;/c1&gt; also includes basic arithmetic functions, such as absolute value and rounding, and a method, &lt;c2&gt;random()&lt;/c2&gt;, for generating random numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041320Z" creationid="pingfangx" creationdate="20190103T041320Z">
        <seg>&lt;c1&gt;Math&lt;/c1&gt; 还包括基本算术函数，例如绝对值和舍入，以及用于生成随机数的方法 &lt;c2&gt;random()&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c1&gt;Object&lt;/c1&gt; &lt;i2&gt;does&lt;/i2&gt; have such a constructor, so if &lt;c3&gt;Object&lt;/c3&gt; is the only superclass, there is no problem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095757Z" creationid="pingfangx" creationdate="20190102T095757Z">
        <seg>&lt;c1&gt;Object&lt;/c1&gt; &lt;i2&gt;does&lt;/i2&gt; 具有这样的构造函数，因此如果 &lt;c3&gt;Object&lt;/c3&gt; 是唯一的超类，则没有问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c1&gt;null&lt;/c1&gt; may be assigned to any variable, except variables of primitive types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084053Z" creationid="pingfangx" creationdate="20180518T084053Z">
        <seg>可以将 &lt;c1&gt;null&lt;/c1&gt; 分配给任何变量，但基本类型的变量除外。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;/* comment */&lt;/c2&gt;&lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040039Z" creationid="pingfangx" creationdate="20180518T040039Z">
        <seg>&lt;c2&gt;/* comment */&lt;/c2&gt;&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;BigDecimal&lt;/c2&gt; and &lt;c3&gt;BigInteger&lt;/c3&gt; are used for high-precision calculations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030158Z" creationid="pingfangx" creationdate="20190103T030158Z">
        <seg>&lt;c2&gt;BigDecimal&lt;/c2&gt; 和 &lt;c3&gt;BigInteger&lt;/c3&gt; 用于高精度计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;DecimalFormat&lt;/c2&gt; offers a great deal of flexibility in the formatting of numbers, but it can make your code more complex.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033923Z" creationid="pingfangx" creationdate="20190103T033923Z">
        <seg>&lt;c2&gt;DecimalFormat&lt;/c2&gt; 在数字格式化方面提供了极大的灵活性，但它可以使您的代码更复杂。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;GraphicObject&lt;/c2&gt; also declares abstract methods for methods, such as &lt;c3&gt;draw&lt;/c3&gt; or &lt;c4&gt;resize&lt;/c4&gt;, that need to be implemented by all subclasses but must be implemented in different ways.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022256Z" creationid="pingfangx" creationdate="20190103T022256Z">
        <seg>&lt;c2&gt;GraphicObject&lt;/c2&gt; 还声明方法的抽象方法，例如 &lt;c3&gt;draw&lt;/c3&gt; 或 &lt;c4&gt;resize&lt;/c4&gt;，这些方法需要由所有子类实现，但必须以不同的方式实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;String[] split(String regex, int limit)&lt;/c2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073024Z" creationid="pingfangx" creationdate="20190103T073024Z">
        <seg>&lt;c2&gt;String[] split(String regex, int limit)&lt;/c2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;true&lt;/c2&gt;, &lt;c3&gt;false&lt;/c3&gt;, and &lt;c4&gt;null&lt;/c4&gt; might seem like keywords, but they are actually literals; you cannot use them as identifiers in your programs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075725Z" creationid="pingfangx" creationdate="20180518T075326Z">
        <seg>&lt;c2&gt;true&lt;/c2&gt;，&lt;c3&gt;false&lt;/c3&gt; 和 &lt;c4&gt;null&lt;/c4&gt; 可能看起来像关键字，但它们实际上是 literals（字面量）;你不能在程序中使用它们作为标识符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c3&gt;ImaginaryNumber&lt;/c3&gt; is a &lt;c4&gt;Number&lt;/c4&gt; because it's a subclass of &lt;c5&gt;Number&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091950Z" creationid="pingfangx" creationdate="20180601T091950Z">
        <seg>&lt;c3&gt;ImaginaryNumber&lt;/c3&gt; 是 &lt;c4&gt;Number&lt;/c4&gt;，因为它是 &lt;c5&gt;Number&lt;/c5&gt; 的子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c3&gt;Object&lt;/c3&gt;'s implementation of &lt;c4&gt;finalize()&lt;/c4&gt; does nothingyou can override &lt;c5&gt;finalize()&lt;/c5&gt; to do cleanup, such as freeing resources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103129Z" creationid="pingfangx" creationdate="20190102T103129Z">
        <seg>&lt;c3&gt;Object&lt;/c3&gt; 的 &lt;c4&gt;finalize()&lt;/c4&gt; 的实现什么都没做你可以覆盖 &lt;c5&gt;finalize()&lt;/c5&gt; 进行清理，例如释放资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c3&gt;String&lt;/c3&gt; objects are &lt;i4&gt;immutable&lt;/i4&gt;, which means that once created, their values cannot be changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082030Z" creationid="pingfangx" creationdate="20180518T082030Z">
        <seg>&lt;c3&gt;String&lt;/c3&gt; 对象是 &lt;i4&gt;immutable（不可变的）&lt;/i4&gt;，这意味着一旦创建，它们的值就不能改变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c4&gt;/* comment&lt;/c4&gt;&lt;br5/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040041Z" creationid="pingfangx" creationdate="20180518T040041Z">
        <seg>&lt;c4&gt;/* comment&lt;/c4&gt;&lt;br5/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c4&gt;AtomicInteger&lt;/c4&gt; and &lt;c5&gt;AtomicLong&lt;/c5&gt; are used for multi-threaded applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030205Z" creationid="pingfangx" creationdate="20190103T030205Z">
        <seg>&lt;c4&gt;AtomicInteger&lt;/c4&gt; 和 &lt;c5&gt;AtomicLong&lt;/c5&gt; 用于多线程应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c6&gt;// comment&lt;/c6&gt;&lt;br7/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040043Z" creationid="pingfangx" creationdate="20180518T040043Z">
        <seg>&lt;c6&gt;// comment&lt;/c6&gt;&lt;br7/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c6&gt;HelloWorldApp&lt;/c6&gt; is &lt;e7&gt;not&lt;/e7&gt; the same as &lt;c8&gt;helloworldapp&lt;/c8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034630Z" creationid="pingfangx" creationdate="20180518T034613Z">
        <seg>&lt;c6&gt;HelloWorldApp&lt;/c6&gt; 与 &lt;c8&gt;helloworldapp&lt;/c8&gt; &lt;e7&gt;不&lt;/e7&gt;相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;code&gt;ic&lt;/code&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021205Z" creationid="pingfangx" creationdate="20190102T021205Z">
        <seg>&lt;code&gt;ic&lt;/code&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;Annotations&lt;/e0&gt;, a form of metadata, provide data about a program that is not part of the program itself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023522Z" creationid="pingfangx" creationdate="20190102T023522Z">
        <seg>&lt;e0&gt;Annotations&lt;/e0&gt;，一种元数据形式，提供有关于程序但不属于程序本身的数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;Autoboxing&lt;/e0&gt; is the automatic conversion that the Java compiler makes between the primitive types and their corresponding object wrapper classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083823Z" creationid="pingfangx" creationdate="20190103T083823Z">
        <seg>&lt;e0&gt;自动装箱（Autoboxing）&lt;/e0&gt; 是 Java 编译器在基本类型及其对应的对象包装类之间进行的自动转换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;Multiple inheritance of implementation&lt;/e0&gt; is the ability to inherit method definitions from multiple classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084819Z" creationid="pingfangx" creationdate="20190102T084819Z">
        <seg>&lt;e0&gt;Multiple inheritance of implementation&lt;/e0&gt; 是从多个类继承方法定义的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;expr&lt;/e0&gt;++ &lt;e1&gt;expr&lt;/e1&gt;--</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062955Z" creationid="pingfangx" creationdate="20180521T062955Z">
        <seg>&lt;e0&gt;expr&lt;/e0&gt;++ &lt;e1&gt;expr&lt;/e1&gt;--</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;type name&lt;/e0&gt;;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042530Z" creationid="pingfangx" creationdate="20180601T042530Z">
        <seg>&lt;e0&gt;type name&lt;/e0&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e2&gt;increment&lt;/e2&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T084417Z" creationid="pingfangx" creationdate="20180521T084417Z">
        <seg>&lt;e2&gt;increment&lt;/e2&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e3&gt;statement(s)&lt;/e3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T084417Z" creationid="pingfangx" creationdate="20180521T084417Z">
        <seg>&lt;e3&gt;statement(s)&lt;/e3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;Casting&lt;/i0&gt; shows the use of an object of one type in place of another type, among the objects permitted by inheritance and implementations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083408Z" creationid="pingfangx" creationdate="20190102T083408Z">
        <seg>&lt;i0&gt;Casting&lt;/i0&gt; 显示在继承和实现允许的对象中使用一种类型的对象代替另一种类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;Control flow statements&lt;/i0&gt;, however, break up the flow of execution by employing decision making, looping, and branching, enabling your program to &lt;i1&gt;conditionally&lt;/i1&gt; execute particular blocks of code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080711Z" creationid="pingfangx" creationdate="20180521T080711Z">
        <seg>但是，&lt;i0&gt;Control flow statements（控制流程语句）&lt;/i0&gt;通过使用决策，循环和分支来分解执行流程，从而使程序 &lt;i1&gt;有条件地&lt;/i1&gt; 执行特定的代码块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;The Java Tutorial, Sixth Edition.&lt;/i0&gt; &lt;a1&gt;Amazon.com&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030640Z" creationid="pingfangx" creationdate="20180518T030640Z">
        <seg>&lt;i0&gt;The Java Tutorial, Sixth Edition.&lt;/i0&gt; &lt;a1&gt;Amazon.com&lt;/a1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;aCloneableObject&lt;/i0&gt;.clone();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101525Z" creationid="pingfangx" creationdate="20190102T101525Z">
        <seg>&lt;i0&gt;aCloneableObject&lt;/i0&gt;.clone();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i1&gt;However&lt;/i1&gt;, the values of the object's fields &lt;i2&gt;can&lt;/i2&gt; be changed in the method, if they have the proper access level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034817Z" creationid="pingfangx" creationdate="20180601T034234Z">
        <seg>&lt;i1&gt;然而&lt;/i1&gt;，如果对象的字段的值具有适当的访问级别，则&lt;i2&gt;可以&lt;/i2&gt;在该方法中更改该字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i2&gt;Arguments&lt;/i2&gt; are the actual values that are passed in when the method is invoked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032333Z" creationid="pingfangx" creationdate="20180601T032303Z">
        <seg>&lt;i2&gt;Arguments（实参）&lt;/i2&gt; 是调用方法时传入的实际值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;(Person p) -&gt; p.getGender() == Person.Sex.MALE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092038Z" creationid="pingfangx" creationdate="20180706T092038Z">
        <seg>&lt;s0&gt;(Person p) -&gt; p.getGender() == Person.Sex.MALE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;@NonNull&lt;/s0&gt; String str;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040805Z" creationid="pingfangx" creationdate="20190102T035434Z">
        <seg>&lt;s0&gt;@NonNull&lt;/s0&gt; String str;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; 32.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085747Z" creationid="pingfangx" creationdate="20190103T085737Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; 32.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;a1&gt;&lt;c2&gt;Anagram&lt;/c2&gt;&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085921Z" creationid="pingfangx" creationdate="20190103T085921Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;a1&gt;&lt;c2&gt;Anagram&lt;/c2&gt;&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;a1&gt;&lt;c2&gt;ComputeInitials&lt;/c2&gt;&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085902Z" creationid="pingfangx" creationdate="20190103T085902Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;a1&gt;&lt;c2&gt;ComputeInitials&lt;/c2&gt;&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;e&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085749Z" creationid="pingfangx" creationdate="20190103T085744Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;e&lt;/c1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;hannah.charAt(15)&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085759Z" creationid="pingfangx" creationdate="20190103T085759Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;hannah.charAt(15)&lt;/c1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;hi.concat(mom)&lt;/c1&gt; and &lt;c2&gt;hi + mom&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085856Z" creationid="pingfangx" creationdate="20190103T085856Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;hi.concat(mom)&lt;/c1&gt; 和 &lt;c2&gt;hi + mom&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;isNaN&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041745Z" creationid="pingfangx" creationdate="20190103T041745Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;isNaN&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;toHexString&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041735Z" creationid="pingfangx" creationdate="20190103T041735Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;toHexString&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;valueOf&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041736Z" creationid="pingfangx" creationdate="20190103T041736Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; &lt;c1&gt;valueOf&lt;/c1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; False.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041802Z" creationid="pingfangx" creationdate="20190103T041802Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; False.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; It's 3 characters in length: &lt;c1&gt;car&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085824Z" creationid="pingfangx" creationdate="20190103T085824Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; 长度为 3 个字符：&lt;c1&gt;car&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; It's the length of the initial string + 16: 26 + 16 = 42.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085728Z" creationid="pingfangx" creationdate="20190103T085728Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; 初始字符串的长度+ 16：26 + 16 = 42。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; See &lt;a1&gt;&lt;c2&gt;Adder&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041836Z" creationid="pingfangx" creationdate="20190103T041836Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; 参见 &lt;a1&gt;&lt;c2&gt;Adder&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; See &lt;a1&gt;&lt;c2&gt;FPAdder&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041843Z" creationid="pingfangx" creationdate="20190103T041843Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; 参见 &lt;a1&gt;&lt;c2&gt;FPAdder&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; See &lt;a1&gt;&lt;c2&gt;MinVariablesDemo&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041824Z" creationid="pingfangx" creationdate="20190103T041824Z">
        <seg>&lt;s0&gt;Answer:&lt;/s0&gt; 参见 &lt;a1&gt;&lt;c2&gt;MinVariablesDemo&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt; The documentation should reflect why &lt;c1&gt;open&lt;/c1&gt; is deprecated and what to use instead.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041704Z" creationid="pingfangx" creationdate="20190102T041704Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt; 文档应该反映出为什么不推荐使用 &lt;c1&gt;open&lt;/c1&gt; 以及使用什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041811Z" creationid="pingfangx" creationdate="20190102T041801Z">
        <seg>&lt;s0&gt;答案&lt;/s0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: &lt;a1&gt;&lt;c2&gt;&lt;c3&gt;Card.java&lt;/c3&gt;&lt;/c2&gt;&lt;/a1&gt;&lt;i4/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083008Z" creationid="pingfangx" creationdate="20180705T083008Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: &lt;a1&gt;&lt;c2&gt;&lt;c3&gt;Card.java&lt;/c3&gt;&lt;/c2&gt;&lt;/a1&gt;&lt;i4/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: &lt;c1&gt;Box.AccessibleBox&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014728Z" creationid="pingfangx" creationdate="20190102T014728Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：&lt;c1&gt;Box.AccessibleBox&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: &lt;c1&gt;Box.Filler&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014723Z" creationid="pingfangx" creationdate="20190102T014723Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：&lt;c1&gt;Box.Filler&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: &lt;c1&gt;InnerClass1: getString invoked.&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014803Z" creationid="pingfangx" creationdate="20190102T014803Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：&lt;c1&gt; InnerClass1：调用了 getString。&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: &lt;c1&gt;[java.awt.]Container.AccessibleAWTContainer&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014735Z" creationid="pingfangx" creationdate="20190102T014735Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：&lt;c1&gt;[java.awt.]Container.AccessibleAWTContainer&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: &lt;c1&gt;new Box.Filler(minDimension, prefDimension, maxDimension)&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014940Z" creationid="pingfangx" creationdate="20190102T014753Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：&lt;c1&gt;new Box.Filler(minDimension, prefDimension, maxDimension)&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: A program does not explicitly destroy objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083638Z" creationid="pingfangx" creationdate="20180705T083638Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：程序不会显式销毁对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: Delete &lt;c1&gt;static&lt;/c1&gt; in front of the declaration of the &lt;c2&gt;Inner&lt;/c2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014704Z" creationid="pingfangx" creationdate="20190102T014704Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：删除 &lt;c2&gt;Inner&lt;/c2&gt; 类声明前面的 &lt;c1&gt;static&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: False.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020308Z" creationid="pingfangx" creationdate="20190102T020308Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: Here is the output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082840Z" creationid="pingfangx" creationdate="20180705T082840Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：这是输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: See &lt;a1&gt;&lt;c2&gt;&lt;c3&gt;Deck.java&lt;/c3&gt;&lt;/c2&gt;&lt;/a1&gt;&lt;i4/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083019Z" creationid="pingfangx" creationdate="20180705T083019Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: See &lt;a1&gt;&lt;c2&gt;&lt;c3&gt;Deck.java&lt;/c3&gt;&lt;/c2&gt;&lt;/a1&gt;&lt;i4/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: See &lt;a1&gt;&lt;c2&gt;&lt;c3&gt;DisplayDeck.java&lt;/c3&gt;&lt;/c2&gt;&lt;/a1&gt;&lt;i4/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083025Z" creationid="pingfangx" creationdate="20180705T083025Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: See &lt;a1&gt;&lt;c2&gt;&lt;c3&gt;DisplayDeck.java&lt;/c3&gt;&lt;/c2&gt;&lt;/a1&gt;&lt;i4/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: See &lt;a1&gt;&lt;c2&gt;Card3.java&lt;/c2&gt;&lt;/a1&gt;, &lt;a3&gt;&lt;c4&gt;Suit.java&lt;/c4&gt;&lt;/a3&gt;, and &lt;a5&gt;&lt;c6&gt;Rank.java&lt;/c6&gt;&lt;/a5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020355Z" creationid="pingfangx" creationdate="20190102T020355Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：参见 &lt;a1&gt;&lt;c2&gt;Card3.java&lt;/c2&gt;&lt;/a1&gt;，&lt;a3&gt;&lt;c4&gt;Suit.java&lt;/c4&gt;&lt;/a3&gt; 和 &lt;a5&gt;&lt;c6&gt;Rank.java&lt;/c6&gt;&lt;/a5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: See &lt;a1&gt;&lt;c2&gt;Deck3.java&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020421Z" creationid="pingfangx" creationdate="20190102T020408Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：参见 &lt;a1&gt;&lt;c2&gt;Deck3.java&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: See &lt;a1&gt;&lt;c2&gt;NumberHolderDisplay&lt;/c2&gt;&lt;/a1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083730Z" creationid="pingfangx" creationdate="20180705T083730Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：参见 &lt;a1&gt;&lt;c2&gt;NumberHolderDisplay&lt;/c2&gt;&lt;/a1&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: See &lt;a1&gt;&lt;c2&gt;SomethingIsRight&lt;/c2&gt;&lt;/a1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083717Z" creationid="pingfangx" creationdate="20180705T083717Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：参见 &lt;a1&gt;&lt;c2&gt;SomethingIsRight&lt;/c2&gt;&lt;/a1&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: See the file &lt;a1&gt;&lt;c2&gt;DataStructure.java&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015148Z" creationid="pingfangx" creationdate="20190102T015148Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：参见文件 &lt;a1&gt;&lt;c2&gt;DataStructure.java&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: The code fails to compile.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041727Z" creationid="pingfangx" creationdate="20190102T041727Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：代码无法编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: The code never creates a &lt;a1&gt;&lt;c2&gt;Rectangle&lt;/c2&gt;&lt;/a1&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083453Z" creationid="pingfangx" creationdate="20180705T083453Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：代码永远不会创建 &lt;a1&gt;&lt;c2&gt;Rectangle&lt;/c2&gt;&lt;/a1&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: There is one reference to the &lt;c1&gt;students&lt;/c1&gt; array and that array has one reference to the string &lt;c2&gt;Peter Smith&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083538Z" creationid="pingfangx" creationdate="20180705T083538Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：有一个对 &lt;c1&gt;students&lt;/c1&gt; 数组的引用，该数组有一个对字符串 &lt;c2&gt;Peter Smith&lt;/c2&gt; 的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: You can deprecate the implementation of &lt;c1&gt;open&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041717Z" creationid="pingfangx" creationdate="20190102T041717Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;：您可以弃用 &lt;c1&gt;open&lt;/c1&gt; 的实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: x</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082825Z" creationid="pingfangx" creationdate="20180705T082825Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: x</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: y</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082828Z" creationid="pingfangx" creationdate="20180705T082828Z">
        <seg>&lt;s0&gt;Answer&lt;/s0&gt;: y</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Application Programming Interface (API)&lt;/s0&gt;: The API provides the core functionality of the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033630Z" creationid="pingfangx" creationdate="20180518T033630Z">
        <seg>&lt;s0&gt;Application Programming Interface (API)&lt;/s0&gt;：API 提供了 Java 编程语言的核心功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Avoid platform dependencies&lt;/s0&gt;: You can keep your program portable by avoiding the use of libraries written in other languages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033816Z" creationid="pingfangx" creationdate="20180518T033816Z">
        <seg>&lt;s0&gt;Avoid platform dependencies&lt;/s0&gt;：您可以通过避免使用其他语言编写的库来保持程序的可移植性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Class Variables (Static Fields)&lt;/s0&gt; A &lt;i1&gt;class variable&lt;/i1&gt; is any field declared with the &lt;c2&gt;static&lt;/c2&gt; modifier; this tells the compiler that there is exactly one copy of this variable in existence, regardless of how many times the class has been instantiated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073436Z" creationid="pingfangx" creationdate="20180518T073436Z">
        <seg>&lt;s0&gt;Class Variables (Static Fields)类变量（静态字段）&lt;/s0&gt; &lt;i1&gt;class variable（类变量）&lt;/i1&gt; 是用 &lt;c2&gt;static&lt;/c2&gt; 修饰符声明的任何字段;这告诉编译器，这个变量只有一个副本存在，而不管该类实例化了多少次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Consumer&lt;Person&gt; block&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094106Z" creationid="pingfangx" creationdate="20180706T094106Z">
        <seg>&lt;s0&gt;Consumer&lt;Person&gt; block&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Declaration&lt;/s0&gt;: The code set in &lt;s1&gt;bold&lt;/s1&gt; are all variable declarations that associate a variable name with an object type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042326Z" creationid="pingfangx" creationdate="20180601T042326Z">
        <seg>&lt;s0&gt;Declaration（声明）&lt;/s0&gt;：&lt;s1&gt;加粗&lt;/s1&gt; 中设置的代码都是将变量名与对象类型相关联的变量声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Definition:&lt;/s0&gt; Two of the components of a method declaration comprise the &lt;i1&gt;method signature&lt;/i1&gt;the method's name and the parameter types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065948Z" creationid="pingfangx" creationdate="20180525T065053Z">
        <seg>&lt;s0&gt;定义：&lt;/s0&gt; 方法声明的两个组件构成 &lt;i1&gt;method signature（方法签名）&lt;/i1&gt;方法名称和参数类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Definitions:&lt;/s0&gt; A class that is derived from another class is called a &lt;i1&gt;subclass&lt;/i1&gt; (also a &lt;i2&gt;derived class&lt;/i2&gt;, &lt;i3&gt;extended class&lt;/i3&gt;, or &lt;i4&gt;child class&lt;/i4&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T080131Z" creationid="pingfangx" creationdate="20190102T080131Z">
        <seg>&lt;s0&gt;Definitions:&lt;/s0&gt; 从另一个类派生的类称为 &lt;i1&gt;subclass&lt;/i1&gt;(也是 &lt;i2&gt;derived class&lt;/i2&gt;，&lt;i3&gt;extended class&lt;/i3&gt; ，或 &lt;i4&gt;child class&lt;/i4&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Deployment Technologies&lt;/s0&gt;: The JDK software provides standard mechanisms such as the Java Web Start software and Java Plug-In software for deploying your applications to end users.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033655Z" creationid="pingfangx" creationdate="20180518T033655Z">
        <seg>&lt;s0&gt;Deployment Technologies&lt;/s0&gt;：JDK 软件提供标准机制，例如用于将应用程序部署到最终用户的 Java Web Start 软件和 Java Plug-In 软件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Develop programs more quickly&lt;/s0&gt;: The Java programming language is simpler than C++, and as such, your development time could be up to twice as fast when writing in it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033811Z" creationid="pingfangx" creationdate="20180518T033811Z">
        <seg>&lt;s0&gt;Develop programs more quickly&lt;/s0&gt;：Java 编程语言比 C ++更简单，因此编写它时，开发时间可能会快两倍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Development Tools&lt;/s0&gt;: The development tools provide everything you'll need for compiling, running, monitoring, debugging, and documenting your applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033619Z" creationid="pingfangx" creationdate="20180518T033619Z">
        <seg>&lt;s0&gt;Development Tools&lt;/s0&gt;：开发工具提供编译，运行，监控，调试和记录应用程序所需的一切。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Distribute software more easily&lt;/s0&gt;: With Java Web Start software, users will be able to launch your applications with a single click of the mouse.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033820Z" creationid="pingfangx" creationdate="20180518T033820Z">
        <seg>&lt;s0&gt;Distribute software more easily&lt;/s0&gt;：使用 Java Web Start 软件，用户只需单击一下鼠标即可启动您的应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; An anagram is a word or a phrase made by transposing the letters of another word or phrase; for example, "parliament" is an anagram of "partial men," and "software" is an anagram of "swear oft." Write a program that figures out whether one string is an anagram of another string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085920Z" creationid="pingfangx" creationdate="20190103T085920Z">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; 变位词（anagram）是通过转换另一个单词或短语的字母而形成的单词或短语;例如，"parliament" 是 "partial men" 的变位词，"software" 是 "swear oft" 的变位词。编写一个程序，确定一个字符串是否是另一个字符串的变位词。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; Change &lt;a1&gt;&lt;c2&gt;MaxVariablesDemo&lt;/c2&gt;&lt;/a1&gt; to show minimum values instead of maximum values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041813Z" creationid="pingfangx" creationdate="20190103T041813Z">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; 更改 &lt;a1&gt;&lt;c2&gt;MaxVariablesDemo&lt;/c2&gt;&lt;/a1&gt; 以显示最小值而不是最大值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; Create a program that is similar to the previous one but has the following differences:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041839Z" creationid="pingfangx" creationdate="20190103T041839Z">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; 创建一个与前一个类似但有以下区别的程序：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; Create a program that reads an unspecified number of integer arguments from the command line and adds them together.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041831Z" creationid="pingfangx" creationdate="20190103T041831Z">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; 创建一个程序，从命令行读取未指定数量的整数参数，并将它们一起添加。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; Show two ways to concatenate the following two strings together to get the string &lt;c1&gt;"Hi, mom."&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085853Z" creationid="pingfangx" creationdate="20190103T085853Z">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; 显示两种方法将以下两个字符串连接在一起以获取字符串 &lt;c1&gt;"Hi, mom."&lt;/c1&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; Use braces &lt;c1&gt;{&lt;/c1&gt; and &lt;c2&gt;}&lt;/c2&gt; to further clarify the code and reduce the possibility of errors by future maintainers of the code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091643Z" creationid="pingfangx" creationdate="20180521T091643Z">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; 使用大括号 &lt;c1&gt;{&lt;/c1&gt; 和 &lt;c2&gt;}&lt;/c2&gt; 来进一步阐明代码并减少未来代码维护人员发生错误的可能性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; Using only spaces and line breaks, reformat the code snippet to make the control flow easier to understand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091634Z" creationid="pingfangx" creationdate="20180521T091634Z">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; 仅使用空格和换行符，重新设置代码片段的格式以使控制流程更易于理解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; What output do you think the code will produce if &lt;c1&gt;aNumber&lt;/c1&gt; is 3?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091420Z" creationid="pingfangx" creationdate="20180521T091420Z">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; 如果 &lt;c1&gt;aNumber&lt;/c1&gt; 是 3，您认为代码会产生什么输出？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; Write a program that computes your initials from your full name and displays them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085900Z" creationid="pingfangx" creationdate="20190103T085900Z">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; 编写一个程序，用您的全名计算首字母并显示它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; Write a test program containing the previous code snippet; make &lt;c1&gt;aNumber&lt;/c1&gt; 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091448Z" creationid="pingfangx" creationdate="20180521T091448Z">
        <seg>&lt;s0&gt;Exercise:&lt;/s0&gt; 编写一个包含前面代码片段的测试程序; 使 &lt;c1&gt;aNumber&lt;/c1&gt; 为3。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;: Define an annotation type for an enhancement request with elements &lt;c1&gt;id&lt;/c1&gt;, &lt;c2&gt;synopsis&lt;/c2&gt;, &lt;c3&gt;engineer&lt;/c3&gt;, and &lt;c4&gt;date&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041749Z" creationid="pingfangx" creationdate="20190102T041749Z">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;：为元素 &lt;c1&gt;id&lt;/c1&gt;，&lt;c2&gt;synopsis&lt;/c2&gt;，&lt;c3&gt;engineer&lt;/c3&gt; 和 &lt;c4&gt;date&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;: Fix the program called &lt;c1&gt;SomethingIsWrong&lt;/c1&gt; shown in Question 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083713Z" creationid="pingfangx" creationdate="20180705T083713Z">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;：修复问题 1 中所示的名为 &lt;c1&gt;SomethingIsWrong&lt;/c1&gt; 的程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;: Get the file &lt;a1&gt;&lt;c2&gt;Class1.java&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014758Z" creationid="pingfangx" creationdate="20190102T014758Z">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;：获取文件 &lt;a1&gt;&lt;c2&gt;Class1.java&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;: Given the following class, called &lt;a1&gt;&lt;c2&gt;NumberHolder&lt;/c2&gt;&lt;/a1&gt;, write some code that creates an instance of the class, initializes its two member variables, and then displays the value of each member variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083726Z" creationid="pingfangx" creationdate="20180705T083726Z">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;：给定以下类，名为 &lt;a1&gt;&lt;c2&gt;NumberHolder&lt;/c2&gt;&lt;/a1&gt;，编写一些创建类实例的代码，初始化其两个成员变量，然后显示每个成员变量的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;: Rewrite the &lt;c1&gt;Deck&lt;/c1&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020358Z" creationid="pingfangx" creationdate="20190102T020358Z">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;：重写 &lt;c1&gt;Deck&lt;/c1&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;: Rewrite the class &lt;c1&gt;Card&lt;/c1&gt; from the exercise in &lt;a2&gt;Questions and Exercises: Classes&lt;/a2&gt; so that it represents the rank and suit of a card with enum types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020346Z" creationid="pingfangx" creationdate="20190102T020346Z">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;：从 &lt;a2&gt;Questions and Exercises: Classes&lt;/a2&gt; 中的练习中重写类 &lt;c1&gt;Card&lt;/c1&gt;，使其代表具有枚举类型的卡片的等级和套装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;: The following exercises involve modifying the class &lt;a1&gt;&lt;c2&gt;DataStructure.java&lt;/c2&gt;&lt;/a1&gt;, which the section &lt;a3&gt;Inner Class Example&lt;/a3&gt; discusses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014815Z" creationid="pingfangx" creationdate="20190102T014815Z">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;：以下练习涉及修改类 &lt;a1&gt;&lt;c2&gt;DataStructure.java&lt;/c2&gt;&lt;/a1&gt;，&lt;a3&gt;Inner Class Example&lt;/a3&gt; 讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;: Write a class whose instances represent a single playing card from a deck of cards.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083000Z" creationid="pingfangx" creationdate="20180705T083000Z">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;：写一个类，其实例代表一副牌中的单张扑克牌。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;: Write a class whose instances represents a &lt;b1&gt;full&lt;/b1&gt; deck of cards.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083017Z" creationid="pingfangx" creationdate="20180705T083017Z">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;：编写一个实例代表 &lt;b1&gt;full&lt;/b1&gt; 卡片组的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;: Write a small program to test your deck and card classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083023Z" creationid="pingfangx" creationdate="20180705T083023Z">
        <seg>&lt;s0&gt;Exercise&lt;/s0&gt;：编写一个小程序来测试你的套牌和卡片类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Get started quickly&lt;/s0&gt;: Although the Java programming language is a powerful object-oriented language, it's easy to learn, especially for programmers already familiar with C or C++.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033759Z" creationid="pingfangx" creationdate="20180518T033759Z">
        <seg>&lt;s0&gt;Get started quickly&lt;/s0&gt;：尽管 Java 编程语言是一种功能强大的面向对象语言，但它很容易学习，特别是对于已经熟悉 C 或 C ++的程序员而言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Hint:&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082601Z" creationid="pingfangx" creationdate="20180705T082601Z">
        <seg>&lt;s0&gt;提示：&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Hint&lt;/s0&gt;: Create two methods in the class &lt;c1&gt;DataStructure&lt;/c1&gt; named &lt;c2&gt;isEvenIndex&lt;/c2&gt; and &lt;c3&gt;isOddIndex&lt;/c3&gt; that have the same parameter list and return type as the abstract method &lt;c4&gt;Boolean Function&lt;Integer, Boolean&gt;.apply(Integer t)&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015139Z" creationid="pingfangx" creationdate="20190102T015139Z">
        <seg>&lt;s0&gt;Hint&lt;/s0&gt;：在类 &lt;c1&gt;DataStructure&lt;/c1&gt; 中创建名为 &lt;c2&gt;isEvenIndex&lt;/c2&gt; 和 &lt;c3&gt;isOddIndex&lt;/c3&gt; 的两个方法，它们具有相同的参数列表和返回类型作为抽象方法 &lt;c4&gt;Boolean Function&lt;Integer, Boolean&gt;.apply(Integer t)&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Hint&lt;/s0&gt;: In this &lt;c1&gt;print&lt;/c1&gt; method, you can step though the elements contained in the array &lt;c2&gt;arrayOfInts&lt;/c2&gt; with a &lt;c3&gt;for&lt;/c3&gt; expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015006Z" creationid="pingfangx" creationdate="20190102T015006Z">
        <seg>&lt;s0&gt;Hint&lt;/s0&gt;：在此 &lt;c1&gt;print&lt;/c1&gt; 方法中，您可以使用 &lt;c3&gt;for&lt;/c3&gt; 表达式逐步执行数组 &lt;c2&gt;arrayOfInts&lt;/c2&gt; 中包含的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Hint&lt;/s0&gt;: These statements do not compile if you specify them in the &lt;c1&gt;main&lt;/c1&gt; method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014822Z" creationid="pingfangx" creationdate="20190102T014822Z">
        <seg>&lt;s0&gt;Hint&lt;/s0&gt;：如果在 &lt;c1&gt;main&lt;/c1&gt; 方法中指定它们，则不会编译这些语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Hint&lt;/s0&gt;: You cannot access the private members &lt;c1&gt;SIZE&lt;/c1&gt; and &lt;c2&gt;arrayOfInts&lt;/c2&gt; outside the class &lt;c3&gt;DataStructure&lt;/c3&gt;, which means that you cannot access these private members from an anonymous class defined outside &lt;c4&gt;DataStructure&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014955Z" creationid="pingfangx" creationdate="20190102T014955Z">
        <seg>&lt;s0&gt;Hint&lt;/s0&gt;：您无法访问类 &lt;c3&gt;DataStructure&lt;/c3&gt; 之外的私有成员 &lt;c1&gt;SIZE&lt;/c1&gt; 和 &lt;c2&gt;arrayOfInts&lt;/c2&gt;，这意味着您无法访问这些私有成员来自 &lt;c4&gt;DataStructure&lt;/c4&gt; 之外定义的匿名类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Initialization&lt;/s0&gt;: The &lt;t1&gt;new&lt;/t1&gt; operator is followed by a call to a constructor, which initializes the new object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042404Z" creationid="pingfangx" creationdate="20180601T042404Z">
        <seg>&lt;s0&gt;Initialization（初始化）&lt;/s0&gt;：&lt;t1&gt;new&lt;/t1&gt; 操作符后面是对构造函数的调用，该构造函数初始化新对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Instance Variables (Non-Static Fields)&lt;/s0&gt; Technically speaking, objects store their individual states in "non-static fields", that is, fields declared without the &lt;c1&gt;static&lt;/c1&gt; keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073302Z" creationid="pingfangx" creationdate="20180518T073302Z">
        <seg>&lt;s0&gt;Instance Variables (Non-Static Fields) 实例变量（非静态字段）&lt;/s0&gt; 从技术上讲，对象将它们各自的状态存储在 "非静态字段" 中，即在没有 &lt;c1&gt;static&lt;/c1&gt; 关键字的情况下声明的字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Instantiation&lt;/s0&gt;: The &lt;t1&gt;new&lt;/t1&gt; keyword is a Java operator that creates the object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042343Z" creationid="pingfangx" creationdate="20180601T042343Z">
        <seg>&lt;s0&gt;Instantiation（实例化）&lt;/s0&gt;：&lt;t1&gt;new&lt;/t1&gt; 关键字是创建该对象的 Java 运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Integration Libraries&lt;/s0&gt;: Integration libraries such as the Java IDL API, JDBC API, Java Naming and Directory Interface (JNDI) API, Java RMI, and Java Remote Method Invocation over Internet Inter-ORB Protocol Technology (Java RMI-IIOP Technology) enable database access and manipulation of remote objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033721Z" creationid="pingfangx" creationdate="20180518T033721Z">
        <seg>&lt;s0&gt;Integration Libraries&lt;/s0&gt;：集成库，如 Java IDL API，JDBC API，Java 命名和目录接口(JNDI)API，Java RMI 和通过 Internet Inter-ORB 协议技术的 Java 远程方法调用(Java RMI -IIOP 技术)支持数据库访问和操作远程对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;It can lead to more readable and maintainable code&lt;/s0&gt;: Nesting small classes within top-level classes places the code closer to where it is used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090949Z" creationid="pingfangx" creationdate="20180705T090949Z">
        <seg>&lt;s0&gt;它可以导致更可读和可维护的代码&lt;/s0&gt;：在顶级类中嵌套小类会使代码更接近于使用它的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;It increases encapsulation&lt;/s0&gt;: Consider two top-level classes, A and B, where B needs access to members of A that would otherwise be declared &lt;c1&gt;private&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T092342Z" creationid="pingfangx" creationdate="20180705T090907Z">
        <seg>&lt;s0&gt;增加封装&lt;/s0&gt;：考虑两个顶级类 A 和 B，其中 B 需要访问 A 的声明为 &lt;c1&gt;private&lt;/c1&gt;成员，。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;It is a way of logically grouping classes that are only used in one place&lt;/s0&gt;: If a class is useful to only one other class, then it is logical to embed it in that class and keep the two together.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T092236Z" creationid="pingfangx" creationdate="20180705T090811Z">
        <seg>&lt;s0&gt;这是一种对仅在一个地方使用的类的逻辑分组方法&lt;/s0&gt;：如果一个类只对另一个类有用，那么将它嵌入该类并将两者保持在一起是合乎逻辑的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Local Variables&lt;/s0&gt; Similar to how an object stores its state in fields, a method will often store its temporary state in &lt;i1&gt;local variables&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073547Z" creationid="pingfangx" creationdate="20180518T073547Z">
        <seg>&lt;s0&gt;Local Variables（局部变量）&lt;/s0&gt; 类似于一个对象如何在字段中存储它的状态，一个方法通常会将它的临时状态存储在 &lt;i1&gt;local variables&lt;/i1&gt; 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034803Z" creationid="pingfangx" creationdate="20180518T034803Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;  The discussion in this section covers just the basics of the &lt;c1&gt;format&lt;/c1&gt; and &lt;c2&gt;printf&lt;/c2&gt; methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033631Z" creationid="pingfangx" creationdate="20190103T033631Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 本节中的讨论仅涵盖 &lt;c1&gt;format&lt;/c1&gt; 和 &lt;c2&gt;printf&lt;/c2&gt; 方法的基础知识。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; &lt;c1&gt;CharSequence&lt;/c1&gt; is an interface that is implemented by the &lt;c2&gt;String&lt;/c2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073518Z" creationid="pingfangx" creationdate="20190103T073518Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; &lt;c1&gt;CharSequence&lt;/c1&gt; 是由 &lt;c2&gt;String&lt;/c2&gt; 类实现的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; &lt;i1&gt;All&lt;/i1&gt; enums implicitly extend &lt;c2&gt;java.lang.Enum&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015546Z" creationid="pingfangx" creationdate="20190102T015546Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; &lt;i1&gt;所有&lt;/i1&gt; 枚举隐式继承 &lt;c2&gt;java.lang.Enum&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; &lt;i1&gt;Parameters&lt;/i1&gt; refers to the list of variables in a method declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032314Z" creationid="pingfangx" creationdate="20180601T032252Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; &lt;i1&gt;Parameters（形参）&lt;/i1&gt; 是指方法声明中的变量列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; A static nested class interacts with the instance members of its outer class (and other classes) just like any other top-level class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091023Z" creationid="pingfangx" creationdate="20180705T091023Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 静态嵌套类与其外部类(和其他类)的实例成员交互，就像任何其他顶级类一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; Each of the &lt;c1&gt;Number&lt;/c1&gt; subclasses that wrap primitive numeric types also provides a &lt;c2&gt;parseXXXX()&lt;/c2&gt; method (for example, &lt;c3&gt;parseFloat()&lt;/c3&gt;) that can be used to convert strings to primitive numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065236Z" creationid="pingfangx" creationdate="20190103T065236Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 包装基本数字类型的每个 &lt;c1&gt;Number&lt;/c1&gt; 子类还提供 &lt;c2&gt;parseXXXX()&lt;/c2&gt; 方法（例如，&lt;c3&gt;parseFloat()&lt;/c3&gt;）可用于将字符串转换为基本数字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; If a constructor does not explicitly invoke a superclass constructor, the Java compiler automatically inserts a call to the no-argument constructor of the superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095554Z" creationid="pingfangx" creationdate="20190102T095554Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 如果构造函数没有显式调用超类构造函数，Java 编译器会自动插入对超类的无参数构造函数的调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; If a primitive type or a string is defined as a constant and the value is known at compile time, the compiler replaces the constant name everywhere in the code with its value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065456Z" creationid="pingfangx" creationdate="20180705T065456Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 如果将基本类型或字符串定义为常量并且该值在编译时已知，则编译器会将代码中的常量名称替换为其值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; If another class cannot call a &lt;c1&gt;MyClass&lt;/c1&gt; constructor, it cannot directly create &lt;c2&gt;MyClass&lt;/c2&gt; objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180529T065441Z" creationid="pingfangx" creationdate="20180529T065441Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 如果另一个类不能调用 &lt;c1&gt;MyClass&lt;/c1&gt; 构造函数，它不能直接创建 &lt;c2&gt;MyClass&lt;/c2&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; If you override &lt;c1&gt;equals()&lt;/c1&gt;, you must override &lt;c2&gt;hashCode()&lt;/c2&gt; as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102944Z" creationid="pingfangx" creationdate="20190102T102944Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 如果覆盖 &lt;c1&gt;equals()&lt;/c1&gt;，则还必须覆盖 &lt;c2&gt;hashCode()&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; If you want to pass a method into a method, then use a &lt;a1&gt;lambda expression&lt;/a1&gt; or a &lt;a2&gt;method reference&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032710Z" creationid="pingfangx" creationdate="20180601T032710Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 如果要将方法传递给方法，请使用 &lt;a1&gt;lambda expression&lt;/a1&gt; 或 &lt;a2&gt;method reference&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; In a subclass, you can overload the methods inherited from the superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092730Z" creationid="pingfangx" creationdate="20190102T092730Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 在子类中，您可以重载从超类继承的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; It is not necessary to declare fields at the beginning of the class definition, although this is the most common practice.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065854Z" creationid="pingfangx" creationdate="20180705T065854Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 虽然这是最常见的做法，但没有必要在类定义的开头声明字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; Methods in an &lt;i1&gt;interface&lt;/i1&gt; (see the &lt;a2&gt;Interfaces&lt;/a2&gt; section) that are not declared as default or static are &lt;i3&gt;implicitly&lt;/i3&gt; abstract, so the &lt;c4&gt;abstract&lt;/c4&gt; modifier is not used with interface methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T020152Z" creationid="pingfangx" creationdate="20190103T020152Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; &lt;i1&gt;interface&lt;/i1&gt; 中的方法(参见 &lt;a2&gt;Interfaces&lt;/a2&gt; 部分)，如果未声明为 default 或 static ，则都&lt;i3&gt;隐式（implicitly）&lt;/i3&gt; 抽象，因此 &lt;c4&gt;abstract&lt;/c4&gt; 修饰符不用于接口方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; Overloaded methods should be used sparingly, as they can make code much less readable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065527Z" creationid="pingfangx" creationdate="20180525T065527Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 应该谨慎使用重载的方法，因为它们会使代码更不易读。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; The &lt;c1&gt;Character&lt;/c1&gt; class is immutable, so that once it is created, a &lt;c2&gt;Character&lt;/c2&gt; object cannot be changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062049Z" creationid="pingfangx" creationdate="20190103T062049Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; &lt;c1&gt;Character&lt;/c1&gt; 类是不可变的，因此一旦创建，就无法更改 &lt;c2&gt;Character&lt;/c2&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; The &lt;c1&gt;String&lt;/c1&gt; class is immutable, so that once it is created a &lt;c2&gt;String&lt;/c2&gt; object cannot be changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063516Z" creationid="pingfangx" creationdate="20190103T063516Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; &lt;c1&gt;String&lt;/c1&gt; 类是不可变的，因此一旦创建，就无法更改 &lt;c2&gt;String&lt;/c2&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; The &lt;c1&gt;isLargerThan&lt;/c1&gt; method, as defined in the &lt;c2&gt;Relatable&lt;/c2&gt; interface, takes an object of type &lt;c3&gt;Relatable&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062221Z" creationid="pingfangx" creationdate="20190102T062221Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; &lt;c1&gt;isLargerThan&lt;/c1&gt; 方法，如 &lt;c2&gt;Relatable&lt;/c2&gt; 接口中所定义，采用 &lt;c3&gt;Relatable&lt;/c3&gt; 类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; The Java programming language does not permit literal strings to span lines in source files, so you must use the &lt;c1&gt;+&lt;/c1&gt; concatenation operator at the end of each line in a multi-line string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064551Z" creationid="pingfangx" creationdate="20190103T064551Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; Java 编程语言不允许文字字符串跨越源文件中的行，因此必须在多行的字符串的每行末尾使用 &lt;c1&gt;+&lt;/c1&gt; 连接运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; The constructor for an enum type must be package-private or private access.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015901Z" creationid="pingfangx" creationdate="20190102T015901Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 枚举类型的构造函数必须是包私有或私有访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; The methods in the following &lt;c1&gt;Filename&lt;/c1&gt; class don't do any error checking and assume that their argument contains a full directory path and a filename with an extension.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074918Z" creationid="pingfangx" creationdate="20190103T074918Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 以下 &lt;c1&gt;Filename&lt;/c1&gt; 类中的方法不进行任何错误检查，并假设其参数包含完整目录路径和带扩展名的文件名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; The phrase "instantiating a class" means the same thing as "creating an object." When you create an object, you are creating an "instance" of a class, therefore "instantiating" a class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042953Z" creationid="pingfangx" creationdate="20180601T042953Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 短语 "实例化类" 与 "创建对象" 意思相同。当你创建一个对象时，你正在创建一个类的 "实例"，因而 " 实例化"一个类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; There are four other subclasses of &lt;c1&gt;Number&lt;/c1&gt; that are not discussed here.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030151Z" creationid="pingfangx" creationdate="20190103T030151Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 此处未讨论 &lt;c1&gt;Number&lt;/c1&gt; 的其他四个子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; There are some subtle aspects to a number of these methods, especially the &lt;c1&gt;clone&lt;/c1&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101108Z" creationid="pingfangx" creationdate="20190102T101108Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 许多方法都有一些微妙的方面，尤其是 &lt;c1&gt;clone&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; There is also a &lt;c1&gt;StringBuffer&lt;/c1&gt; class that is &lt;i2&gt;exactly&lt;/i2&gt; the same as the &lt;c3&gt;StringBuilder&lt;/c3&gt; class, except that it is thread-safe by virtue of having its methods synchronized.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083116Z" creationid="pingfangx" creationdate="20190103T083040Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 还有一个 &lt;c1&gt;StringBuffer&lt;/c1&gt; 类与 &lt;c3&gt;StringBuilder&lt;/c3&gt; &lt;i2&gt;完全&lt;/i2&gt;相同，除了它是通过使其方法同步来实现线程安全。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; To actually compile the &lt;c1&gt;ACMEBicycle&lt;/c1&gt; class, you'll need to add the &lt;c2&gt;public&lt;/c2&gt; keyword to the beginning of the implemented interface methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064155Z" creationid="pingfangx" creationdate="20180518T064155Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 要实际编译 &lt;c1&gt;ACMEBicycle&lt;/c1&gt; 类，您需要将 &lt;c2&gt;public&lt;/c2&gt; 关键字添加到实现的接口方法的开头。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; To make the information in &lt;c1&gt;@ClassPreamble&lt;/c1&gt; appear in Javadoc-generated documentation, you must annotate the &lt;c2&gt;@ClassPreamble&lt;/c2&gt; definition with the &lt;c3&gt;@Documented&lt;/c3&gt; annotation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025854Z" creationid="pingfangx" creationdate="20190102T025220Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 要使 &lt;c1&gt;@ClassPreamble&lt;/c1&gt; 中的信息出现在 Javadoc 生成的文档中，您必须使用 &lt;c3&gt;@Documented&lt;/c3&gt; 来注解 &lt;c2&gt;@ClassPreamble&lt;/c2&gt; 的定义：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; Type all code, commands, and file names exactly as shown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034557Z" creationid="pingfangx" creationdate="20180518T034557Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 完全按照所示键入所有代码，命令和文件名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; Using the &lt;a1&gt;&lt;c2&gt;static import&lt;/c2&gt; &lt;/a1&gt;language feature, you don't have to write &lt;c3&gt;Math&lt;/c3&gt; in front of every math function:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035323Z" creationid="pingfangx" creationdate="20190103T035323Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 使用 &lt;a1&gt;&lt;c2&gt;static import&lt;/c2&gt; &lt;/a1&gt; 语言功能，您不必在每个数学前面写 &lt;c3&gt;Math&lt;/c3&gt; 功能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; You also can use interface names as return types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092148Z" creationid="pingfangx" creationdate="20180601T092148Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 您也可以使用接口名称作为返回类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; You can also refer to static fields with an object reference like</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043125Z" creationid="pingfangx" creationdate="20180607T043125Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 您也可以使用对象引用来引用静态字段，像</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; You can also refer to static methods with an object reference like</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T054931Z" creationid="pingfangx" creationdate="20180607T054931Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 你也可以使用类似的对象引用来引用静态方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; You can make a logical test as to the type of a particular object using the &lt;c1&gt;instanceof&lt;/c1&gt; operator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083748Z" creationid="pingfangx" creationdate="20190102T083748Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 您可以使用 &lt;c1&gt;instanceof&lt;/c1&gt; 运算符对特定对象的类型进行逻辑测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; You can use any &lt;c1&gt;String&lt;/c1&gt; method on a &lt;c2&gt;StringBuilder&lt;/c2&gt; object by first converting the string builder to a string with the &lt;c3&gt;toString()&lt;/c3&gt; method of the &lt;c4&gt;StringBuilder&lt;/c4&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082517Z" creationid="pingfangx" creationdate="20190103T082301Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 您可以在 &lt;c2&gt;StringBuilder&lt;/c2&gt; 对象上使用任何 &lt;c1&gt;String&lt;/c1&gt; 方法，只需先使用 &lt;c4&gt;StringBuilder&lt;/c4&gt; 类的 &lt;c3&gt;toString()&lt;/c3&gt; 方法将  string builder 转为 string。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note&lt;/s0&gt;: Static methods in interfaces are never inherited.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092217Z" creationid="pingfangx" creationdate="20190102T092217Z">
        <seg>&lt;s0&gt;Note&lt;/s0&gt;：接口中的静态方法永远不会被继承。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note&lt;/s0&gt;: This example checks if the expression in the &lt;c1&gt;switch&lt;/c1&gt; statement is &lt;c2&gt;null&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082657Z" creationid="pingfangx" creationdate="20180521T082657Z">
        <seg>&lt;s0&gt;Note&lt;/s0&gt;：本示例检查 &lt;c1&gt;switch&lt;/c1&gt; 语句中的表达式是否为 &lt;c2&gt;null&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note&lt;/s0&gt;: When you implement an interface, there is no constructor, so you use an empty pair of parentheses, as in this example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061652Z" creationid="pingfangx" creationdate="20180706T061652Z">
        <seg>&lt;s0&gt;Note&lt;/s0&gt;：实现接口时，没有构造函数，因此您使用一对空括号，如本例所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Parameters&lt;/s0&gt; You've already seen examples of parameters, both in the &lt;c1&gt;Bicycle&lt;/c1&gt; class and in the &lt;c2&gt;main&lt;/c2&gt; method of the "Hello World!" application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075139Z" creationid="pingfangx" creationdate="20180518T073721Z">
        <seg>&lt;s0&gt;Parameters（参数）&lt;/s0&gt; 您已经在 &lt;c1&gt;Bicycle&lt;/c1&gt; 类和 "Hello World！" 应用的 &lt;c2&gt;main&lt;/c2&gt; 方法中看到了参数示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Point originOne&lt;/s0&gt; = new Point(23, 94);
&lt;s1&gt;Rectangle rectOne&lt;/s1&gt; = new Rectangle(originOne, 100, 200);
&lt;s2&gt;Rectangle rectTwo&lt;/s2&gt; = new Rectangle(50, 100);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042046Z" creationid="pingfangx" creationdate="20180601T042046Z">
        <seg>&lt;s0&gt;Point originOne&lt;/s0&gt; = new Point(23, 94);
&lt;s1&gt;Rectangle rectOne&lt;/s1&gt; = new Rectangle(originOne, 100, 200);
&lt;s2&gt;Rectangle rectTwo&lt;/s2&gt; = new Rectangle(50, 100);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; Explain the following code sample: &lt;c1&gt;result = someCondition ?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073309Z" creationid="pingfangx" creationdate="20180521T073309Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 解释下面的代码示例：&lt;c1&gt;result = someCondition ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; How do you write an infinite loop using the &lt;c1&gt;for&lt;/c1&gt; statement?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091336Z" creationid="pingfangx" creationdate="20180521T091336Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 你如何使用 &lt;c1&gt;for&lt;/c1&gt; 语句编写无限循环？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; How do you write an infinite loop using the &lt;c1&gt;while&lt;/c1&gt; statement?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091410Z" creationid="pingfangx" creationdate="20180521T091410Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 如何使用 &lt;c1&gt;while&lt;/c1&gt; 语句编写无限循环？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; How long is the string returned by the following expression?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085805Z" creationid="pingfangx" creationdate="20190103T085805Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 以下表达式返回的字符串有多长？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; In the following program, called &lt;a1&gt;&lt;c2&gt;ComputeResult&lt;/c2&gt;&lt;/a1&gt;, what is the value of &lt;c3&gt;result&lt;/c3&gt; after each numbered line executes?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085844Z" creationid="pingfangx" creationdate="20190103T085844Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 在以下程序中，名为 &lt;a1&gt;&lt;c2&gt;ComputeResult&lt;/c2&gt;&lt;/a1&gt;，每个编号行执行后 &lt;c3&gt;result&lt;/c3&gt; 的值是多少？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; To invert the value of a &lt;c1&gt;boolean&lt;/c1&gt;, which operator would you use?&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073128Z" creationid="pingfangx" creationdate="20180521T073128Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 要反转 &lt;c1&gt;boolean&lt;/c1&gt; 的值，您将使用哪个运算符？&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; What &lt;c1&gt;Integer&lt;/c1&gt; method can you use to convert an &lt;c2&gt;int&lt;/c2&gt; into a string that expresses the number in hexadecimal?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041717Z" creationid="pingfangx" creationdate="20190103T041717Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 您可以使用什么 &lt;c1&gt;Integer&lt;/c1&gt; 方法将 &lt;c2&gt;int&lt;/c2&gt; 转换为表示十六进制数字的字符串？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; What Double method can you use to detect whether a floating-point number has the special value Not a Number (&lt;c1&gt;NaN&lt;/c1&gt;)?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041744Z" creationid="pingfangx" creationdate="20190103T041744Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 您可以使用什么 Double 方法来检测浮点数是否具有特殊值 Not a Number(&lt;c1&gt;NaN&lt;/c1&gt;)？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; What are the final values of &lt;c1&gt;i&lt;/c1&gt; and &lt;c2&gt;n&lt;/c2&gt; if instead of using the postfix increment operator (&lt;c3&gt;i++&lt;/c3&gt;), you use the prefix version (&lt;c4&gt;++i)&lt;/c4&gt;)?&lt;br5/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073516Z" creationid="pingfangx" creationdate="20180521T073112Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 如果不是使用后缀递增运算符（&lt;c3&gt;i++&lt;/c3&gt;），而使用前缀版本（&lt;c4&gt;++i&lt;/c4&gt;），&lt;c1&gt;i&lt;/c1&gt; 和 &lt;c2&gt;n&lt;/c2&gt; 的最终值是什么？&lt;br5/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; What are the values of &lt;c1&gt;i&lt;/c1&gt; and &lt;c2&gt;n&lt;/c2&gt; after the code is executed?&lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073008Z" creationid="pingfangx" creationdate="20180521T073008Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 代码执行后，&lt;c1&gt;i&lt;/c1&gt; 和 &lt;c2&gt;n&lt;/c2&gt; 的值是多少？&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; What is the initial capacity of the following string builder?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085709Z" creationid="pingfangx" creationdate="20190103T085709Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 以下字符串生成器的初始容量是多少？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; What is the value displayed by the expression &lt;c1&gt;hannah.length()&lt;/c1&gt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085734Z" creationid="pingfangx" creationdate="20190103T085734Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 表达式 &lt;c1&gt;hannah.length()&lt;/c1&gt; 显示的值是多少？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; What is the value of the following expression, and why?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041800Z" creationid="pingfangx" creationdate="20190103T041800Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 以下表达式的值是什么，为什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; What is the value returned by the method call &lt;c1&gt;hannah.charAt(12)&lt;/c1&gt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085741Z" creationid="pingfangx" creationdate="20190103T085741Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 方法调用 &lt;c1&gt;hannah.charAt(12)&lt;/c1&gt; 返回的值是多少？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; What operators does the code contain?&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072952Z" creationid="pingfangx" creationdate="20180521T072952Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 代码包含哪些运算符？&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; Write an expression that refers to the letter &lt;c1&gt;b&lt;/c1&gt; in the string referred to by &lt;c2&gt;hannah&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085756Z" creationid="pingfangx" creationdate="20190103T085756Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 写一个表达式，引用 &lt;c2&gt;hannah&lt;/c2&gt; 引用的字符串中的字母 &lt;c1&gt;b&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt;What &lt;c1&gt;Integer&lt;/c1&gt; method would you use to convert a string expressed in base 5 into the equivalent &lt;c2&gt;int&lt;/c2&gt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041730Z" creationid="pingfangx" creationdate="20190103T041730Z">
        <seg>&lt;s0&gt;Question:&lt;/s0&gt; 您将使用什么 &lt;c1&gt;Integer&lt;/c1&gt; 方法将基数为 5 的字符串转换为等效的 &lt;c2&gt;int&lt;/c2&gt;？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: Consider this implementation of the &lt;c1&gt;House&lt;/c1&gt; interface, shown in Question 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041711Z" creationid="pingfangx" creationdate="20190102T041711Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：考虑问题 1 中所示的 &lt;c1&gt;House&lt;/c1&gt; 接口的这种实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: How do you create an instance of &lt;c1&gt;Box&lt;/c1&gt;'s &lt;c2&gt;Filler&lt;/c2&gt; class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014742Z" creationid="pingfangx" creationdate="20190102T014742Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：如何创建 &lt;c1&gt;Box&lt;/c1&gt; 的 &lt;c2&gt;Filler&lt;/c2&gt; 类的实例？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: How does a program destroy an object that it creates?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083634Z" creationid="pingfangx" creationdate="20180705T083634Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：程序如何销毁它创建的对象？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: The following code creates one array and one string object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083523Z" creationid="pingfangx" creationdate="20180705T083523Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：以下代码创建一个数组和一个字符串对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: The program &lt;a1&gt;&lt;c2&gt;Problem.java&lt;/c2&gt;&lt;/a1&gt; doesn't compile.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014658Z" creationid="pingfangx" creationdate="20190102T014658Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：程序 &lt;a1&gt;&lt;c2&gt;Problem.java&lt;/c2&gt;&lt;/a1&gt; 无法编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: True or false: an &lt;t1&gt;Enum&lt;/t1&gt; type can be a subclass of &lt;t2&gt;java.lang.String&lt;/t2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020301Z" creationid="pingfangx" creationdate="20190102T020301Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：true 或 false：&lt;t1&gt;Enum&lt;/t1&gt; 类型可以是 &lt;t2&gt;java.lang.String&lt;/t2&gt; 的子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: What are the class variables?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082818Z" creationid="pingfangx" creationdate="20180705T082818Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：什么是类变量？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: What are the instance variables?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082828Z" creationid="pingfangx" creationdate="20180705T082828Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：什么是实例变量？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: What inner class does &lt;c1&gt;Box&lt;/c1&gt; define?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014726Z" creationid="pingfangx" creationdate="20190102T014726Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：&lt;c1&gt;Box&lt;/c1&gt; 定义的内部类是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: What is the output from the following code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082832Z" creationid="pingfangx" creationdate="20180705T082832Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：以下代码的输出是什么：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: What is the superclass of &lt;c1&gt;Box&lt;/c1&gt;'s inner class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014732Z" creationid="pingfangx" creationdate="20190102T014732Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：&lt;c1&gt;Box&lt;/c1&gt; 的内部类的超类是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: What is wrong with the following interface:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041656Z" creationid="pingfangx" creationdate="20190102T041656Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：以下接口有什么问题：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: What static nested class does &lt;c1&gt;Box&lt;/c1&gt; define?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014719Z" creationid="pingfangx" creationdate="20190102T014719Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：&lt;c1&gt;Box&lt;/c1&gt; 定义了什么静态嵌套类？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: What's wrong with the following program?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083448Z" creationid="pingfangx" creationdate="20180705T083448Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：以下程序有什么问题？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: Which of &lt;c1&gt;Box&lt;/c1&gt;'s nested classes can you use from any class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014739Z" creationid="pingfangx" creationdate="20190102T014739Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：您可以在任何类中使用 &lt;c1&gt;Box&lt;/c1&gt; 的嵌套类中的哪一个？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;: Which operator is used to compare two values, &lt;c1&gt;=&lt;/c1&gt; or &lt;c2&gt;==&lt;/c2&gt; ?&lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073255Z" creationid="pingfangx" creationdate="20180521T073255Z">
        <seg>&lt;s0&gt;Question&lt;/s0&gt;：哪个运算符用于比较两个值 &lt;c1&gt;=&lt;/c1&gt; 或 &lt;c2&gt;==&lt;/c2&gt;？&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;RectanglePlus otherRect</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062202Z" creationid="pingfangx" creationdate="20190102T062202Z">
        <seg>&lt;s0&gt;RectanglePlus otherRect</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Solution:&lt;/s0&gt; &lt;a1&gt;&lt;c2&gt;NestedIf&lt;/c2&gt;&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091459Z" creationid="pingfangx" creationdate="20180521T091459Z">
        <seg>&lt;s0&gt;Solution:&lt;/s0&gt; &lt;a1&gt;&lt;c2&gt;NestedIf&lt;/c2&gt;&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Terminology:&lt;/s0&gt; Nested classes are divided into two categories: static and non-static.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090516Z" creationid="pingfangx" creationdate="20180705T090516Z">
        <seg>&lt;s0&gt;术语:&lt;/s0&gt; 嵌套类分为两类：静态和非静态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;The following figure&lt;/s0&gt; shows the four classes in this example and how they are related.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041350Z" creationid="pingfangx" creationdate="20180607T041350Z">
        <seg>&lt;s0&gt;下图&lt;/s0&gt; 显示了本例中的四个类以及它们之间的关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;The following table&lt;/s0&gt; shows where the members of the Alpha class are visible for each of the access modifiers that can be applied to them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041500Z" creationid="pingfangx" creationdate="20180607T041500Z">
        <seg>&lt;s0&gt;下表&lt;/s0&gt; 显示了可以应用于每个访问修饰符的 Alpha 类成员的可见位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;The following table&lt;/s0&gt; summarizes what happens when you define a method with the same signature as a method in a superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092627Z" creationid="pingfangx" creationdate="20190102T092627Z">
        <seg>&lt;s0&gt;The following table&lt;/s0&gt; 总结了在定义与超类中的方法具有相同签名的方法时会发生什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Tips on Choosing an Access Level:&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041738Z" creationid="pingfangx" creationdate="20180607T041738Z">
        <seg>&lt;s0&gt;关于选择访问级别的提示：&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;User Interface Toolkits&lt;/s0&gt;: The JavaFX, Swing, and Java 2D toolkits make it possible to create sophisticated Graphical User Interfaces (GUIs).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033659Z" creationid="pingfangx" creationdate="20180518T033659Z">
        <seg>&lt;s0&gt;User Interface Toolkits&lt;/s0&gt;：JavaFX，Swing 和 Java 2D 工具包可以创建复杂的图形用户界面(GUI)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Write better code&lt;/s0&gt;: The Java programming language encourages good coding practices, and automatic garbage collection helps you avoid memory leaks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033804Z" creationid="pingfangx" creationdate="20180518T033804Z">
        <seg>&lt;s0&gt;Write better code&lt;/s0&gt;：Java 编程语言鼓励良好的编码实践，并且自动垃圾收集可帮助您避免内存泄漏。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Write less code&lt;/s0&gt;: Comparisons of program metrics (class counts, method counts, and so on) suggest that a program written in the Java programming language can be four times smaller than the same program written in C++.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033801Z" creationid="pingfangx" creationdate="20180518T033801Z">
        <seg>&lt;s0&gt;Write less code&lt;/s0&gt;：项目指标比较(类计数法计数，等等)表明，一个用 java 编程语言编写的程序可以小于相同的程序，用 C++写的四倍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Write once, run anywhere&lt;/s0&gt;: Because applications written in the Java programming language are compiled into machine-independent bytecodes, they run consistently on any Java platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033818Z" creationid="pingfangx" creationdate="20180518T033818Z">
        <seg>&lt;s0&gt;Write once, run anywhere&lt;/s0&gt;：因为用 java 编程语言编写的应用程序编译成字节码运行独立于机器，他们始终在任何 java 平台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;ZonedDateTime getZonedDateTime(String zoneString);&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061245Z" creationid="pingfangx" creationdate="20190102T061245Z">
        <seg>&lt;s0&gt;ZonedDateTime getZonedDateTime(String zoneString);&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;boolean&lt;/s0&gt;: The &lt;c1&gt;boolean&lt;/c1&gt; data type has only two possible values: &lt;c2&gt;true&lt;/c2&gt; and &lt;c3&gt;false&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081831Z" creationid="pingfangx" creationdate="20180518T081831Z">
        <seg>&lt;s0&gt;boolean&lt;/s0&gt;：&lt;c1&gt;boolean&lt;/c1&gt; 数据类型只有两个可能的值：&lt;c2&gt;true&lt;/c2&gt; 和 &lt;c3&gt;false&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;break;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085848Z" creationid="pingfangx" creationdate="20180521T085848Z">
        <seg>&lt;s0&gt;break;&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;byte, short, int, long, float, double, boolean, char&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062005Z" creationid="pingfangx" creationdate="20180521T062005Z">
        <seg>&lt;s0&gt;byte, short, int, long, float, double, boolean, char&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;byte&lt;/s0&gt;: The &lt;c1&gt;byte&lt;/c1&gt; data type is an 8-bit signed two's complement integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080418Z" creationid="pingfangx" creationdate="20180518T080240Z">
        <seg>&lt;s0&gt;byte&lt;/s0&gt;：&lt;c1&gt;byte&lt;/c1&gt; 数据类型是一个 8 位有符号二进制补码整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;char&lt;/s0&gt;: The &lt;c1&gt;char&lt;/c1&gt; data type is a single 16-bit Unicode character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081917Z" creationid="pingfangx" creationdate="20180518T081917Z">
        <seg>&lt;s0&gt;char&lt;/s0&gt;：&lt;c1&gt;char&lt;/c1&gt; 数据类型是一个单一的 16 位 Unicode 字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;default boolean didItWork(int i, double x, String s) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063124Z" creationid="pingfangx" creationdate="20190102T063124Z">
        <seg>&lt;s0&gt;default boolean didItWork(int i, double x, String s) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;double&lt;/s0&gt;: The &lt;c1&gt;double&lt;/c1&gt; data type is a double-precision 64-bit IEEE 754 floating point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081802Z" creationid="pingfangx" creationdate="20180518T081802Z">
        <seg>&lt;s0&gt;double&lt;/s0&gt;：&lt;c1&gt;double&lt;/c1&gt; 数据类型是一个双精度 64 位 IEEE 754 浮点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;float&lt;/s0&gt;: The &lt;c1&gt;float&lt;/c1&gt; data type is a single-precision 32-bit IEEE 754 floating point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081556Z" creationid="pingfangx" creationdate="20180518T081556Z">
        <seg>&lt;s0&gt;float&lt;/s0&gt;：&lt;c1&gt;float&lt;/c1&gt; 数据类型是一个单精度 32 位 IEEE 754 浮点数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;int&lt;/s0&gt;: By default, the &lt;c1&gt;int&lt;/c1&gt; data type is a 32-bit signed two's complement integer, which has a minimum value of -2&lt;s2&gt;31&lt;/s2&gt; and a maximum value of 2&lt;s3&gt;31&lt;/s3&gt;-1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080553Z" creationid="pingfangx" creationdate="20180518T080553Z">
        <seg>&lt;s0&gt;int&lt;/s0&gt;：默认情况下，&lt;c1&gt;int&lt;/c1&gt; 数据类型是一个 32 位有符号的二进制补码整数，其最小值为-2&lt;s2&gt;31&lt;/s2&gt;，最大值为 2&lt;s3&gt;31&lt;/s3&gt;-1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;long&lt;/s0&gt;: The &lt;c1&gt;long&lt;/c1&gt; data type is a 64-bit two's complement integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081325Z" creationid="pingfangx" creationdate="20180518T081325Z">
        <seg>&lt;s0&gt;long&lt;/s0&gt;：&lt;c1&gt;long&lt;/c1&gt; 数据类型是一个 64 位二进制补码整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;numberLength = 7;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123025Z" creationid="pingfangx" creationdate="20180705T123025Z">
        <seg>&lt;s0&gt;numberLength = 7;&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;p -&gt; p.printPerson()&lt;/s0&gt;
);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094226Z" creationid="pingfangx" creationdate="20180706T094226Z">
        <seg>&lt;s0&gt;p -&gt; p.printPerson()&lt;/s0&gt;
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;short&lt;/s0&gt;: The &lt;c1&gt;short&lt;/c1&gt; data type is a 16-bit signed two's complement integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080408Z" creationid="pingfangx" creationdate="20180518T080408Z">
        <seg>&lt;s0&gt;short&lt;/s0&gt;：&lt;c1&gt;short&lt;/c1&gt; 数据类型是一个 16 位有符号二进制补码整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;x = 99;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080951Z" creationid="pingfangx" creationdate="20181228T080951Z">
        <seg>&lt;s0&gt;x = 99;&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;block.accept(p);&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094107Z" creationid="pingfangx" creationdate="20180706T094107Z">
        <seg>&lt;s1&gt;block.accept(p);&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;Answer:&lt;/s2&gt; &lt;c3&gt;&gt;&lt;/c3&gt;, &lt;c4&gt;+&lt;/c4&gt;&lt;br5/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073000Z" creationid="pingfangx" creationdate="20180521T073000Z">
        <seg>&lt;s2&gt;Answer:&lt;/s2&gt; &lt;c3&gt;&gt;&lt;/c3&gt;, &lt;c4&gt;+&lt;/c4&gt;&lt;br5/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;Answer:&lt;/s3&gt; The logical complement operator "!".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073141Z" creationid="pingfangx" creationdate="20180521T073141Z">
        <seg>&lt;s3&gt;Answer:&lt;/s3&gt; 逻辑补码运算符 "!"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;Answer:&lt;/s3&gt; This code should be read as: "If &lt;c4&gt;someCondition&lt;/c4&gt; is &lt;c5&gt;true&lt;/c5&gt;, assign the value of &lt;c6&gt;value1&lt;/c6&gt; to &lt;c7&gt;result&lt;/c7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073333Z" creationid="pingfangx" creationdate="20180521T073333Z">
        <seg>&lt;s3&gt;Answer:&lt;/s3&gt; 这段代码应该读作：“如果 &lt;c4&gt;someCondition&lt;/c4&gt; 为 &lt;c5&gt;true&lt;/c5&gt;，将 &lt;c6&gt;value1&lt;/c6&gt; 的值赋给 &lt;c7&gt;result&lt;/c7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;Answer:&lt;/s4&gt; &lt;c5&gt;i&lt;/c5&gt; is 11, and &lt;c6&gt;n&lt;/c6&gt; is 0.&lt;br7/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090806Z" creationid="pingfangx" creationdate="20180521T073014Z">
        <seg>&lt;s4&gt;Answer:&lt;/s4&gt; &lt;c5&gt;i&lt;/c5&gt; is 11, and &lt;c6&gt;n&lt;/c6&gt; is 0.&lt;br7/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;Answer:&lt;/s4&gt; The &lt;c5&gt;==&lt;/c5&gt; operator is used for comparison, and &lt;c6&gt;=&lt;/c6&gt; is used for assignment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073259Z" creationid="pingfangx" creationdate="20180521T073259Z">
        <seg>&lt;s4&gt;Answer:&lt;/s4&gt; &lt;c5&gt;==&lt;/c5&gt; 运算符用于比较，&lt;c6&gt;=&lt;/c6&gt; 用于赋值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;Answer:&lt;/s6&gt; &lt;c7&gt;i&lt;/c7&gt; is 11, and &lt;c8&gt;n&lt;/c8&gt; is 1.&lt;br9/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090814Z" creationid="pingfangx" creationdate="20180521T073117Z">
        <seg>&lt;s6&gt;Answer:&lt;/s6&gt; &lt;c7&gt;i&lt;/c7&gt; is 11, and &lt;c8&gt;n&lt;/c8&gt; is 1.&lt;br9/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=       Simple assignment operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071132Z" creationid="pingfangx" creationdate="20180521T071132Z">
        <seg>=       简单赋值运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>= (RectanglePlus)other;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062203Z" creationid="pingfangx" creationdate="20190102T062203Z">
        <seg>= (RectanglePlus)other;&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>= += -= *= /= %= &amp;= ^= |= &lt;&lt;= &gt;&gt;= &gt;&gt;&gt;=</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063201Z" creationid="pingfangx" creationdate="20180521T063201Z">
        <seg>= += -= *= /= %= &amp;= ^= |= &lt;&lt;= &gt;&gt;= &gt;&gt;&gt;=</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>==      Equal to
!=      Not equal to
&gt;       Greater than
&gt;=      Greater than or equal to
&lt;       Less than
&lt;=      Less than or equal to</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071645Z" creationid="pingfangx" creationdate="20180521T071643Z">
        <seg>==      等于
!=      不等于
&gt;       大于
&gt;=      大于等于
&lt;       小于
&lt;=      小于等于</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>==      equal to
!=      not equal to
&gt;       greater than
&gt;=      greater than or equal to
&lt;       less than
&lt;=      less than or equal to</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070018Z" creationid="pingfangx" creationdate="20180521T070018Z">
        <seg>==      等于
!=      不等于
&gt;       大于
&gt;=      大于等于
&lt;       小于
&lt;=      小于等于</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>== !=</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063041Z" creationid="pingfangx" creationdate="20180521T063041Z">
        <seg>== !=</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063153Z" creationid="pingfangx" creationdate="20180521T063153Z">
        <seg>?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Alert(role="Manager")
@Alert(role="Administrator")
public class UnauthorizedAccessException extends SecurityException { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041123Z" creationid="pingfangx" creationdate="20190102T041123Z">
        <seg>@Alert(role="Manager")
@Alert(role="Administrator")
public class UnauthorizedAccessException extends SecurityException { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Author(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023917Z" creationid="pingfangx" creationdate="20190102T023917Z">
        <seg>@Author(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Author(name = "Jane Doe")
@Author(name = "John Smith")
class MyClass { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024019Z" creationid="pingfangx" creationdate="20190102T024019Z">
        <seg>@Author(name = "Jane Doe")
@Author(name = "John Smith")
class MyClass { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Author(name = "Jane Doe")
@EBook
class MyClass { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024004Z" creationid="pingfangx" creationdate="20190102T024004Z">
        <seg>@Author(name = "Jane Doe")
@EBook
class MyClass { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@ClassPreamble (</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025145Z" creationid="pingfangx" creationdate="20190102T025145Z">
        <seg>@ClassPreamble (</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Critical TemperatureException { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024214Z" creationid="pingfangx" creationdate="20190102T024214Z">
        <seg>@Critical TemperatureException { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Deprecated</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041550Z" creationid="pingfangx" creationdate="20190102T041550Z">
        <seg>@Deprecated</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Entity</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023833Z" creationid="pingfangx" creationdate="20190102T023833Z">
        <seg>@Entity</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Override</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065638Z" creationid="pingfangx" creationdate="20180706T065638Z">
        <seg>@Override</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Override
void mySuperMethod() { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023901Z" creationid="pingfangx" creationdate="20190102T023901Z">
        <seg>@Override
void mySuperMethod() { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Readonly List&lt;@Readonly T&gt; { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024206Z" creationid="pingfangx" creationdate="20190102T024206Z">
        <seg>@Readonly List&lt;@Readonly T&gt; { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@Schedule(dayOfMonth="last")
@Schedule(dayOfWeek="Fri", hour="23")
public void doPeriodicCleanup() { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041100Z" creationid="pingfangx" creationdate="20190102T041100Z">
        <seg>@Schedule(dayOfMonth="last")
@Schedule(dayOfWeek="Fri", hour="23")
public void doPeriodicCleanup() { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@SuppressWarnings("deprecation")</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041724Z" creationid="pingfangx" creationdate="20190102T041724Z">
        <seg>@SuppressWarnings("deprecation")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@SuppressWarnings("unchecked")
void myMethod() { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023950Z" creationid="pingfangx" creationdate="20190102T023950Z">
        <seg>@SuppressWarnings("unchecked")
void myMethod() { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@SuppressWarnings(value = "unchecked")
void myMethod() { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023943Z" creationid="pingfangx" creationdate="20190102T023943Z">
        <seg>@SuppressWarnings(value = "unchecked")
void myMethod() { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@SuppressWarnings({"unchecked", "deprecation"})</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033700Z" creationid="pingfangx" creationdate="20190102T033700Z">
        <seg>@SuppressWarnings({"unchecked", "deprecation"})</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@interface ClassPreamble {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024840Z" creationid="pingfangx" creationdate="20190102T024840Z">
        <seg>@interface ClassPreamble {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@java.lang.annotation.Repeatable(MealContainer.class)
public @interface Meal { ... }

public @interface MealContainer {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041745Z" creationid="pingfangx" creationdate="20190102T041745Z">
        <seg>@java.lang.annotation.Repeatable(MealContainer.class)
public @interface Meal { ... }

public @interface MealContainer {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;main&lt;/c0&gt; method that instantiates a &lt;c1&gt;DataStructure&lt;/c1&gt; object (&lt;c2&gt;ds&lt;/c2&gt;), then invokes the &lt;c3&gt;printEven&lt;/c3&gt; method to print elements of the array &lt;c4&gt;arrayOfInts&lt;/c4&gt; that have an even index value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100857Z" creationid="pingfangx" creationdate="20180705T100857Z">
        <seg>实例化 &lt;c1&gt;DataStructure&lt;/c1&gt; 对象(&lt;c2&gt;ds&lt;/c2&gt;)的 &lt;c0&gt;main&lt;/c0&gt; 方法，然后调用 &lt;c3&gt;printEven&lt;/c3&gt; 方法打印数组 &lt;c4&gt;arrayOfInts&lt;/c4&gt; 中具有偶数索引的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c3&gt;.class&lt;/c3&gt; file does not contain code that is native to your processor; it instead contains &lt;e4&gt;bytecodes&lt;/e4&gt; — the machine language of the Java Virtual Machine&lt;s5&gt;&lt;a6&gt;1&lt;/a6&gt;&lt;/s5&gt; (Java VM).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033143Z" creationid="pingfangx" creationdate="20180518T033143Z">
        <seg>&lt;c3&gt;.class&lt;/c3&gt; 文件不包含处理器本机的代码;它包含 &lt;e4&gt;bytecodes&lt;/e4&gt;  -  Java 虚拟机 &lt;s5&gt;&lt;a6&gt;1&lt;/a6&gt;&lt;/s5&gt;(Java VM)的机器语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c3&gt;switch&lt;/c3&gt; works with the &lt;c4&gt;byte&lt;/c4&gt;, &lt;c5&gt;short&lt;/c5&gt;, &lt;c6&gt;char&lt;/c6&gt;, and &lt;c7&gt;int&lt;/c7&gt; primitive data types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081514Z" creationid="pingfangx" creationdate="20180521T081514Z">
        <seg>&lt;c3&gt;switch&lt;/c3&gt; 可与 &lt;c4&gt;byte&lt;/c4&gt;，&lt;c5&gt;short&lt;/c5&gt;，&lt;c6&gt;char&lt;/c6&gt; 和 &lt;c7&gt;int&lt;/c7&gt; 原始数据一起使用类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e0&gt;platform&lt;/e0&gt; is the hardware or software environment in which a program runs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033251Z" creationid="pingfangx" creationdate="20180518T033251Z">
        <seg>一个 &lt;e0&gt;platform&lt;/e0&gt; 是程序运行的硬件或软件环境。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e0&gt;statement&lt;/e0&gt; forms a complete unit of execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074817Z" creationid="pingfangx" creationdate="20180521T074817Z">
        <seg>一个 &lt;e0&gt;statement&lt;/e0&gt; 形成一个完整的执行单元。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e1&gt;literal&lt;/e1&gt; is the source code representation of a fixed value; literals are represented directly in your code without requiring computation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082429Z" creationid="pingfangx" creationdate="20180518T082429Z">
        <seg>一个 &lt;e1&gt;literal&lt;/e1&gt; 是固定值的源代码表示;字面量直接在你的代码中表示而不需要计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e2&gt;declaration statement&lt;/e2&gt; declares a variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075201Z" creationid="pingfangx" creationdate="20180521T075201Z">
        <seg>一个 &lt;e2&gt;declaration statement&lt;/e2&gt; 声明一个变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e5&gt;collection&lt;/e5&gt; is an object that groups multiple elements into a single unit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085642Z" creationid="pingfangx" creationdate="20180706T085642Z">
        <seg>&lt;e5&gt;collection&lt;/e5&gt; 是将多个元素组合到一个单元中的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e5&gt;stream&lt;/e5&gt; is a sequence of elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074854Z" creationid="pingfangx" creationdate="20181228T074854Z">
        <seg>&lt;e5&gt;stream&lt;/e5&gt; 是一系列元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e6&gt;pipeline&lt;/e6&gt; is a sequence of stream operations, which in this example is &lt;c7&gt;filter&lt;/c7&gt;- &lt;c8&gt;map&lt;/c8&gt;-&lt;c9&gt;forEach&lt;/c9&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074919Z" creationid="pingfangx" creationdate="20181228T074919Z">
        <seg>&lt;e6&gt;pipeline&lt;/e6&gt; 是一系列流操作，在此示例中是 &lt;c7&gt;filter&lt;/c7&gt;  -  &lt;c8&gt;map&lt;/c8&gt;  -  &lt;c9&gt;forEach&lt;/c9&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;i0&gt;block&lt;/i0&gt; is a group of zero or more statements between balanced braces and can be used anywhere a single statement is allowed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075344Z" creationid="pingfangx" creationdate="20180521T075344Z">
        <seg>一个 &lt;i0&gt;block&lt;/i0&gt; 是平衡花括号之间的一组零个或多个语句，可用于允许单个语句的任何位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;i0&gt;final method&lt;/i0&gt; cannot be overridden in a subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070730Z" creationid="pingfangx" creationdate="20180705T070730Z">
        <seg>无法在子类中重写 &lt;i0&gt;final method&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;i0&gt;palindrome&lt;/i0&gt; is a word or sentence that is symmetricit is spelled the same forward and backward, ignoring case and punctuation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063811Z" creationid="pingfangx" creationdate="20190103T063811Z">
        <seg>&lt;i0&gt;回文（palindrome）&lt;/i0&gt; 是一个对称的单词或句子 - 它向前和向后的拼写相同（忽略大小写和标点符号）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;i0&gt;static initialization block&lt;/i0&gt; is a normal block of code enclosed in braces, &lt;c1&gt;{ }&lt;/c1&gt;, and preceded by the &lt;c2&gt;static&lt;/c2&gt; keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070107Z" creationid="pingfangx" creationdate="20180705T070107Z">
        <seg>一个 &lt;i0&gt;静态初始化块&lt;/i0&gt; 是括号（&lt;c1&gt; {} &lt;/c1&gt;）内的一个普通代码块，前面有 &lt;c2&gt;static&lt;/c2&gt; 关键字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;i2&gt;class&lt;/i2&gt; is the blueprint from which individual objects are created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062446Z" creationid="pingfangx" creationdate="20180518T062446Z">
        <seg>一个 &lt;i2&gt;class（类）&lt;/i2&gt; 是创建单个对象的蓝图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Checklist</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034342Z" creationid="pingfangx" creationdate="20180518T034342Z">
        <seg>检查清单</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Closer Look at the "Hello World!" Application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035233Z" creationid="pingfangx" creationdate="20180518T035233Z">
        <seg>仔细看看 "Hello World！" 应用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Sample Interface, Relatable</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061939Z" creationid="pingfangx" creationdate="20190102T061920Z">
        <seg>示例接口，Relatable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A bicycle modeled as a software object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061738Z" creationid="pingfangx" creationdate="20180518T061738Z">
        <seg>一辆模仿为软件物体的自行车。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A bicycle's behavior, if specified as an interface, might appear as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063854Z" creationid="pingfangx" creationdate="20180518T063854Z">
        <seg>如果指定为接口，自行车的行为可能如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A block is a group of zero or more statements between balanced &lt;s0&gt;braces&lt;/s0&gt; and can be used anywhere a single statement is allowed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075616Z" creationid="pingfangx" creationdate="20180521T075616Z">
        <seg>块是平衡 &lt;s0&gt;braces&lt;/s0&gt; 之间的一组零或多个语句，可用于允许单个语句的任何位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A block is a group of zero or more statements between balanced ___ and can be used anywhere a single statement is allowed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075523Z" creationid="pingfangx" creationdate="20180521T075523Z">
        <seg>块是平衡___之间的一组零个或多个语句，并且可以在允许单个语句的任何位置使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A blueprint for a software object is called a &lt;s0&gt;class&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064918Z" creationid="pingfangx" creationdate="20180518T064918Z">
        <seg>软件对象的蓝图称为 &lt;s0&gt;class&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A blueprint for a software object is called a ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064712Z" creationid="pingfangx" creationdate="20180518T064712Z">
        <seg>软件对象的蓝图称为___。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A body, which consists of a single expression or a statement block.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075456Z" creationid="pingfangx" creationdate="20181228T075456Z">
        <seg>一个主体，由单个表达式或语句块组成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A body, which is a class declaration body.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T062003Z" creationid="pingfangx" creationdate="20180706T061707Z">
        <seg>类主体，是一个类声明体。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A browser with JavaScript enabled is required for this page to operate properly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030348Z" creationid="pingfangx" creationdate="20180518T030348Z">
        <seg>这个页面需要一个启用 JavaScript 的浏览器才能正常运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A character preceded by a backslash (\) is an &lt;i0&gt;escape sequence&lt;/i0&gt; and has special meaning to the compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062337Z" creationid="pingfangx" creationdate="20190103T062337Z">
        <seg>以反斜杠(\)开头的字符是 &lt;i0&gt;escape sequence&lt;/i0&gt;，对编译器具有特殊含义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A circle with an inner circle filled with items, surrounded by gray wedges representing methods that allow access to the inner circle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061354Z" creationid="pingfangx" creationdate="20180518T061354Z">
        <seg>一个内圈填充物品的圆圈，周围是灰色的楔子，代表允许访问内圈的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class can &lt;i1&gt;implement&lt;/i1&gt; more than one interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030937Z" creationid="pingfangx" creationdate="20180525T030937Z">
        <seg>一个类可以 &lt;i1&gt;implement&lt;/i1&gt; 多个接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class can have any number of static initialization blocks, and they can appear anywhere in the class body.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070436Z" creationid="pingfangx" creationdate="20180705T070436Z">
        <seg>一个类可以有任意数量的静态初始化块，它们可以出现在类体中的任何位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class can implement more than one interface, which can contain default methods that have the same name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084942Z" creationid="pingfangx" creationdate="20190102T084942Z">
        <seg>一个类可以实现多个接口，该接口可以包含具有相同名称的默认方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class can only &lt;i1&gt;extend&lt;/i1&gt; (subclass) one parent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030917Z" creationid="pingfangx" creationdate="20180525T030917Z">
        <seg>一个类只能 &lt;i1&gt;extend&lt;/i1&gt;(子类)一个父类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class contains constructors that are invoked to create objects from the class blueprint.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034536Z" creationid="pingfangx" creationdate="20180528T034536Z">
        <seg>一个类包含构造函数，调用来从类蓝图创建对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class declaration for a &lt;c0&gt;MountainBike&lt;/c0&gt; class that is a subclass of &lt;c1&gt;Bicycle&lt;/c1&gt; might look like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090413Z" creationid="pingfangx" creationdate="20180525T025706Z">
        <seg>&lt;c0&gt;MountainBike&lt;/c0&gt; 类的类声明是 &lt;c1&gt;Bicycle&lt;/c1&gt; 的子类，可能如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class declaration names the class and encloses the class body between braces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T081854Z" creationid="pingfangx" creationdate="20180705T081854Z">
        <seg>类声明为类命名，并将类主体包围在大括号之间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class inherits fields and methods from all its superclasses, whether direct or indirect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023225Z" creationid="pingfangx" creationdate="20190103T023225Z">
        <seg>类继承其所有超类中的字段和方法，无论是直接还是间接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class is a blueprint or prototype from which objects are created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042917Z" creationid="pingfangx" creationdate="20180518T042917Z">
        <seg>类是创建对象的蓝图或原型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class may be declared with the modifier &lt;c0&gt;public&lt;/c0&gt;, in which case that class is visible to all classes everywhere.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T035639Z" creationid="pingfangx" creationdate="20180607T035639Z">
        <seg>一个类可以使用修饰符 &lt;c0&gt;public&lt;/c0&gt; 来声明，在这种情况下，该类对任何地方的所有类都是可见的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class that implements an interface must implement all the methods declared in the interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074432Z" creationid="pingfangx" creationdate="20190102T074432Z">
        <seg>实现接口的类必须实现接口中声明的所有方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class that implements both &lt;c0&gt;OperateCar&lt;/c0&gt; and &lt;c1&gt;FlyCar&lt;/c1&gt; must override the method &lt;c2&gt;startEngine&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091809Z" creationid="pingfangx" creationdate="20190102T091809Z">
        <seg>实现 &lt;c0&gt;OperateCar&lt;/c0&gt; 和 &lt;c1&gt;FlyCar&lt;/c1&gt; 的类必须覆盖方法 &lt;c2&gt;startEngine&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class that is declared final cannot be subclassed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104751Z" creationid="pingfangx" creationdate="20190102T104751Z">
        <seg>声明为 final 的类不能被子类化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class uses fields to contain state information and uses methods to implement behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T081958Z" creationid="pingfangx" creationdate="20180705T081958Z">
        <seg>类使用字段来包含状态信息，并使用方法来实现行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A collection of methods with no implementation is called an &lt;s0&gt;interface&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064926Z" creationid="pingfangx" creationdate="20180518T064926Z">
        <seg>没有实现的方法集合称为 &lt;s0&gt;interface&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A collection of methods with no implementation is called an ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064734Z" creationid="pingfangx" creationdate="20180518T064734Z">
        <seg>没有实现的方法集合称为___。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A comma-separated list of formal parameters enclosed in parentheses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075411Z" creationid="pingfangx" creationdate="20181228T075411Z">
        <seg>括号中用逗号分隔的形式参数列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A comma-separated list of interfaces implemented by the class, if any, preceded by the keyword &lt;i0&gt;implements&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030932Z" creationid="pingfangx" creationdate="20180525T030932Z">
        <seg>由类实现的以逗号分隔的接口列表（如果有）以关键字 &lt;i0&gt;implements&lt;/i0&gt; 为前缀。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A common use for static methods is to access static fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065057Z" creationid="pingfangx" creationdate="20180705T065057Z">
        <seg>静态方法的常见用途是访问静态字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A compile-time constant expression is typically a string or an arithmetic expression that can be evaluated at compile time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T145034Z" creationid="pingfangx" creationdate="20180705T145034Z">
        <seg>编译时常量表达式通常是可在编译时计算的字符串或算术表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A consequence of this is that the rows are allowed to vary in length, as shown in the following &lt;a0&gt;&lt;c1&gt;MultiDimArrayDemo&lt;/c1&gt;&lt;/a0&gt; program:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042309Z" creationid="pingfangx" creationdate="20180521T042309Z">
        <seg>这样做的结果是允许行的长度变化，如下面的 &lt;a0&gt;&lt;c1&gt;MultiDimArrayDemo&lt;/c1&gt;&lt;/a0&gt; 程序所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A date &amp; time conversion2-digit day of month.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033725Z" creationid="pingfangx" creationdate="20190103T033321Z">
        <seg>日期和时间转换 月份 2 位数的天数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A date &amp; time conversiondate as %tm%td%ty</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033525Z" creationid="pingfangx" creationdate="20190103T033525Z">
        <seg>日期和时间转换日期为 %tm%td%ty</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A date &amp; time conversionhour in 12-hour clock.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033435Z" creationid="pingfangx" creationdate="20190103T033435Z">
        <seg>日期和时间转换 12 小时制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A date &amp; time conversionlocale-specific am/pm (lower case).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033452Z" creationid="pingfangx" creationdate="20190103T033452Z">
        <seg>日期和时间转换特定于语言环境的 am/pm(小写)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A date &amp; time conversionlocale-specific full name of month.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033314Z" creationid="pingfangx" creationdate="20190103T033314Z">
        <seg>日期和时间转换特定于语言环境的月份全名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A date &amp; time conversionminutes in 2 digits, with leading zeroes as necessary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033442Z" creationid="pingfangx" creationdate="20190103T033442Z">
        <seg>日期和时间转换分钟，2 位数，必要时带前导零。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A date &amp; time conversionmonths in 2 digits, with leading zeroes as necessary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033503Z" creationid="pingfangx" creationdate="20190103T033503Z">
        <seg>日期和时间转换月份，2 位数字，必要时带前导零。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A date &amp; time conversionty = 2-digit year, tY = 4-digit year.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033420Z" creationid="pingfangx" creationdate="20190103T033420Z">
        <seg>日期和时间转换 ty = 2 位数年份，tY = 4 位数年份。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A decimal integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033231Z" creationid="pingfangx" creationdate="20190103T033231Z">
        <seg>十进制整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A diagram of classes in a hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063449Z" creationid="pingfangx" creationdate="20180518T063449Z">
        <seg>层次结构中的类的图表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A few examples of where types are used are class instance creation expressions (&lt;c1&gt;new&lt;/c1&gt;), casts, &lt;c2&gt;implements&lt;/c2&gt; clauses, and &lt;c3&gt;throws&lt;/c3&gt; clauses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034937Z" creationid="pingfangx" creationdate="20190102T034937Z">
        <seg>使用类型的一些示例是类实例创建表达式(&lt;c1&gt;new&lt;/c1&gt;)，强制转换，&lt;c2&gt;implements&lt;/c2&gt; 子句和 &lt;c3&gt;throws&lt;/c3&gt; 子句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A field defining the number of gears for a particular kind of bicycle could be marked as &lt;c3&gt;static&lt;/c3&gt; since conceptually the same number of gears will apply to all instances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073454Z" creationid="pingfangx" creationdate="20180518T073454Z">
        <seg>定义特定类型自行车的齿轮数量的字段可以被标记为 &lt;c3&gt;static&lt;/c3&gt;，因为概念上相同数量的齿轮将适用于所有情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A float.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033246Z" creationid="pingfangx" creationdate="20190103T033246Z">
        <seg>一个浮点数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A floating-point literal is of type &lt;c0&gt;float&lt;/c0&gt; if it ends with the letter &lt;c1&gt;F&lt;/c1&gt; or &lt;c2&gt;f&lt;/c2&gt;; otherwise its type is &lt;c3&gt;double&lt;/c3&gt; and it can optionally end with the letter &lt;c4&gt;D&lt;/c4&gt; or &lt;c5&gt;d&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T083022Z" creationid="pingfangx" creationdate="20180518T083022Z">
        <seg>如果以字母 &lt;c1&gt;F&lt;/c1&gt; 或 &lt;c2&gt;f&lt;/c2&gt; 结尾，则浮点字面量的类型为 &lt;c0&gt;float&lt;/c0&gt;;否则它的类型是 &lt;c3&gt;double&lt;/c3&gt;，它可以选择以字母 &lt;c4&gt;D&lt;/c4&gt; 或 &lt;c5&gt;d&lt;/c5&gt; 结尾。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A functional interface is any interface that contains only one &lt;a2&gt;abstract method&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091902Z" creationid="pingfangx" creationdate="20180706T091838Z">
        <seg>函数式接口是任何只包含一个 &lt;a2&gt;抽象方法&lt;/a2&gt; 的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A hierarchy of bicycle classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063503Z" creationid="pingfangx" creationdate="20180518T063503Z">
        <seg>自行车类的层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A labeled &lt;c0&gt;continue&lt;/c0&gt; statement skips the current iteration of an outer loop marked with the given label.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090607Z" creationid="pingfangx" creationdate="20180521T090607Z">
        <seg>带标签的 &lt;c0&gt;continue&lt;/c0&gt; 语句跳过标有给定标签的外部循环的当前迭代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A lambda expression consists of the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075336Z" creationid="pingfangx" creationdate="20181228T075336Z">
        <seg>lambda 表达式包含以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A literal is the source code representation of a fixed value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061638Z" creationid="pingfangx" creationdate="20180521T061638Z">
        <seg>字面量是一个固定值的源代码表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A local class can have static members provided that they are constant variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144556Z" creationid="pingfangx" creationdate="20180705T144556Z">
        <seg>局部类可以具有静态成员，前提是它们是常量变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A local class has access to the members of its enclosing class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122630Z" creationid="pingfangx" creationdate="20180705T122630Z">
        <seg>局部类可以访问其封闭类的成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A local variable stores temporary state; it is declared inside a &lt;s0&gt;method&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061958Z" creationid="pingfangx" creationdate="20180521T061958Z">
        <seg>局部变量存储临时状态;它在 &lt;s0&gt;method&lt;/s0&gt; 中声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A local variable stores temporary state; it is declared inside a ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061820Z" creationid="pingfangx" creationdate="20180521T061820Z">
        <seg>局部变量存储临时状态;它在___中被声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A member that is not declared as &lt;c1&gt;static&lt;/c1&gt; is implicitly an instance member.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082123Z" creationid="pingfangx" creationdate="20180705T082123Z">
        <seg>未声明为 &lt;c1&gt;static&lt;/c1&gt; 的成员隐式地是实例成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A method can also return a reference type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091635Z" creationid="pingfangx" creationdate="20180601T091635Z">
        <seg>一个方法也可以返回一个引用类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A method returns to the code that invoked it when it</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091154Z" creationid="pingfangx" creationdate="20180601T091141Z">
        <seg>方法返回到调用它的代码当它</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A namespace that organizes classes and interfaces by functionality is called a &lt;s0&gt;package&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064928Z" creationid="pingfangx" creationdate="20180518T064928Z">
        <seg>按功能组织类和接口的名称空间称为 &lt;s0&gt;package&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A namespace that organizes classes and interfaces by functionality is called a ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064742Z" creationid="pingfangx" creationdate="20180518T064742Z">
        <seg>按功能组织类和接口的名称空间称为___。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A nested class has access to all the private members of its enclosing classboth fields and methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083007Z" creationid="pingfangx" creationdate="20190102T083007Z">
        <seg>嵌套类可以访问其封闭类的所有私有成员 - 包括字段和方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A nested class is a member of its enclosing class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090559Z" creationid="pingfangx" creationdate="20180705T090559Z">
        <seg>嵌套类是其封闭类的成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A new line character appropriate to the platform running the application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033259Z" creationid="pingfangx" creationdate="20190103T033259Z">
        <seg>适合运行应用程序的平台的换行符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A number of operations (for example, &lt;c0&gt;append()&lt;/c0&gt;, &lt;c1&gt;insert()&lt;/c1&gt;, or &lt;c2&gt;setLength()&lt;/c2&gt;) can increase the length of the character sequence in the string builder so that the resultant &lt;c3&gt;length()&lt;/c3&gt; would be greater than the current &lt;c4&gt;capacity()&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081621Z" creationid="pingfangx" creationdate="20190103T081621Z">
        <seg>许多操作（例如，&lt;c0&gt;append()&lt;/c0&gt;，&lt;c1&gt;insert()&lt;/c1&gt; 或 &lt;c2&gt;setLength()&lt;/c2&gt;）可以增加 string builder 中字符序列的长度，以使结果 &lt;c3&gt;length()&lt;/c3&gt; 大于当前 &lt;c4&gt;capacity()&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A package is a namespace for organizing classes and interfaces in a logical manner.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T043047Z" creationid="pingfangx" creationdate="20180518T043047Z">
        <seg>包是一种以逻辑方式组织类和接口的名称空间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A package is a namespace that organizes a set of related classes and interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064316Z" creationid="pingfangx" creationdate="20180518T064316Z">
        <seg>包是一个命名空间，它组织一组相关的类和接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A parameter can have the same name as one of the class's fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033505Z" creationid="pingfangx" creationdate="20180601T033505Z">
        <seg>一个参数可以和一个类的字段名称相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A picture of an object, with bibycle methods and instance variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061724Z" creationid="pingfangx" creationdate="20180518T061724Z">
        <seg>一个物体的图片，带有自行车方法和实例变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A primitive type is predefined by the language and is named by a reserved keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080123Z" creationid="pingfangx" creationdate="20180518T080123Z">
        <seg>基本类型由语言预定义，并由保留关键字命名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A program can set all references to an object to &lt;c1&gt;null&lt;/c1&gt; so that it becomes eligible for garbage collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083642Z" creationid="pingfangx" creationdate="20180705T083642Z">
        <seg>程序可以将对象的所有引用设置为 &lt;c1&gt;null&lt;/c1&gt;，以使其符合垃圾回收的条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A return statement is not an expression; in a lambda expression, you must enclose statements in braces (&lt;c0&gt;{}&lt;/c0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075534Z" creationid="pingfangx" creationdate="20181228T075534Z">
        <seg>return 语句不是表达式;在 lambda 表达式中，必须将语句括在大括号(&lt;c0&gt;{}&lt;/c0&gt;)中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A set of annotation types are predefined in the Java SE API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033237Z" creationid="pingfangx" creationdate="20190102T033237Z">
        <seg>Java SE API 中预定义了一组注解类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A shell window.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034744Z" creationid="pingfangx" creationdate="20180518T034744Z">
        <seg>一个 shell 窗口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A similar convention exists for the underscore character; while it's technically legal to begin your variable's name with "&lt;c4&gt;_&lt;/c4&gt;", this practice is discouraged.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074329Z" creationid="pingfangx" creationdate="20180518T074329Z">
        <seg>下划线字符存在类似的约定;虽然在技术上可以合法地使用 '&lt;c4&gt;_&lt;/c4&gt;' 开头变量名称，但这种做法是不鼓励的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple example would be</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032807Z" creationid="pingfangx" creationdate="20190103T032807Z">
        <seg>一个简单的例子就是</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A software object's behavior is exposed through &lt;s0&gt;methods&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064903Z" creationid="pingfangx" creationdate="20180518T064903Z">
        <seg>软件对象的行为通过 &lt;s0&gt;methods&lt;/s0&gt; 公开。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A software object's behavior is exposed through ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064657Z" creationid="pingfangx" creationdate="20180518T064657Z">
        <seg>软件对象的行为通过___公开。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A software object's state is stored in &lt;s0&gt;fields&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064901Z" creationid="pingfangx" creationdate="20180518T064901Z">
        <seg>软件对象的状态存储在 &lt;s0&gt;fields&lt;/s0&gt; 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A software object's state is stored in ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064649Z" creationid="pingfangx" creationdate="20180518T064649Z">
        <seg>软件对象的状态存储在___中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A software object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061358Z" creationid="pingfangx" creationdate="20180518T061358Z">
        <seg>一个软件对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A source file contains code, written in the Java programming language, that you and other programmers can understand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034452Z" creationid="pingfangx" creationdate="20180518T034452Z">
        <seg>源文件包含用 Java 编程语言编写的代码，您和其他程序员都可以理解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A statement in the &lt;c2&gt;switch&lt;/c2&gt; block can be labeled with one or more &lt;c3&gt;case&lt;/c3&gt; or &lt;c4&gt;default&lt;/c4&gt; labels.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082044Z" creationid="pingfangx" creationdate="20180521T082044Z">
        <seg>&lt;c2&gt;switch&lt;/c2&gt; 块中的语句可以标注一个或多个 &lt;c3&gt;case&lt;/c3&gt; 或 &lt;c4&gt;default&lt;/c4&gt; 标签。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A string builder can be converted to a string with the &lt;c1&gt;toString()&lt;/c1&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083501Z" creationid="pingfangx" creationdate="20190103T083501Z">
        <seg>可以使用 &lt;c1&gt;toString()&lt;/c1&gt; 方法将 string builder 转换为字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A string builder's length is the number of characters it contains; a string builder's capacity is the number of character spaces that have been allocated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081336Z" creationid="pingfangx" creationdate="20190103T081305Z">
        <seg>string builder 的长度是它包含的字符数;string builder 的容量是已分配的字符空间数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A string can be converted to a string builder using a &lt;c0&gt;StringBuilder&lt;/c0&gt; constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083452Z" creationid="pingfangx" creationdate="20190103T083452Z">
        <seg>可以使用 &lt;c0&gt;StringBuilder&lt;/c0&gt; 构造函数将字符串转换为 string builder 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A subclass can override methods that it inherits, or it can hide fields or methods that it inherits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023237Z" creationid="pingfangx" creationdate="20190103T023237Z">
        <seg>子类可以覆盖它继承的方法，也可以隐藏它继承的字段或方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A subclass does not inherit the &lt;c0&gt;private&lt;/c0&gt; members of its parent class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082940Z" creationid="pingfangx" creationdate="20190102T082940Z">
        <seg>子类不继承其父类的 &lt;c0&gt;private&lt;/c0&gt; 成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A subclass inherits all of the &lt;i0&gt;public&lt;/i0&gt; and &lt;i1&gt;protected&lt;/i1&gt; members of its parent, no matter what package the subclass is in.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082635Z" creationid="pingfangx" creationdate="20190102T082635Z">
        <seg>无论子类所在的包是什么，子类都会继承其父类的所有 &lt;i0&gt;public&lt;/i0&gt; 和 &lt;i1&gt;protected&lt;/i1&gt; 成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A subclass inherits all the &lt;i0&gt;members&lt;/i0&gt; (fields, methods, and nested classes) from its superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081738Z" creationid="pingfangx" creationdate="20190102T081738Z">
        <seg>子类从其超类继承所有 &lt;i0&gt;members&lt;/i0&gt;(字段，方法和嵌套类)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A target annotation specifies one of the following element types as its value:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033951Z" creationid="pingfangx" creationdate="20190102T033951Z">
        <seg>目标注解指定以下元素类型之一作为其值：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A text editor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034432Z" creationid="pingfangx" creationdate="20180518T034432Z">
        <seg>一个文本编辑器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A type's fields, methods, and nested types are collectively called its &lt;e0&gt;members&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074003Z" creationid="pingfangx" creationdate="20180518T074003Z">
        <seg>类型的字段，方法和嵌套类型统称为 &lt;e0&gt;members&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A typical Java program creates many objects, which as you know, interact by invoking methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T035910Z" creationid="pingfangx" creationdate="20180601T035910Z">
        <seg>一个典型的 Java 程序会创建许多对象，如您所知，通过调用方法进行交互。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A variable declared within the opening and closing parenthesis of a method is called a &lt;s0&gt;parameter&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062004Z" creationid="pingfangx" creationdate="20180521T062004Z">
        <seg>在方法的开始和结束括号内声明的变量称为 &lt;s0&gt;parameter&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A variable declared within the opening and closing parenthesis of a method signature is called a ____.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061829Z" creationid="pingfangx" creationdate="20180521T061829Z">
        <seg>在方法签名的开始和结束括号内声明的变量称为____。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A variable in this state, which currently references no object, can be illustrated as follows (the variable name, &lt;c0&gt;originOne&lt;/c0&gt;, plus a reference pointing to nothing):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042823Z" creationid="pingfangx" creationdate="20180601T042823Z">
        <seg>这个状态下的一个变量，当前没有引用任何对象，可以如下所示(变量名称，&lt;c0&gt;originOne&lt;/c0&gt;，加上一个指向空白的引用)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A variable or parameter whose value is never changed after it is initialized is effectively final.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122910Z" creationid="pingfangx" creationdate="20180705T122910Z">
        <seg>在初始化之后其值永远不会更改的变量或参数实际上是 final 的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A variable's data type determines the values it may contain, plus the operations that may be performed on it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080053Z" creationid="pingfangx" creationdate="20180518T080053Z">
        <seg>变量的数据类型决定了它可能包含的值，以及可能对其执行的操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A variable's name can be any legal identifier  an unlimited-length sequence of Unicode letters and digits, beginning with a letter, the dollar sign "&lt;c0&gt;$&lt;/c0&gt;", or the underscore character "&lt;c1&gt;_&lt;/c1&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074114Z" creationid="pingfangx" creationdate="20180518T074114Z">
        <seg>一个变量的名字可以是任何合法的标识符 Unicode 字母和数字的无限长序列，以字母，美元符号 "&lt;c0&gt;$&lt;/c0&gt;" 或下划线字符 "&lt;c1&gt;_&lt;/c1&gt;" 开头。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021021Z" creationid="pingfangx" creationdate="20190102T021021Z">
        <seg>A.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ACE    (14, "Ace"  );</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065247Z" creationid="pingfangx" creationdate="20190102T065247Z">
        <seg>ACE    (14, "Ace"  );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020926Z" creationid="pingfangx" creationdate="20190102T020926Z">
        <seg>回答：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021014Z" creationid="pingfangx" creationdate="20190102T021014Z">
        <seg>ANSWER: A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: Add "final" in front of the declaration of the &lt;code&gt;timer&lt;/code&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020656Z" creationid="pingfangx" creationdate="20190102T020656Z">
        <seg>解答：在 &lt;code&gt; timer &lt;/code&gt; 的声明前添加 "final"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021005Z" creationid="pingfangx" creationdate="20190102T021005Z">
        <seg>ANSWER: B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: Box.AccessibleBox</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020904Z" creationid="pingfangx" creationdate="20190102T020904Z">
        <seg>答案：Box.AccessibleBox</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: Box.Filler</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020832Z" creationid="pingfangx" creationdate="20190102T020830Z">
        <seg>答案：Box.Filler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: C</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021009Z" creationid="pingfangx" creationdate="20190102T021009Z">
        <seg>ANSWER: C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: D</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021018Z" creationid="pingfangx" creationdate="20190102T021018Z">
        <seg>ANSWER: D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: E</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021020Z" creationid="pingfangx" creationdate="20190102T021020Z">
        <seg>ANSWER: E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: F</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021012Z" creationid="pingfangx" creationdate="20190102T021012Z">
        <seg>ANSWER: F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: N/A.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021058Z" creationid="pingfangx" creationdate="20190102T021058Z">
        <seg>ANSWER: N/A.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: See InnerClassDemo2.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021145Z" creationid="pingfangx" creationdate="20190102T021145Z">
        <seg>ANSWER: See InnerClassDemo2.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: See InnerClassDemo3.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021150Z" creationid="pingfangx" creationdate="20190102T021150Z">
        <seg>ANSWER: See InnerClassDemo3.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANSWER: [java.awt.]Container.AccessibleAWTContainer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020916Z" creationid="pingfangx" creationdate="20190102T020916Z">
        <seg>ANSWER: [java.awt.]Container.AccessibleAWTContainer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>APIs are also common in commercial software products.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055710Z" creationid="pingfangx" creationdate="20190102T055710Z">
        <seg>API 在商业软件产品中也很常见。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>About the Java Technology</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032659Z" creationid="pingfangx" creationdate="20180518T032659Z">
        <seg>关于 Java 技术</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>About the Java Technology (The Java™ Tutorials &gt; Getting Started &gt; The Java Technology Phenomenon)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032814Z" creationid="pingfangx" creationdate="20180518T032814Z">
        <seg>About the Java Technology (The Java™ Tutorials &gt; Getting Started &gt; The Java Technology Phenomenon)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract Classes Compared to Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T020202Z" creationid="pingfangx" creationdate="20190103T020202Z">
        <seg>抽象类与接口相比</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract Methods and Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092655Z" creationid="pingfangx" creationdate="20180521T092655Z">
        <seg>抽象方法和类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract Methods and Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104822Z" creationid="pingfangx" creationdate="20190102T104822Z">
        <seg>Abstract Methods and Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract classes are similar to interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T020205Z" creationid="pingfangx" creationdate="20190103T020205Z">
        <seg>抽象类与接口类似。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract classes cannot be instantiated, but they can be subclassed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T015901Z" creationid="pingfangx" creationdate="20190103T015901Z">
        <seg>抽象类无法实例化，但可以进行子类化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Access Levels</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040140Z" creationid="pingfangx" creationdate="20180607T040140Z">
        <seg>访问级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Access Modifiers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063503Z" creationid="pingfangx" creationdate="20180525T063503Z">
        <seg>访问修饰符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Access control.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T090211Z" creationid="pingfangx" creationdate="20180601T090211Z">
        <seg>访问控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Access level modifiers determine whether other classes can use a particular field or invoke a particular method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020509Z" creationid="pingfangx" creationdate="20180607T020509Z">
        <seg>访问级别修饰符确定其他类是否可以使用特定字段或调用特定方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Access levels affect you in two ways.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041305Z" creationid="pingfangx" creationdate="20180607T041305Z">
        <seg>访问级别以两种方式影响你。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Access levels can help you do this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041749Z" creationid="pingfangx" creationdate="20180607T041749Z">
        <seg>访问级别可以帮助你做到这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accessing Local Variables of the Enclosing Scope</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083858Z" creationid="pingfangx" creationdate="20180706T083858Z">
        <seg>访问封闭范围的局部变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accessing Local Variables of the Enclosing Scope, and Declaring and Accessing Members of the Anonymous Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060511Z" creationid="pingfangx" creationdate="20180706T060503Z">
        <seg>访问封闭范围的局部变量，以及声明和访问匿名类的成员</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accessing Members of an Enclosing Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121314Z" creationid="pingfangx" creationdate="20180705T121314Z">
        <seg>访问封闭类的成员</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accessing Superclass Members</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094718Z" creationid="pingfangx" creationdate="20190102T094718Z">
        <seg>访问超类成员</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accessing an uninitialized local variable will result in a compile-time error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082241Z" creationid="pingfangx" creationdate="20180518T082241Z">
        <seg>访问未初始化的本地变量将导致编译时错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Action is performed only on members that fit the specified criteria.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085217Z" creationid="pingfangx" creationdate="20180706T085217Z">
        <seg>仅对符合指定条件的成员执行操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ActionListener implementation to be an anonymous inner class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021148Z" creationid="pingfangx" creationdate="20190102T021148Z">
        <seg>ActionListener implementation to be an anonymous inner class.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add to it an inner class named</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021138Z" creationid="pingfangx" creationdate="20190102T021107Z">
        <seg>Add to it an inner class named</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adder.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041833Z" creationid="pingfangx" creationdate="20190103T041833Z">
        <seg>Adder.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, the dollar sign character, by convention, is never used at all.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074131Z" creationid="pingfangx" creationdate="20180518T074131Z">
        <seg>此外，按照惯例，美元符号字符根本不会被使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, the keyword &lt;c5&gt;final&lt;/c5&gt; could be added to indicate that the number of gears will never change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073515Z" creationid="pingfangx" creationdate="20180518T073515Z">
        <seg>另外，可以添加关键字 &lt;c5&gt;final&lt;/c5&gt; 来指示齿轮数量永远不会改变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, this section talks about other classes you might need to work with numbers, such as formatting or using mathematical functions to complement the operators built into the language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024715Z" creationid="pingfangx" creationdate="20190103T024715Z">
        <seg>此外，本节还讨论了处理数字时可能需要的其他类，例如格式化或使用数学函数来补充语言中内置的运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additive operator (also used for String concatenation)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064415Z" creationid="pingfangx" creationdate="20180521T064415Z">
        <seg>加法运算符(也用于字符串连接)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adjacent to a decimal point in a floating point literal</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084545Z" creationid="pingfangx" creationdate="20180518T084545Z">
        <seg>与浮点数字中的小数点相邻</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Administrator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085201Z" creationid="pingfangx" creationdate="20180706T085147Z">
        <seg>管理员</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Administrator has an option to preview those members who match the specified criteria before he or she specifies the action to be performed or before selecting the &lt;s0&gt;Submit&lt;/s0&gt; button.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085400Z" creationid="pingfangx" creationdate="20180706T085400Z">
        <seg>管理员可以选择在指定要执行的操作之前或选择 &lt;s0&gt;Submit&lt;/s0&gt; 按钮之前预览符合指定条件的成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Administrator is logged in to the system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085157Z" creationid="pingfangx" creationdate="20180706T085157Z">
        <seg>管理员已登录系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Administrator selects the &lt;s0&gt;Submit&lt;/s0&gt; button.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085249Z" creationid="pingfangx" creationdate="20180706T085249Z">
        <seg>管理员选择 &lt;s0&gt;Submit&lt;/s0&gt; 按钮。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Administrator specifies an action to perform on those selected members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085246Z" creationid="pingfangx" creationdate="20180706T085246Z">
        <seg>管理员指定要对这些选定成员执行的操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Administrator specifies criteria of members on which to perform a certain action.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085240Z" creationid="pingfangx" creationdate="20180706T085240Z">
        <seg>管理员指定要执行特定操作的成员的条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After all the modifications made in this section, the &lt;c0&gt;Bicycle&lt;/c0&gt; class is now:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065612Z" creationid="pingfangx" creationdate="20180705T065612Z">
        <seg>在本节中进行了所有修改之后，&lt;c0&gt;Bicycle&lt;/c0&gt; 类现在是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After creation, its length is fixed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021349Z" creationid="pingfangx" creationdate="20180521T021349Z">
        <seg>创建后，其长度是固定的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After invoking passMethod, x = 3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034035Z" creationid="pingfangx" creationdate="20180601T034035Z">
        <seg>After invoking passMethod, x = 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After the annotation type is defined, you can use annotations of that type, with the values filled in, like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025145Z" creationid="pingfangx" creationdate="20190102T025145Z">
        <seg>定义注解类型后，您可以使用该类型的注解，并填入值，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After the following two lines of code have been executed, &lt;c2&gt;len&lt;/c2&gt; equals 17:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063649Z" creationid="pingfangx" creationdate="20190103T063649Z">
        <seg>执行以下两行代码后，&lt;c2&gt;len&lt;/c2&gt; 等于 17：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After you correct the code to remove all warnings, this particular error will not occur when the program runs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040828Z" creationid="pingfangx" creationdate="20190102T040828Z">
        <seg>在更正代码以移除所有警告后，程序运行时不会发生此特定错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After, it checks whether the phone number contains exactly ten digits (the length of a phone number in North America).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122610Z" creationid="pingfangx" creationdate="20180705T122610Z">
        <seg>之后，它会检查电话号码是否包含十位数字(北美电话号码的长度)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, there is no single correct answer for this exercise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062038Z" creationid="pingfangx" creationdate="20180521T062038Z">
        <seg>同样，这个练习没有单一的正确答案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Aggregate Operation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074531Z" creationid="pingfangx" creationdate="20181228T074531Z">
        <seg>聚合操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Aggregate operations process elements from a stream, not directly from a collection (which is the reason why the first method invoked in this example is &lt;c4&gt;stream&lt;/c4&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074851Z" creationid="pingfangx" creationdate="20181228T074851Z">
        <seg>聚合操作处理流中的元素，而不是直接来自集合(这是在此示例中调用的第一个方法是 &lt;c4&gt;stream&lt;/c4&gt; 的原因)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All &lt;c0&gt;GraphicObject&lt;/c0&gt;s must be able to draw or resize themselves; they just differ in how they do it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022206Z" creationid="pingfangx" creationdate="20190103T022206Z">
        <seg>所有 &lt;c0&gt;GraphicObject&lt;/c0&gt; 必须能够自己绘制或调整大小;他们只是在做不同的事情上有所不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All Classes in the Java Platform are Descendants of Object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081852Z" creationid="pingfangx" creationdate="20190102T081852Z">
        <seg>Java 平台中的所有类都是 Object 的后代</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All abstract, default, and static methods in an interface are implicitly &lt;c5&gt;public&lt;/c5&gt;, so you can omit the &lt;c6&gt;public&lt;/c6&gt; modifier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061726Z" creationid="pingfangx" creationdate="20190102T061726Z">
        <seg>接口中的所有抽象，默认和静态方法都隐式 &lt;c5&gt;public&lt;/c5&gt;，因此您可以省略 &lt;c6&gt;public&lt;/c6&gt; 修饰符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All binary operators except for the assignment operators are evaluated from left to right; assignment operators are evaluated right to left.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062732Z" creationid="pingfangx" creationdate="20180521T062732Z">
        <seg>除赋值运算符外的所有二元运算符都从左到右进行计算;赋值运算符从右向左计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All classes are descendants from this class and inherit methods from it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023305Z" creationid="pingfangx" creationdate="20190103T023305Z">
        <seg>所有类都是此类的后代，并从中继承方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All classes have at least one constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071609Z" creationid="pingfangx" creationdate="20180601T071609Z">
        <seg>所有类都至少有一个构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All constant values defined in an interface are implicitly &lt;c0&gt;public&lt;/c0&gt;, &lt;c1&gt;static&lt;/c1&gt;, and &lt;c2&gt;final&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061738Z" creationid="pingfangx" creationdate="20190102T061738Z">
        <seg>接口中定义的所有常量值都隐式为 &lt;c0&gt;public&lt;/c0&gt;，&lt;c1&gt;static&lt;/c1&gt; 和 &lt;c2&gt;final&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All enums implicitly extend &lt;t1&gt;java.lang.Enum&lt;/t1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020312Z" creationid="pingfangx" creationdate="20190102T020312Z">
        <seg>所有枚举都隐式继承 &lt;t1&gt;java.lang.Enum&lt;/t1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All method declarations in an interface, including default methods, are implicitly &lt;c1&gt;public&lt;/c1&gt;, so you can omit the &lt;c2&gt;public&lt;/c2&gt; modifier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063317Z" creationid="pingfangx" creationdate="20190102T063317Z">
        <seg>接口中的所有方法声明（包括默认方法）都隐式 &lt;c1&gt;public&lt;/c1&gt;，因此您可以省略 &lt;c2&gt;public&lt;/c2&gt; 修饰符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All method declarations in an interface, including static methods, are implicitly &lt;c1&gt;public&lt;/c1&gt;, so you can omit the &lt;c2&gt;public&lt;/c2&gt; modifier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065031Z" creationid="pingfangx" creationdate="20190102T065031Z">
        <seg>接口中的所有方法声明（包括静态方法）都隐式 &lt;c1&gt;public&lt;/c1&gt;，因此您可以省略 &lt;c2&gt;public&lt;/c2&gt; 修饰符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of the numeric wrapper classes are subclasses of the abstract class &lt;c0&gt;Number&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030141Z" creationid="pingfangx" creationdate="20190103T030141Z">
        <seg>所有数字包装类都是抽象类 &lt;c0&gt;Number&lt;/c0&gt; 的子类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All rights reserved.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031858Z" creationid="pingfangx" creationdate="20180518T031858Z">
        <seg>All rights reserved.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All such classes can implement the &lt;c2&gt;isLargerThan()&lt;/c2&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062100Z" creationid="pingfangx" creationdate="20190102T062100Z">
        <seg>所有这些类都可以实现 &lt;c2&gt;isLargerThan()&lt;/c2&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All variables must have a type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064219Z" creationid="pingfangx" creationdate="20180525T064219Z">
        <seg>所有变量都必须有一个类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All variables, whether they are fields, local variables, or parameters, follow the same naming rules and conventions that were covered in the Language Basics lesson, &lt;a0&gt;VariablesNaming&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064330Z" creationid="pingfangx" creationdate="20180525T064330Z">
        <seg>所有变量，无论它们是字段，局部变量还是参数，都遵循语言基础课程 &lt;a0&gt;VariablesNaming&lt;/a0&gt; 中涵盖的相同命名规则和约定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alpha</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041515Z" creationid="pingfangx" creationdate="20180607T041515Z">
        <seg>Alpha</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alphasub</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041516Z" creationid="pingfangx" creationdate="20180607T041516Z">
        <seg>Alphasub</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also keep in mind that the name you choose must not be a &lt;a6&gt;keyword or reserved word&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074516Z" creationid="pingfangx" creationdate="20180518T074516Z">
        <seg>另请注意，您选择的名称不得是 &lt;a6&gt;keyword or reserved word（关键字或保留字）&lt;/a6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, because an inner class is associated with an instance, it cannot define any static members itself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091135Z" creationid="pingfangx" creationdate="20180705T091135Z">
        <seg>此外，由于内部类与实例相关联，因此无法定义任何静态成员本身。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, class methods cannot use the &lt;c1&gt;this&lt;/c1&gt; keyword as there is no instance for &lt;c2&gt;this&lt;/c2&gt; to refer to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065222Z" creationid="pingfangx" creationdate="20180705T065222Z">
        <seg>此外，类方法不能使用 &lt;c1&gt;this&lt;/c1&gt; 关键字，因为没有 &lt;c2&gt;this&lt;/c2&gt; 引用的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, note that the Javadoc tag starts with a lowercase &lt;e7&gt;d&lt;/e7&gt; and the annotation starts with an uppercase &lt;e8&gt;D&lt;/e8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033404Z" creationid="pingfangx" creationdate="20190102T033404Z">
        <seg>另请注意，Javadoc 标记以小写 &lt;e7&gt;d&lt;/e7&gt; 开头，注解以大写 &lt;e8&gt;D&lt;/e8&gt; 开头。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, notice that the &lt;c0&gt;extension&lt;/c0&gt; method uses &lt;c1&gt;dot + 1&lt;/c1&gt; as the argument to &lt;c2&gt;substring&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075108Z" creationid="pingfangx" creationdate="20190103T075108Z">
        <seg>另请注意，&lt;c0&gt;extension&lt;/c0&gt; 方法使用 &lt;c1&gt;dot + 1&lt;/c1&gt; 作为 &lt;c2&gt;substring&lt;/c2&gt; 的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, the constructor sets &lt;c3&gt;width&lt;/c3&gt; to 100 and &lt;c4&gt;height&lt;/c4&gt; to 200.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071349Z" creationid="pingfangx" creationdate="20180601T071349Z">
        <seg>此外，构造函数将 &lt;c3&gt;width&lt;/c3&gt; 设置为 100，将 &lt;c4&gt;height&lt;/c4&gt; 设置为 200。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, when there are fields and methods, the list of enum constants must end with a semicolon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015833Z" creationid="pingfangx" creationdate="20190102T015833Z">
        <seg>此外，当存在字段和方法时，枚举常量列表必须以分号结尾。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, you provide, within enclosing parentheses, any arguments to the method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T084757Z" creationid="pingfangx" creationdate="20180601T084757Z">
        <seg>此外，您可以在括号内提供该方法的任何参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can define &lt;c0&gt;aMethod&lt;/c0&gt; as a default method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074744Z" creationid="pingfangx" creationdate="20190102T074744Z">
        <seg>或者，您可以将 &lt;c0&gt;aMethod&lt;/c0&gt; 定义为默认方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can define your new methods as &lt;a0&gt;default methods&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063119Z" creationid="pingfangx" creationdate="20190102T063119Z">
        <seg>或者，您可以将新方法定义为 &lt;a0&gt;default methods&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can specify this as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T085105Z" creationid="pingfangx" creationdate="20181228T085105Z">
        <seg>或者，您可以按如下方式指定：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can suppress the warning:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041724Z" creationid="pingfangx" creationdate="20190102T041724Z">
        <seg>或者，您可以取消警告：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use a return statement:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075518Z" creationid="pingfangx" creationdate="20181228T075518Z">
        <seg>或者，您可以使用 return 语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use the &lt;c3&gt;NumberFormat&lt;/c3&gt; class to customize numerical formats using patterns.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041242Z" creationid="pingfangx" creationdate="20190103T041242Z">
        <seg>或者，您可以使用 &lt;c3&gt;NumberFormat&lt;/c3&gt; 类来使用模式自定义数字格式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use the shortcut syntax to create and initialize an array:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041908Z" creationid="pingfangx" creationdate="20180521T041908Z">
        <seg>或者，您可以使用快捷语法来创建和初始化一个数组：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although &lt;c0&gt;Bicycle&lt;/c0&gt; only has one constructor, it could have others, including a no-argument constructor:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034750Z" creationid="pingfangx" creationdate="20180528T034750Z">
        <seg>尽管 &lt;c0&gt;Bicycle&lt;/c0&gt; 只有一个构造函数，但它可以包含其他构造函数，包括一个无参数的构造函数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although a method name can be any legal identifier, code conventions restrict method names.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065116Z" creationid="pingfangx" creationdate="20180525T065116Z">
        <seg>虽然方法名称可以是任何合法的标识符，但代码约定会限制方法名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although this approach is less brittle—you don't have to rewrite methods if you change the structure of the &lt;c0&gt;Person&lt;/c0&gt;—you still have additional code: a new interface and a local class for each search you plan to perform in your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090548Z" creationid="pingfangx" creationdate="20180706T090548Z">
        <seg>虽然这种方法不那么脆弱 - 如果更改 &lt;c0&gt;Person&lt;/c0&gt; 的结构，则不必重写方法 - 但还是需要写其他代码：为在应用中执行的每个搜索写新接口和局部类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although this is often more concise than a named class, for classes with only one method, even an anonymous class seems a bit excessive and cumbersome.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083701Z" creationid="pingfangx" creationdate="20180706T083701Z">
        <seg>虽然这通常比命名类更简洁，但对于只有一个方法的类，即使是匿名类也似乎有点过分和繁琐。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although this method is more generic than &lt;c1&gt;printPersonsOlderThan&lt;/c1&gt;, trying to create a separate method for each possible search query can still lead to brittle code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085912Z" creationid="pingfangx" creationdate="20180706T085912Z">
        <seg>虽然此方法比 &lt;c1&gt;printPersonsOlderThan&lt;/c1&gt; 更通用，但尝试为每个可能的搜索查询创建单独的方法仍然会导致代码脆弱。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although you add the &lt;t0&gt;int&lt;/t0&gt; values as primitive types, rather than &lt;t1&gt;Integer&lt;/t1&gt; objects, to &lt;t2&gt;li&lt;/t2&gt;, the code compiles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084054Z" creationid="pingfangx" creationdate="20190103T084054Z">
        <seg>虽然将 &lt;t0&gt;int&lt;/t0&gt; 值的基本类型而不是 &lt;t1&gt;Integer&lt;/t1&gt; 对象添加到 &lt;t2&gt;li&lt;/t2&gt;中，但代码仍会编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Always use 'single quotes' for &lt;c4&gt;char&lt;/c4&gt; literals and "double quotes" for &lt;c5&gt;String&lt;/c5&gt; literals.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T083439Z" creationid="pingfangx" creationdate="20180518T083319Z">
        <seg>&lt;c4&gt;char&lt;/c4&gt; 字面量总是使用 '单引号' ，&lt;c5&gt;String&lt;/c5&gt; 字面量总是使用 "双引号" 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;c2&gt;if-then-else&lt;/c2&gt; statement can test expressions based on ranges of values or conditions, whereas a &lt;c3&gt;switch&lt;/c3&gt; statement tests expressions based only on a single integer, enumerated value, or &lt;c4&gt;String&lt;/c4&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082157Z" creationid="pingfangx" creationdate="20180521T082157Z">
        <seg>一个 &lt;c2&gt;if-then-else&lt;/c2&gt; 语句可以基于值或条件的范围来测试表达式，而 &lt;c3&gt;switch&lt;/c3&gt; 语句仅基于单个整数，枚举值或 &lt;c4&gt;String&lt;/c4&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;e0&gt;expression&lt;/e0&gt; is a construct made up of variables, operators, and method invocations, which are constructed according to the syntax of the language, that evaluates to a single value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073954Z" creationid="pingfangx" creationdate="20180521T073954Z">
        <seg>一个 &lt;e0&gt;expression&lt;/e0&gt; 是一个由变量，运算符和方法调用组成的构造，它是根据语言的语法构造的，它的计算结果为单个值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;i0&gt;abstract class&lt;/i0&gt; is a class that is declared &lt;c1&gt;abstract&lt;/c1&gt;it may or may not include abstract methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T105008Z" creationid="pingfangx" creationdate="20190102T105008Z">
        <seg>&lt;i0&gt;abstract class&lt;/i0&gt; 是一个声明为 &lt;c1&gt;abstract&lt;/c1&gt; 的类，它可能包含也可能不包含抽象方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;i0&gt;abstract method&lt;/i0&gt; is a method that is declared without an implementation (without braces, and followed by a semicolon), like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T015935Z" creationid="pingfangx" creationdate="20190103T015935Z">
        <seg>&lt;i0&gt;abstract method&lt;/i0&gt; 是一个没有实现的情况下声明的方法(没有大括号，后跟分号)，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;i0&gt;array&lt;/i0&gt; is a container object that holds a fixed number of values of a single type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T060713Z" creationid="pingfangx" creationdate="20180521T021330Z">
        <seg>一个 &lt;i0&gt;array（数组）&lt;/i0&gt; 是一个容器对象，它拥有固定数量的单一类型的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;i0&gt;enum type&lt;/i0&gt; is a special data type that enables for a variable to be a set of predefined constants.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015233Z" creationid="pingfangx" creationdate="20190102T015233Z">
        <seg>&lt;i0&gt;enum type&lt;/i0&gt; 是一种特殊数据类型，它使变量成为一组预定义常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;s0&gt;array&lt;/s0&gt; is a container object that holds a fixed number of values of a single type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062012Z" creationid="pingfangx" creationdate="20180521T062012Z">
        <seg>一个 &lt;s0&gt;array&lt;/s0&gt; 是一个容器对象，它拥有固定数量的单一类型的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Abstract Class Example</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022056Z" creationid="pingfangx" creationdate="20190103T022056Z">
        <seg>抽象类示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Example</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033140Z" creationid="pingfangx" creationdate="20190103T033140Z">
        <seg>一个例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Example of Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081924Z" creationid="pingfangx" creationdate="20190102T081924Z">
        <seg>继承的一个例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An ___ is a container object that holds a fixed number of values of a single type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061841Z" creationid="pingfangx" creationdate="20180521T061841Z">
        <seg>___是一个容器对象，它拥有固定数量的单个类型的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An abstract class can contain abstract methodsmethods that are declared but not implemented.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023413Z" creationid="pingfangx" creationdate="20190103T023413Z">
        <seg>抽象类可以抽象方法包含声明但未实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An abstract class can only be subclassed; it cannot be instantiated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023350Z" creationid="pingfangx" creationdate="20190103T023350Z">
        <seg>抽象类只能被子类化;它无法实例化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An abstract class may have &lt;c0&gt;static&lt;/c0&gt; fields and &lt;c1&gt;static&lt;/c1&gt; methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022718Z" creationid="pingfangx" creationdate="20190103T022718Z">
        <seg>抽象类可以包含 &lt;c0&gt;static&lt;/c0&gt; 字段和 &lt;c1&gt;static&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An abstract method within an interface is followed by a semicolon, but no braces (an abstract method does not contain an implementation).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061709Z" creationid="pingfangx" creationdate="20190102T061709Z">
        <seg>接口中的抽象方法后跟分号，但没有大括号(抽象方法不包含实现)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An anagram is a word or a phrase made by transposing the letters of another word or phrase; for example, "parliament" is an anagram of "partial men," and "software" is an anagram of "swear oft." Write a program that figures out whether one string is an anagram of another string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085546Z" creationid="pingfangx" creationdate="20190103T085546Z">
        <seg>变位词（anagram）是通过转换另一个单词或短语的字母而形成的单词或短语;例如，"parliament" 是 "partial men" 的变位词，"software" 是 "swear oft" 的变位词。编写一个程序，确定一个字符串是否是另一个字符串的变位词。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An anonymous class can have static members provided that they are constant variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065450Z" creationid="pingfangx" creationdate="20180706T065450Z">
        <seg>匿名类可以具有静态成员，前提是它们是常量变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An anonymous class cannot access local variables in its enclosing scope that are not declared as &lt;c0&gt;final&lt;/c0&gt; or effectively final.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065306Z" creationid="pingfangx" creationdate="20180706T065306Z">
        <seg>匿名类无法访问其封闭范围中未声明为 &lt;c0&gt;final&lt;/c0&gt; 或 effectively final 的局部变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An anonymous class has access to the members of its enclosing class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065218Z" creationid="pingfangx" creationdate="20180706T065218Z">
        <seg>匿名类可以访问其封闭类的成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An array is a container object that holds a fixed number of values of a single type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061647Z" creationid="pingfangx" creationdate="20180521T061647Z">
        <seg>数组是一个容器对象，它拥有固定数量的单个类型的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An array of 10 elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021548Z" creationid="pingfangx" creationdate="20180521T021548Z">
        <seg>10 个元素的数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An array's name can be anything you want, provided that it follows the rules and conventions as previously discussed in the &lt;a4&gt;naming&lt;/a4&gt; section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T034823Z" creationid="pingfangx" creationdate="20180521T034823Z">
        <seg>数组的名称可以是任何你想要的，只要它遵循规则和约定，如前面在 &lt;a4&gt;naming&lt;/a4&gt; 部分中所讨论的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An array's type is written as &lt;c0&gt;&lt;e1&gt;type&lt;/e1&gt;[]&lt;/c0&gt;, where &lt;c2&gt;&lt;e3&gt;type&lt;/e3&gt;&lt;/c2&gt; is the data type of the contained elements; the brackets are special symbols indicating that this variable holds an array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T033559Z" creationid="pingfangx" creationdate="20180521T033559Z">
        <seg>数组的类型被写为 &lt;c0&gt;&lt;e1&gt;type&lt;/e1&gt;[]&lt;/c0&gt;，其中 &lt;c2&gt;&lt;e3&gt;type&lt;/e3&gt;&lt;/c2&gt; 是包含元素的数据类型;括号是特殊的符号，表示这个变量包含一个数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An automatic version check at startup ensures that users are always up to date with the latest version of your software.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033824Z" creationid="pingfangx" creationdate="20180518T033824Z">
        <seg>启动时的自动版本检查可确保用户随时了解最新版本的软件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An example of a class in the JDK that implements several interfaces is &lt;a0&gt;&lt;c1&gt;HashMap&lt;/c1&gt;&lt;/a0&gt;, which implements the interfaces &lt;c2&gt;Serializable&lt;/c2&gt;, &lt;c3&gt;Cloneable&lt;/c3&gt;, and &lt;c4&gt;Map&lt;K, V&gt;&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021811Z" creationid="pingfangx" creationdate="20190103T021811Z">
        <seg>JDK 中实现多个接口的类的示例是 &lt;a0&gt;&lt;c1&gt;HashMap&lt;/c1&gt;&lt;/a0&gt;，它实现接口 &lt;c2&gt;Serializable&lt;/c2&gt;，&lt;c3&gt;Cloneable&lt;/c3&gt; ，和 &lt;c4&gt;Map&lt;K, V&gt;&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An example of an abstract class in the JDK is &lt;a0&gt;&lt;c1&gt;AbstractMap&lt;/c1&gt;&lt;/a0&gt;, which is part of the Collections Framework.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021533Z" creationid="pingfangx" creationdate="20190103T021533Z">
        <seg>JDK 中抽象类的一个示例是 &lt;a0&gt;&lt;c1&gt;AbstractMap&lt;/c1&gt;&lt;/a0&gt;，它是 Collections Framework 的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An example would be a package of digital image processing methods that are sold to companies making end-user graphics programs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055744Z" creationid="pingfangx" creationdate="20190102T055744Z">
        <seg>一个例子是销售给制作最终用户图形程序的公司的数字图像处理方法包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An exception listto be discussed later.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064954Z" creationid="pingfangx" creationdate="20180525T064954Z">
        <seg>一个异常列表将在稍后讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An instance method in a subclass with the same signature (name, plus the number and the type of its parameters) and return type as an instance method in the superclass &lt;i0&gt;overrides&lt;/i0&gt; the superclass's method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085303Z" creationid="pingfangx" creationdate="20190102T085303Z">
        <seg>具有相同签名(名称，加上其参数的数量和类型)和返回值的子类中的实例方法 &lt;i0&gt;覆盖（overrides）&lt;/i0&gt; 超类的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An instance of &lt;c0&gt;InnerClass&lt;/c0&gt; can exist only within an instance of &lt;c1&gt;OuterClass&lt;/c1&gt; and has direct access to the methods and fields of its enclosing instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091305Z" creationid="pingfangx" creationdate="20180705T091305Z">
        <seg>&lt;c0&gt;InnerClass&lt;/c0&gt; 的实例只能存在于 &lt;c1&gt;OuterClass&lt;/c1&gt; 的实例中，并且可以直接访问其封闭实例的方法和字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An integer literal is of type &lt;c0&gt;long&lt;/c0&gt; if it ends with the letter &lt;c1&gt;L&lt;/c1&gt; or &lt;c2&gt;l&lt;/c2&gt;; otherwise it is of type &lt;c3&gt;int&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082620Z" creationid="pingfangx" creationdate="20180518T082620Z">
        <seg>一个整数字面量如果以字母 &lt;c1&gt;L&lt;/c1&gt; 或 &lt;c2&gt;l&lt;/c2&gt; 结尾则其类型为 &lt;c0&gt;long&lt;/c0&gt;;否则它是 &lt;c3&gt;int&lt;/c3&gt; 类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interface can extend other interfaces, just as a class subclass or extend another class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061612Z" creationid="pingfangx" creationdate="20190102T061612Z">
        <seg>接口可以继承其他接口，就像类子类或继承另一个类一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interface declaration can contain method signatures, default methods, static methods and constant definitions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074415Z" creationid="pingfangx" creationdate="20190102T074415Z">
        <seg>接口声明可以包含方法签名，默认方法，静态方法和常量定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interface declaration consists of modifiers, the keyword &lt;c0&gt;interface&lt;/c0&gt;, the interface name, a comma-separated list of parent interfaces (if any), and the interface body.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061520Z" creationid="pingfangx" creationdate="20190102T061520Z">
        <seg>接口声明由修饰符，关键字 &lt;c0&gt;interface&lt;/c0&gt;，接口名称，逗号分隔的父接口列表(如果有)和接口主体组成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interface is a contract between a class and the outside world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T043022Z" creationid="pingfangx" creationdate="20180518T043022Z">
        <seg>接口是类与外部世界的契约。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interface name can be used anywhere a type can be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074440Z" creationid="pingfangx" creationdate="20190102T074440Z">
        <seg>可以在任何可以使用类型的地方使用接口名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object can have multiple types: the type of its own class and the types of all the interfaces that the class implements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085016Z" creationid="pingfangx" creationdate="20190102T085016Z">
        <seg>一个对象可以有多种类型：它自己的类的类型以及该类实现的所有接口的类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object is a software bundle of related state and behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042843Z" creationid="pingfangx" creationdate="20180518T042843Z">
        <seg>一个对象是一个相关状态和行为的软件包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object is eligible for garbage collection when there are no more references to that object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085743Z" creationid="pingfangx" creationdate="20180601T085743Z">
        <seg>当没有对该对象的更多引用时，对象可以被垃圾回收。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object is unused if the program holds no more references to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082336Z" creationid="pingfangx" creationdate="20180705T082336Z">
        <seg>如果程序不再包含对它的引用，则不使用该对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object of type &lt;c3&gt;Character&lt;/c3&gt; contains a single field, whose type is &lt;c4&gt;char&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T061716Z" creationid="pingfangx" creationdate="20190103T061716Z">
        <seg>&lt;c3&gt;Character&lt;/c3&gt; 类型的对象包含单个字段，其类型为 &lt;c4&gt;char&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object of type &lt;c4&gt;Character&lt;/c4&gt; contains a single field whose type is &lt;c5&gt;char&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083231Z" creationid="pingfangx" creationdate="20190103T083231Z">
        <seg>类型为 &lt;c4&gt;Character&lt;/c4&gt; 的对象包含单个字段，其类型为 &lt;c5&gt;char&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object stores its state in &lt;i0&gt;fields&lt;/i0&gt; (variables in some programming languages) and exposes its behavior through &lt;i1&gt;methods&lt;/i1&gt; (functions in some programming languages).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061531Z" creationid="pingfangx" creationdate="20180518T061531Z">
        <seg>对象将其状态存储在 &lt;i0&gt;fields（字段）&lt;/i0&gt;(某些编程语言中称为变量)中，并通过 &lt;i1&gt;methods（方法）&lt;/i1&gt;(某些编程语言中称为函数)公开其行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An overriding method can also return a subtype of the type returned by the overridden method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090009Z" creationid="pingfangx" creationdate="20190102T090009Z">
        <seg>覆盖方法还可以返回由覆盖方法返回的类型的子类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An overview of the software development process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033211Z" creationid="pingfangx" creationdate="20180518T033211Z">
        <seg>软件开发过程的概述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An static inner class does not have access to the instance fields of the outer class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014712Z" creationid="pingfangx" creationdate="20190102T014712Z">
        <seg>静态内部类无权访问外部类的实例字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An unlabeled &lt;c0&gt;break&lt;/c0&gt; statement terminates the innermost &lt;c1&gt;switch&lt;/c1&gt;, &lt;c2&gt;for&lt;/c2&gt;, &lt;c3&gt;while&lt;/c3&gt;, or &lt;c4&gt;do-while&lt;/c4&gt; statement, but a labeled &lt;c5&gt;break&lt;/c5&gt; terminates an outer statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085955Z" creationid="pingfangx" creationdate="20180521T085955Z">
        <seg>无标签的 &lt;c0&gt;break&lt;/c0&gt; 语句会终止最内层的 &lt;c1&gt;switch&lt;/c1&gt;，&lt;c2&gt;for&lt;/c2&gt;，&lt;c3&gt;while&lt;/c3&gt; 或 &lt;c4&gt;do-while&lt;/c4&gt; 语句，但带标签的 &lt;c5&gt;break&lt;/c5&gt; 终止外部语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anagram.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085920Z" creationid="pingfangx" creationdate="20190103T085920Z">
        <seg>Anagram.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And here's the output from the program:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074952Z" creationid="pingfangx" creationdate="20190103T074952Z">
        <seg>下面是程序的输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And like static class methods, a static nested class cannot refer directly to instance variables or methods defined in its enclosing class: it can use them only through an object reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091009Z" creationid="pingfangx" creationdate="20180705T091009Z">
        <seg>和静态类方法一样，静态嵌套类不能直接引用其封闭类中定义的实例变量或方法：它只能通过对象引用来使用它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animal myAnimal = myCat;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090650Z" creationid="pingfangx" creationdate="20190102T090650Z">
        <seg>Animal myAnimal = myCat;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animal.testClassMethod();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090650Z" creationid="pingfangx" creationdate="20190102T090650Z">
        <seg>Animal.testClassMethod();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotation Types Used by the Java Language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033249Z" creationid="pingfangx" creationdate="20190102T033249Z">
        <seg>Java 语言使用的注解类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotation types are a form of &lt;i2&gt;interface&lt;/i2&gt;, which will be covered in a later lesson.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025119Z" creationid="pingfangx" creationdate="20190102T025029Z">
        <seg>注解类型是 &lt;i2&gt;接口（interface）&lt;/i2&gt; 的一种形式，将在后面的课程中介绍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092315Z" creationid="pingfangx" creationdate="20180521T092315Z">
        <seg>注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092321Z" creationid="pingfangx" creationdate="20180521T092321Z">
        <seg>注解基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations Basics (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023818Z" creationid="pingfangx" creationdate="20190102T023818Z">
        <seg>Annotations Basics (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations That Apply to Other Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033818Z" creationid="pingfangx" creationdate="20190102T033818Z">
        <seg>适用于其他注解的注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations can be applied to declarations: declarations of classes, fields, methods, and other program elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024110Z" creationid="pingfangx" creationdate="20190102T024110Z">
        <seg>注解可以应用于声明：类，字段，方法和其他程序元素的声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations have a number of uses, among them:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023535Z" creationid="pingfangx" creationdate="20190102T023535Z">
        <seg>注解有许多用途，其中包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations have no direct effect on the operation of the code they annotate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023532Z" creationid="pingfangx" creationdate="20190102T023532Z">
        <seg>注解对它们注解的代码的操作没有直接影响。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations that apply to other annotations are called &lt;e0&gt;meta-annotations&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033833Z" creationid="pingfangx" creationdate="20190102T033833Z">
        <seg>适用于其他注解的注解称为 &lt;e0&gt;元注解（meta-annotations）&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anonymous Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092230Z" creationid="pingfangx" creationdate="20180521T092230Z">
        <seg>匿名类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anonymous Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060248Z" creationid="pingfangx" creationdate="20180706T060248Z">
        <seg>Anonymous Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anonymous classes also have the same restrictions as local classes with respect to their members:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065427Z" creationid="pingfangx" creationdate="20180706T065427Z">
        <seg>匿名类对其成员也具有与局部类相同的限制：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anonymous classes are ideal for implementing an interface that contains two or more methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065750Z" creationid="pingfangx" creationdate="20180706T065750Z">
        <seg>匿名类是实现包含两个或更多方法的接口的理想选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anonymous classes are often used in graphical user interface (GUI) applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065606Z" creationid="pingfangx" creationdate="20180706T065606Z">
        <seg>匿名类通常用于图形用户界面(GUI)应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anonymous classes enable you to make your code more concise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060307Z" creationid="pingfangx" creationdate="20180706T060307Z">
        <seg>匿名类使您可以使代码更简洁。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another conditional operator is &lt;c0&gt;?:&lt;/c0&gt;, which can be thought of as shorthand for an &lt;c1&gt;if-then-else&lt;/c1&gt; statement (discussed in the &lt;a2&gt;Control Flow Statements&lt;/a2&gt; section of this lesson).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070247Z" creationid="pingfangx" creationdate="20180521T070247Z">
        <seg>另一个条件运算符是 &lt;c0&gt;?:&lt;/c0&gt;，它可以被认为是 &lt;c1&gt;if-then-else&lt;/c1&gt; 语句的缩写(在本课节的 &lt;a2&gt;Control Flow Statements&lt;/a2&gt; 部分)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another industrial group, electronic guidance instrument manufacturers, make computer systems that receive GPS (Global Positioning System) position data and wireless transmission of traffic conditions and use that information to drive the car.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T053814Z" creationid="pingfangx" creationdate="20190102T053814Z">
        <seg>另一个工业集团，即电子制导仪器制造商，使计算机系统接收 GPS(全球定位系统)位置数据和无线传输交通状况并利用该信息来驾驶汽车。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another point of interest is the &lt;c0&gt;break&lt;/c0&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082201Z" creationid="pingfangx" creationdate="20180521T082201Z">
        <seg>另一个有趣的地方是 &lt;c0&gt;break&lt;/c0&gt; 语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 1: &lt;c2&gt;charAt&lt;/c2&gt;, &lt;c3&gt;length&lt;/c3&gt;, &lt;c4&gt;subSequence&lt;/c4&gt;, and &lt;c5&gt;toString&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074718Z" creationid="pingfangx" creationdate="20190102T074718Z">
        <seg>答案 1：&lt;c2&gt;charAt&lt;/c2&gt;，&lt;c3&gt;length&lt;/c3&gt;，&lt;c4&gt;subSequence&lt;/c4&gt; 和 &lt;c5&gt;toString&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 1: See</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023834Z" creationid="pingfangx" creationdate="20190103T023834Z">
        <seg>答案 1：见</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 1: See &lt;a4&gt;&lt;c5&gt;CharSequenceDemo.java&lt;/c5&gt;&lt;/a4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074824Z" creationid="pingfangx" creationdate="20190102T074824Z">
        <seg>答案 1：参见 &lt;a4&gt;&lt;c5&gt;CharSequenceDemo.java&lt;/c5&gt;&lt;/a4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 1a: &lt;c1&gt;methodTwo&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023714Z" creationid="pingfangx" creationdate="20190103T023714Z">
        <seg>答案 1a：&lt;c1&gt;methodTwo&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 1b: &lt;c1&gt;methodFour&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023732Z" creationid="pingfangx" creationdate="20190103T023732Z">
        <seg>答案 1b：&lt;c1&gt;methodFour&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 1c: They cause compile-time errors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023737Z" creationid="pingfangx" creationdate="20190103T023737Z">
        <seg>答案 1c：它们导致编译时错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 2: &lt;c8&gt;Card&lt;/c8&gt; and &lt;c9&gt;Deck&lt;/c9&gt; should override &lt;c10&gt;equals&lt;/c10&gt;, &lt;c11&gt;hashCode&lt;/c11&gt;, and &lt;c12&gt;toString&lt;/c12&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023828Z" creationid="pingfangx" creationdate="20190103T023828Z">
        <seg>答案 2：&lt;c8&gt;Card&lt;/c8&gt; 和 &lt;c9&gt;Deck&lt;/c9&gt; 应覆盖 &lt;c10&gt;equals&lt;/c10&gt;，&lt;c11&gt;hashCode&lt;/c11&gt; 和 &lt;c12&gt;toString&lt;/c12&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 2: It has a method implementation in it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074730Z" creationid="pingfangx" creationdate="20190102T074730Z">
        <seg>答案 2：它有一个方法实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 2: See &lt;a1&gt;&lt;c2&gt;TimeClient.java&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074833Z" creationid="pingfangx" creationdate="20190102T074833Z">
        <seg>答案 2：参见 &lt;a1&gt;&lt;c2&gt;TimeClient.java&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 3:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074738Z" creationid="pingfangx" creationdate="20190102T074738Z">
        <seg>答案 3：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer 4: Yes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074748Z" creationid="pingfangx" creationdate="20190102T074748Z">
        <seg>Answer 4: Yes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answer:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091350Z" creationid="pingfangx" creationdate="20180521T091350Z">
        <seg>答案：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Exercises</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064932Z" creationid="pingfangx" creationdate="20180518T064932Z">
        <seg>练习的答案</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064845Z" creationid="pingfangx" creationdate="20180518T064845Z">
        <seg>问题的答案</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041653Z" creationid="pingfangx" creationdate="20190102T041653Z">
        <seg>问题和练习的答案：注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Annotations (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041649Z" creationid="pingfangx" creationdate="20190102T041649Z">
        <seg>Answers to Questions and Exercises: Annotations (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Characters and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085705Z" creationid="pingfangx" creationdate="20190103T085705Z">
        <seg>问题和练习的答案：字符和字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Characters and Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085702Z" creationid="pingfangx" creationdate="20190103T085702Z">
        <seg>Answers to Questions and Exercises: Characters and Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082813Z" creationid="pingfangx" creationdate="20180705T082813Z">
        <seg>问题和练习的答案：类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082806Z" creationid="pingfangx" creationdate="20180705T082806Z">
        <seg>Answers to Questions and Exercises: Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Control Flow Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091302Z" creationid="pingfangx" creationdate="20180521T091302Z">
        <seg>问题和练习的答案：控制流</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Control Flow Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091259Z" creationid="pingfangx" creationdate="20180521T091259Z">
        <seg>Answers to Questions and Exercises: Control Flow Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Enum Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020256Z" creationid="pingfangx" creationdate="20190102T020256Z">
        <seg>问题和练习的答案：枚举类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Enum Types (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020253Z" creationid="pingfangx" creationdate="20190102T020253Z">
        <seg>Answers to Questions and Exercises: Enum Types (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Expressions, Statements, and Blocks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075552Z" creationid="pingfangx" creationdate="20180521T075552Z">
        <seg>问题和练习的答案：表达式，语句和块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Expressions, Statements, and Blocks (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075548Z" creationid="pingfangx" creationdate="20180521T075548Z">
        <seg>Answers to Questions and Exercises: Expressions, Statements, and Blocks (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040223Z" creationid="pingfangx" creationdate="20180518T040223Z">
        <seg>问题和练习的答案：入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Getting Started (The Java™ Tutorials &gt; Getting Started &gt; )</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040211Z" creationid="pingfangx" creationdate="20180518T040211Z">
        <seg>Answers to Questions and Exercises: Getting Started (The Java™ Tutorials &gt; Getting Started &gt; )</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023650Z" creationid="pingfangx" creationdate="20190103T023650Z">
        <seg>问题和练习的答案：继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Inheritance (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023647Z" creationid="pingfangx" creationdate="20190103T023647Z">
        <seg>Answers to Questions and Exercises: Inheritance (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074703Z" creationid="pingfangx" creationdate="20190102T074703Z">
        <seg>问题和练习的答案：接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Interfaces (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074648Z" creationid="pingfangx" creationdate="20190102T074648Z">
        <seg>Answers to Questions and Exercises: Interfaces (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Nested Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014655Z" creationid="pingfangx" creationdate="20190102T014655Z">
        <seg>问题和练习的答案：嵌套类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Nested Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014645Z" creationid="pingfangx" creationdate="20190102T014645Z">
        <seg>Answers to Questions and Exercises: Nested Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041712Z" creationid="pingfangx" creationdate="20190103T041712Z">
        <seg>问题和练习的答案：数字</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Numbers (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041708Z" creationid="pingfangx" creationdate="20190103T041708Z">
        <seg>Answers to Questions and Exercises: Numbers (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Object-Oriented Programming Concepts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064844Z" creationid="pingfangx" creationdate="20180518T064844Z">
        <seg>问题和练习的答案：面向对象的编程概念</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Object-Oriented Programming Concepts (The Java™ Tutorials &gt; Learning the Java Language &gt; Object-Oriented Programming Concepts)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064831Z" creationid="pingfangx" creationdate="20180518T064831Z">
        <seg>Answers to Questions and Exercises: Object-Oriented Programming Concepts (The Java™ Tutorials &gt; Learning the Java Language &gt; Object-Oriented Programming Concepts)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083445Z" creationid="pingfangx" creationdate="20180705T083445Z">
        <seg>问题和练习的答案：对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083442Z" creationid="pingfangx" creationdate="20180705T083442Z">
        <seg>Answers to Questions and Exercises: Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072941Z" creationid="pingfangx" creationdate="20180521T072941Z">
        <seg>问题和练习的答案：运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072929Z" creationid="pingfangx" creationdate="20180521T072929Z">
        <seg>Answers to Questions and Exercises: Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061943Z" creationid="pingfangx" creationdate="20180521T061943Z">
        <seg>问题和练习的答案：变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Answers to Questions and Exercises: Variables (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061939Z" creationid="pingfangx" creationdate="20180521T061939Z">
        <seg>Answers to Questions and Exercises: Variables (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any class can implement &lt;c0&gt;Relatable&lt;/c0&gt; if there is some way to compare the relative "size" of objects instantiated from the class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062012Z" creationid="pingfangx" creationdate="20190102T062012Z">
        <seg>如果有某种方法可以比较从类中实例化的对象的相对 "大小"，那么任何类都可以实现 &lt;c0&gt;Relatable&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any class that implements the interface &lt;c0&gt;AbstractZoneTimeClient&lt;/c0&gt; will have to implement the method &lt;c1&gt;getZonedDateTime&lt;/c1&gt;; this method is an &lt;c2&gt;abstract&lt;/c2&gt; method like all other nondefault (and nonstatic) methods in an interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063520Z" creationid="pingfangx" creationdate="20190102T063520Z">
        <seg>任何实现接口 &lt;c0&gt;AbstractZoneTimeClient&lt;/c0&gt; 的类都必须实现方法 &lt;c1&gt;getZonedDateTime&lt;/c1&gt;;此方法是一个 &lt;c2&gt;abstract&lt;/c2&gt; 方法，就像接口中的所有其他非默认(和非静态)方法一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any class that implements the interface &lt;c0&gt;AnotherTimeClient&lt;/c0&gt; will have the implementation specified by the default method &lt;c1&gt;TimeClient.getZonedDateTime&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064651Z" creationid="pingfangx" creationdate="20190102T063454Z">
        <seg>任何实现接口 &lt;c0&gt;AnotherTimeClient&lt;/c0&gt; 的类都将具有由 &lt;c1&gt;TimeClient.getZonedDateTime&lt;/c1&gt; 默认方法指定的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any class that implements the interface &lt;c0&gt;HandleInvalidTimeZoneClient&lt;/c0&gt; will use the implementation of &lt;c1&gt;getZonedDateTime&lt;/c1&gt; specified by this interface instead of the one specified by the interface &lt;c2&gt;TimeClient&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063541Z" creationid="pingfangx" creationdate="20190102T063541Z">
        <seg>任何实现接口 &lt;c0&gt;HandleInvalidTimeZoneClient&lt;/c0&gt; 的类都将使用此接口指定的 &lt;c1&gt;getZonedDateTime&lt;/c1&gt; 的实现，而不是接口 &lt;c2&gt;TimeClient&lt;/c2&gt; 指定的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any method declared &lt;c0&gt;void&lt;/c0&gt; doesn't return a value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091248Z" creationid="pingfangx" creationdate="20180601T091248Z">
        <seg>任何声明为 &lt;c0&gt;void&lt;/c0&gt; 的方法都不会返回一个值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any method that is not declared &lt;c0&gt;void&lt;/c0&gt; must contain a &lt;c1&gt;return&lt;/c1&gt; statement with a corresponding return value, like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091359Z" creationid="pingfangx" creationdate="20180601T091359Z">
        <seg>任何声明为非 &lt;c0&gt;void&lt;/c0&gt; 的方法都必须包含具有相应返回值的 &lt;c1&gt;return&lt;/c1&gt; 语句，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any object can change the value of a class variable, but class variables can also be manipulated without creating an instance of the class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042702Z" creationid="pingfangx" creationdate="20180607T042702Z">
        <seg>任何对象都可以更改类变量的值，但也可以在不创建类的实例的情况下操作类变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any use of &lt;c0&gt;++&lt;/c0&gt; or &lt;c1&gt;--&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074838Z" creationid="pingfangx" creationdate="20180521T074838Z">
        <seg>任何使用 &lt;c0&gt;++&lt;/c0&gt; 或 &lt;c1&gt;--&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anyone can use this nested class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021008Z" creationid="pingfangx" creationdate="20190102T021008Z">
        <seg>Anyone can use this nested class.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Appends the argument to this string builder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082004Z" creationid="pingfangx" creationdate="20190103T082004Z">
        <seg>将参数追加到此 string builder。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Applying the same annotation to a declaration without first declaring it to be repeatable results in a compile-time error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041234Z" creationid="pingfangx" creationdate="20190102T041234Z">
        <seg>将相同的注解应用于声明而不首先声明它是可重复的，这会导致编译时错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Approach 1: Create Methods That Search for Members That Match One Characteristic</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083732Z" creationid="pingfangx" creationdate="20180706T083732Z">
        <seg>方法 1：创建搜索匹配一个特征的成员的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Approach 2: Create More Generalized Search Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083750Z" creationid="pingfangx" creationdate="20180706T083750Z">
        <seg>方法 2：创建更通用的搜索方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Approach 3: Specify Search Criteria Code in a Local Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083759Z" creationid="pingfangx" creationdate="20180706T083759Z">
        <seg>方法 3：在局部类中指定搜索条件代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Approach 4: Specify Search Criteria Code in an Anonymous Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083806Z" creationid="pingfangx" creationdate="20180706T083806Z">
        <seg>方法 4：在匿名类中指定搜索条件代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Approach 5: Specify Search Criteria Code with a Lambda Expression</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083811Z" creationid="pingfangx" creationdate="20180706T083811Z">
        <seg>方法 5：使用 Lambda 表达式指定搜索条件代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Approach 6: Use Standard Functional Interfaces with Lambda Expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092135Z" creationid="pingfangx" creationdate="20180706T083832Z">
        <seg>方法 6：将标准函数式接口与 Lambda 表达式一起使用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Approach 7: Use Lambda Expressions Throughout Your Application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083835Z" creationid="pingfangx" creationdate="20180706T083835Z">
        <seg>方法 7：在整个应用程序中使用 Lambda 表达式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Approach 8: Use Generics More Extensively</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083841Z" creationid="pingfangx" creationdate="20180706T083841Z">
        <seg>方法 8：更广泛地使用泛型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Approach 9: Use Aggregate Operations That Accept Lambda Expressions as Parameters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083849Z" creationid="pingfangx" creationdate="20180706T083849Z">
        <seg>方法 9：使用接受 Lambda 表达式作为参数的聚合操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arbitrary Number of Arguments</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032718Z" creationid="pingfangx" creationdate="20180601T032718Z">
        <seg>任意数量的参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Architecture neutral</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033001Z" creationid="pingfangx" creationdate="20180518T033001Z">
        <seg>Architecture neutral（建筑中立）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Are fields assigned a default value if they are not explicitly initialized?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073127Z" creationid="pingfangx" creationdate="20180518T073127Z">
        <seg>如果字段未被明确初始化，字段是否分配了默认值？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arithmetic Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071134Z" creationid="pingfangx" creationdate="20180521T071134Z">
        <seg>算术运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arithmetic operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064400Z" creationid="pingfangx" creationdate="20180521T064400Z">
        <seg>算术运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Array Manipulations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043112Z" creationid="pingfangx" creationdate="20180521T043112Z">
        <seg>数组操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Array initializers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081922Z" creationid="pingfangx" creationdate="20181228T081922Z">
        <seg>数组初始化器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ArrayDemo.java:4: Variable anArray may not have been initialized.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041806Z" creationid="pingfangx" creationdate="20180521T041806Z">
        <seg>ArrayDemo.java:4: Variable anArray may not have been initialized.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arrays</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072109Z" creationid="pingfangx" creationdate="20180518T072109Z">
        <seg>数组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arrays (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021307Z" creationid="pingfangx" creationdate="20180521T021307Z">
        <seg>Arrays (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arrays are a powerful and useful concept used in programming.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043121Z" creationid="pingfangx" creationdate="20180521T043121Z">
        <seg>数组是编程中使用的一个强大且有用的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arrays.sort(rosterAsArray,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084140Z" creationid="pingfangx" creationdate="20181228T084140Z">
        <seg>Arrays.sort(rosterAsArray,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arrays.sort(rosterAsArray, Person::compareByAge);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084218Z" creationid="pingfangx" creationdate="20181228T084218Z">
        <seg>Arrays.sort(rosterAsArray, Person::compareByAge);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arrays.sort(rosterAsArray, new PersonAgeComparator());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084050Z" creationid="pingfangx" creationdate="20181228T084050Z">
        <seg>Arrays.sort(rosterAsArray, new PersonAgeComparator());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a member of the &lt;c0&gt;OuterClass&lt;/c0&gt;, a nested class can be declared &lt;c1&gt;private&lt;/c1&gt;, &lt;c2&gt;public&lt;/c2&gt;, &lt;c3&gt;protected&lt;/c3&gt;, or &lt;i4&gt;package private&lt;/i4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090656Z" creationid="pingfangx" creationdate="20180705T090656Z">
        <seg>作为 &lt;c0&gt;OuterClass&lt;/c0&gt; 的成员，可以将嵌套类声明为 &lt;c1&gt;private&lt;/c1&gt;，&lt;c2&gt;public&lt;/c2&gt;，&lt;c3&gt;protected&lt;/c3&gt; 或 &lt;i4&gt;package private&lt;/i4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a new developer, the main tools you'll be using are the &lt;c1&gt;javac&lt;/c1&gt; compiler, the &lt;c2&gt;java&lt;/c2&gt; launcher, and the &lt;c3&gt;javadoc&lt;/c3&gt; documentation tool.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033625Z" creationid="pingfangx" creationdate="20180518T033625Z">
        <seg>作为一名新开发人员，您将使用的主要工具是 &lt;c1&gt;javac&lt;/c1&gt; 编译器，&lt;c2&gt;java&lt;/c2&gt; 启动器和 &lt;c3&gt;javadoc&lt;/c3&gt; 文档工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a platform-independent environment, the Java platform can be a bit slower than native code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033427Z" creationid="pingfangx" creationdate="20180518T033427Z">
        <seg>作为一个独立于平台的环境，Java 平台可能比本地代码慢一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a programmer, it will become your single most important piece of reference documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064550Z" creationid="pingfangx" creationdate="20180518T064550Z">
        <seg>作为程序员，它将成为您最重要的参考文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a result, the Java compiler generates an error message similar to "local variables referenced from a lambda expression must be final or effectively final" where the lambda expression &lt;c1&gt;myConsumer&lt;/c1&gt; tries to access the &lt;c2&gt;FirstLevel.x&lt;/c2&gt; variable:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081127Z" creationid="pingfangx" creationdate="20181228T081127Z">
        <seg>因此，在 lambda 表达式 &lt;c1&gt;myConsumer&lt;/c1&gt; 尝试访问 &lt;c2&gt;FirstLevel.x&lt;/c2&gt; 变量的地方，Java 编译器生成类似于 "从 lambda 表达式引用的局部变量必须是 final 或者 effectively final" 的错误消息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a result, the Java compiler generates an error message similar to "local variables referenced from an inner class must be final or effectively final" where the inner class &lt;c1&gt;PhoneNumber&lt;/c1&gt; tries to access the &lt;c2&gt;numberLength&lt;/c2&gt; variable:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123212Z" creationid="pingfangx" creationdate="20180705T123212Z">
        <seg>因此，当内部类 &lt;c1&gt;PhoneNumber&lt;/c1&gt; 尝试访问 &lt;c2&gt;numberLength&lt;/c2&gt; 变量时，Java 编译器生成类似于 "从内部类引用的局部变量必须是 final 或 effectively final 的" 的错误消息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a result, the following method invocation is the same as when you invoked &lt;c0&gt;printPersons&lt;/c0&gt; in &lt;a1&gt;Approach 3: Specify Search Criteria Code in a Local Class&lt;/a1&gt; to obtain members who are eligible for Selective Service.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094223Z" creationid="pingfangx" creationdate="20180706T094223Z">
        <seg>因此，以下方法调用与在 &lt;a1&gt;方法 3：在局部类中指定搜索条件代码&lt;/a1&gt; 中调用 &lt;c0&gt;printPersons&lt;/c0&gt; 时相同，以获取符合美国兵役登记制度的成员：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a result, the following method invocation is the same as when you invoked &lt;c0&gt;printPersons&lt;/c0&gt; in &lt;a1&gt;Approach 3: Specify Search Criteria Code in a Local Class&lt;/a1&gt; to obtain members who are eligible for Selective Service:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093730Z" creationid="pingfangx" creationdate="20180706T093730Z">
        <seg>因此，以下方法调用与在 &lt;a1&gt;方法 3：在局部类中指定搜索条件代码&lt;/a1&gt; 中调用 &lt;c0&gt;printPersons&lt;/c0&gt; 时相同，以获取符合美国兵役登记制度的成员：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As an argument of a method that expects an object (often used when manipulating collections of numbers).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030323Z" creationid="pingfangx" creationdate="20190103T030323Z">
        <seg>作为期望对象的方法的参数(通常在操作数字集合时使用)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As an example, here is a method for finding the largest object in a pair of objects, for &lt;i0&gt;any&lt;/i0&gt; objects that are instantiated from a class that implements &lt;c1&gt;Relatable&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062625Z" creationid="pingfangx" creationdate="20190102T062625Z">
        <seg>作为示例，这里是一种用于查找一对对象中的最大对象的方法，对于从实现 &lt;c1&gt;Relatable&lt;/c1&gt; 的类实例化的 &lt;i0&gt;any&lt;/i0&gt; 对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As before, the compiler determines which constructor to call, based on the number and the type of arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020404Z" creationid="pingfangx" creationdate="20180607T020404Z">
        <seg>和以前一样，编译器根据参数的数量和类型确定调用哪个构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As before, you could specify another lambda expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072048Z" creationid="pingfangx" creationdate="20190102T072048Z">
        <seg>和以前一样，您可以指定另一个 lambda 表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As before, you could use a lambda expression to specify these sort criteria:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071844Z" creationid="pingfangx" creationdate="20190102T071844Z">
        <seg>和以前一样，您可以使用 lambda 表达式来指定这些排序条件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As explained in the section &lt;a0&gt;What Is an Object?&lt;/a0&gt;, an object stores its state in fields, which are defined in classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084643Z" creationid="pingfangx" creationdate="20190102T084643Z">
        <seg>如 &lt;a0&gt;What Is an Object?&lt;/a0&gt; 部分所述，对象将其状态存储在字段中，这些字段在类中定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As it says in "Other Facts about Nested Classes",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020702Z" creationid="pingfangx" creationdate="20190102T020702Z">
        <seg>正如 "关于嵌套类的其他事实" 中所述，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As mentioned above, this data type should never be used for precise values, such as currency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081825Z" creationid="pingfangx" creationdate="20180518T081825Z">
        <seg>如上所述，此数据类型不应用于精确值，例如货币。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As mentioned in the section &lt;a0&gt;Nested Classes&lt;/a0&gt;, nested classes enable you to logically group classes that are only used in one place, increase the use of encapsulation, and create more readable and maintainable code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013243Z" creationid="pingfangx" creationdate="20190102T013243Z">
        <seg>如 &lt;a0&gt;Nested Classes&lt;/a0&gt; 一节所述，嵌套类使您能够对仅在一个地方使用的类进行逻辑分组，增加封装的使用，并创建更易读和可维护的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As mentioned previously, an anonymous class is an expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061151Z" creationid="pingfangx" creationdate="20180706T061151Z">
        <seg>如前所述，匿名类是一个表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of JDK 8, the code fails to compile because the &lt;c1&gt;Meal&lt;/c1&gt; annotation type was not defined to be repeatable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041739Z" creationid="pingfangx" creationdate="20190102T041739Z">
        <seg>从 JDK 8 开始，代码无法编译，因为 &lt;c1&gt;Meal&lt;/c1&gt; 注解类型未定义为可重复。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of the Java SE 8 release, &lt;e0&gt;repeating annotations&lt;/e0&gt; enable you to do this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041006Z" creationid="pingfangx" creationdate="20190102T041006Z">
        <seg>从 Java SE 8 发行版开始，&lt;e0&gt;repeating annotations&lt;/e0&gt; 使您能够执行此操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of the Java SE 8 release, annotations can also be applied to any &lt;e0&gt;type use&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034856Z" creationid="pingfangx" creationdate="20190102T034856Z">
        <seg>从 Java SE 8 发行版开始，注解也可以应用于任何 &lt;e0&gt;类型使用&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of the Java SE 8 release, annotations can also be applied to the &lt;e0&gt;use&lt;/e0&gt; of types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024151Z" creationid="pingfangx" creationdate="20190102T024151Z">
        <seg>从 Java SE 8 发行版开始，注解也可以应用于类型的 &lt;e0&gt;使用（use）&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As promised, the version of the hidden static method that gets invoked is the one in the superclass, and the version of the overridden instance method that gets invoked is the one in the subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090838Z" creationid="pingfangx" creationdate="20190102T090838Z">
        <seg>正如所承诺的那样，被调用的隐藏静态方法的版本是超类中的版本，被调用的重写实例方法的版本是子类中的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As shown above, the most basic form of a class definition is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035558Z" creationid="pingfangx" creationdate="20180518T035553Z">
        <seg>如上所示，类定义的最基本形式是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As shown below, it's possible to assign a literal to a variable of a primitive type:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082448Z" creationid="pingfangx" creationdate="20180518T082448Z">
        <seg>如下所示，可以将一个字面量分配给基本类型的变量：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As shown in the following figure, our &lt;c0&gt;extension&lt;/c0&gt; method uses &lt;c1&gt;lastIndexOf&lt;/c1&gt; to locate the last occurrence of the period (.) in the file name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075020Z" creationid="pingfangx" creationdate="20190103T075020Z">
        <seg>如下图所示，我们的 &lt;c0&gt;extension&lt;/c0&gt; 方法使用 &lt;c1&gt;lastIndexOf&lt;/c1&gt; 来查找文件名中最后一个匹配项的句点(.)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As shown in the preceding illustration, numbering begins with 0.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021617Z" creationid="pingfangx" creationdate="20180521T021617Z">
        <seg>如上图所示，编号从 0 开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As shown, you can use the dot notation to invoke the new &lt;t2&gt;Rectangle&lt;/t2&gt;'s &lt;t3&gt;getArea()&lt;/t3&gt; method to compute the area of the new rectangle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085148Z" creationid="pingfangx" creationdate="20180601T085148Z">
        <seg>如图所示，您可以使用点符号来调用新的 &lt;t2&gt;Rectangle&lt;/t2&gt; 的 &lt;t3&gt;getArea()&lt;/t3&gt; 方法来计算新矩形的面积。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As such, local variables are only visible to the methods in which they are declared; they are not accessible from the rest of the class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073651Z" creationid="pingfangx" creationdate="20180518T073651Z">
        <seg>因此，局部变量只对声明它们的方法可见;他们无法从其他类那里得到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we explore the operators of the Java programming language, it may be helpful for you to know ahead of time which operators have the highest precedence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062335Z" creationid="pingfangx" creationdate="20180521T062335Z">
        <seg>在我们探索 Java 编程语言的运算符时，提前知道哪些运算符具有最高优先级可能会对您有所帮助。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with &lt;c2&gt;byte&lt;/c2&gt;, the same guidelines apply: you can use a &lt;c3&gt;short&lt;/c3&gt; to save memory in large arrays, in situations where the memory savings actually matters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080519Z" creationid="pingfangx" creationdate="20180518T080519Z">
        <seg>与 &lt;c2&gt;byte&lt;/c2&gt; 一样，适用相同的准则：在节省内存的情况下，可以使用 &lt;c3&gt;short&lt;/c3&gt; 保存在大型数组中来节省内存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with any other object, you can create &lt;c0&gt;String&lt;/c0&gt; objects by using the &lt;c1&gt;new&lt;/c1&gt; keyword and a constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063425Z" creationid="pingfangx" creationdate="20190103T063425Z">
        <seg>与任何其他对象一样，您可以使用 &lt;c1&gt;new&lt;/c1&gt; 关键字和构造函数创建 &lt;c0&gt;String&lt;/c0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with class methods and variables, a static nested class is associated with its outer class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090958Z" creationid="pingfangx" creationdate="20180705T090958Z">
        <seg>与类方法和变量一样，静态嵌套类与其外部类相关联。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with instance fields, &lt;e0&gt;objectReference&lt;/e0&gt; must be a reference to an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085011Z" creationid="pingfangx" creationdate="20180601T085011Z">
        <seg>与实例字段一样，&lt;e0&gt;objectReference&lt;/e0&gt; 必须是对象的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with instance methods and variables, an inner class is associated with an instance of its enclosing class and has direct access to that object's methods and fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091128Z" creationid="pingfangx" creationdate="20180705T091128Z">
        <seg>与实例方法和变量一样，内部类与其封闭类的实例相关联，并且可以直接访问该对象的方法和字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with methods, the Java platform differentiates constructors on the basis of the number of arguments in the list and their types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034828Z" creationid="pingfangx" creationdate="20180528T034828Z">
        <seg>与方法一样，Java 平台根据列表中参数的数量及其类型区分构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with multiple inheritance of implementation, a class can inherit different implementations of a method defined (as default or static) in the interfaces that it extends.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085055Z" creationid="pingfangx" creationdate="20190102T085055Z">
        <seg>与实现的多重继承一样，类可以继承在其继承的接口中定义的方法(作为默认或静态)的不同实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with the recommendations for &lt;c3&gt;byte&lt;/c3&gt; and &lt;c4&gt;short&lt;/c4&gt;, use a &lt;c5&gt;float&lt;/c5&gt; (instead of &lt;c6&gt;double&lt;/c6&gt;) if you need to save memory in large arrays of floating point numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081709Z" creationid="pingfangx" creationdate="20180518T081709Z">
        <seg>对于 &lt;c3&gt;byte&lt;/c3&gt; 和 &lt;c4&gt;short&lt;/c4&gt; 的建议，如果您需要节省内存，在浮点数的大数组中请使用 &lt;c5&gt;float&lt;/c5&gt;(而不是 &lt;c6&gt;double&lt;/c6&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with variables of other types, the declaration does not actually create an array; it simply tells the compiler that this variable will hold an array of the specified type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T034843Z" creationid="pingfangx" creationdate="20180521T034843Z">
        <seg>与其他类型的变量一样，该声明实际上并不创建数组;它只是告诉编译器该变量将保存指定类型的数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you can see from the other expressions, an expression can return other types of values as well, such as &lt;c4&gt;boolean&lt;/c4&gt; or &lt;c5&gt;String&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074346Z" creationid="pingfangx" creationdate="20180521T074346Z">
        <seg>从其他表达式中可以看出，表达式也可以返回其他类型的值，例如 &lt;c4&gt;boolean&lt;/c4&gt; 或 &lt;c5&gt;String&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you can see, a class always has access to its own members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041155Z" creationid="pingfangx" creationdate="20180607T041155Z">
        <seg>正如你所看到的，一个类总是可以访问自己的成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you can see, the output from this program is the same (&lt;c0&gt;caffein&lt;/c0&gt;), although it requires fewer lines of code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043410Z" creationid="pingfangx" creationdate="20180521T043410Z">
        <seg>正如你所看到的，这个程序的输出是相同的(&lt;c0&gt;caffein&lt;/c0&gt;)，尽管它需要更少的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you do, you'll notice that real-world objects vary in complexity; your desktop lamp may have only two possible states (on and off) and two possible behaviors (turn on, turn off), but your desktop radio might have additional states (on, off, current volume, current station) and behavior (turn on, turn off, increase volume, decrease volume, seek, scan, and tune).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061258Z" creationid="pingfangx" creationdate="20180518T061258Z">
        <seg>和你一样，你会注意到真实世界的对象在复杂性上有所不同。您的桌面灯可能只有两种可能的状态(开和关)以及两种可能的行为(打开，关闭)，但您的桌面收音机可能会有其他状态(开，关，当前音量，当前电台)和行为(打开，关闭，增加音量，减小音量，搜寻，扫描和调谐)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you have seen, you can often provide an initial value for a field in its declaration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065659Z" creationid="pingfangx" creationdate="20180705T065659Z">
        <seg>如您所见，您通常可以在其声明中为字段提供初始值：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you know, a class provides the blueprint for objects; you create an object from a class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T041441Z" creationid="pingfangx" creationdate="20180601T041441Z">
        <seg>如你所知，一个类提供了对象的蓝图;你从一个类创建一个对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you learned in the previous lesson, an object stores its state in &lt;i0&gt;fields&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073039Z" creationid="pingfangx" creationdate="20180518T073039Z">
        <seg>正如你在前一课中学到的，一个对象将它的状态存储在 &lt;i0&gt;fields&lt;/i0&gt; 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you've already learned, objects define their interaction with the outside world through the methods that they expose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063743Z" creationid="pingfangx" creationdate="20180518T063743Z">
        <seg>正如你已经知道的那样，对象通过它们公开的方法来定义它们与外界的交互。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assigned to a variable of the corresponding primitive type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084556Z" creationid="pingfangx" creationdate="20190103T084556Z">
        <seg>分配给相应基本类型的变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assigned to a variable of the corresponding wrapper class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084334Z" creationid="pingfangx" creationdate="20190103T084334Z">
        <seg>分配给相应包装类的变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assignment expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074831Z" creationid="pingfangx" creationdate="20180521T074831Z">
        <seg>赋值表达式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assignment, Arithmetic, and Unary Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072209Z" creationid="pingfangx" creationdate="20180518T072209Z">
        <seg>赋值，算术和一元运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assignment, Arithmetic, and Unary Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063803Z" creationid="pingfangx" creationdate="20180521T063803Z">
        <seg>Assignment, Arithmetic, and Unary Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assignments</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081906Z" creationid="pingfangx" creationdate="20181228T081906Z">
        <seg>赋值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At any point, the length and content of the sequence can be changed through method invocations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080449Z" creationid="pingfangx" creationdate="20190103T080449Z">
        <seg>在任何时候，可以通过方法调用来更改序列的长度和内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the beginning of your class declaration, use the &lt;c0&gt;extends&lt;/c0&gt; keyword, followed by the name of the class to inherit from:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063518Z" creationid="pingfangx" creationdate="20180518T063518Z">
        <seg>在类声明的开始处，使用 &lt;c0&gt;extends&lt;/c0&gt; 关键字，后面跟着要继承的类的名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the beginning or end of a number</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084540Z" creationid="pingfangx" creationdate="20180518T084540Z">
        <seg>在数字的开头或结尾</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the member level, you can also use the &lt;c0&gt;public&lt;/c0&gt; modifier or no modifier (&lt;i1&gt;package-private&lt;/i1&gt;) just as with top-level classes, and with the same meaning.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040005Z" creationid="pingfangx" creationdate="20180607T040005Z">
        <seg>在成员级别，您也可以像使用顶级类一样使用 &lt;c0&gt;public&lt;/c0&gt; 修饰符或无修饰符(&lt;i1&gt;package-private&lt;/i1&gt;)，其含义相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the member level&lt;c0&gt;public&lt;/c0&gt;, &lt;c1&gt;private&lt;/c1&gt;, &lt;c2&gt;protected&lt;/c2&gt;, or &lt;i3&gt;package-private&lt;/i3&gt; (no explicit modifier).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T035343Z" creationid="pingfangx" creationdate="20180607T035327Z">
        <seg>在成员级 &lt;c0&gt;public&lt;/c0&gt;，&lt;c1&gt;private&lt;/c1&gt;，&lt;c2&gt;protected&lt;/c2&gt; 或 &lt;i3&gt;package-private&lt;/i3&gt;(无明确修饰符)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the prompt, type &lt;c1&gt;dir&lt;/c1&gt; to see the new file that was generated as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034906Z" creationid="pingfangx" creationdate="20180518T034904Z">
        <seg>在提示符处键入 &lt;c1&gt;dir&lt;/c1&gt; 以查看生成的新文件，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the prompt, type the following command and press &lt;b0&gt; Enter&lt;/b0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034859Z" creationid="pingfangx" creationdate="20180518T034859Z">
        <seg>在提示符处，输入以下命令并按 &lt;b0&gt; Enter&lt;/b0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the same time, you need a field to keep track of how many &lt;c1&gt;Bicycle&lt;/c1&gt; objects have been created so that you know what ID to assign to the next one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090448Z" creationid="pingfangx" creationdate="20180607T042903Z">
        <seg>同时，您需要一个字段来跟踪已创建的 &lt;c1&gt;Bicycle&lt;/c1&gt; 对象的数量，以便您知道要分配给下一个对象的 ID。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the top level&lt;c0&gt;public&lt;/c0&gt;, or &lt;i1&gt;package-private&lt;/i1&gt; (no explicit modifier).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T035336Z" creationid="pingfangx" creationdate="20180607T035258Z">
        <seg>在顶级 &lt;c0&gt;public&lt;/c0&gt; 或 &lt;i1&gt;package-private&lt;/i1&gt;(没有明确的修饰符)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the top of the hierarchy, &lt;c0&gt;Object&lt;/c0&gt; is the most general of all classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081912Z" creationid="pingfangx" creationdate="20190102T081912Z">
        <seg>在层次结构的顶部，&lt;c0&gt;Object&lt;/c0&gt; 是所有类中最一般的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Attempting to use the simple names &lt;t0&gt;width&lt;/t0&gt; and &lt;t1&gt;height&lt;/t1&gt; from the code in the &lt;t2&gt;CreateObjectDemo&lt;/t2&gt; class doesn't make sense  those fields exist only within an object  and results in a compiler error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T074222Z" creationid="pingfangx" creationdate="20180601T074222Z">
        <seg>尝试从 &lt;t2&gt;CreateObjectDemo&lt;/t2&gt; 类中的代码中使用简单名称 &lt;t0&gt;width&lt;/t0&gt; 和 &lt;t1&gt;height&lt;/t1&gt; 是没有意义的  这些字段只存在于一个对象内  并导致编译器错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>August
September
October
November
December</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082418Z" creationid="pingfangx" creationdate="20180521T082418Z">
        <seg>August
September
October
November
December</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Autoboxing and Unboxing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092806Z" creationid="pingfangx" creationdate="20180521T092806Z">
        <seg>自动装箱和拆箱</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Autoboxing and Unboxing (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083513Z" creationid="pingfangx" creationdate="20190103T083513Z">
        <seg>Autoboxing and Unboxing (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Autoboxing and unboxing lets developers write cleaner code, making it easier to read.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084633Z" creationid="pingfangx" creationdate="20190103T084633Z">
        <seg>自动装箱和拆箱使开发人员可以编写更清晰的代码，使其更易于阅读。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automobile manufacturers write software (Java, of course) that operates the automobilestop, start, accelerate, turn left, and so forth.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T053744Z" creationid="pingfangx" creationdate="20190102T053744Z">
        <seg>汽车制造商编写操作汽车的软件(当然是 Java) - 停止，启动，加速，向左转，等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Avoid &lt;c0&gt;public&lt;/c0&gt; fields except for constants.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041922Z" creationid="pingfangx" creationdate="20180607T041922Z">
        <seg>除了常量外，避免 &lt;c0&gt;public&lt;/c0&gt; 字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021038Z" creationid="pingfangx" creationdate="20190102T021038Z">
        <seg>B.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Basic Math Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035525Z" creationid="pingfangx" creationdate="20190103T035525Z">
        <seg>基本数学方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be sure to keep your solution as you will be asked to rewrite it in &lt;a0&gt;Enum Types&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082553Z" creationid="pingfangx" creationdate="20180705T082553Z">
        <seg>请务必保留您的解决方案，因为您将被要求在 &lt;a0&gt;Enum Types&lt;/a0&gt; 中重写它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be sure to keep your solution as you will be asked to rewrite it in &lt;a1&gt;Enum Types&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083003Z" creationid="pingfangx" creationdate="20180705T083003Z">
        <seg>请务必保留您的解决方案，因为您将被要求在 &lt;a1&gt;Enum Types&lt;/a1&gt; 中重写它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because &lt;c0&gt;RectanglePlus&lt;/c0&gt; implements &lt;c1&gt;Relatable&lt;/c1&gt;, the size of any two &lt;c2&gt;RectanglePlus&lt;/c2&gt; objects can be compared.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062212Z" creationid="pingfangx" creationdate="20190102T062212Z">
        <seg>因为 &lt;c0&gt;RectanglePlus&lt;/c0&gt; 实现了 &lt;c1&gt;Relatable&lt;/c1&gt;，所以可以比较任意两个 &lt;c2&gt;RectanglePlus&lt;/c2&gt; 对象的大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because &lt;c0&gt;someCondition&lt;/c0&gt; is true, this program prints "1" to the screen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070343Z" creationid="pingfangx" creationdate="20180521T070343Z">
        <seg>由于 &lt;c0&gt;someCondition&lt;/c0&gt; 为真，该程序在屏幕上打印 "1"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because &lt;c0&gt;x&lt;/c0&gt; is defined as a &lt;c1&gt;public static int&lt;/c1&gt; in the class &lt;c2&gt;IdentifyMyParts&lt;/c2&gt;, every reference to &lt;c3&gt;x&lt;/c3&gt; will have the value that was last assigned because &lt;c4&gt;x&lt;/c4&gt; is a static variable (and therefore a class variable) shared across all instances of the class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082902Z" creationid="pingfangx" creationdate="20180705T082843Z">
        <seg>因为 &lt;c0&gt;x&lt;/c0&gt; 在类 &lt;c2&gt;IdentifyMyParts&lt;/c2&gt; 中被定义为 &lt;c1&gt;public static int&lt;/c1&gt;，所以对 &lt;c3&gt;x&lt;/c3&gt; 的每个引用都将具有该值最后一次分配，因为 &lt;c4&gt;x&lt;/c4&gt; 是在类的所有实例之间共享的静态变量(因此是一个类变量)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because &lt;c1&gt;CheckPersonEligibleForSelectiveService&lt;/c1&gt; implements an interface, you can use an anonymous class instead of a local class and bypass the need to declare a new class for each search.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091212Z" creationid="pingfangx" creationdate="20180706T091212Z">
        <seg>因为 &lt;c1&gt;CheckPersonEligibleForSelectiveService&lt;/c1&gt; 实现了一个接口，所以您可以使用匿名类而不是局部类，并且无需为每次搜索声明一个新类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because &lt;t3&gt;li&lt;/t3&gt; is a list of &lt;t4&gt;Integer&lt;/t4&gt; objects, not a list of &lt;t5&gt;int&lt;/t5&gt; values, you may wonder why the Java compiler does not issue a compile-time error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084120Z" creationid="pingfangx" creationdate="20190103T084120Z">
        <seg>因为 &lt;t3&gt;li&lt;/t3&gt; 是 &lt;t4&gt;Integer&lt;/t4&gt; 对象的列表，而不是 &lt;t5&gt;int&lt;/t5&gt; 值的列表，您可能想知道为什么 Java 编译器不会发出编译时错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because a class can only extend one parent (see &lt;a3&gt;Declaring Classes&lt;/a3&gt;), the Java language does not support multiple inheritance of state (see &lt;a4&gt;Multiple Inheritance of State, Implementation, and Type&lt;/a4&gt;), and therefore an enum cannot extend anything else.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015610Z" creationid="pingfangx" creationdate="20190102T015610Z">
        <seg>因为一个类只能继承一个父类(参见 &lt;a3&gt;Declaring Classes&lt;/a3&gt;)，所以 Java 语言不支持多重继承状态(参见 &lt;a4&gt;Multiple Inheritance of State, Implementation, and Type&lt;/a4&gt;)因此，枚举不能继承任何其他内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because a class can only extend one parent, the Java language does not support multiple inheritance of state, and therefore an enum cannot extend anything else.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020337Z" creationid="pingfangx" creationdate="20190102T020337Z">
        <seg>因为类只能继承一个父类，Java 语言不支持多重继承状态，因此枚举不能继承其他任何内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because an anonymous class definition is an expression, it must be part of a statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T062934Z" creationid="pingfangx" creationdate="20180706T062934Z">
        <seg>因为匿名类定义是表达式，所以它必须是语句的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because interfaces do not contain fields, you do not have to worry about problems that result from multiple inheritance of state.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084804Z" creationid="pingfangx" creationdate="20190102T084804Z">
        <seg>由于接口不包含字段，因此您不必担心多重继承状态所导致的问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because of this assignment statement, the variable &lt;c0&gt;FirstLevel.x&lt;/c0&gt; is not effectively final anymore.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081019Z" creationid="pingfangx" creationdate="20181228T081019Z">
        <seg>由于这个赋值语句，变量 &lt;c0&gt;FirstLevel.x&lt;/c0&gt; 不再是 effectively final 的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because of this assignment statement, the variable &lt;c0&gt;numberLength&lt;/c0&gt; is not effectively final anymore.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123048Z" creationid="pingfangx" creationdate="20180705T123048Z">
        <seg>由于这个赋值语句，变量 &lt;c0&gt;numberLength&lt;/c0&gt; 不再是 effectively final 的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because road or racing bikes have skinny tires, add an attribute to track the tire width.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093957Z" creationid="pingfangx" creationdate="20190102T093957Z">
        <seg>因为公路或赛车有紧身轮胎，所以添加一个属性来跟踪轮胎宽度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because software written in the Java programming language can be composed of hundreds or &lt;i0&gt;thousands&lt;/i0&gt; of individual classes, it makes sense to keep things organized by placing related classes and interfaces into packages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090357Z" creationid="pingfangx" creationdate="20180518T064414Z">
        <seg>因为用 Java 编程语言编写的软件可以由数百或数&lt;i0&gt;千&lt;/i0&gt;个单独的类组成，所以通过将相关的类和接口放入包中来组织事物是很有意义的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the &lt;c0&gt;EventHandler&lt;ActionEvent&gt;&lt;/c0&gt; interface contains only one method, you can use a lambda expression instead of an anonymous class expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065737Z" creationid="pingfangx" creationdate="20180706T065737Z">
        <seg>因为 &lt;c0&gt;EventHandler&lt;ActionEvent&gt;&lt;/c0&gt; 接口只包含一个方法，所以可以使用 lambda 表达式而不是匿名类表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the Java VM is available on many different operating systems, the same &lt;c0&gt;.class&lt;/c0&gt; files are capable of running on Microsoft Windows, the Solaris™ Operating System (Solaris OS), Linux, or Mac OS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033220Z" creationid="pingfangx" creationdate="20180518T033220Z">
        <seg>由于 Java VM 在许多不同的操作系统上都可用，因此相同的 &lt;c0&gt;.class&lt;/c0&gt; 文件能够在 Microsoft Windows，Solaris™操作系统(Solaris OS)，Linux 或 Mac OS 上运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the interface &lt;c0&gt;Comparator&lt;/c0&gt; is a &lt;a1&gt;functional interface&lt;/a1&gt;, you can use a lambda expression as an argument for the &lt;c2&gt;sort&lt;/c2&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071318Z" creationid="pingfangx" creationdate="20190102T071318Z">
        <seg>由于接口 &lt;c0&gt;Comparator&lt;/c0&gt; 是 &lt;a1&gt;functional interface&lt;/a1&gt;，因此可以使用 lambda 表达式作为 &lt;c2&gt;sort&lt;/c2&gt; 方法的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the remainder (&lt;t0&gt;%&lt;/t0&gt;) and unary plus (&lt;t1&gt;+=&lt;/t1&gt;) operators do not apply to &lt;t2&gt;Integer&lt;/t2&gt; objects, you may wonder why the Java compiler compiles the method without issuing any errors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084443Z" creationid="pingfangx" creationdate="20190103T084443Z">
        <seg>因为余数(&lt;t0&gt;%&lt;/t0&gt;)和一元加(&lt;t1&gt;+=&lt;/t1&gt;)运算符不适用于 &lt;t2&gt;Integer&lt;/t2&gt; 对象，您可能想知道为什么 Java 编译器会编译该方法没有发出任何错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because they are constants, the names of an enum type's fields are in uppercase letters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015256Z" creationid="pingfangx" creationdate="20190102T015256Z">
        <seg>因为它们是常量，所以枚举类型字段的名称是大写字母。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because this lambda expression invokes an existing method, you can use a method reference instead of a lambda expression:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084217Z" creationid="pingfangx" creationdate="20181228T084217Z">
        <seg>因为此 lambda 表达式调用现有方法，所以可以使用方法引用而不是 lambda 表达式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Becoming familiar with common compiler errors will make it easier to recognize bugs in your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061915Z" creationid="pingfangx" creationdate="20180521T061915Z">
        <seg>熟悉常见的编译器错误可以更容易地识别代码中的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before JDK 8, repeatable annotations are not supported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041731Z" creationid="pingfangx" creationdate="20190102T041731Z">
        <seg>在 JDK 8 之前，不支持可重复的注解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before the Java SE 8 release, annotations could only be applied to declarations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034844Z" creationid="pingfangx" creationdate="20190102T034844Z">
        <seg>在 Java SE 8 发行版之前，注解只能应用于声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Besides &lt;c1&gt;int&lt;/c1&gt;, what other data types are there?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073106Z" creationid="pingfangx" creationdate="20180518T073106Z">
        <seg>除 &lt;c1&gt;int&lt;/c1&gt; 之外，还有哪些其他数据类型？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beta</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041516Z" creationid="pingfangx" creationdate="20180607T041516Z">
        <seg>Beta</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beyond Basic Arithmetic</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040851Z" creationid="pingfangx" creationdate="20180521T092720Z">
        <seg>基础算法之外的补充</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beyond Basic Arithmetic (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034443Z" creationid="pingfangx" creationdate="20190103T034443Z">
        <seg>Beyond Basic Arithmetic (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bicycle bike01, bike02, bike03;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094039Z" creationid="pingfangx" creationdate="20190102T094039Z">
        <seg>Bicycle bike01, bike02, bike03;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bicycle bike1 = new Bicycle();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062705Z" creationid="pingfangx" creationdate="20180518T062705Z">
        <seg>Bicycle bike1 = new Bicycle();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bicycle bike2 = new Bicycle();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062706Z" creationid="pingfangx" creationdate="20180518T062706Z">
        <seg>Bicycle bike2 = new Bicycle();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bicycle fastest;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091707Z" creationid="pingfangx" creationdate="20180601T091707Z">
        <seg>Bicycle fastest;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bicycle myBike = new Bicycle();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075536Z" creationid="pingfangx" creationdate="20180521T075536Z">
        <seg>Bicycle myBike = new Bicycle();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bicycle myBike = new Bicycle(); &lt;s0&gt;// object creation statement&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075629Z" creationid="pingfangx" creationdate="20180521T075629Z">
        <seg>Bicycle myBike = new Bicycle(); &lt;s0&gt;// object creation statement&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bicycle myBike = new Bicycle(30, 0, 8);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034656Z" creationid="pingfangx" creationdate="20180528T034656Z">
        <seg>Bicycle myBike = new Bicycle(30, 0, 8);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bicycle.numberOfBicycles</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043105Z" creationid="pingfangx" creationdate="20180607T043105Z">
        <seg>Bicycle.numberOfBicycles</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bicycles also have state (current gear, current pedal cadence, current speed) and behavior (changing gear, changing pedal cadence, applying brakes).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061145Z" creationid="pingfangx" creationdate="20180518T061145Z">
        <seg>自行车也具有状态(当前档位，当前踏板节奏，当前速度)和行为(变换档位，改变踏板节奏，应用刹车)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bike is in gear 1 with a cadence of 20 and travelling at a speed of 10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094046Z" creationid="pingfangx" creationdate="20190102T094046Z">
        <seg>Bike is in gear 1 with a cadence of 20 and travelling at a speed of 10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bike is in gear 5 with a cadence of 20 and travelling at a speed of 10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094047Z" creationid="pingfangx" creationdate="20190102T094047Z">
        <seg>Bike is in gear 5 with a cadence of 20 and travelling at a speed of 10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bike is in gear 8 with a cadence of 40 and travelling at a speed of 20.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094049Z" creationid="pingfangx" creationdate="20190102T094049Z">
        <seg>Bike is in gear 8 with a cadence of 40 and travelling at a speed of 20.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Binary: Base 2, whose digits consists of the numbers 0 and 1 (you can create binary literals in Java SE 7 and later)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082831Z" creationid="pingfangx" creationdate="20180518T082831Z">
        <seg>二进制：基数 2，其数字由数字 0 和 1 组成(您可以在 Java SE 7 及更高版本中创建二进制文字)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bitwise and Bit Shift Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072334Z" creationid="pingfangx" creationdate="20180518T072334Z">
        <seg>按位和位移运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bitwise and Bit Shift Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070544Z" creationid="pingfangx" creationdate="20180521T070544Z">
        <seg>Bitwise and Bit Shift Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Blocks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075302Z" creationid="pingfangx" creationdate="20180521T075302Z">
        <seg>块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Boolean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084701Z" creationid="pingfangx" creationdate="20190103T084701Z">
        <seg>Boolean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both constructors could have been declared in &lt;c0&gt;Bicycle&lt;/c0&gt; because they have different argument lists.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034817Z" creationid="pingfangx" creationdate="20180528T034817Z">
        <seg>这两个构造函数都可以在 &lt;c0&gt;Bicycle&lt;/c0&gt; 中声明，因为它们有不同的参数列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both the compiler (&lt;c1&gt;javac&lt;/c1&gt;) and launcher (&lt;c2&gt;java&lt;/c2&gt;) are &lt;e3&gt;case-sensitive&lt;/e3&gt;, so you must capitalize consistently.&lt;br4/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034609Z" creationid="pingfangx" creationdate="20180518T034609Z">
        <seg>编译器(&lt;c1&gt;javac&lt;/c1&gt;)和启动器(&lt;c2&gt;java&lt;/c2&gt;)都是 &lt;e3&gt;case-sensitive&lt;/e3&gt;，因此您必须一致地大写。&lt;br4/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bounded Type Parameters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092846Z" creationid="pingfangx" creationdate="20180521T092846Z">
        <seg>有界类型参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Branching Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072448Z" creationid="pingfangx" creationdate="20180518T072448Z">
        <seg>分支语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Branching Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085720Z" creationid="pingfangx" creationdate="20180521T085720Z">
        <seg>Branching Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Breaking strings between lines using the &lt;c0&gt;+&lt;/c0&gt; concatenation operator is, once again, very common in &lt;c1&gt;print&lt;/c1&gt; statements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064623Z" creationid="pingfangx" creationdate="20190103T064554Z">
        <seg>使用 &lt;c0&gt;+&lt;/c0&gt; 连接运算符在行之间断开字符串在 &lt;c1&gt;print&lt;/c1&gt; 语句中再次非常常见。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bring up a shell, or "command," window.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034727Z" creationid="pingfangx" creationdate="20180518T034727Z">
        <seg>调出一个 shell 或 "命令" 窗口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bundling code into individual software objects provides a number of benefits, including:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061914Z" creationid="pingfangx" creationdate="20180518T061914Z">
        <seg>将代码捆绑到单个软件对象中提供了许多好处，其中包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But if you use this operator in part of a larger expression, the one that you choose may make a significant difference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065403Z" creationid="pingfangx" creationdate="20180521T065403Z">
        <seg>但是如果你在更大的表达式中使用这个运算符，那么你选择的运算符可能会有很大的不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But the program does not actually destroy objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083707Z" creationid="pingfangx" creationdate="20180705T083707Z">
        <seg>但该程序实际上并没有销毁对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Button btn = new Button();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065640Z" creationid="pingfangx" creationdate="20180706T065640Z">
        <seg>Button btn = new Button();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Button submit = new Button("Submit");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070011Z" creationid="pingfangx" creationdate="20180706T070011Z">
        <seg>Button submit = new Button("Submit");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By attributing state (current speed, current pedal cadence, and current gear) and providing methods for changing that state, the object remains in control of how the outside world is allowed to use it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061844Z" creationid="pingfangx" creationdate="20180518T061844Z">
        <seg>通过赋予状态(当前速度，当前踏板节奏和当前档位)并提供改变该状态的方法，该对象仍然控制着外界如何使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By casting &lt;c0&gt;object1&lt;/c0&gt; to a &lt;c1&gt;Relatable&lt;/c1&gt; type, it can invoke the &lt;c2&gt;isLargerThan&lt;/c2&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062638Z" creationid="pingfangx" creationdate="20190102T062638Z">
        <seg>通过将 &lt;c0&gt;object1&lt;/c0&gt; 转换为 &lt;c1&gt;Relatable&lt;/c1&gt; 类型，它可以调用 &lt;c2&gt;isLargerThan&lt;/c2&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By convention, method names should be a verb in lowercase or a multi-word name that begins with a verb in lowercase, followed by adjectives, nouns, etc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065136Z" creationid="pingfangx" creationdate="20180525T065136Z">
        <seg>按照惯例，方法名应该是小写的动词或多个词的名称，以小写的动词开头，后面跟着形容词，名词等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By convention, the &lt;c2&gt;implements&lt;/c2&gt; clause follows the &lt;c3&gt;extends&lt;/c3&gt; clause, if there is one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061909Z" creationid="pingfangx" creationdate="20190102T061909Z">
        <seg>按照惯例，&lt;c2&gt;implements&lt;/c2&gt; 子句跟随 &lt;c3&gt;extends&lt;/c3&gt; 子句（如果有）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By convention, the names of constant values are spelled in uppercase letters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065322Z" creationid="pingfangx" creationdate="20180705T065322Z">
        <seg>按照惯例，常量值的名称拼写为大写字母。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By convention, the underscore character is never used elsewhere.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074602Z" creationid="pingfangx" creationdate="20180518T074602Z">
        <seg>按照惯例，下划线字符从来不会在其他地方使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By definition, if two objects are equal, their hash code &lt;i0&gt;must also&lt;/i0&gt; be equal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103917Z" creationid="pingfangx" creationdate="20190102T103917Z">
        <seg>根据定义，如果两个对象相等，则它们的哈希码 &lt;i0&gt;必须也&lt;/i0&gt; 相等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By hiding class B within class A, A's members can be declared private and B can access them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090915Z" creationid="pingfangx" creationdate="20180705T090915Z">
        <seg>通过将类 B 隐藏在类 A 中，可以将 A 的成员声明为私有，并且 B 可以访问它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By multiplying the value by 10, the range of possible values becomes &lt;c0&gt;0.0 &lt;= number &lt; 10.0&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040634Z" creationid="pingfangx" creationdate="20190103T040608Z">
        <seg>通过将该值乘以 10，可能值的范围变为  &lt;c0&gt;0.0 &lt;= number &lt; 10.0&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By reading this list of interfaces, you can infer that an instance of &lt;c5&gt;HashMap&lt;/c5&gt; (regardless of the developer or company who implemented the class) can be cloned, is serializable (which means that it can be converted into a byte stream; see the section &lt;a6&gt;Serializable Objects&lt;/a6&gt;), and has the functionality of a map.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021915Z" creationid="pingfangx" creationdate="20190103T021915Z">
        <seg>通过阅读这个接口列表，您可以推断出 &lt;c5&gt;HashMap&lt;/c5&gt; 的实例(无论实现该类的开发人员或公司)是可以克隆的，是可序列化的(这意味着它可以转换为字节流;请参阅 &lt;a6&gt;Serializable Objects&lt;/a6&gt; 部分)，并具有 map 的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By the end of this program, the variable &lt;c0&gt;thirdString&lt;/c0&gt; contains "This is a concatenated string.", which gets printed to standard output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064838Z" creationid="pingfangx" creationdate="20180521T064838Z">
        <seg>在该程序结束时，变量 &lt;c0&gt;thirdString&lt;/c0&gt; 包含 "This is a concatenated string。"，它被打印到标准输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Byte</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084701Z" creationid="pingfangx" creationdate="20190103T084701Z">
        <seg>Byte</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021039Z" creationid="pingfangx" creationdate="20190102T021039Z">
        <seg>C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C:\&gt;&lt;s0&gt;D:&lt;/s0&gt;

D:\&gt;&lt;s1&gt;cd myapplication&lt;/s1&gt;

D:\myapplication&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034817Z" creationid="pingfangx" creationdate="20180518T034817Z">
        <seg>C:\&gt;&lt;s0&gt;D:&lt;/s0&gt;

D:\&gt;&lt;s1&gt;cd myapplication&lt;/s1&gt;

D:\myapplication&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C:\&gt;&lt;s0&gt;cd myapplication&lt;/s0&gt;

C:\myapplication&gt;&lt;s1&gt;dir&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034823Z" creationid="pingfangx" creationdate="20180518T034823Z">
        <seg>C:\&gt;&lt;s0&gt;cd myapplication&lt;/s0&gt;

C:\myapplication&gt;&lt;s1&gt;dir&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C:\myapplication&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034944Z" creationid="pingfangx" creationdate="20180518T034944Z">
        <seg>C:\myapplication&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C:\myapplication&gt;&lt;s0&gt;java -cp .</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034942Z" creationid="pingfangx" creationdate="20180518T034942Z">
        <seg>C:\myapplication&gt;&lt;s0&gt;java -cp .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C:\myapplication&gt;&lt;s0&gt;javac HelloWorldApp.java&lt;/s0&gt;

C:\myapplication&gt;&lt;s1&gt;dir&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034907Z" creationid="pingfangx" creationdate="20180518T034907Z">
        <seg>C:\myapplication&gt;&lt;s0&gt;javac HelloWorldApp.java&lt;/s0&gt;

C:\myapplication&gt;&lt;s1&gt;dir&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CLUBS    (2, "Clubs"   ),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065234Z" creationid="pingfangx" creationdate="20190102T065234Z">
        <seg>CLUBS    (2, "Clubs"   ),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Calculator myApp = new Calculator();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075621Z" creationid="pingfangx" creationdate="20181228T075621Z">
        <seg>Calculator myApp = new Calculator();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Calendar c = Calendar.getInstance();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033622Z" creationid="pingfangx" creationdate="20190103T033622Z">
        <seg>Calendar c = Calendar.getInstance();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Calling an Object's Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T082710Z" creationid="pingfangx" creationdate="20180601T082710Z">
        <seg>调用对象的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can accept string representations of decimal, octal, or hexadecimal numbers as input.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030906Z" creationid="pingfangx" creationdate="20190103T030906Z">
        <seg>可以接受十进制，八进制或十六进制数字的字符串表示作为输入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Cast expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081940Z" creationid="pingfangx" creationdate="20181228T081940Z">
        <seg>转换表达式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Casting Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083031Z" creationid="pingfangx" creationdate="20190102T083031Z">
        <seg>转换对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Cat myCat = new Cat();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090649Z" creationid="pingfangx" creationdate="20190102T090649Z">
        <seg>Cat myCat = new Cat();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change &lt;a0&gt;&lt;c1&gt;MaxVariablesDemo&lt;/c1&gt;&lt;/a0&gt; to show minimum values instead of maximum values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041517Z" creationid="pingfangx" creationdate="20190103T041517Z">
        <seg>更改 &lt;a0&gt;&lt;c1&gt;MaxVariablesDemo&lt;/c1&gt;&lt;/a0&gt; 以显示最小值而不是最大值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change the following program to use compound assignments:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072622Z" creationid="pingfangx" creationdate="20180521T072622Z">
        <seg>更改以下程序以使用复合分配：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change your</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021148Z" creationid="pingfangx" creationdate="20190102T021148Z">
        <seg>Change your</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 2 provides an overview of classes in general, and Chapter 4 discusses classes in detail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035616Z" creationid="pingfangx" creationdate="20180518T035616Z">
        <seg>第 2 章总体介绍了类，第 4 章详细讨论了类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CharSequence subSequence(int beginIndex, int endIndex)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073058Z" creationid="pingfangx" creationdate="20190103T073058Z">
        <seg>CharSequence subSequence(int beginIndex, int endIndex)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Character</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084702Z" creationid="pingfangx" creationdate="20190103T084702Z">
        <seg>Character</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Character and String Literals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T083138Z" creationid="pingfangx" creationdate="20180518T083138Z">
        <seg>字符和字符串字面量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Character ch = 'a';</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083910Z" creationid="pingfangx" creationdate="20190103T083910Z">
        <seg>Character ch = 'a';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Character ch = new Character('a');</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T061807Z" creationid="pingfangx" creationdate="20190103T061807Z">
        <seg>Character ch = new Character('a');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Character strings are represented by the class &lt;s0&gt;java.lang.String&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062009Z" creationid="pingfangx" creationdate="20180521T062009Z">
        <seg>字符串由类 &lt;s0&gt;java.lang.String&lt;/s0&gt; 表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Character strings are represented by the class ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061838Z" creationid="pingfangx" creationdate="20180521T061838Z">
        <seg>字符串由类___表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Characters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092735Z" creationid="pingfangx" creationdate="20180521T092735Z">
        <seg>Characters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Characters (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T042649Z" creationid="pingfangx" creationdate="20190103T042649Z">
        <seg>Characters (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check your answers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061926Z" creationid="pingfangx" creationdate="20180521T061923Z">
        <seg>检查一下你的答案</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check your answers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040204Z" creationid="pingfangx" creationdate="20180518T040204Z">
        <seg>检查一下你的答案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chevrolet's implementation will be substantially different from that of Toyota, of course, but both manufacturers will adhere to the same interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054408Z" creationid="pingfangx" creationdate="20190102T054408Z">
        <seg>当然，雪佛兰的实现将与丰田的实现大不相同，但两家制造商都将遵循相同的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040212Z" creationid="pingfangx" creationdate="20180607T040201Z">
        <seg>Class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class Members</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022709Z" creationid="pingfangx" creationdate="20190103T022709Z">
        <seg>类成员</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043225Z" creationid="pingfangx" creationdate="20180607T043225Z">
        <seg>类方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042217Z" creationid="pingfangx" creationdate="20180607T042217Z">
        <seg>类变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class instance creation expression:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024159Z" creationid="pingfangx" creationdate="20190102T024153Z">
        <seg>类实例创建表达式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class methods &lt;b0&gt;cannot&lt;/b0&gt; access instance variables or instance methods directlythey must use an object reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065211Z" creationid="pingfangx" creationdate="20180705T065211Z">
        <seg>类方法 &lt;b0&gt;不能&lt;/b0&gt; 直接访问实例变量或实例方法 - 它们必须使用对象引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class methods can access class variables and class methods directly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065158Z" creationid="pingfangx" creationdate="20180705T065158Z">
        <seg>类方法可以直接访问类变量和类方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class variables (static fields) are fields declared with the &lt;c0&gt;static&lt;/c0&gt; modifier; there is exactly one copy of a class variable, regardless of how many times the class has been instantiated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061524Z" creationid="pingfangx" creationdate="20180521T061524Z">
        <seg>类变量(静态字段)是使用 &lt;c0&gt;static&lt;/c0&gt; 修饰符声明的字段;无论类实例化了多少次，都只有一个类变量的副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class variables are referenced by the class name itself, as in</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043104Z" creationid="pingfangx" creationdate="20180607T043050Z">
        <seg>类变量由类名称自身引用，如在</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class variables are shared by all instances of a class and can be accessed through the class name as well as an instance reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082133Z" creationid="pingfangx" creationdate="20180705T082133Z">
        <seg>类变量由类的所有实例共享，可以通过类名和实例引用来访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class vs. instance members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T090208Z" creationid="pingfangx" creationdate="20180601T090208Z">
        <seg>类与实例成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class1.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013942Z" creationid="pingfangx" creationdate="20190102T013942Z">
        <seg>Class1.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class2 should define one constructor and one method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021204Z" creationid="pingfangx" creationdate="20190102T021204Z">
        <seg>Class2 should define one constructor and one method:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ClassName.methodName(args)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043512Z" creationid="pingfangx" creationdate="20180607T043512Z">
        <seg>ClassName.methodName(args)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ClassName::new</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084619Z" creationid="pingfangx" creationdate="20181228T084619Z">
        <seg>ClassName::new</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091955Z" creationid="pingfangx" creationdate="20180521T091955Z">
        <seg>类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023220Z" creationid="pingfangx" creationdate="20180525T023220Z">
        <seg>Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes Rectangle, Line, Bezier, and Circle Inherit from GraphicObject</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022228Z" creationid="pingfangx" creationdate="20190103T022228Z">
        <seg>Classes Rectangle, Line, Bezier, and Circle Inherit from GraphicObject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes and Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091952Z" creationid="pingfangx" creationdate="20180521T091950Z">
        <seg>类和对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes and Packages of the Example Used to Illustrate Access Levels</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041357Z" creationid="pingfangx" creationdate="20180607T041357Z">
        <seg>用于说明访问级别的示例的类和包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes can be derived from classes that are derived from classes that are derived from classes, and so on, and ultimately derived from the topmost class, &lt;c14&gt;Object&lt;/c14&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081330Z" creationid="pingfangx" creationdate="20190102T081330Z">
        <seg>类可以派生自一个派生类，该派生类可以派生自一个派生类，依此类推，最终派生自最顶层的类 &lt;c14&gt;Object&lt;/c14&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes near the bottom of the hierarchy provide more specialized behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081920Z" creationid="pingfangx" creationdate="20190102T081920Z">
        <seg>层次结构底部附近的类提供更专业的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code re-use: If an object already exists (perhaps written by another software developer), you can use that object in your program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061958Z" creationid="pingfangx" creationdate="20180518T061958Z">
        <seg>代码重用：如果某个对象已经存在(可能由另一个软件开发人员编写)，则可以在程序中使用该对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code that is outside the object's class must use an object reference or expression, followed by the dot (.) operator, followed by a simple field name, as in:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073604Z" creationid="pingfangx" creationdate="20180601T073604Z">
        <seg>代码在对象的类之外必须使用对象引用或表达式，后面跟着点(.)运算符，后跟一个简单的字段名称，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Collections are used to store, retrieve, manipulate, and communicate aggregate data.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085648Z" creationid="pingfangx" creationdate="20180706T085648Z">
        <seg>集合用于存储，检索，操作和传递聚合数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Collections.sort(entireDeck);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065425Z" creationid="pingfangx" creationdate="20190102T065425Z">
        <seg>Collections.sort(entireDeck);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Collections.sort(entireDeck, c);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T070923Z" creationid="pingfangx" creationdate="20190102T070923Z">
        <seg>Collections.sort(entireDeck, c);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Command-line arguments let users affect the operation of the application without recompiling it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035742Z" creationid="pingfangx" creationdate="20180518T035742Z">
        <seg>命令行参数允许用户在不重新编译的情况下影响应用程序的操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comments are ignored by the compiler but are useful to other programmers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035441Z" creationid="pingfangx" creationdate="20180518T035441Z">
        <seg>注释被编译器忽略，但对其他程序员很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Common Problems (and Their Solutions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040725Z" creationid="pingfangx" creationdate="20180518T040720Z">
        <seg>常见问题(及其解决方案)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Common behavior can be defined in a &lt;s0&gt;superclass&lt;/s0&gt; and inherited into a &lt;s1&gt;subclass&lt;/s1&gt; using the &lt;s2&gt;extends&lt;/s2&gt; keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064923Z" creationid="pingfangx" creationdate="20180518T064923Z">
        <seg>常见行为可以在 &lt;s0&gt;superclass&lt;/s0&gt; 中定义，并使用 &lt;s2&gt;extends&lt;/s2&gt; 关键字继承到 &lt;s1&gt;subclass&lt;/s1&gt; 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Common behavior can be defined in a ___ and inherited into a ___ using the ___ keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064728Z" creationid="pingfangx" creationdate="20180518T064728Z">
        <seg>常见行为可以在___中定义，并使用___关键字继承到___中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Common examples include compass directions (values of NORTH, SOUTH, EAST, and WEST) and the days of the week.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015250Z" creationid="pingfangx" creationdate="20190102T015250Z">
        <seg>常见示例包括罗盘方向(NORTH，SOUTH，EAST 和 WEST 的值)和星期几。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comparator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071937Z" creationid="pingfangx" creationdate="20190102T071937Z">
        <seg>Comparator</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comparator.comparing(Card::getRank)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072144Z" creationid="pingfangx" creationdate="20190102T072144Z">
        <seg>Comparator.comparing(Card::getRank)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compares this &lt;c0&gt;Number&lt;/c0&gt; object to the argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030708Z" creationid="pingfangx" creationdate="20190103T030708Z">
        <seg>将此 &lt;c0&gt;Number&lt;/c0&gt; 对象与参数进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compares two strings lexicographically, ignoring differences in case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075630Z" creationid="pingfangx" creationdate="20190103T075630Z">
        <seg>按字典顺序比较两个字符串，忽略大小写的差异。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compares two strings lexicographically.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075558Z" creationid="pingfangx" creationdate="20190103T075558Z">
        <seg>按字典顺序比较两个字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comparing Strings and Portions of Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092755Z" creationid="pingfangx" creationdate="20180521T092755Z">
        <seg>比较字符串和字符串的部分</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comparing Strings and Portions of Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075343Z" creationid="pingfangx" creationdate="20190103T075343Z">
        <seg>Comparing Strings and Portions of Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comparing two arrays to determine if they are equal or not (the &lt;c0&gt;equals&lt;/c0&gt; method).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T054442Z" creationid="pingfangx" creationdate="20180521T054442Z">
        <seg>比较两个数组以确定它们是否相等(&lt;c0&gt;equals&lt;/c0&gt; 方法)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compelling reasons for using nested classes include the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090715Z" creationid="pingfangx" creationdate="20180705T090715Z">
        <seg>使用嵌套类的令人信服的理由包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compilation will fail if those</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064042Z" creationid="pingfangx" creationdate="20180518T063926Z">
        <seg></seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile and run &lt;c2&gt;Class1&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013948Z" creationid="pingfangx" creationdate="20190102T013948Z">
        <seg>编译并运行 &lt;c2&gt;Class1&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile and run &lt;c3&gt;Class1&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014759Z" creationid="pingfangx" creationdate="20190102T014759Z">
        <seg>编译并运行 &lt;c3&gt;Class1&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile and run Class1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021156Z" creationid="pingfangx" creationdate="20190102T021156Z">
        <seg>编译并运行 Class1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile and run InnerClassDemo.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021053Z" creationid="pingfangx" creationdate="20190102T021053Z">
        <seg>编译并运行 InnerClassDemo。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile the Source File into a .class File</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034721Z" creationid="pingfangx" creationdate="20180518T034721Z">
        <seg>将源文件编译为.class 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile the Source File into a &lt;c0&gt;.class&lt;/c0&gt; File</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034351Z" creationid="pingfangx" creationdate="20180518T034351Z">
        <seg>将源文件编译为 &lt;c0&gt;.class&lt;/c0&gt; 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile the source file into a .class file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034456Z" creationid="pingfangx" creationdate="20180518T034456Z">
        <seg>将源文件编译成.class 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiling and Running Swing Programs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021057Z" creationid="pingfangx" creationdate="20190102T021057Z">
        <seg>编译和运行 Swing 程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiling and executing &lt;c8&gt;Subclass&lt;/c8&gt; prints the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095402Z" creationid="pingfangx" creationdate="20190102T095402Z">
        <seg>编译并执行 &lt;c8&gt;Subclass&lt;/c8&gt; 将打印以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ComputeInitials.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085901Z" creationid="pingfangx" creationdate="20190103T085901Z">
        <seg>ComputeInitials.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ComputeResult.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085237Z" creationid="pingfangx" creationdate="20190103T085237Z">
        <seg>ComputeResult.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Concatenating Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064231Z" creationid="pingfangx" creationdate="20190103T064231Z">
        <seg>连接字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conceptually you can think of packages as being similar to different folders on your computer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064331Z" creationid="pingfangx" creationdate="20180518T064331Z">
        <seg>从概念上讲，您可以将包视为与计算机上的不同文件夹类似。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conditional Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071658Z" creationid="pingfangx" creationdate="20180521T071658Z">
        <seg>条件运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conditional expressions, &lt;c0&gt;?:&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081937Z" creationid="pingfangx" creationdate="20181228T081937Z">
        <seg>条件表达式，&lt;c0&gt;?:&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Congratulations!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034947Z" creationid="pingfangx" creationdate="20180518T034947Z">
        <seg>恭喜！</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consequently, the JDK defines several standard functional interfaces, which you can find in the package &lt;c1&gt;java.util.function&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092835Z" creationid="pingfangx" creationdate="20180706T092835Z">
        <seg>因此，JDK 定义了几个标准函数式接口，您可以在包 &lt;c1&gt;java.util.function&lt;/c1&gt; 中找到它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consequently, they cannot contain most kinds of static declarations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T142957Z" creationid="pingfangx" creationdate="20180705T142957Z">
        <seg>因此，它们不能包含大多数类型的静态声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consequently, when you use the variable &lt;c7&gt;x&lt;/c7&gt; in the method &lt;c8&gt;methodInFirstLevel&lt;/c8&gt;, it refers to the method parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091639Z" creationid="pingfangx" creationdate="20180705T091639Z">
        <seg>因此，当您在方法 &lt;c8&gt;methodInFirstLevel&lt;/c8&gt; 中使用变量 &lt;c7&gt;x&lt;/c7&gt; 时，它引用方法参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consequently, you can directly access fields, methods, and local variables of the enclosing scope.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080733Z" creationid="pingfangx" creationdate="20181228T080733Z">
        <seg>因此，您可以直接访问封闭范围的字段，方法和局部变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consequently, you can invoke the method &lt;c2&gt;transferElements&lt;/c2&gt; with a lambda expression as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T085027Z" creationid="pingfangx" creationdate="20181228T085027Z">
        <seg>因此，您可以使用 lambda 表达式调用方法 &lt;c2&gt;transferElements&lt;/c2&gt;，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consequently, you can use &lt;c1&gt;Predicate&lt;T&gt;&lt;/c1&gt; in place of &lt;c2&gt;CheckPerson&lt;/c2&gt; as the following method demonstrates:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093433Z" creationid="pingfangx" creationdate="20180706T093433Z">
        <seg>因此，您可以使用 &lt;c1&gt;Predicate&lt;T&gt;&lt;/c1&gt; 代替 &lt;c2&gt;CheckPerson&lt;/c2&gt;，如以下方法所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consequently, you may have compatibility issues if you serialize an inner class and then deserialize it with a different JRE implementation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091909Z" creationid="pingfangx" creationdate="20180705T091909Z">
        <seg>因此，如果序列化内部类，然后使用其他 JRE 实现反序列化，则可能存在兼容性问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider a bicycle, for example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061703Z" creationid="pingfangx" creationdate="20180518T061703Z">
        <seg>考虑一下自行车，例如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider again the &lt;a0&gt;&lt;c1&gt;Person&lt;/c1&gt;&lt;/a0&gt; class discussed in the section &lt;a2&gt;Lambda Expressions&lt;/a2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082800Z" creationid="pingfangx" creationdate="20181228T082800Z">
        <seg>再次考虑 &lt;a2&gt;Lambda Expressions&lt;/a2&gt; 部分中讨论的 &lt;a0&gt;&lt;c1&gt;Person&lt;/c1&gt;&lt;/a0&gt; 类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider an example that contains two classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090628Z" creationid="pingfangx" creationdate="20190102T090628Z">
        <seg>考虑一个包含两个类的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider an interface that defines how to compare the size of objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061925Z" creationid="pingfangx" creationdate="20190102T061925Z">
        <seg>考虑一个定义如何比较对象大小的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider an interface that you have developed called &lt;c0&gt;DoIt&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062839Z" creationid="pingfangx" creationdate="20190102T062839Z">
        <seg>考虑一个名为 &lt;c0&gt;DoIt&lt;/c0&gt; 的开发接口：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the &lt;a4&gt;&lt;c5&gt;Card&lt;/c5&gt;&lt;/a4&gt;, &lt;a6&gt;&lt;c7&gt;Deck&lt;/c7&gt;&lt;/a6&gt;, and &lt;a8&gt;&lt;c9&gt;DisplayDeck&lt;/c9&gt;&lt;/a8&gt; classes you wrote in &lt;a10&gt;Questions and Exercises: Classes&lt;/a10&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023526Z" creationid="pingfangx" creationdate="20190103T023526Z">
        <seg>考虑 &lt;a4&gt;&lt;c5&gt;Card&lt;/c5&gt;&lt;/a4&gt;，&lt;a6&gt;&lt;c7&gt;Deck&lt;/c7&gt;&lt;/a6&gt; 和 &lt;a8&gt;&lt;c9&gt;DisplayDeck&lt;/c9&gt;&lt;/a8&gt; ，即你在 &lt;a10&gt;Questions and Exercises: Classes&lt;/a10&gt; 中写的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the &lt;c0&gt;Card&lt;/c0&gt; and &lt;c1&gt;Deck&lt;/c1&gt; classes as described in &lt;a2&gt;Questions and Exercises: Classes&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065209Z" creationid="pingfangx" creationdate="20190102T065209Z">
        <seg>考虑 &lt;a2&gt;Questions and Exercises: Classes&lt;/a2&gt; 中描述的 &lt;c0&gt;Card&lt;/c0&gt; 和 &lt;c1&gt;Deck&lt;/c1&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the JavaFX example &lt;a0&gt; &lt;c1&gt;HelloWorld.java&lt;/c1&gt;&lt;/a0&gt; (from the section &lt;a2&gt; Hello World, JavaFX Style&lt;/a2&gt; from &lt;a3&gt; Getting Started with JavaFX&lt;/a3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065624Z" creationid="pingfangx" creationdate="20180706T065624Z">
        <seg>考虑 JavaFX 示例 &lt;a0&gt; &lt;c1&gt;HelloWorld.java&lt;/c1&gt;&lt;/a0&gt;(来自 &lt;a2&gt; Hello World, JavaFX Style&lt;/a2&gt; &lt;a3&gt; Getting Started with JavaFX&lt;/a3&gt;) 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the example about computer-controlled cars that can now fly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091750Z" creationid="pingfangx" creationdate="20190102T091750Z">
        <seg>考虑一下现在可以飞行的计算机控制汽车的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following class:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082501Z" creationid="pingfangx" creationdate="20180705T082501Z">
        <seg>考虑以下类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following classes and interfaces:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091459Z" creationid="pingfangx" creationdate="20190102T091459Z">
        <seg>考虑以下类和接口：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following classes:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091251Z" creationid="pingfangx" creationdate="20180705T091251Z">
        <seg>考虑以下类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following code snippet.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072316Z" creationid="pingfangx" creationdate="20180521T072316Z">
        <seg>考虑下面的代码片段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following code snippet:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072948Z" creationid="pingfangx" creationdate="20180521T072948Z">
        <seg>考虑下面的代码片段：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083933Z" creationid="pingfangx" creationdate="20190103T083933Z">
        <seg>请考虑以下代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following interface, &lt;a0&gt;&lt;c1&gt;TimeClient&lt;/c1&gt;&lt;/a0&gt;, as described in &lt;a2&gt;Answers to Questions and Exercises: Interfaces&lt;/a2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060822Z" creationid="pingfangx" creationdate="20190102T060822Z">
        <seg>考虑以下接口 &lt;a0&gt;&lt;c1&gt;TimeClient&lt;/c1&gt;&lt;/a0&gt;，如 &lt;a2&gt;Answers to Questions and Exercises: Interfaces&lt;/a2&gt; 中所述：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following interfaces and classes:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091648Z" creationid="pingfangx" creationdate="20190102T091648Z">
        <seg>考虑以下接口和类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084408Z" creationid="pingfangx" creationdate="20190103T084408Z">
        <seg>考虑以下方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following string:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085142Z" creationid="pingfangx" creationdate="20190103T085142Z">
        <seg>请考虑以下字符串：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following two classes:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023447Z" creationid="pingfangx" creationdate="20190103T023447Z">
        <seg>考虑以下两个类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following two functional interfaces ( &lt;a0&gt;&lt;c1&gt;java.lang.Runnable&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;java.util.concurrent.Callable&lt;V&gt;&lt;/c3&gt;&lt;/a2&gt;):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082126Z" creationid="pingfangx" creationdate="20181228T082126Z">
        <seg>考虑以下两个函数式接口(&lt;a0&gt;&lt;c1&gt;java.lang.Runnable&lt;/c1&gt;&lt;/a0&gt; 和 &lt;a2&gt;&lt;c3&gt;java.util.concurrent.Callable&lt;V&gt;&lt;/c3&gt;&lt;/a2&gt;)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the instantiation of the &lt;c0&gt;frenchGreeting&lt;/c0&gt; object:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061208Z" creationid="pingfangx" creationdate="20180706T061208Z">
        <seg>考虑 &lt;c0&gt;frenchGreeting&lt;/c0&gt; 对象的实例化：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider this class, &lt;c2&gt;Superclass&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094933Z" creationid="pingfangx" creationdate="20190102T094933Z">
        <seg>考虑这个类，&lt;c2&gt;Superclass&lt;/c2&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider this code that tests two instances of the &lt;c0&gt;Book&lt;/c0&gt; class for equality:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102637Z" creationid="pingfangx" creationdate="20190102T102637Z">
        <seg>考虑这个代码来测试 &lt;c0&gt;Book&lt;/c0&gt; 类的两个实例是否相等：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider this implementation of the &lt;c0&gt;House&lt;/c0&gt; interface, shown in Question 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041558Z" creationid="pingfangx" creationdate="20190102T041558Z">
        <seg>考虑问题 1 中所示的 &lt;c0&gt;House&lt;/c0&gt; 接口的这种实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider using abstract classes if any of these statements apply to your situation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021429Z" creationid="pingfangx" creationdate="20190103T021303Z">
        <seg>如果任何这些语句适用于您的情况，请考虑使用抽象类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider using interfaces if any of these statements apply to your situation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021425Z" creationid="pingfangx" creationdate="20190103T021425Z">
        <seg>如果任何这些语句适用于您的情况，请考虑使用接口：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Considers the string beginning at the index &lt;c0&gt;offset&lt;/c0&gt;, and returns &lt;c1&gt;true&lt;/c1&gt; if it begins with the substring specified as an argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075549Z" creationid="pingfangx" creationdate="20190103T075549Z">
        <seg>考虑从索引 &lt;c0&gt;offset&lt;/c0&gt; 开始的字符串，如果以指定为参数的子字符串开头，则返回 &lt;c1&gt;true&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constants</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065234Z" creationid="pingfangx" creationdate="20180705T065234Z">
        <seg>常量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constants and Basic Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035437Z" creationid="pingfangx" creationdate="20190103T035337Z">
        <seg>常量和基本方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constants defined in this way cannot be reassigned, and it is a compile-time error if your program tries to do so.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065315Z" creationid="pingfangx" creationdate="20180705T065315Z">
        <seg>以这种方式定义的常量不能重新分配，如果您的程序尝试这样做，则它是编译时错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constructor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081034Z" creationid="pingfangx" creationdate="20190103T081034Z">
        <seg>构造函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constructor declarations look like method declarationsexcept that they use the name of the class and have no return type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034633Z" creationid="pingfangx" creationdate="20180528T034633Z">
        <seg>构造函数声明看起来像方法声明，除了它们使用类的名称并且没有返回类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constructors are not members, so they are not inherited by subclasses, but the constructor of the superclass can be invoked from the subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081802Z" creationid="pingfangx" creationdate="20190102T081802Z">
        <seg>构造函数不是成员，因此它们不是由子类继承的，但是可以从子类调用超类的构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constructors that initialize a new instance of a class use the name of the class and look like methods without a return type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082050Z" creationid="pingfangx" creationdate="20180705T082050Z">
        <seg>构造函数初始化类的新实例的，它使用类的名称，看起来像没有返回类型的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constructs a string builder containing the same characters as the specified &lt;c0&gt;CharSequence&lt;/c0&gt;, plus an extra 16 empty elements trailing the &lt;c1&gt;CharSequence&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081113Z" creationid="pingfangx" creationdate="20190103T081113Z">
        <seg>构造一个 string builder，其中包含与指定的 &lt;c0&gt;CharSequence&lt;/c0&gt; 相同的字符，以及尾随 &lt;c1&gt;CharSequence&lt;/c1&gt; 的额外 16 个空元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consumer&lt;Integer&gt; myConsumer = (x) -&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080035Z" creationid="pingfangx" creationdate="20181228T080035Z">
        <seg>Consumer&lt;Integer&gt; myConsumer = (x) -&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consumer&lt;Integer&gt; myConsumer = (y) -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075959Z" creationid="pingfangx" creationdate="20181228T075959Z">
        <seg>Consumer&lt;Integer&gt; myConsumer = (y) -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consumer&lt;String&gt; block) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094310Z" creationid="pingfangx" creationdate="20180706T094310Z">
        <seg>Consumer&lt;String&gt; block) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consumer&lt;Y&gt; block) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100548Z" creationid="pingfangx" creationdate="20180706T100548Z">
        <seg>Consumer&lt;Y&gt; block) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ContainingClass::staticMethodName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084530Z" creationid="pingfangx" creationdate="20181228T084530Z">
        <seg>ContainingClass::staticMethodName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ContainingType::methodName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084616Z" creationid="pingfangx" creationdate="20181228T084616Z">
        <seg>ContainingType::methodName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Control Flow Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072434Z" creationid="pingfangx" creationdate="20180518T072434Z">
        <seg>控制流语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Control Flow Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080537Z" creationid="pingfangx" creationdate="20180521T080537Z">
        <seg>Control Flow Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Control flow continues with the first statement following the &lt;c3&gt;switch&lt;/c3&gt; block.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082225Z" creationid="pingfangx" creationdate="20180521T082225Z">
        <seg>控制流程继续执行 &lt;c3&gt;switch&lt;/c3&gt; 块之后的第一条语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Control flow is transferred to the statement immediately following the labeled (terminated) statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090209Z" creationid="pingfangx" creationdate="20180521T090209Z">
        <seg>控制流被转移到紧随标签(已终止)语句之后的语句中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Control flow then transfers to the statement after the &lt;c2&gt;for&lt;/c2&gt; loop.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085923Z" creationid="pingfangx" creationdate="20180521T085923Z">
        <seg>控制流然后转移到 &lt;c2&gt;for&lt;/c2&gt; 循环之后的语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Controlling Access to Members of a Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092127Z" creationid="pingfangx" creationdate="20180521T092127Z">
        <seg>控制对类成员的访问</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Controlling Access to Members of a Class (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020438Z" creationid="pingfangx" creationdate="20180607T020438Z">
        <seg>Controlling Access to Members of a Class (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conventions (and common sense) apply to this rule as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074351Z" creationid="pingfangx" creationdate="20180518T074351Z">
        <seg>公约(和常识)也适用于此规则。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conversion Methods, &lt;c0&gt;Integer&lt;/c0&gt; Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030844Z" creationid="pingfangx" creationdate="20190103T030844Z">
        <seg>&lt;c0&gt;Integer&lt;/c0&gt; 类的转换方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033218Z" creationid="pingfangx" creationdate="20190103T033218Z">
        <seg>转换器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converters and Flags Used in &lt;c0&gt;TestFormat.java&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033210Z" creationid="pingfangx" creationdate="20190103T033210Z">
        <seg>&lt;c0&gt;TestFormat.java&lt;/c0&gt; 中使用的转换器和标志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converters and flags that are used in the sample program TestFormat.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033203Z" creationid="pingfangx" creationdate="20190103T033203Z">
        <seg>示例程序 TestFormat.java 中使用的转换器和标志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converting Between Numbers and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092743Z" creationid="pingfangx" creationdate="20180521T092743Z">
        <seg>在数字和字符串之间转换</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converting Between Numbers and Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065006Z" creationid="pingfangx" creationdate="20190103T065006Z">
        <seg>Converting Between Numbers and Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converting Numbers to Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065309Z" creationid="pingfangx" creationdate="20190103T065309Z">
        <seg>将数字转换为字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converting Strings to Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065015Z" creationid="pingfangx" creationdate="20190103T065015Z">
        <seg>将字符串转换为数字</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converting a primitive value (an &lt;t0&gt;int&lt;/t0&gt;, for example) into an object of the corresponding wrapper class (&lt;t1&gt;Integer&lt;/t1&gt;) is called autoboxing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084243Z" creationid="pingfangx" creationdate="20190103T084243Z">
        <seg>将基本类型(例如 &lt;t0&gt;int&lt;/t0&gt;)转换为相应包装类(&lt;t1&gt;Integer&lt;/t1&gt;)的对象称为自动装箱。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converting an object of a wrapper type (&lt;t0&gt;Integer&lt;/t0&gt;) to its corresponding primitive (&lt;t1&gt;int&lt;/t1&gt;) value is called unboxing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084525Z" creationid="pingfangx" creationdate="20190103T084525Z">
        <seg>将包装类型(&lt;t0&gt;Integer&lt;/t0&gt;)的对象转换为其对应的基本类型(&lt;t1&gt;int&lt;/t1&gt;)值称为拆箱。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converts rectangular coordinates &lt;c0&gt;(x, y)&lt;/c0&gt; to polar coordinate &lt;c1&gt;(r, theta)&lt;/c1&gt; and returns &lt;c2&gt;theta&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040401Z" creationid="pingfangx" creationdate="20190103T040401Z">
        <seg>将直角坐标 &lt;c0&gt;(x, y)&lt;/c0&gt; 转换为极坐标 &lt;c1&gt;(r, theta)&lt;/c1&gt; 并返回 &lt;c2&gt;theta&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converts the argument to degrees or radians.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040408Z" creationid="pingfangx" creationdate="20190103T040408Z">
        <seg>将参数转换为度数或弧度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Converts the value of this &lt;c0&gt;Number&lt;/c0&gt; object to the primitive data type returned.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030700Z" creationid="pingfangx" creationdate="20190103T030700Z">
        <seg>将此 &lt;c0&gt;Number&lt;/c0&gt; 对象的值转换为返回的基本数据类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copying Arrays</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042349Z" creationid="pingfangx" creationdate="20180521T042349Z">
        <seg>复制数组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copyright © 1995, 2017 Oracle and/or its affiliates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031857Z" creationid="pingfangx" creationdate="20180518T031857Z">
        <seg>Copyright © 1995, 2017 Oracle and/or its affiliates.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Core trail</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040634Z" creationid="pingfangx" creationdate="20180518T040634Z">
        <seg>核心路径</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Count is: 1
Count is: 2
Count is: 3
Count is: 4
Count is: 5
Count is: 6
Count is: 7
Count is: 8
Count is: 9
Count is: 10</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085240Z" creationid="pingfangx" creationdate="20180521T085240Z">
        <seg>Count is: 1
Count is: 2
Count is: 3
Count is: 4
Count is: 5
Count is: 6
Count is: 7
Count is: 8
Count is: 9
Count is: 10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a Source File</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034347Z" creationid="pingfangx" creationdate="20180518T034347Z">
        <seg>创建一个源文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a file called Class2.java that defines subclasses</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021159Z" creationid="pingfangx" creationdate="20190102T021159Z">
        <seg>Create a file called Class2.java that defines subclasses</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a program that is similar to the previous one but has the following differences:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041607Z" creationid="pingfangx" creationdate="20190103T041607Z">
        <seg>创建一个与前一个类似的程序，但有以下区别：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a program that reads an unspecified number of integer arguments from the command line and adds them together.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041535Z" creationid="pingfangx" creationdate="20190103T041535Z">
        <seg>创建一个程序，从命令行读取未指定数量的整数参数，并将它们一起添加。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a small program that defines some fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061845Z" creationid="pingfangx" creationdate="20180521T061845Z">
        <seg>创建一个定义一些字段的小程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a source file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034448Z" creationid="pingfangx" creationdate="20180518T034448Z">
        <seg>创建一个源文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create new classes for each real-world object that you observed at the beginning of this trail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064802Z" creationid="pingfangx" creationdate="20180518T064802Z">
        <seg>为在此路径开头处观察到的每个真实世界对象创建新类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates a string builder whose value is initialized by the specified string, plus an extra 16 empty elements trailing the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081316Z" creationid="pingfangx" creationdate="20190103T081201Z">
        <seg>创建一个 string builder，其值由指定的字符串初始化，另外还有 16 个空字符串尾随该字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates an empty string builder with a capacity of 16 (16 empty elements).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081052Z" creationid="pingfangx" creationdate="20190103T081052Z">
        <seg>创建一个容量为 16 的空 string builder (16 个空元素)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates an empty string builder with the specified initial capacity.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081128Z" creationid="pingfangx" creationdate="20190103T081128Z">
        <seg>创建具有指定初始容量的空 string builder。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating Format Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064601Z" creationid="pingfangx" creationdate="20190103T064601Z">
        <seg>创建格式字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating Graphical User Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031343Z" creationid="pingfangx" creationdate="20180518T031343Z">
        <seg>创建图形用户界面</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092102Z" creationid="pingfangx" creationdate="20180521T092102Z">
        <seg>创建对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040732Z" creationid="pingfangx" creationdate="20180601T040732Z">
        <seg>Creating Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062852Z" creationid="pingfangx" creationdate="20190103T062852Z">
        <seg>创建字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating Your First Application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034345Z" creationid="pingfangx" creationdate="20180518T034345Z">
        <seg>创建你的第一个应用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating a Package</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093012Z" creationid="pingfangx" creationdate="20180521T093012Z">
        <seg>创建一个包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating and Using Packages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093009Z" creationid="pingfangx" creationdate="20180521T093009Z">
        <seg>创建和使用包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating, Initializing, and Accessing an Array</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T035120Z" creationid="pingfangx" creationdate="20180521T035120Z">
        <seg>创建，初始化和访问数组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>D.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021040Z" creationid="pingfangx" creationdate="20190102T021040Z">
        <seg>D.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DEST result = collectionFactory.get();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084931Z" creationid="pingfangx" creationdate="20181228T084931Z">
        <seg>DEST result = collectionFactory.get();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DEST transferElements(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084929Z" creationid="pingfangx" creationdate="20181228T084929Z">
        <seg>DEST transferElements(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DEUCE  (2 , "Two"  ),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065240Z" creationid="pingfangx" creationdate="20190102T065240Z">
        <seg>DEUCE  (2 , "Two"  ),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DIAMONDS (1, "Diamonds"),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065234Z" creationid="pingfangx" creationdate="20190102T065234Z">
        <seg>DIAMONDS (1, "Diamonds"),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Data Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082155Z" creationid="pingfangx" creationdate="20180518T082155Z">
        <seg>数据类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DataStructure ds = new DataStructure()
// ...
ds.print(DataStructure::isEvenIndex);
ds.print(DataStructure::isOddIndex);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014205Z" creationid="pingfangx" creationdate="20190102T014205Z">
        <seg>DataStructure ds = new DataStructure()
// ...
ds.print(DataStructure::isEvenIndex);
ds.print(DataStructure::isOddIndex);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DataStructure ds = new DataStructure();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101130Z" creationid="pingfangx" creationdate="20180705T101130Z">
        <seg>DataStructure ds = new DataStructure();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DataStructure ds = new DataStructure();
ds.print(new EvenIterator());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014824Z" creationid="pingfangx" creationdate="20190102T014824Z">
        <seg>DataStructure ds = new DataStructure();
ds.print(new EvenIterator());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DataStructure.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015145Z" creationid="pingfangx" creationdate="20190102T015145Z">
        <seg>DataStructure.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DataStructureIterator iterator = this.new EvenIterator();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100911Z" creationid="pingfangx" creationdate="20180705T100911Z">
        <seg>DataStructureIterator iterator = this.new EvenIterator();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Day day;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015338Z" creationid="pingfangx" creationdate="20190102T015338Z">
        <seg>Day day;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deciding when to omit the braces is a matter of personal taste.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081020Z" creationid="pingfangx" creationdate="20180521T081020Z">
        <seg>决定何时省略大括号是个人品味的问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deciding whether to use &lt;c0&gt;if-then-else&lt;/c0&gt; statements or a &lt;c1&gt;switch&lt;/c1&gt; statement is based on readability and the expression that the statement is testing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082138Z" creationid="pingfangx" creationdate="20180521T082122Z">
        <seg>决定是使用 &lt;c0&gt;if-then-else&lt;/c0&gt; 语句还是 &lt;c1&gt;switch&lt;/c1&gt; 语句是基于可读性和语句正在测试的表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Decimal: Base 10, whose digits consists of the numbers 0 through 9; this is the number system you use every day</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082809Z" creationid="pingfangx" creationdate="20180518T082809Z">
        <seg>十进制：基数 10，其数字由数字 0 到 9 组成;这是你每天使用的数字系统</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DecimalFormat myFormatter = new DecimalFormat(pattern);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034049Z" creationid="pingfangx" creationdate="20190103T034049Z">
        <seg>DecimalFormat myFormatter = new DecimalFormat(pattern);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DecimalFormatDemo.java output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034120Z" creationid="pingfangx" creationdate="20190103T034107Z">
        <seg>DecimalFormatDemo.java 输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deck deckFactory();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065305Z" creationid="pingfangx" creationdate="20190102T065305Z">
        <seg>Deck deckFactory();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declarations in a lambda expression are interpreted just as they are in the enclosing environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075926Z" creationid="pingfangx" creationdate="20181228T075926Z">
        <seg>lambda 表达式中的声明与封闭环境中的声明一样被解释。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declarations of a type (such as a variable) in a local class shadow declarations in the enclosing scope that have the same name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123625Z" creationid="pingfangx" creationdate="20180705T123625Z">
        <seg>在局部类中声明类型(例如变量)，会遮蔽封闭范围内具有相同名称的声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring Anonymous Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060347Z" creationid="pingfangx" creationdate="20180706T060347Z">
        <seg>声明匿名类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092000Z" creationid="pingfangx" creationdate="20180521T092000Z">
        <seg>声明类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025823Z" creationid="pingfangx" creationdate="20180525T025823Z">
        <seg>Declaring Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring Local Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121254Z" creationid="pingfangx" creationdate="20180705T121254Z">
        <seg>声明局部类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring Member Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092004Z" creationid="pingfangx" creationdate="20180521T092004Z">
        <seg>声明成员变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring Member Variables (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T062838Z" creationid="pingfangx" creationdate="20180525T062838Z">
        <seg>Declaring Member Variables (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring a Variable to Refer to an Array</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021904Z" creationid="pingfangx" creationdate="20180521T021904Z">
        <seg>声明一个变量来引用一个数组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring a Variable to Refer to an Object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042459Z" creationid="pingfangx" creationdate="20180601T042459Z">
        <seg>声明一个变量来引用一个对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring an Annotation Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092327Z" creationid="pingfangx" creationdate="20180521T092327Z">
        <seg>声明一个注解类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring an Annotation Type (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024654Z" creationid="pingfangx" creationdate="20190102T024654Z">
        <seg>Declaring an Annotation Type (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Decodes a string into an integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030900Z" creationid="pingfangx" creationdate="20190103T030900Z">
        <seg>将字符串解码为整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Decrement operator; decrements a value by 1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065208Z" creationid="pingfangx" creationdate="20180521T065129Z">
        <seg>递减运算符；将值减 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092536Z" creationid="pingfangx" creationdate="20180521T092536Z">
        <seg>默认方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default Methods (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055832Z" creationid="pingfangx" creationdate="20190102T055832Z">
        <seg>Default Methods (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default Value (for fields)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082157Z" creationid="pingfangx" creationdate="20180518T082157Z">
        <seg>默认值(对于字段)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default Values</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082057Z" creationid="pingfangx" creationdate="20180518T082057Z">
        <seg>默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default methods are defined with the &lt;c3&gt;default&lt;/c3&gt; modifier, and static methods with the &lt;c4&gt;static&lt;/c4&gt; keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061716Z" creationid="pingfangx" creationdate="20190102T061716Z">
        <seg>默认方法使用 &lt;c3&gt;default&lt;/c3&gt; 修饰符定义，静态方法使用 &lt;c4&gt;static&lt;/c4&gt; 关键字定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default methods enable you to add new functionality to existing interfaces and ensure binary compatibility with code written for older versions of those interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065106Z" creationid="pingfangx" creationdate="20190102T065106Z">
        <seg>默认方法使您能够向现有接口添加新函数式，并确保与为这些接口的旧版本编写的代码的二进制兼容性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default methods enable you to add new functionality to the interfaces of your libraries and ensure binary compatibility with code written for older versions of those interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060812Z" creationid="pingfangx" creationdate="20190102T060812Z">
        <seg>默认方法使您能够向库的接口添加新函数式，并确保与为这些接口的旧版本编写的代码的二进制兼容性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default values for primitive types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082153Z" creationid="pingfangx" creationdate="20180518T082153Z">
        <seg>基本类型的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define a method named &lt;c0&gt;print(DataStructureIterator iterator)&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014030Z" creationid="pingfangx" creationdate="20190102T014030Z">
        <seg>定义名为 &lt;c0&gt;print(DataStructureIterator iterator)&lt;/c0&gt; 的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define a method named &lt;c0&gt;print(java.util.Function&lt;Integer, Boolean&gt; iterator)&lt;/c0&gt; that performs the same function as &lt;c1&gt;print(DataStructureIterator iterator)&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014119Z" creationid="pingfangx" creationdate="20190102T014119Z">
        <seg>定义名为 &lt;c0&gt;print(java.util.Function&lt;Integer, Boolean&gt; iterator)&lt;/c0&gt; 的方法，该方法执行与 &lt;c1&gt;print(DataStructureIterator iterator)&lt;/c1&gt; 相同的函数式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define an annotation type for an enhancement request with elements &lt;c0&gt;id&lt;/c0&gt;, &lt;c1&gt;synopsis&lt;/c1&gt;, &lt;c2&gt;engineer&lt;/c2&gt;, and &lt;c3&gt;date&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041632Z" creationid="pingfangx" creationdate="20190102T041632Z">
        <seg>为元素 &lt;c0&gt;id&lt;/c0&gt;，&lt;c1&gt;synopsis&lt;/c1&gt;，&lt;c2&gt;engineer&lt;/c2&gt; 和 &lt;c3&gt;date&lt;/c3&gt; 定义增强请求的注解类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define two methods so that the following two statements print elements that have an even index value and elements that have an odd index value:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014205Z" creationid="pingfangx" creationdate="20190102T014205Z">
        <seg>定义两个方法，以便以下两个语句打印具有偶数索引值的元素和具有奇数索引值的元素：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define two methods so that these statements print elements that have an even index value and then elements that have an odd index value:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015129Z" creationid="pingfangx" creationdate="20190102T015129Z">
        <seg>定义两个方法，以便这些语句打印具有偶数索引值的元素，然后打印具有奇数索引值的元素：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092006Z" creationid="pingfangx" creationdate="20180521T092006Z">
        <seg>定义方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining Methods (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064725Z" creationid="pingfangx" creationdate="20180525T064725Z">
        <seg>Defining Methods (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining a Method with the Same Signature as a Superclass's Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092655Z" creationid="pingfangx" creationdate="20190102T092655Z">
        <seg>定义与超类的方法具有相同签名的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining an Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092442Z" creationid="pingfangx" creationdate="20180521T092442Z">
        <seg>定义一个接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining an Interface (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061500Z" creationid="pingfangx" creationdate="20190102T061500Z">
        <seg>Defining an Interface (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining an interface is similar to creating a new class:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054127Z" creationid="pingfangx" creationdate="20190102T054127Z">
        <seg>定义接口类似于创建新类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Delete the "//" in front of the following line of code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021141Z" creationid="pingfangx" creationdate="20190102T021141Z">
        <seg>Delete the "//" in front of the following line of code:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depending on your locale, the decimal point might be a comma (&lt;c1&gt;,&lt;/c1&gt;) instead of a period (&lt;c2&gt;.&lt;/c2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041653Z" creationid="pingfangx" creationdate="20190103T041653Z">
        <seg>根据您的语言环境，小数点可能是逗号(&lt;c1&gt;,&lt;/c1&gt;)而不是句点(&lt;c2&gt;.&lt;/c2&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064406Z" creationid="pingfangx" creationdate="20180521T064406Z">
        <seg>描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Design Considerations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041401Z" creationid="pingfangx" creationdate="20190102T041401Z">
        <seg>设计注意事项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Determines whether the specified char value is a letter or a digit, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062222Z" creationid="pingfangx" creationdate="20190103T062222Z">
        <seg>确定指定的 char 值分别是字母还是数字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Determines whether the specified char value is uppercase or lowercase, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062235Z" creationid="pingfangx" creationdate="20190103T062235Z">
        <seg>确定指定的 char 值分别是大写还是小写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Determines whether the specified char value is white space.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062230Z" creationid="pingfangx" creationdate="20190103T062230Z">
        <seg>确定指定的 char 值是否为空格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Determines whether this number object is equal to the argument.&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030715Z" creationid="pingfangx" creationdate="20190103T030715Z">
        <seg>确定此数字对象是否等于参数。&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Different kinds of objects often have a certain amount in common with each other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062837Z" creationid="pingfangx" creationdate="20180518T062837Z">
        <seg>不同种类的物体通常具有一定的共同点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Directory of C:\myapplication

2014-04-24  01:34 PM    &lt;DIR&gt;          .</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034852Z" creationid="pingfangx" creationdate="20180518T034852Z">
        <seg>Directory of C:\myapplication

2014-04-24  01:34 PM    &lt;DIR&gt;          .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Directory of C:\myapplication

2014-04-24  02:07 PM    &lt;DIR&gt;          .</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034918Z" creationid="pingfangx" creationdate="20180518T034918Z">
        <seg>Directory of C:\myapplication

2014-04-24  02:07 PM    &lt;DIR&gt;          .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Distributed</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032938Z" creationid="pingfangx" creationdate="20180518T032938Z">
        <seg>Distributed（分布式）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Division operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064429Z" creationid="pingfangx" creationdate="20180521T064429Z">
        <seg>除法运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do fields have to be initialized when they are declared?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073121Z" creationid="pingfangx" creationdate="20180518T073121Z">
        <seg>字段必须在声明时进行初始化？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Documentation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030352Z" creationid="pingfangx" creationdate="20180518T030352Z">
        <seg>文档</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dogs have state (name, color, breed, hungry) and behavior (barking, fetching, wagging tail).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061037Z" creationid="pingfangx" creationdate="20180518T061037Z">
        <seg>狗有状态(名字，颜色，品种，饥饿)和行为(吠叫，取食，摇尾巴)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Doing so causes a compile-time error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034847Z" creationid="pingfangx" creationdate="20180528T034847Z">
        <seg>这样做会导致编译时错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Doing so is called an &lt;i1&gt;explicit constructor invocation&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T015319Z" creationid="pingfangx" creationdate="20180607T015319Z">
        <seg>这样做被称为 &lt;i1&gt;explicit constructor invocation（显示构造函数调用）&lt;/i1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Doing so tells your program that a field named "gear" exists, holds numerical data, and has an initial value of "1".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080037Z" creationid="pingfangx" creationdate="20180518T080037Z">
        <seg>这样做会告诉程序存在名为 "齿轮" 的字段，保存数字数据并且初始值为 "1"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Doing so will make your code easier to read and understand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074402Z" creationid="pingfangx" creationdate="20180518T074402Z">
        <seg>这样做会使您的代码更易于阅读和理解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dot saw I was Tod</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064438Z" creationid="pingfangx" creationdate="20190103T064438Z">
        <seg>Dot saw I was Tod</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Double</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084704Z" creationid="pingfangx" creationdate="20190103T084704Z">
        <seg>Double</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dragon myApp = new Dragon();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091701Z" creationid="pingfangx" creationdate="20190102T091701Z">
        <seg>Dragon myApp = new Dragon();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Duke thinking about what to study</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030454Z" creationid="pingfangx" creationdate="20180518T030454Z">
        <seg>Duke 考虑要学什么</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dynamic</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032951Z" creationid="pingfangx" creationdate="20180518T032951Z">
        <seg>Dynamic（动态）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021041Z" creationid="pingfangx" creationdate="20190102T021041Z">
        <seg>E.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EARTH   (5.976e+24, 6.37814e6),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020019Z" creationid="pingfangx" creationdate="20190102T020019Z">
        <seg>EARTH   (5.976e+24, 6.37814e6),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EIGHT  (8 , "Eight"),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065243Z" creationid="pingfangx" creationdate="20190102T065243Z">
        <seg>EIGHT  (8 , "Eight"),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each &lt;c0&gt;Number&lt;/c0&gt; class contains other methods that are useful for converting numbers to and from strings and for converting between number systems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030819Z" creationid="pingfangx" creationdate="20190103T030819Z">
        <seg>每个 &lt;c0&gt;Number&lt;/c0&gt; 类包含其他方法，这些方法可用于将数字转换为字符串或从字符串转换为数字，以及在数字系统之间进行转换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each &lt;c1&gt;break&lt;/c1&gt; statement terminates the enclosing &lt;c2&gt;switch&lt;/c2&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082205Z" creationid="pingfangx" creationdate="20180521T082205Z">
        <seg>每个 &lt;c1&gt;break&lt;/c1&gt; 语句都会终止封闭的 &lt;c2&gt;switch&lt;/c2&gt; 语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each &lt;c5&gt;Bicycle&lt;/c5&gt; object has its own values for these variables, stored in different memory locations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042258Z" creationid="pingfangx" creationdate="20180607T042258Z">
        <seg>每个 &lt;c5&gt;Bicycle&lt;/c5&gt; 对象都有自己的这些变量值，存储在不同的存储位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each argument to the constructor shadows one of the object's fields  inside the constructor &lt;b0&gt;&lt;c1&gt;x&lt;/c1&gt;&lt;/b0&gt; is a local copy of the constructor's first argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092838Z" creationid="pingfangx" creationdate="20180601T092838Z">
        <seg>构造函数的每个参数都会隐藏对象的某个字段  在构造函数中 &lt;b0&gt;&lt;c1&gt;x&lt;/c1&gt;&lt;/b0&gt; 是构造函数第一个参数的本地副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each array element is accessed by its numerical index:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041827Z" creationid="pingfangx" creationdate="20180521T041827Z">
        <seg>每个数组元素都通过其数字索引进行访问：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each bicycle was built from the same set of blueprints and therefore contains the same components.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062238Z" creationid="pingfangx" creationdate="20180518T062238Z">
        <seg>每辆自行车都由同一套蓝图构成，因此包含相同的部件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each constructor initializes some or all of the rectangle's member variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020223Z" creationid="pingfangx" creationdate="20180607T020223Z">
        <seg>每个构造函数初始化矩形的一些或全部成员变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each constructor lets you provide initial values for the rectangle's origin, width, and height, using both primitive and reference types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062643Z" creationid="pingfangx" creationdate="20180601T062643Z">
        <seg>每个构造函数都可以使用基本类型和引用类型为矩形的原点，宽度和高度提供初始值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each converts its argument to a string and then appends or inserts the characters of that string to the character sequence in the string builder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081912Z" creationid="pingfangx" creationdate="20190103T081912Z">
        <seg>每个都将其参数转换为字符串，然后将该字符串的字符追加或插入到 string builder 中的字符序列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each discussion focuses on how these concepts relate to the real world, while simultaneously providing an introduction to the syntax of the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042830Z" creationid="pingfangx" creationdate="20180518T042830Z">
        <seg>每个讨论的重点是如何将这些概念与现实世界联系起来，同时介绍 Java 编程语言的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each discussion includes code samples that you can compile and run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072635Z" creationid="pingfangx" creationdate="20180518T072635Z">
        <seg>每个讨论都包含可以编译和运行的代码示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each discussion is accompanied by sample code that you can compile and run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063325Z" creationid="pingfangx" creationdate="20180521T063325Z">
        <seg>每个讨论都伴随着您可以编译和运行的示例代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each element, therefore, must be accessed by a corresponding number of index values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042224Z" creationid="pingfangx" creationdate="20180521T042224Z">
        <seg>因此，每个元素必须通过相应数量的索引值进行访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each enum constant is declared with values for the mass and radius parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015801Z" creationid="pingfangx" creationdate="20190102T015801Z">
        <seg>每个枚举常量都声明为质量和半径参数的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each group should be able to write their code without any knowledge of how the other group's code is written.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T043342Z" creationid="pingfangx" creationdate="20190102T043342Z">
        <seg>每个组都应该能够在不知道如何编写其他组代码的情况下编写代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each has a version with the following syntax:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033115Z" creationid="pingfangx" creationdate="20190103T033115Z">
        <seg>每个版本都有一个版本，其语法如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each has the following characteristics:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084236Z" creationid="pingfangx" creationdate="20181228T084236Z">
        <seg>每个都具有以下特征：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each item in an array is called an &lt;i0&gt;element&lt;/i0&gt;, and each element is accessed by its numerical &lt;i1&gt;index&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021611Z" creationid="pingfangx" creationdate="20180521T021611Z">
        <seg>数组中的每个元素称为 &lt;i0&gt;element（元素）&lt;/i0&gt;，每个元素都可以通过其数字 &lt;i1&gt;index（索引、下标）&lt;/i1&gt; 访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each method parameter shadows the field that shares its name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033639Z" creationid="pingfangx" creationdate="20180601T033639Z">
        <seg>每个方法参数都会隐藏共享其名称的字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each nonabstract subclass of &lt;c0&gt;GraphicObject&lt;/c0&gt;, such as &lt;c1&gt;Circle&lt;/c1&gt; and &lt;c2&gt;Rectangle&lt;/c2&gt;, must provide implementations for the &lt;c3&gt;draw&lt;/c3&gt; and &lt;c4&gt;resize&lt;/c4&gt; methods:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022316Z" creationid="pingfangx" creationdate="20190103T022316Z">
        <seg>&lt;c0&gt;GraphicObject&lt;/c0&gt; 的每个非抽象子类，例如 &lt;c1&gt;Circle&lt;/c1&gt; 和 &lt;c2&gt;Rectangle&lt;/c2&gt;，必须提供 &lt;c3&gt;draw&lt;/c3&gt; 和 &lt;c4&gt;resize&lt;/c4&gt; 方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of the &lt;c0&gt;Number&lt;/c0&gt; subclasses includes a class method, &lt;c1&gt;toString()&lt;/c1&gt;, that will convert its primitive type to a string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065356Z" creationid="pingfangx" creationdate="20190103T065356Z">
        <seg>每个 &lt;c0&gt;Number&lt;/c0&gt; 子类都包含一个类方法 &lt;c1&gt;toString()&lt;/c1&gt;，它将其基本类型转换为字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of the following statements taken from the &lt;a0&gt;&lt;c1&gt;CreateObjectDemo&lt;/c1&gt;&lt;/a0&gt; program creates an object and assigns it to a variable:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042046Z" creationid="pingfangx" creationdate="20180601T042046Z">
        <seg>从 &lt;a0&gt;&lt;c1&gt;CreateObjectDemo&lt;/c1&gt;&lt;/a0&gt; 程序中获得的以下每个语句都会创建一个对象并将其分配给一个变量：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of the preceding buzzwords is explained in &lt;a0&gt;&lt;e1&gt;The Java Language Environment&lt;/e1&gt;&lt;/a0&gt; , a white paper written by James Gosling and Henry McGilton.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033102Z" creationid="pingfangx" creationdate="20180518T033102Z">
        <seg>前面的每个流行语都在 James Gosling 和 Henry McGilton 写的白皮书 &lt;a0&gt;&lt;e1&gt;The Java Language Environment&lt;/e1&gt;&lt;/a0&gt; 中解释。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of these statements has three parts (discussed in detail below):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042241Z" creationid="pingfangx" creationdate="20180601T042241Z">
        <seg>这些语句中的每一个都有三个部分(下面详细讨论)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each string in the array is called a &lt;e0&gt;command-line argument&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035736Z" creationid="pingfangx" creationdate="20180518T035736Z">
        <seg>数组中的每个字符串都称为 &lt;e0&gt;command-line argument&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each variable is assigned to one of the three bicycle classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094036Z" creationid="pingfangx" creationdate="20190102T094036Z">
        <seg>每个变量都分配给三个自行车类别中的一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each variable is then printed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094038Z" creationid="pingfangx" creationdate="20190102T094038Z">
        <seg>然后打印每个变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Earlier you saw the use of the &lt;c0&gt;print&lt;/c0&gt; and &lt;c1&gt;println&lt;/c1&gt; methods for printing strings to standard output (&lt;c2&gt;System.out&lt;/c2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T031320Z" creationid="pingfangx" creationdate="20190103T031320Z">
        <seg>之前您已经看到使用 &lt;c0&gt;print&lt;/c0&gt; 和 &lt;c1&gt;println&lt;/c1&gt; 方法将字符串打印到标准输出(&lt;c2&gt;System.out&lt;/c2&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Effects of Type Erasure and Bridge Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092957Z" creationid="pingfangx" creationdate="20180521T092957Z">
        <seg>类型擦除和桥接方法的影响</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Eight characters in width, with leading zeroes as necessary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033531Z" creationid="pingfangx" creationdate="20190103T033531Z">
        <seg>宽度为八个字符，必要时带前导零。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Element at index 0: 100
Element at index 1: 200
Element at index 2: 300
Element at index 3: 400
Element at index 4: 500
Element at index 5: 600
Element at index 6: 700
Element at index 7: 800
Element at index 8: 900
Element at index 9: 1000</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021725Z" creationid="pingfangx" creationdate="20180521T021725Z">
        <seg>Element at index 0: 100
Element at index 1: 200
Element at index 2: 300
Element at index 3: 400
Element at index 4: 500
Element at index 5: 600
Element at index 6: 700
Element at index 7: 800
Element at index 8: 900
Element at index 9: 1000</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Empty interfaces can be used as types and to mark classes without requiring any particular method implementations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074807Z" creationid="pingfangx" creationdate="20190102T074807Z">
        <seg>空接口可以用作类型和标记类，而无需任何特定的方法实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enclosing your character string within double quotes will automatically create a new &lt;c1&gt;String&lt;/c1&gt; object; for example, &lt;c2&gt;String s = "this is a string";&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082001Z" creationid="pingfangx" creationdate="20180518T082001Z">
        <seg>用双引号括起你的字符串会自动创建一个新的 &lt;c1&gt;String&lt;/c1&gt; 对象;例如，&lt;c2&gt;String s = "this is a string";&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EnglishGoodbye myEnglishGoodbye = new EnglishGoodbye();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T145241Z" creationid="pingfangx" creationdate="20180705T145241Z">
        <seg>EnglishGoodbye myEnglishGoodbye = new EnglishGoodbye();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EnglishGoodbye.sayGoodbye();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144542Z" creationid="pingfangx" creationdate="20180705T144542Z">
        <seg>EnglishGoodbye.sayGoodbye();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ensure that the expression in any &lt;c3&gt;switch&lt;/c3&gt; statement is not null to prevent a &lt;c4&gt;NullPointerException&lt;/c4&gt; from being thrown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082703Z" creationid="pingfangx" creationdate="20180521T082703Z">
        <seg>确保任何 &lt;c3&gt;switch&lt;/c3&gt; 语句中的表达式不为空以防止抛出 &lt;c4&gt;NullPointerException&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ensures that the capacity is at least equal to the specified minimum.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081443Z" creationid="pingfangx" creationdate="20190103T081443Z">
        <seg>确保容量至少等于指定的最小值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enum Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092308Z" creationid="pingfangx" creationdate="20180521T092308Z">
        <seg>枚举类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enum Types (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T082849Z" creationid="pingfangx" creationdate="20180706T082849Z">
        <seg>Enum Types (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EnumTest fifthDay = new EnumTest(Day.FRIDAY);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015351Z" creationid="pingfangx" creationdate="20190102T015351Z">
        <seg>EnumTest fifthDay = new EnumTest(Day.FRIDAY);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EnumTest firstDay = new EnumTest(Day.MONDAY);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015348Z" creationid="pingfangx" creationdate="20190102T015348Z">
        <seg>EnumTest firstDay = new EnumTest(Day.MONDAY);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EnumTest seventhDay = new EnumTest(Day.SUNDAY);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015353Z" creationid="pingfangx" creationdate="20190102T015353Z">
        <seg>EnumTest seventhDay = new EnumTest(Day.SUNDAY);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EnumTest sixthDay = new EnumTest(Day.SATURDAY);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015352Z" creationid="pingfangx" creationdate="20190102T015352Z">
        <seg>EnumTest sixthDay = new EnumTest(Day.SATURDAY);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EnumTest thirdDay = new EnumTest(Day.WEDNESDAY);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015350Z" creationid="pingfangx" creationdate="20190102T015350Z">
        <seg>EnumTest thirdDay = new EnumTest(Day.WEDNESDAY);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Environment env) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091706Z" creationid="pingfangx" creationdate="20180601T091706Z">
        <seg>Environment env) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Equality and Relational Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071605Z" creationid="pingfangx" creationdate="20180521T071605Z">
        <seg>等式和关系运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Equality, Relational, and Conditional Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072245Z" creationid="pingfangx" creationdate="20180518T072245Z">
        <seg>相等性，关系和条件运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Equality, Relational, and Conditional Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065738Z" creationid="pingfangx" creationdate="20180521T065738Z">
        <seg>Equality, Relational, and Conditional Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Erasure of Generic Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092951Z" creationid="pingfangx" creationdate="20180521T092951Z">
        <seg>泛型方法的擦除</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Erasure of Generic Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092943Z" creationid="pingfangx" creationdate="20180521T092943Z">
        <seg>删除泛型类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Escape Sequence</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062350Z" creationid="pingfangx" creationdate="20190103T062350Z">
        <seg>转义序列</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Escape Sequences</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062317Z" creationid="pingfangx" creationdate="20190103T062317Z">
        <seg>转义序列</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every class is a descendant, direct or indirect, of the &lt;c3&gt;Object&lt;/c3&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100528Z" creationid="pingfangx" creationdate="20190102T100528Z">
        <seg>每个类都是 &lt;c3&gt;Object&lt;/c3&gt; 类的后代，直接或间接的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every class you use or write inherits the instance methods of &lt;c4&gt;Object&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100545Z" creationid="pingfangx" creationdate="20190102T100545Z">
        <seg>您使用或编写的每个类都继承 &lt;c4&gt;Object&lt;/c4&gt; 的实例方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every compiler warning belongs to a category.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033611Z" creationid="pingfangx" creationdate="20190102T033611Z">
        <seg>每个编译器警告都属于一个类别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every full implementation of the Java platform gives you the following features:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033611Z" creationid="pingfangx" creationdate="20180518T033611Z">
        <seg>Java 平台的每个完整实现都会为您提供以下功能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every instance of the class shares a class variable, which is in one fixed location in memory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042649Z" creationid="pingfangx" creationdate="20180607T042649Z">
        <seg>该类的每个实例共享一个类变量，它位于内存中的一个固定位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every instance of the class shares its static methods.) This makes it easier for you to organize helper methods in your libraries; you can keep static methods specific to an interface in the same interface rather than in a separate class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064843Z" creationid="pingfangx" creationdate="20190102T064843Z">
        <seg>该类的每个实例都共享其静态方法。）这使您可以更轻松地在库中组织辅助方法;您可以在同一个接口中保留特定于接口的静态方法，而不是在单独的类中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every programming language has its own set of rules and conventions for the kinds of names that you're allowed to use, and the Java programming language is no different.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074022Z" creationid="pingfangx" creationdate="20180518T074022Z">
        <seg>每种编程语言都有自己的一套规则和约定，用于允许使用的名称类型，Java 编程语言也不例外。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Evolving Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092534Z" creationid="pingfangx" creationdate="20180521T092534Z">
        <seg>不断发展的接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Evolving Interfaces (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062822Z" creationid="pingfangx" creationdate="20190102T062822Z">
        <seg>Evolving Interfaces (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084404Z" creationid="pingfangx" creationdate="20181228T084404Z">
        <seg>例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples and practices described in this page don't take advantage of improvements introduced in later releases.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084157Z" creationid="pingfangx" creationdate="20180518T030731Z">
        <seg>本页中描述的示例和实践未利用在后续版本中引入的改进。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples of Anonymous Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061023Z" creationid="pingfangx" creationdate="20180706T061023Z">
        <seg>匿名类的示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Except for the &lt;c0&gt;Object&lt;/c0&gt; class, a class has exactly one direct superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023200Z" creationid="pingfangx" creationdate="20190103T023200Z">
        <seg>除 &lt;c0&gt;Object&lt;/c0&gt; 类外，类只有一个直接超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Except for the constructor, it is as if you had written a new &lt;c3&gt;MountainBike&lt;/c3&gt; class entirely from scratch, with four fields and five methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082443Z" creationid="pingfangx" creationdate="20190102T082443Z">
        <seg>除了构造函数之外，就好像你已经从头开始编写了一个新的 &lt;c3&gt;MountainBike&lt;/c3&gt; 类，有四个字段和五个方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Excepting &lt;c10&gt;Object&lt;/c10&gt;, which has no superclass, every class has one and only one direct superclass (single inheritance).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T080237Z" creationid="pingfangx" creationdate="20190102T080237Z">
        <seg>除了 &lt;c10&gt;Object&lt;/c10&gt;，它没有超类，每个类有且只有一个直接超类(单继承)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exception handling will be covered in a later lesson.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101552Z" creationid="pingfangx" creationdate="20190102T101552Z">
        <seg>稍后的课程将介绍异常处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exception in thread "main" java.lang.NoClassDefFoundError:
HelloWorldApp.java.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040053Z" creationid="pingfangx" creationdate="20180518T040053Z">
        <seg>Exception in thread "main" java.lang.NoClassDefFoundError:
HelloWorldApp.java.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exceptions are discussed in a later lesson.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065012Z" creationid="pingfangx" creationdate="20180525T065012Z">
        <seg>例外情况在后面的课程中讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exercise 1: Write a class that implements the &lt;c0&gt;CharSequence&lt;/c0&gt; interface found in the &lt;c1&gt;java.lang&lt;/c1&gt; package.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074817Z" creationid="pingfangx" creationdate="20190102T074817Z">
        <seg>练习 1：编写一个实现 &lt;c1&gt;java.lang&lt;/c1&gt; 包中的 &lt;c0&gt;CharSequence&lt;/c0&gt; 接口的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exercise 1: Write the implementations for the methods that you answered in question 2.&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023831Z" creationid="pingfangx" creationdate="20190103T023831Z">
        <seg>练习 1：编写您在问题 2 中回答的方法的实现。&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exercise 2: Suppose that you have written a time server, which periodically notifies its clients of the current date and time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074827Z" creationid="pingfangx" creationdate="20190102T074827Z">
        <seg>练习 2：假设您已经编写了一个时间服务器，它会定期通知其客户当前的日期和时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exercises</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040137Z" creationid="pingfangx" creationdate="20180518T040137Z">
        <seg>练习</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Explain the following code sample: &lt;c0&gt;result = someCondition ?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072615Z" creationid="pingfangx" creationdate="20180521T072615Z">
        <seg>请解释以下代码示例：&lt;c0&gt;result = someCondition ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Explain why the output is what it is.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091450Z" creationid="pingfangx" creationdate="20180521T091450Z">
        <seg>解释为什么输出结果如此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Explain why the output is what it is; in other words, what is the control flow for the code snippet?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091203Z" creationid="pingfangx" creationdate="20180521T091203Z">
        <seg>解释为什么输出是它是什么;换句话说，代码片段的控制流程是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Explanation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033228Z" creationid="pingfangx" creationdate="20190103T033228Z">
        <seg>解释</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exponential and Logarithmic Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035809Z" creationid="pingfangx" creationdate="20190103T035809Z">
        <seg>指数和对数方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073923Z" creationid="pingfangx" creationdate="20180521T073923Z">
        <seg>表达式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expressions are the core components of &lt;s0&gt;statements&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075558Z" creationid="pingfangx" creationdate="20180521T075558Z">
        <seg>表达式是 &lt;s0&gt;statements&lt;/s0&gt; 的核心组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expressions are the core components of ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075445Z" creationid="pingfangx" creationdate="20180521T075445Z">
        <seg>表达式是___的核心组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expressions, Statements, and Blocks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072422Z" creationid="pingfangx" creationdate="20180518T072422Z">
        <seg>表达式，语句和块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expressions, Statements, and Blocks (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073834Z" creationid="pingfangx" creationdate="20180521T073834Z">
        <seg>Expressions, Statements, and Blocks (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extending Interfaces That Contain Default Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063352Z" creationid="pingfangx" creationdate="20190102T063352Z">
        <seg>继承包含默认方法的接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extension = html
Filename = index
Path = /home/user</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074953Z" creationid="pingfangx" creationdate="20190103T074953Z">
        <seg>Extension = html
Filename = index
Path = /home/user</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extension is discussed later in this lesson.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054123Z" creationid="pingfangx" creationdate="20190102T054123Z">
        <seg>继承将在本课程后面讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extensions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085332Z" creationid="pingfangx" creationdate="20180706T085332Z">
        <seg>扩展</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extra methods (even if they do not implement any methods of the supertype)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065517Z" creationid="pingfangx" creationdate="20180706T065517Z">
        <seg>额外的方法(即使他们没有实现超类型的任何方法)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021043Z" creationid="pingfangx" creationdate="20190102T021043Z">
        <seg>F.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FIVE   (5 , "Five" ),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065242Z" creationid="pingfangx" creationdate="20190102T065242Z">
        <seg>FIVE   (5 , "Five" ),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FOUR   (4 , "Four" ),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065241Z" creationid="pingfangx" creationdate="20190102T065241Z">
        <seg>FOUR   (4 , "Four" ),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FPAdder.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041840Z" creationid="pingfangx" creationdate="20190103T041840Z">
        <seg>FPAdder.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Feel free to skip this lesson if you are already familiar with object-oriented programming.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042215Z" creationid="pingfangx" creationdate="20180518T042215Z">
        <seg>如果您已经熟悉面向对象编程，请随意跳过本节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Field</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085037Z" creationid="pingfangx" creationdate="20180706T085037Z">
        <seg>字段</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Field declarations are composed of three components, in order:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063250Z" creationid="pingfangx" creationdate="20180525T063250Z">
        <seg>字段声明由三部分组成，依次为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fields</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065501Z" creationid="pingfangx" creationdate="20180706T065501Z">
        <seg>字段</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fields that are declared but not initialized will be set to a reasonable default by the compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082114Z" creationid="pingfangx" creationdate="20180518T082114Z">
        <seg>已声明但未初始化的字段将由编译器设置为合理的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fields that have the &lt;c1&gt;static&lt;/c1&gt; modifier in their declaration are called &lt;i2&gt;static fields&lt;/i2&gt; or &lt;i3&gt;class variables&lt;/i3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042625Z" creationid="pingfangx" creationdate="20180607T042625Z">
        <seg>在其声明中具有 &lt;c1&gt;static&lt;/c1&gt; 修饰符的字段称为 &lt;i2&gt;static fields（静态字段）&lt;/i2&gt; 或 &lt;i3&gt;class variables（类变量）&lt;/i3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure showing MyProgram.java, API, Java Virtual Machine, and Hardware-Based Platform</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033415Z" creationid="pingfangx" creationdate="20180518T033415Z">
        <seg>该图显示了 MyProgram.java，API，Java 虚拟机和基于硬件的平台</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure showing MyProgram.java, compiler, MyProgram.class, Java VM, and My Program running on a computer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033204Z" creationid="pingfangx" creationdate="20180518T033204Z">
        <seg>该图显示了在计算机上运行的 MyProgram.java，编译器，MyProgram.class，Java VM 和 My Program。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure showing source code, compiler, and Java VM's for Win32, Solaris OS/Linux, and Mac OS</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033240Z" creationid="pingfangx" creationdate="20180518T033240Z">
        <seg>该图显示了 Win32，Solaris OS / Linux 和 Mac OS 的源代码，编译器和 Java VM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filename myHomePage = new Filename(FPATH, '/', '.');</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074943Z" creationid="pingfangx" creationdate="20190103T074943Z">
        <seg>Filename myHomePage = new Filename(FPATH, '/', '.');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filling an array to place a specific value at each index (the &lt;c0&gt;fill&lt;/c0&gt; method).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T054451Z" creationid="pingfangx" creationdate="20180521T054451Z">
        <seg>填充数组以在每个索引处放置特定值(&lt;c0&gt;fill&lt;/c0&gt; 方法)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filter objects that match a &lt;c0&gt;Predicate&lt;/c0&gt; object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074601Z" creationid="pingfangx" creationdate="20181228T074601Z">
        <seg>过滤与 &lt;c0&gt;Predicate&lt;/c0&gt; 对象匹配的对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filters objects that match the &lt;c0&gt;Predicate&lt;/c0&gt; object &lt;c1&gt;tester&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T073124Z" creationid="pingfangx" creationdate="20181228T073124Z">
        <seg>过滤与 &lt;c0&gt;Predicate&lt;/c0&gt; 对象 &lt;c1&gt;tester&lt;/c1&gt; 匹配的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, &lt;e0&gt;control flow statements&lt;/e0&gt; regulate the order in which statements get executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075256Z" creationid="pingfangx" creationdate="20180521T075256Z">
        <seg>最后，&lt;e0&gt;control flow statements&lt;/e0&gt; 调节语句执行的顺序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, the &lt;a0&gt;&lt;c1&gt;Math&lt;/c1&gt;&lt;/a0&gt; class in &lt;c2&gt;java.lang&lt;/c2&gt; is discussed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024944Z" creationid="pingfangx" creationdate="20190103T024944Z">
        <seg>最后，讨论了 &lt;c2&gt;java.lang&lt;/c2&gt; 中的 &lt;a0&gt;&lt;c1&gt;Math&lt;/c1&gt;&lt;/a0&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, the line:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035757Z" creationid="pingfangx" creationdate="20180518T035757Z">
        <seg>最后，该行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, there is a discussion on autoboxing and unboxing, a compiler feature that simplifies your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024725Z" creationid="pingfangx" creationdate="20190103T024725Z">
        <seg>最后，讨论了自动装箱和拆箱，这是一种简化代码的编译器功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, there's also a special kind of literal called a &lt;e0&gt;class literal&lt;/e0&gt;, formed by taking a type name and appending "&lt;c1&gt;.class"&lt;/c1&gt;; for example, &lt;c2&gt;String.class&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084145Z" creationid="pingfangx" creationdate="20180518T084145Z">
        <seg>最后，还有一种特殊类型的字面量，称为 &lt;e0&gt;class literal&lt;/e0&gt;，通过取一个类型名称并加上 "&lt;c1&gt;.class"&lt;/c1&gt;;例如 &lt;c2&gt;String.class&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, you can use the built-in &lt;c0&gt;length&lt;/c0&gt; property to determine the size of any array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042326Z" creationid="pingfangx" creationdate="20180521T042326Z">
        <seg>最后，您可以使用内置的 &lt;c0&gt;length&lt;/c0&gt; 属性来确定任何数组的大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Find the code excerpts described in this section in the example &lt;a0&gt;&lt;c1&gt;RosterTest&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085611Z" creationid="pingfangx" creationdate="20180706T085611Z">
        <seg>在示例 &lt;a0&gt;&lt;c1&gt;RosterTest&lt;/c1&gt;&lt;/a0&gt; 中查找本节中描述的代码片断。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First number is 1234567890
Second number is invalid</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122620Z" creationid="pingfangx" creationdate="20180705T122620Z">
        <seg>第一个数字是 1234567890
第二个号码无效</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, get the source file InnerClassDemo.java.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021049Z" creationid="pingfangx" creationdate="20190102T021049Z">
        <seg>首先，获取源文件 InnerClassDemo.java。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, start your editor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034527Z" creationid="pingfangx" creationdate="20180518T034527Z">
        <seg>首先，启动你的编辑器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, when you use classes that come from another source, such as the classes in the Java platform, access levels determine which members of those classes your own classes can use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041318Z" creationid="pingfangx" creationdate="20180607T041318Z">
        <seg>首先，当您使用来自其他来源的类（例如 Java 平台中的类）时，访问级别将确定您自己的类可以使用哪些类的成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, you declare an abstract class, &lt;c0&gt;GraphicObject&lt;/c0&gt;, to provide member variables and methods that are wholly shared by all subclasses, such as the current position and the &lt;c1&gt;moveTo&lt;/c1&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022241Z" creationid="pingfangx" creationdate="20190103T022241Z">
        <seg>首先，声明一个抽象类 &lt;c0&gt;GraphicObject&lt;/c0&gt;，以提供由所有子类完全共享的成员变量和方法，例如当前位置和 &lt;c1&gt;moveTo&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fix the error so that the program successfully compiles and runs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040158Z" creationid="pingfangx" creationdate="20180518T040158Z">
        <seg>修复错误，以便程序成功编译并运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fix the interface in question 2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074536Z" creationid="pingfangx" creationdate="20190102T074536Z">
        <seg>修复问题 2 中的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fix the program called &lt;c0&gt;SomethingIsWrong&lt;/c0&gt; shown in Question 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083249Z" creationid="pingfangx" creationdate="20180705T083249Z">
        <seg>修复问题 1 中显示的名为 &lt;c0&gt;SomethingIsWrong&lt;/c0&gt; 的程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Flag</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033223Z" creationid="pingfangx" creationdate="20190103T033223Z">
        <seg>标志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Float</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084702Z" creationid="pingfangx" creationdate="20190103T084702Z">
        <seg>Float</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Floating-Point Literals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T083000Z" creationid="pingfangx" creationdate="20180518T083000Z">
        <seg>浮点字面量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FlyCar.super.startEngine(key);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091818Z" creationid="pingfangx" creationdate="20190102T091818Z">
        <seg>FlyCar.super.startEngine(key);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Following this modification to the &lt;c0&gt;TimeClient&lt;/c0&gt; interface, you would also have to modify the class &lt;c1&gt;SimpleTimeClient&lt;/c1&gt; and implement the method &lt;c2&gt;getZonedDateTime&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061253Z" creationid="pingfangx" creationdate="20190102T061253Z">
        <seg>在对 &lt;c0&gt;TimeClient&lt;/c0&gt; 接口进行此修改之后，您还必须修改类 &lt;c1&gt;SimpleTimeClient&lt;/c1&gt; 并实现方法 &lt;c2&gt;getZonedDateTime&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For &lt;c3&gt;MountainBike&lt;/c3&gt;, add a field for &lt;c4&gt;suspension&lt;/c4&gt;, which is a &lt;c5&gt;String&lt;/c5&gt; value that indicates if the bike has a front shock absorber, &lt;c6&gt;Front&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093757Z" creationid="pingfangx" creationdate="20190102T093757Z">
        <seg>对于 &lt;c3&gt;MountainBike&lt;/c3&gt;，为 &lt;c4&gt;suspension&lt;/c4&gt; 添加一个字段，这是 &lt;c5&gt;String&lt;/c5&gt; 值，表示自行车是否有前减震器，&lt;c6&gt;Front&lt;/c6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a complete listing of all methods in this class (there are more than 50), refer to the &lt;a1&gt;java.lang.Character&lt;/a1&gt; API specification.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062201Z" creationid="pingfangx" creationdate="20190103T062201Z">
        <seg>有关此类中所有方法的完整列表(有超过 50 个)，请参阅 &lt;a1&gt;java.lang.Character&lt;/a1&gt; API 规范。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a more thorough discussion of aggregate operations, see the &lt;a0&gt;Aggregate Operations&lt;/a0&gt; lesson.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074957Z" creationid="pingfangx" creationdate="20181228T074957Z">
        <seg>有关聚合操作的更全面讨论，请参阅 &lt;a0&gt;Aggregate Operations&lt;/a0&gt; 课程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For an example of a useful empty interface, see &lt;c0&gt;java.io.Serializable.&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074812Z" creationid="pingfangx" creationdate="20190102T074812Z">
        <seg>有关有用的空接口的示例，请参阅 &lt;c0&gt;java.io.Serializable.&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For compatibility reasons, repeating annotations are stored in a &lt;e0&gt;container annotation&lt;/e0&gt; that is automatically generated by the Java compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041135Z" creationid="pingfangx" creationdate="20190102T041135Z">
        <seg>出于兼容性原因，重复注解存储在由 Java 编译器自动生成的 &lt;e0&gt;container annotation&lt;/e0&gt; 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For decimal values, this data type is generally the default choice.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081818Z" creationid="pingfangx" creationdate="20180518T081818Z">
        <seg>对于十进制值，这种数据类型通常是默认的选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each character, the program calls the regionMatches method to determine whether the substring beginning with the current character matches the string the program is looking for.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080013Z" creationid="pingfangx" creationdate="20190103T080013Z">
        <seg>对于每个字符，程序调用 regionMatches 方法来确定以当前字符开头的子字符串是否与程序正在查找的字符串匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each index value, invoke the method &lt;c4&gt;function.apply&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015009Z" creationid="pingfangx" creationdate="20190102T015009Z">
        <seg>对于每个索引值，调用方法 &lt;c4&gt;function.apply&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each new class that you've created above, create an interface that defines its behavior, then require your class to implement it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064815Z" creationid="pingfangx" creationdate="20180518T064815Z">
        <seg>对于上面创建的每个新类，创建一个定义其行为的接口，然后要求您的类实现它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each object that is not a &lt;c0&gt;String&lt;/c0&gt;, its &lt;c1&gt;toString()&lt;/c1&gt; method is called to convert it to a &lt;c2&gt;String&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064456Z" creationid="pingfangx" creationdate="20190103T064456Z">
        <seg>对于不是 &lt;c0&gt;String&lt;/c0&gt; 的每个对象，会调用其 &lt;c1&gt;toString()&lt;/c1&gt; 方法将其转换为 &lt;c2&gt;String&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each object that you see, ask yourself two questions: "What possible states can this object be in?" and "What possible behavior can this object perform?".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061216Z" creationid="pingfangx" creationdate="20180518T061216Z">
        <seg>对于你看到的每个物体，问自己两个问题："这个物体可能有哪些状态？" 和 "这个对象有什么可能的行为？"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030331Z" creationid="pingfangx" creationdate="20180525T030331Z">
        <seg>例如，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;c0&gt;Bicycle&lt;/c0&gt; has one constructor:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034638Z" creationid="pingfangx" creationdate="20180528T034638Z">
        <seg>例如，&lt;c0&gt;Bicycle&lt;/c0&gt; 有一个构造函数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;c1&gt;x+=1;&lt;/c1&gt; and &lt;c2&gt;x=x+1;&lt;/c2&gt; both increment the value of &lt;c3&gt;x&lt;/c3&gt; by 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064747Z" creationid="pingfangx" creationdate="20180521T064747Z">
        <seg>例如，&lt;c1&gt;x+=1;&lt;/c1&gt; 和 &lt;c2&gt;x=x+1;&lt;/c2&gt; 都会将 &lt;c3&gt;x&lt;/c3&gt; 的值递增 1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a &lt;c0&gt;String&lt;/c0&gt; object contains state and behavior for character strings; a &lt;c1&gt;File&lt;/c1&gt; object allows a programmer to easily create, delete, inspect, compare, or modify a file on the filesystem; a &lt;c2&gt;Socket&lt;/c2&gt; object allows for the creation and use of network sockets; various GUI objects control buttons and checkboxes and anything else related to graphical user interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064518Z" creationid="pingfangx" creationdate="20180518T064518Z">
        <seg>例如，一个 &lt;c0&gt;String&lt;/c0&gt; 对象包含字符串的状态和行为;一个 &lt;c1&gt;File&lt;/c1&gt; 对象允许程序员轻松地创建，删除，检查，比较或修改文件系统上的文件;一个 &lt;c2&gt;Socket&lt;/c2&gt; 对象允许创建和使用网络套接字;各种 GUI 对象控制按钮和复选框以及与图形用户界面相关的任何其他内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a &lt;c1&gt;byte&lt;/c1&gt; contains 8 bits; applying this operator to a value whose bit pattern is "00000000" would change its pattern to "11111111".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070757Z" creationid="pingfangx" creationdate="20180521T070757Z">
        <seg>例如，一个 &lt;c1&gt;byte&lt;/c1&gt; 包含 8 位;将该运算符应用于位模式为 "00000000" 的值将其模式更改为 "11111111"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a &lt;c1&gt;printDescription&lt;/c1&gt; method could be added to the class that displays all the data currently stored in an instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093232Z" creationid="pingfangx" creationdate="20190102T093232Z">
        <seg>例如，可以将 &lt;c1&gt;printDescription&lt;/c1&gt; 方法添加到显示当前存储在实例中的所有数据的类中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a protected instance method in the superclass can be made public, but not private, in the subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092331Z" creationid="pingfangx" creationdate="20190102T092331Z">
        <seg>例如，超类中的 protected 实例方法可以在子类中 public，但不能 private。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a sorting program might allow the user to specify that the data be sorted in descending order with this command-line argument:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035749Z" creationid="pingfangx" creationdate="20180518T035749Z">
        <seg>例如，排序程序可能允许用户使用此命令行参数指定数据按降序排序：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, consider a method in an arbitrary class that moves &lt;c0&gt;Circle&lt;/c0&gt; objects:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034304Z" creationid="pingfangx" creationdate="20180601T034304Z">
        <seg>例如，考虑任意类中的移动 &lt;c0&gt;Circle&lt;/c0&gt; 对象的方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, consider the following &lt;c1&gt;Circle&lt;/c1&gt; class and its &lt;c2&gt;setOrigin&lt;/c2&gt; method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033611Z" creationid="pingfangx" creationdate="20180601T033611Z">
        <seg>例如，请考虑以下 &lt;c1&gt;Circle&lt;/c1&gt; 类及其 &lt;c2&gt;setOrigin&lt;/c2&gt; 方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, converting an &lt;t1&gt;int&lt;/t1&gt; to an &lt;t2&gt;Integer&lt;/t2&gt;, a &lt;t3&gt;double&lt;/t3&gt; to a &lt;t4&gt;Double&lt;/t4&gt;, and so on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083837Z" creationid="pingfangx" creationdate="20190103T083837Z">
        <seg>例如，将 &lt;t1&gt;int&lt;/t1&gt; 转换为 &lt;t2&gt;Integer&lt;/t2&gt;，将 &lt;t3&gt;double&lt;/t3&gt; 转换为 &lt;t4&gt;Double&lt;/t4&gt;，等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, how would you convert the string "230" into the integer value 65?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041443Z" creationid="pingfangx" creationdate="20190103T041443Z">
        <seg>例如，如何将字符串 "230" 转换为整数值 65？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, how would you sort the deck of playing cards first by descending order of rank, from Ace to Two (instead of from Two to Ace)?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072043Z" creationid="pingfangx" creationdate="20190102T072043Z">
        <seg>例如，你如何按照点数的降序排序扑克牌，从 Ace 到 2(而不是从 2 到 Ace)？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, how would you sort the deck of playing cards first by rank, and then by suit?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071821Z" creationid="pingfangx" creationdate="20190102T071821Z">
        <seg>例如，你如何先按点数排序扑克牌，然后按花色排序？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if s = "333" and radix = 8, the method returns the base-ten integer equivalent of the octal number 333.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T031127Z" creationid="pingfangx" creationdate="20190103T031120Z">
        <seg>例如，如果 s ="333" 且 radix = 8，则该方法返回等于八进制数 333 的十进制整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if the bicycle only has 6 gears, a method to change gears could reject any value that is less than 1 or greater than 6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061903Z" creationid="pingfangx" creationdate="20180518T061903Z">
        <seg>例如，如果自行车只有 6 个档位，则更换档位的方法可以拒绝任何小于 1 或大于 6 的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if we write</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083100Z" creationid="pingfangx" creationdate="20190102T083100Z">
        <seg>例如，如果我们写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if you do not define the member variable &lt;c2&gt;regularExpression&lt;/c2&gt; as static, then the Java compiler generates an error similar to "non-static variable &lt;c3&gt;regularExpression&lt;/c3&gt; cannot be referenced from a static context."</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T141726Z" creationid="pingfangx" creationdate="20180705T141726Z">
        <seg>例如，如果未将成员变量 &lt;c2&gt;regularExpression&lt;/c2&gt; 定义为 static，则 Java 编译器会生成类似于"非静态变量 &lt;c3&gt;regularExpression&lt;/c3&gt; 无法从静态语境引用"的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if you don't close file descriptors in your code after performing I/O and you expect &lt;c2&gt;finalize()&lt;/c2&gt; to close them for you, you may run out of file descriptors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103449Z" creationid="pingfangx" creationdate="20190102T103449Z">
        <seg>例如，如果在执行 I/O 后未在代码中关闭文件描述符，并且希望 &lt;c2&gt;finalize()&lt;/c2&gt; 为您关闭它们，则可能会 run out of 文件描述符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if you need to concatenate a large number of strings, appending to a &lt;c0&gt;StringBuilder&lt;/c0&gt; object is more efficient.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080826Z" creationid="pingfangx" creationdate="20190103T080826Z">
        <seg>例如，如果需要连接大量字符串时，则添加到 &lt;c0&gt;StringBuilder&lt;/c0&gt; 对象会更有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if you pass a primitive &lt;c1&gt;char&lt;/c1&gt; into a method that expects an object, the compiler automatically converts the &lt;c2&gt;char&lt;/c2&gt; to a &lt;c3&gt;Character&lt;/c3&gt; for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T061858Z" creationid="pingfangx" creationdate="20190103T061858Z">
        <seg>例如，如果将基本类型 &lt;c1&gt;char&lt;/c1&gt; 传递给需要对象的方法，则编译器会自动将 &lt;c2&gt;char&lt;/c2&gt; 转换为 &lt;c3&gt;Character&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if you want to put quotes within quotes you must use the escape sequence, \", on the interior quotes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062552Z" creationid="pingfangx" creationdate="20190103T062552Z">
        <seg>例如，如果要在引号内放置引号，则必须在内部引号上使用转义序列 \"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if your source directory is &lt;c0&gt;myapplication&lt;/c0&gt; on the &lt;c1&gt;C&lt;/c1&gt; drive, type the following command at the prompt and press &lt;b2&gt; Enter&lt;/b2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034756Z" creationid="pingfangx" creationdate="20180518T034756Z">
        <seg>例如，如果您的源目录是 &lt;c1&gt;C&lt;/c1&gt; 驱动器上的 &lt;c0&gt;myapplication&lt;/c0&gt;，请在提示符下键入以下命令并按 &lt;b2&gt; Enter&lt;/b2&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, imagine a futuristic society where computer-controlled robotic cars transport passengers through city streets without a human operator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T053721Z" creationid="pingfangx" creationdate="20190102T053721Z">
        <seg>例如，想象一个未来主义社会，计算机控制的机器人汽车在没有人工操作员的情况下将乘客运送到城市街道。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, in a program to manipulate &lt;c1&gt;Bicycle&lt;/c1&gt; objects, we might have a method like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091700Z" creationid="pingfangx" creationdate="20180601T091700Z">
        <seg>例如，在处理 &lt;c1&gt;Bicycle&lt;/c1&gt; 对象的程序中，我们可能有这样的方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, in the &lt;c6&gt;ValueOfDemo&lt;/c6&gt; program, we could use:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065304Z" creationid="pingfangx" creationdate="20190103T065257Z">
        <seg>例如，在 &lt;c6&gt;ValueOfDemo&lt;/c6&gt; 程序中，我们可以使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, instead of</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064827Z" creationid="pingfangx" creationdate="20190103T064827Z">
        <seg>例如，不使用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, suppose that the variable &lt;c1&gt;numberLength&lt;/c1&gt; is not declared final, and you add the highlighted assignment statement in the &lt;c2&gt;PhoneNumber&lt;/c2&gt; constructor to change the length of a valid phone number to 7 digits:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T140814Z" creationid="pingfangx" creationdate="20180705T123023Z">
        <seg>例如，假设变量 &lt;c1&gt;numberLength&lt;/c1&gt; 未声明为 final，并在 &lt;c2&gt;PhoneNumber&lt;/c2&gt; 构造函数中添加高亮的赋值语句，以将有效电话号码的长度更改为 7 位数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, suppose that you add the following assignment statement immediately after the &lt;c0&gt;methodInFirstLevel&lt;/c0&gt; definition statement:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080950Z" creationid="pingfangx" creationdate="20181228T080950Z">
        <seg>例如，假设您在 &lt;c0&gt;methodInFirstLevel&lt;/c0&gt; 定义语句之后立即添加以下赋值语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, suppose that you are able to define a new class that extends multiple classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084718Z" creationid="pingfangx" creationdate="20190102T084718Z">
        <seg>例如，假设您能够定义一个继承多个类的新类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, suppose that you enter the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041537Z" creationid="pingfangx" creationdate="20190103T041537Z">
        <seg>例如，假设您输入以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, suppose you want to create a number of &lt;c0&gt;Bicycle&lt;/c0&gt; objects and assign each a serial number, beginning with 1 for the first object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090435Z" creationid="pingfangx" creationdate="20180607T042829Z">
        <seg>例如，假设您要创建多个 &lt;c0&gt;Bicycle&lt;/c0&gt; 对象并为每个对象分配一个序列号，从第一个对象开始为 1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the &lt;c0&gt;Point&lt;/c0&gt; class was written like this</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092754Z" creationid="pingfangx" creationdate="20180601T092754Z">
        <seg>例如，&lt;c0&gt;Point&lt;/c0&gt; 类是这样写的</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the &lt;c1&gt;PhoneNumber&lt;/c1&gt; constructor can access the local variable &lt;c2&gt;numberLength&lt;/c2&gt; because it is declared final; &lt;c3&gt;numberLength&lt;/c3&gt; is a &lt;e4&gt;captured variable&lt;/e4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122804Z" creationid="pingfangx" creationdate="20180705T122804Z">
        <seg>例如，&lt;c1&gt;PhoneNumber&lt;/c1&gt; 构造函数可以访问局部变量 &lt;c2&gt;numberLength&lt;/c2&gt;，因为它被声明为 final; &lt;c3&gt;numberLength&lt;/c3&gt; 是 &lt;e4&gt;捕获变量&lt;/e4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the &lt;c3&gt;Bicycle&lt;/c3&gt; class could allow the brakes to decrease the bicycle's speed &lt;i4&gt;only if&lt;/i4&gt; the bicycle is already in motion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081426Z" creationid="pingfangx" creationdate="20180521T080856Z">
        <seg>例如，&lt;c3&gt;Bicycle&lt;/c3&gt; 类别&lt;i4&gt;只有&lt;/i4&gt;当自行车已经运动时才允许制动器降低自行车的速度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the code in the &lt;t0&gt;CreateObjectDemo&lt;/t0&gt; class is outside the code for the &lt;t1&gt;Rectangle&lt;/t1&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073633Z" creationid="pingfangx" creationdate="20180601T073633Z">
        <seg>例如，&lt;t0&gt;CreateObjectDemo&lt;/t0&gt; 类中的代码在 &lt;t1&gt;Rectangle&lt;/t1&gt; 类的代码之外。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the division operator has a higher precedence than does the addition operator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074656Z" creationid="pingfangx" creationdate="20180521T074656Z">
        <seg>例如，除法运算符的优先级高于加法运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081211Z" creationid="pingfangx" creationdate="20190103T081211Z">
        <seg>例如，以下代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following code excerpt does not compile because the interface &lt;c0&gt;HelloThere&lt;/c0&gt; is defined inside the body of the method &lt;c1&gt;greetInEnglish&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T145729Z" creationid="pingfangx" creationdate="20180705T143030Z">
        <seg>例如，以下代码片断无法编译，因为接口 &lt;c0&gt;HelloThere&lt;/c0&gt; 是在方法 &lt;c1&gt;greetInEnglish&lt;/c1&gt; 的主体内定义的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following code gets the character at index 9 in a string:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072555Z" creationid="pingfangx" creationdate="20190103T072555Z">
        <seg>例如，以下代码获取字符串中索引 9 处的字符：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following expression gives different results, depending on whether you perform the addition or the division operation first:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074444Z" creationid="pingfangx" creationdate="20180521T074444Z">
        <seg>例如，下面的表达式会给出不同的结果，具体取决于您是先执行加法还是除法操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following is a method that computes the monthly payments for a home loan, based on the amount of the loan, the interest rate, the length of the loan (the number of periods), and the future value of the loan:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032056Z" creationid="pingfangx" creationdate="20180601T032056Z">
        <seg>例如，以下是根据贷款金额，利率，贷款期限(期数)和贷款的未来价值计算住房贷款的每月支付的方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following is a valid lambda expression:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075544Z" creationid="pingfangx" creationdate="20181228T075544Z">
        <seg>例如，以下是有效的 lambda 表达式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following lambda expression is also valid:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075439Z" creationid="pingfangx" creationdate="20181228T075439Z">
        <seg>例如，以下 lambda 表达式也是有效的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following method gets and displays the class name of an object:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103550Z" creationid="pingfangx" creationdate="20190102T103550Z">
        <seg>例如，以下方法获取并显示对象的类名：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following statement accesses the member variable of the class &lt;c0&gt;ShadowTest&lt;/c0&gt; from the method &lt;c1&gt;methodInFirstLevel&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091704Z" creationid="pingfangx" creationdate="20180705T091704Z">
        <seg>例如，以下语句从方法 &lt;c1&gt;methodInFirstLevel&lt;/c1&gt; 访问类 &lt;c0&gt;ShadowTest&lt;/c0&gt; 的成员变量：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following variable declaration defines a constant named &lt;c0&gt;PI&lt;/c0&gt;, whose value is an approximation of pi (the ratio of the circumference of a circle to its diameter):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065302Z" creationid="pingfangx" creationdate="20180705T065302Z">
        <seg>例如，以下变量声明定义了一个名为 &lt;c0&gt;PI&lt;/c0&gt; 的常量，其值是 pi 的近似值(圆周长与直径的比值)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the interfaces &lt;a0&gt;&lt;c1&gt;Comparable&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;Cloneable&lt;/c3&gt;&lt;/a2&gt; are implemented by many unrelated classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021458Z" creationid="pingfangx" creationdate="20190103T021458Z">
        <seg>例如，接口 &lt;a0&gt;&lt;c1&gt;Comparable&lt;/c1&gt;&lt;/a0&gt; 和 &lt;a2&gt;&lt;c3&gt;Cloneable&lt;/c3&gt;&lt;/a2&gt; 由许多不相关的类实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the lambda expression directly accesses the parameter &lt;c0&gt;x&lt;/c0&gt; of the method &lt;c1&gt;methodInFirstLevel&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080741Z" creationid="pingfangx" creationdate="20181228T080741Z">
        <seg>例如，lambda 表达式直接访问方法 &lt;c1&gt;methodInFirstLevel&lt;/c1&gt; 的参数 &lt;c0&gt;x&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the no-argument constructor creates a 1x1 &lt;c0&gt;Rectangle&lt;/c0&gt; at coordinates 0,0.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020341Z" creationid="pingfangx" creationdate="20180607T020341Z">
        <seg>例如，无参数构造函数在坐标 0,0 处创建 1x1 &lt;c0&gt;Rectangle&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the parameterized type &lt;c4&gt;Predicate&lt;Person&gt;&lt;/c4&gt; is the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093405Z" creationid="pingfangx" creationdate="20180706T093405Z">
        <seg>例如，参数化类型 &lt;c4&gt;Predicate&lt;Person&gt;&lt;/c4&gt; 如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, they have a static &lt;c3&gt;values&lt;/c3&gt; method that returns an array containing all of the values of the enum in the order they are declared.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015514Z" creationid="pingfangx" creationdate="20190102T015514Z">
        <seg>例如，它们有一个静态 &lt;c3&gt;values&lt;/c3&gt; 方法，该方法返回一个数组，该数组按照声明的顺序包含枚举的所有值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, this code from the &lt;c4&gt;Planet&lt;/c4&gt; class example below iterates over all the planets in the solar system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015530Z" creationid="pingfangx" creationdate="20190102T015530Z">
        <seg>例如，下面的 &lt;c4&gt;Planet&lt;/c4&gt; 类示例中的代码遍历太阳系中的所有行星。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to change to the &lt;c0&gt;myapplication&lt;/c0&gt; directory on the &lt;c1&gt;D&lt;/c1&gt; drive, you must enter &lt;c2&gt;D:&lt;/c2&gt;, as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034816Z" creationid="pingfangx" creationdate="20180518T034816Z">
        <seg>例如，要切换到 &lt;c1&gt;D&lt;/c1&gt; 驱动器上的 &lt;c0&gt;myapplication&lt;/c0&gt; 目录，必须输入 &lt;c2&gt;D:&lt;/c2&gt;，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to create an object for the static nested class, use this syntax:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091105Z" creationid="pingfangx" creationdate="20180705T091105Z">
        <seg>例如，要为静态嵌套类创建对象，请使用以下语法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to generate an integer between 0 and 9, you would write:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040554Z" creationid="pingfangx" creationdate="20190103T040554Z">
        <seg>例如，要生成 0 到 9 之间的整数，您可以编写：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to make the previous expression unambiguous, you could write the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074549Z" creationid="pingfangx" creationdate="20180521T074549Z">
        <seg>例如，要使前面的表达式明确无误，可以编写以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, we can add a statement &lt;i0&gt;within&lt;/i0&gt; the &lt;c1&gt;Rectangle&lt;/c1&gt; class that prints the &lt;c2&gt;width&lt;/c2&gt; and &lt;c3&gt;height&lt;/c3&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073522Z" creationid="pingfangx" creationdate="20180601T073522Z">
        <seg>例如，我们可以在 &lt;c1&gt;Rectangle&lt;/c1&gt; 类&lt;i0&gt;中&lt;/i0&gt;添加语句打印 &lt;c2&gt;width&lt;/c2&gt; 和 &lt;c3&gt;height&lt;/c3&gt; ：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, we could add a static method to the &lt;c0&gt;Bicycle&lt;/c0&gt; class to access the &lt;c1&gt;numberOfBicycles&lt;/c1&gt; static field:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065103Z" creationid="pingfangx" creationdate="20180705T065103Z">
        <seg>例如，我们可以向 &lt;c0&gt;Bicycle&lt;/c0&gt; 类添加一个静态方法来访问 &lt;c1&gt;numberOfBicycles&lt;/c1&gt; 静态字段：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, what method converts the integer 65 into the string "41"?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041427Z" creationid="pingfangx" creationdate="20190103T041427Z">
        <seg>例如，什么方法将整数 65 转换为字符串 "41"？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you are writing code to use a timer service that enables you to run a method at a given time or on a certain schedule, similar to the UNIX &lt;t0&gt;cron&lt;/t0&gt; service.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041032Z" creationid="pingfangx" creationdate="20190102T041032Z">
        <seg>例如，您正在编写代码以使用计时器服务，该服务使您能够在给定时间或某个计划上运行方法，类似于 UNIX &lt;t0&gt;cron&lt;/t0&gt; 服务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you can create a repeatable annotation type that can only be used on methods and fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041447Z" creationid="pingfangx" creationdate="20190102T041447Z">
        <seg>例如，您可以创建只能在方法和字段上使用的可重复注解类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you can define a local class in a method body, a &lt;c1&gt;for&lt;/c1&gt; loop, or an &lt;c2&gt;if&lt;/c2&gt; clause.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122419Z" creationid="pingfangx" creationdate="20180705T122419Z">
        <seg>例如，您可以在方法体中，&lt;c1&gt;for&lt;/c1&gt; 循环或 &lt;c2&gt;if&lt;/c2&gt; 子句中定义局部类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you can define the following method in the &lt;c0&gt;PhoneNumber&lt;/c0&gt; local class:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123227Z" creationid="pingfangx" creationdate="20180705T123227Z">
        <seg>例如，您可以在 &lt;c0&gt;PhoneNumber&lt;/c0&gt; 局部类中定义以下方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you can test to see if the class is an annotation (&lt;c3&gt;isAnnotation()&lt;/c3&gt;), an interface (&lt;c4&gt;isInterface()&lt;/c4&gt;), or an enumeration (&lt;c5&gt;isEnum()&lt;/c5&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103637Z" creationid="pingfangx" creationdate="20190102T103637Z">
        <seg>例如，您可以测试该类是否为注解（&lt;c3&gt;isAnnotation()&lt;/c3&gt;），接口（&lt;c4&gt;isInterface()&lt;/c4&gt;）或枚举（&lt;c5&gt;isEnum()&lt;/c5&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you can use the &lt;c0&gt;Predicate&lt;T&gt;&lt;/c0&gt; interface in place of &lt;c1&gt;CheckPerson&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092911Z" creationid="pingfangx" creationdate="20180706T092911Z">
        <seg>例如，您可以使用 &lt;c0&gt;Predicate&lt;T&gt;&lt;/c0&gt; 接口代替 &lt;c1&gt;CheckPerson&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you can use the access specifiers &lt;c0&gt;private&lt;/c0&gt;, &lt;c1&gt;public&lt;/c1&gt;, and &lt;c2&gt;protected&lt;/c2&gt; to restrict access to inner classes, just as you use them to restrict access do to other class members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101414Z" creationid="pingfangx" creationdate="20180705T101414Z">
        <seg>例如，您可以使用访问说明符 &lt;c0&gt;private&lt;/c0&gt;，&lt;c1&gt;public&lt;/c1&gt; 和 &lt;c2&gt;protected&lt;/c2&gt; 来限制对内部类的访问，就像您使用它们来限制一样访问其他类成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you have a class for handling unauthorized access exceptions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041117Z" creationid="pingfangx" creationdate="20190102T041117Z">
        <seg>例如，您有一个用于处理未授权访问异常的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you might want to make the &lt;c0&gt;getFirstPlayer&lt;/c0&gt; method in this &lt;c1&gt;ChessAlgorithm&lt;/c1&gt; class final:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104633Z" creationid="pingfangx" creationdate="20190102T104633Z">
        <seg>例如，您可能希望在此 &lt;c1&gt;ChessAlgorithm&lt;/c1&gt; 类中的 &lt;c0&gt;getFirstPlayer&lt;/c0&gt; 方法为 final ：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you might want to take advantage of the Checker Framework created by the University of Washington.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040925Z" creationid="pingfangx" creationdate="20190102T040925Z">
        <seg>例如，您可能希望利用华盛顿大学创建的 Checker Framework。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you want to ensure that a particular variable in your program is never assigned to null; you want to avoid triggering a &lt;c0&gt;NullPointerException&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040748Z" creationid="pingfangx" creationdate="20190102T035029Z">
        <seg>例如，您希望确保程序中的特定变量永远不会分配给 null;你想避免触发 &lt;c0&gt;NullPointerException&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you would specify a days-of-the-week enum type as:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015305Z" creationid="pingfangx" creationdate="20190102T015305Z">
        <seg>例如，您可以将星期几的枚举类型指定为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you would use a lambda expression if you want a certain action performed on each element of a collection, when a process is completed, or when a process encounters an error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013514Z" creationid="pingfangx" creationdate="20190102T013514Z">
        <seg>例如，如果要在集合的每个元素上，在进程完成时，或者在进程遇到错误时执行某个操作，您将使用 lambda 表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035730Z" creationid="pingfangx" creationdate="20180518T035730Z">
        <seg>例如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For general-purpose programming, the decimal system is likely to be the only number system you'll ever use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082842Z" creationid="pingfangx" creationdate="20180518T082842Z">
        <seg>对于通用编程，十进制系统可能是您将要使用的唯一数字系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, if your code contains numbers with many digits, you can use an underscore character to separate digits in groups of three, similar to how you would use a punctuation mark like a comma, or a space, as a separator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084511Z" creationid="pingfangx" creationdate="20180518T084511Z">
        <seg>例如，如果您的代码包含具有许多数的数字，则可以使用下划线字符以三个一组来分隔数字，这与使用逗号或空格等标点符号作为分隔符类似。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, the &lt;a0&gt;&lt;c1&gt;ArrayCopyDemo&lt;/c1&gt;&lt;/a0&gt; example uses the &lt;c2&gt;arraycopy&lt;/c2&gt; method of the &lt;c3&gt;System&lt;/c3&gt; class instead of manually iterating through the elements of the source array and placing each one into the destination array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043158Z" creationid="pingfangx" creationdate="20180521T043158Z">
        <seg>例如，&lt;a0&gt;&lt;c1&gt;ArrayCopyDemo&lt;/c1&gt;&lt;/a0&gt; 示例使用 &lt;c3&gt;System&lt;/c3&gt; 类的 &lt;c2&gt;arraycopy&lt;/c2&gt; 方法而不是手动迭代元素源数组并将每个放入目标数组中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, the previous example can be modified to use the &lt;c2&gt;copyOfRange&lt;/c2&gt; method of the &lt;c3&gt;java.util.Arrays&lt;/c3&gt; class, as you can see in the &lt;a4&gt;&lt;c5&gt;ArrayCopyOfDemo&lt;/c5&gt;&lt;/a4&gt; example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043335Z" creationid="pingfangx" creationdate="20180521T043335Z">
        <seg>例如，前面的示例可以修改为使用 &lt;c3&gt;java.util.Arrays&lt;/c3&gt; 类的 &lt;c2&gt;copyOfRange&lt;/c2&gt; 方法，如您在 &lt;a4&gt;&lt;c5&gt;ArrayCopyOfDemo&lt;/c5&gt;&lt;/a4&gt; 例子中所见。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For members, there are two additional access modifiers: &lt;c2&gt;private&lt;/c2&gt; and &lt;c3&gt;protected&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040010Z" creationid="pingfangx" creationdate="20180607T040010Z">
        <seg>对于成员，还有两个额外的访问修饰符：&lt;c2&gt;private&lt;/c2&gt; 和 &lt;c3&gt;protected&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For method arguments, the Java compiler determines the target type with two other language features: overload resolution and type argument inference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082113Z" creationid="pingfangx" creationdate="20181228T082113Z">
        <seg>对于方法参数，Java 编译器使用另外两种语言特性确定目标类型：重载决策和类型参数推断。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For methods that return a value, you can use the method invocation in expressions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085200Z" creationid="pingfangx" creationdate="20180601T085200Z">
        <seg>对于返回值的方法，可以在表达式中使用方法调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information about collections, see the &lt;a6&gt;Collections&lt;/a6&gt; trail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085653Z" creationid="pingfangx" creationdate="20180706T085653Z">
        <seg>有关集合的更多信息，请参阅 &lt;a6&gt;Collections&lt;/a6&gt; 路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on &lt;c1&gt;@Override&lt;/c1&gt;, see &lt;a2&gt;&lt;c3&gt;Annotations&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090310Z" creationid="pingfangx" creationdate="20190102T090310Z">
        <seg>有关 &lt;c1&gt;@Override&lt;/c1&gt; 的详细信息，请参阅 &lt;a2&gt;&lt;c3&gt;Annotations&lt;/c3&gt;&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on &lt;c4&gt;javadoc&lt;/c4&gt;, see the &lt;a5&gt;Javadoc™ tool documentation&lt;/a5&gt; .</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035519Z" creationid="pingfangx" creationdate="20180518T035519Z">
        <seg>有关 &lt;c4&gt;javadoc&lt;/c4&gt; 的更多信息，请参阅 &lt;a5&gt;Javadoc™ tool documentation&lt;/a5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on autoboxing and unboxing, see &lt;a6&gt;Autoboxing and Unboxing&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062039Z" creationid="pingfangx" creationdate="20190103T062039Z">
        <seg>有关自动装箱和拆箱的详细信息，请参阅 &lt;a6&gt;Autoboxing and Unboxing&lt;/a6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see &lt;a0&gt;Repeating Annotations&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024028Z" creationid="pingfangx" creationdate="20190102T024028Z">
        <seg>有关更多信息，请参阅 &lt;a0&gt;Repeating Annotations&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see &lt;a1&gt;Type Annotations and Pluggable Type Systems&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024226Z" creationid="pingfangx" creationdate="20190102T024226Z">
        <seg>有关更多信息，请参阅 &lt;a1&gt;Type Annotations and Pluggable Type Systems&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see &lt;a3&gt;Autoboxing and Unboxing&lt;/a3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030133Z" creationid="pingfangx" creationdate="20190103T030133Z">
        <seg>有关更多信息，请参阅 &lt;a3&gt;Autoboxing and Unboxing&lt;/a3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see &lt;a3&gt;Repeating Annotations&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034105Z" creationid="pingfangx" creationdate="20190102T034100Z">
        <seg>有关更多信息，请参阅 &lt;a3&gt;Repeating Annotations&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see the &lt;a1&gt;Checker Framework&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040936Z" creationid="pingfangx" creationdate="20190102T040936Z">
        <seg>有关更多信息，请参阅 &lt;a1&gt;Checker Framework&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For now it is enough to know that every application begins with a class definition.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035620Z" creationid="pingfangx" creationdate="20180518T035620Z">
        <seg>现在知道每个应用程序都以类定义开始就足够了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For objects, however, it does not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102354Z" creationid="pingfangx" creationdate="20190102T102354Z">
        <seg>但是，对于对象，它没有。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For planar geometric objects, area would be a good choice (see the &lt;c1&gt;RectanglePlus&lt;/c1&gt; class that follows), while volume would work for three-dimensional geometric objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062043Z" creationid="pingfangx" creationdate="20190102T062043Z">
        <seg>对于平面几何对象，面积将是一个不错的选择(参见后面的 &lt;c1&gt;RectanglePlus&lt;/c1&gt; 类)，而体积适用于三维几何对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For primitive data types, this gives the correct result.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102345Z" creationid="pingfangx" creationdate="20190102T102345Z">
        <seg>对于基本数据类型，这会给出正确的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For some classes, the default behavior of &lt;c0&gt;Object&lt;/c0&gt;'s &lt;c1&gt;clone()&lt;/c1&gt; method works just fine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101709Z" creationid="pingfangx" creationdate="20190102T101709Z">
        <seg>对于某些类，&lt;c0&gt;Object&lt;/c0&gt; 的 &lt;c1&gt;clone()&lt;/c1&gt; 方法的默认行为可以正常工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For strings, it could be number of characters; for books, it could be number of pages; for students, it could be weight; and so forth.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062021Z" creationid="pingfangx" creationdate="20190102T062021Z">
        <seg>对于字符串，它可以是字符数;对于书籍，它可以是页数;对于学生来说，它可能是重量;等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For that, you need to use the &lt;c1&gt;new&lt;/c1&gt; operator, as described in the next section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042751Z" creationid="pingfangx" creationdate="20180601T042751Z">
        <seg>为此，您需要使用 &lt;c1&gt;new&lt;/c1&gt; 运算符，如下一节所述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For that, you will need to use the &lt;a7&gt;java.math.BigDecimal&lt;/a7&gt; class instead.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081738Z" creationid="pingfangx" creationdate="20180518T081738Z">
        <seg>为此，您需要改为使用 &lt;a7&gt;java.math.BigDecimal&lt;/a7&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the moment you do not need to worry about these extra complications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030826Z" creationid="pingfangx" creationdate="20180525T030826Z">
        <seg>目前，您不必担心这些额外的复杂问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the moment, consider only &lt;c0&gt;public&lt;/c0&gt; and &lt;c1&gt;private&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063730Z" creationid="pingfangx" creationdate="20180525T063730Z">
        <seg>目前，只考虑 &lt;c0&gt;public&lt;/c0&gt; 和 &lt;c1&gt;private&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the moment, don't concern yourself with the details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023634Z" creationid="pingfangx" creationdate="20180525T023634Z">
        <seg>目前，不要关注细节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the moment, you do not need to understand interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025032Z" creationid="pingfangx" creationdate="20190102T025032Z">
        <seg>目前，您不需要了解接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the moment, you need to know that &lt;c4&gt;clone()&lt;/c4&gt; must be declared as</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101558Z" creationid="pingfangx" creationdate="20190102T101558Z">
        <seg>目前，您需要知道 &lt;c4&gt;clone()&lt;/c4&gt; 必须声明为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this you need a class variable, &lt;c2&gt;numberOfBicycles&lt;/c2&gt;, as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043038Z" creationid="pingfangx" creationdate="20180607T043038Z">
        <seg>为此，您需要一个类变量 &lt;c2&gt;numberOfBicycles&lt;/c2&gt;，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For your convenience, Java SE provides several methods for performing array manipulations (common tasks, such as copying, sorting and searching arrays) in the &lt;a0&gt;&lt;c1&gt;java.util.Arrays&lt;/c1&gt;&lt;/a0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043314Z" creationid="pingfangx" creationdate="20180521T043314Z">
        <seg>为了您的方便，Java SE 提供了几种在 &lt;a0&gt;&lt;c1&gt;java.util.Arrays&lt;/c1&gt;&lt;/a0&gt; 类中执行数组操作(常见任务，如复制，排序和搜索数组)的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Format specifiers begin with a percent sign (%) and end with a &lt;i0&gt;converter&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032951Z" creationid="pingfangx" creationdate="20190103T032951Z">
        <seg>格式说明符以百分号(%)开头，以 &lt;i0&gt;转换器（converter）&lt;/i0&gt; 结束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Formatting Numeric Print Output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092715Z" creationid="pingfangx" creationdate="20180521T092715Z">
        <seg>格式化数字打印输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Formatting Numeric Print Output (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T031305Z" creationid="pingfangx" creationdate="20190103T031305Z">
        <seg>Formatting Numeric Print Output (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Found 12 at 1, 0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090142Z" creationid="pingfangx" creationdate="20180521T090142Z">
        <seg>Found 12 at 1, 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Found 12 at index 4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085925Z" creationid="pingfangx" creationdate="20180521T085925Z">
        <seg>Found 12 at index 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Found 9 p's in the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090535Z" creationid="pingfangx" creationdate="20180521T090535Z">
        <seg>Found 9 p's in the string.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Found it</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090652Z" creationid="pingfangx" creationdate="20180521T090652Z">
        <seg>Found it</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Frequency of Occurrence</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085402Z" creationid="pingfangx" creationdate="20180706T085402Z">
        <seg>发生频率</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Frequently, a program ends up with numeric data in a string objecta value entered by the user, for example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065103Z" creationid="pingfangx" creationdate="20190103T065103Z">
        <seg>通常，程序以字符串对象中的数字数据结束，例如，用户输入的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fridays are better.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015358Z" creationid="pingfangx" creationdate="20190102T015358Z">
        <seg>Fridays are better.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From the &lt;b0&gt; Save as type&lt;/b0&gt; combo box, choose &lt;b1&gt; Text Documents (*.txt)&lt;/b1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034700Z" creationid="pingfangx" creationdate="20180518T034700Z">
        <seg>从 &lt;b0&gt; Save as type&lt;/b0&gt; 组合框中，选择 &lt;b1&gt; Text Documents (*.txt)&lt;/b1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From them, you will learn how to write code that creates and uses objects in your own programs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040141Z" creationid="pingfangx" creationdate="20180601T040141Z">
        <seg>从他们中，您将学习如何编写在自己的程序中创建和使用对象的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From within a constructor, you can also use the &lt;c0&gt;this&lt;/c0&gt; keyword to call another constructor in the same class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T015255Z" creationid="pingfangx" creationdate="20180607T015255Z">
        <seg>从构造函数中，还可以使用 &lt;c0&gt;this&lt;/c0&gt; 关键字来调用同一个类中的另一个构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Function &lt;X, Y&gt; mapper,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100548Z" creationid="pingfangx" creationdate="20180706T100548Z">
        <seg>Function &lt;X, Y&gt; mapper,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Function&lt;Person, String&gt; mapper,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094309Z" creationid="pingfangx" creationdate="20180706T094309Z">
        <seg>Function&lt;Person, String&gt; mapper,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Further detail can be found in the &lt;a3&gt;&lt;c4&gt;Basic I/O&lt;/c4&gt; &lt;/a3&gt; section of the Essential trail, in the "Formatting" page.&lt;br5/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033642Z" creationid="pingfangx" creationdate="20190103T033642Z">
        <seg>有关详细信息，请参阅 Essential 轨迹的 &lt;a3&gt;&lt;c4&gt;Basic I/O&lt;/c4&gt; &lt;/a3&gt; 部分，在 "格式" 页面中。&lt;br5/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gamma</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041517Z" creationid="pingfangx" creationdate="20180607T041517Z">
        <seg>Gamma</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generally speaking, &lt;i0&gt;interfaces&lt;/i0&gt; are such contracts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T043616Z" creationid="pingfangx" creationdate="20190102T043616Z">
        <seg>一般来说，&lt;i0&gt;interfaces&lt;/i0&gt; 就是这样的合约。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generally speaking, this default will be zero or &lt;c0&gt;null&lt;/c0&gt;, depending on the data type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082121Z" creationid="pingfangx" creationdate="20180518T082121Z">
        <seg>一般来说，根据数据类型的不同，此默认值将为零或 &lt;c0&gt;null&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generally speaking, we don't recommend hiding fields as it makes code difficult to read.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094351Z" creationid="pingfangx" creationdate="20190102T094351Z">
        <seg>一般来说，我们不建议隐藏字段，因为它使代码难以阅读。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates a compile-time error</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092715Z" creationid="pingfangx" creationdate="20190102T092715Z">
        <seg>生成编译时错误</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generic Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092838Z" creationid="pingfangx" creationdate="20180521T092838Z">
        <seg>泛型方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generic Methods and Bounded Type Parameters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092854Z" creationid="pingfangx" creationdate="20180521T092854Z">
        <seg>泛型方法和有界类型参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generic Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092826Z" creationid="pingfangx" creationdate="20180521T092826Z">
        <seg>泛型类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generics (Updated)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092812Z" creationid="pingfangx" creationdate="20180521T092812Z">
        <seg>泛型(更新)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generics, Inheritance, and Subtypes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092901Z" creationid="pingfangx" creationdate="20180521T092901Z">
        <seg>泛型，继承和子类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Get the file &lt;a0&gt;&lt;c1&gt;Class1.java&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013946Z" creationid="pingfangx" creationdate="20190102T013946Z">
        <seg>获取文件 &lt;a0&gt;&lt;c1&gt;Class1.java&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Get the file Class1.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021151Z" creationid="pingfangx" creationdate="20190102T021151Z">
        <seg>Get the file Class1.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting Characters and Substrings by Index</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072533Z" creationid="pingfangx" creationdate="20190103T072533Z">
        <seg>按索引获取字符和子字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting Started: End of Trail</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040538Z" creationid="pingfangx" creationdate="20180518T040538Z">
        <seg>Getting Started: End of Trail</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting Started: End of Trail (The Java™ Tutorials)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040523Z" creationid="pingfangx" creationdate="20180518T040523Z">
        <seg>Getting Started: End of Trail (The Java™ Tutorials)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Given the following class, called &lt;a0&gt;&lt;c1&gt;NumberHolder&lt;/c1&gt;&lt;/a0&gt;, write some code that creates an instance of the class, initializes its two member variables, and then displays the value of each member variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083301Z" creationid="pingfangx" creationdate="20180705T083301Z">
        <seg>给定以下类，称为 &lt;a0&gt;&lt;c1&gt;NumberHolder&lt;/c1&gt;&lt;/a0&gt;，编写一些创建类实例的代码，初始化其两个成员变量，然后显示每个成员变量的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Grade = C</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081156Z" creationid="pingfangx" creationdate="20180521T081156Z">
        <seg>Grade = C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GridPane grid = new GridPane();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065955Z" creationid="pingfangx" creationdate="20180706T065955Z">
        <seg>GridPane grid = new GridPane();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GridPane.setColumnSpan(label, 3);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070017Z" creationid="pingfangx" creationdate="20180706T070017Z">
        <seg>GridPane.setColumnSpan(label, 3);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GridPane.setConstraints(dollar, 0, 0);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065958Z" creationid="pingfangx" creationdate="20180706T065958Z">
        <seg>GridPane.setConstraints(dollar, 0, 0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GridPane.setConstraints(label, 0, 1);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070016Z" creationid="pingfangx" creationdate="20180706T070016Z">
        <seg>GridPane.setConstraints(label, 0, 1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GridPane.setConstraints(submit, 2, 0);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070012Z" creationid="pingfangx" creationdate="20180706T070012Z">
        <seg>GridPane.setConstraints(submit, 2, 0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GridPane.setConstraints(sum, 1, 0);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070009Z" creationid="pingfangx" creationdate="20180706T070009Z">
        <seg>GridPane.setConstraints(sum, 1, 0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Group root = new Group();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065951Z" creationid="pingfangx" creationdate="20180706T065951Z">
        <seg>Group root = new Group();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groups of related lessons are organized into "trails".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030929Z" creationid="pingfangx" creationdate="20180518T030848Z">
        <seg>相关课程组被组织成 "trails"（路径）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Guidelines for Wildcard Use</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092934Z" creationid="pingfangx" creationdate="20180521T092934Z">
        <seg>通配符使用指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HEARTS   (3, "Hearts"  ),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065235Z" creationid="pingfangx" creationdate="20190102T065235Z">
        <seg>HEARTS   (3, "Hearts"  ),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hannah did.";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085149Z" creationid="pingfangx" creationdate="20190103T085149Z">
        <seg>Hannah did.";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Having said that, the remainder of this tutorial uses the following general guidelines when discussing fields and variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073850Z" creationid="pingfangx" creationdate="20180518T073850Z">
        <seg>话虽如此，本教程的其余部分在讨论字段和变量时使用以下一般准则。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HelloThere myGreeting = new EnglishHelloThere();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144415Z" creationid="pingfangx" creationdate="20180705T144415Z">
        <seg>HelloThere myGreeting = new EnglishHelloThere();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HelloWorld englishGreeting = new EnglishGreeting();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061130Z" creationid="pingfangx" creationdate="20180706T061130Z">
        <seg>HelloWorld englishGreeting = new EnglishGreeting();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HelloWorld frenchGreeting = new HelloWorld() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061131Z" creationid="pingfangx" creationdate="20180706T061131Z">
        <seg>HelloWorld frenchGreeting = new HelloWorld() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HelloWorld spanishGreeting = new HelloWorld() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061134Z" creationid="pingfangx" creationdate="20180706T061134Z">
        <seg>HelloWorld spanishGreeting = new HelloWorld() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HelloWorldAnonymousClasses myApp =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061139Z" creationid="pingfangx" creationdate="20180706T061139Z">
        <seg>HelloWorldAnonymousClasses myApp =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HelloWorldApp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034939Z" creationid="pingfangx" creationdate="20180518T034939Z">
        <seg>HelloWorldApp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HelloWorldApp2.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040145Z" creationid="pingfangx" creationdate="20180518T040145Z">
        <seg>HelloWorldApp2.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HelloWorldApp2.java:7: unclosed string literal</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040338Z" creationid="pingfangx" creationdate="20180518T040338Z">
        <seg>HelloWorldApp2.java:7: unclosed string literal</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HelloWorldApp&lt;/s0&gt;
Hello World!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034943Z" creationid="pingfangx" creationdate="20180518T034943Z">
        <seg>HelloWorldApp&lt;/s0&gt;
Hello World!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here again is its code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035246Z" creationid="pingfangx" creationdate="20180518T035246Z">
        <seg>这里又是它的代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are a number of the methods of the &lt;c0&gt;StringBuilder&lt;/c0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081935Z" creationid="pingfangx" creationdate="20190103T081935Z">
        <seg>以下是 &lt;c0&gt;StringBuilder&lt;/c0&gt; 类的许多方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are several other &lt;c0&gt;String&lt;/c0&gt; methods for manipulating strings:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073015Z" creationid="pingfangx" creationdate="20190103T073015Z">
        <seg>以下是几个用于操作字符串的 &lt;c0&gt;String&lt;/c0&gt; 方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some examples of expression statements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074900Z" creationid="pingfangx" creationdate="20180521T074900Z">
        <seg>这里有一些表达式语句的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some examples:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065152Z" creationid="pingfangx" creationdate="20180525T065152Z">
        <seg>这里有些例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some other &lt;c0&gt;String&lt;/c0&gt; methods for finding characters or substrings within a string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073212Z" creationid="pingfangx" creationdate="20190103T073212Z">
        <seg>以下是一些用于查找字符串中的字符或子字符串的其他 &lt;c0&gt;String&lt;/c0&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a basic example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033036Z" creationid="pingfangx" creationdate="20190103T033036Z">
        <seg>这是一个基本的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a list of keywords in the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075224Z" creationid="pingfangx" creationdate="20180518T075224Z">
        <seg>以下是 Java 编程语言中的关键字列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a program, &lt;a0&gt;&lt;c1&gt;FilenameDemo&lt;/c1&gt;&lt;/a0&gt;, that constructs a &lt;c2&gt;Filename&lt;/c2&gt; object and calls all of its methods:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074942Z" creationid="pingfangx" creationdate="20190103T074942Z">
        <seg>这是一个程序 &lt;a0&gt;&lt;c1&gt;FilenameDemo&lt;/c1&gt;&lt;/a0&gt;，它构造一个 &lt;c2&gt;Filename&lt;/c2&gt; 对象并调用其所有方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a sample program that illustrates the use of &lt;c0&gt;DecimalFormat&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034047Z" creationid="pingfangx" creationdate="20190103T034047Z">
        <seg>这是一个示例程序，说明 &lt;c0&gt;DecimalFormat&lt;/c0&gt; 的使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a sample program that takes your weight on earth (in any unit) and calculates and prints your weight on all of the planets (in the same unit):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020016Z" creationid="pingfangx" creationdate="20190102T020016Z">
        <seg>这是一个示例程序，它可以将你的重量放在地球上(在任何单位)并计算和打印所有行星上的重量(在同一单位)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a short and inefficient program to reverse a palindrome string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063825Z" creationid="pingfangx" creationdate="20190103T063825Z">
        <seg>这是一个简短而低效的程序来反转回文串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a subclass, called &lt;c0&gt;Subclass&lt;/c0&gt;, that overrides &lt;c1&gt;printMethod()&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094942Z" creationid="pingfangx" creationdate="20190102T094942Z">
        <seg>这是一个名为 &lt;c0&gt;Subclass&lt;/c0&gt; 的子类，它覆盖 &lt;c1&gt;printMethod()&lt;/c1&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a test program that creates three &lt;c0&gt;Bicycle&lt;/c0&gt; variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094029Z" creationid="pingfangx" creationdate="20190102T094029Z">
        <seg>这是一个测试程序，它创建了三个 &lt;c0&gt;Bicycle&lt;/c0&gt; 变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example of a &lt;c2&gt;Book&lt;/c2&gt; class that overrides &lt;c3&gt;equals()&lt;/c3&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102551Z" creationid="pingfangx" creationdate="20190102T102551Z">
        <seg>以下是覆盖 &lt;c3&gt;equals()&lt;/c3&gt; 的 &lt;c2&gt;Book&lt;/c2&gt; 类的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example of a typical method declaration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064729Z" creationid="pingfangx" creationdate="20180525T064729Z">
        <seg>这是一个典型的方法声明的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example of using a final method for initializing an instance variable:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070749Z" creationid="pingfangx" creationdate="20180705T070749Z">
        <seg>以下是使用 final 方法初始化实例变量的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example, &lt;a14&gt;&lt;c15&gt;ValueOfDemo&lt;/c15&gt;&lt;/a14&gt; , that gets two strings from the command line, converts them to numbers, and performs arithmetic operations on the values:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065159Z" creationid="pingfangx" creationdate="20190103T065159Z">
        <seg>下面是一个示例 &lt;a14&gt;&lt;c15&gt;ValueOfDemo&lt;/c15&gt;&lt;/a14&gt;，它从命令行获取两个字符串，将它们转换为数字，并对值执行算术运算：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033910Z" creationid="pingfangx" creationdate="20180601T033910Z">
        <seg>这里是一个例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is one solution:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073337Z" creationid="pingfangx" creationdate="20180521T073337Z">
        <seg>这是一个解决方案：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is sample code for a possible implementation of a &lt;c1&gt;Bicycle&lt;/c1&gt; class, to give you an overview of a class declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023454Z" creationid="pingfangx" creationdate="20180525T023454Z">
        <seg>以下是可能实现 &lt;c1&gt;Bicycle&lt;/c1&gt; 类的示例代码，为您提供类声明的概述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is some code that shows you how to use the &lt;c0&gt;Day&lt;/c0&gt; enum defined above:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015337Z" creationid="pingfangx" creationdate="20190102T015337Z">
        <seg>以下是一些代码，向您展示如何使用上面定义的 &lt;c0&gt;Day&lt;/c0&gt; 枚举：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the &lt;c0&gt;Rectangle&lt;/c0&gt; class that was presented in the &lt;a1&gt;Creating Objects&lt;/a1&gt; section, rewritten to implement &lt;c2&gt;Relatable&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062147Z" creationid="pingfangx" creationdate="20190102T062147Z">
        <seg>这是 &lt;a1&gt;Creating Objects&lt;/a1&gt; 部分中提供的 &lt;c0&gt;Rectangle&lt;/c0&gt; 类，为实现 &lt;c2&gt;Relatable&lt;/c2&gt; 而重写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the &lt;c1&gt;RoadBike&lt;/c1&gt; class:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093959Z" creationid="pingfangx" creationdate="20190102T093959Z">
        <seg>这是 &lt;c1&gt;RoadBike&lt;/c1&gt; 类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the &lt;c5&gt;MountainBike&lt;/c5&gt; (subclass) constructor that calls the superclass constructor and then adds initialization code of its own:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095510Z" creationid="pingfangx" creationdate="20190102T095510Z">
        <seg>这是 &lt;c5&gt;MountainBike&lt;/c5&gt;(子类)构造函数，它调用超类构造函数，然后添加自己的初始化代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the correct line of code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040351Z" creationid="pingfangx" creationdate="20180518T040351Z">
        <seg>这是正确的代码行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the output from this program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090651Z" creationid="pingfangx" creationdate="20180521T090651Z">
        <seg>这是这个程序的输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the output of this program:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090534Z" creationid="pingfangx" creationdate="20180521T090534Z">
        <seg>这是这个程序的输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041826Z" creationid="pingfangx" creationdate="20190103T041826Z">
        <seg>这是输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the sample code for a possible implementation of a &lt;c0&gt;Bicycle&lt;/c0&gt; class that was presented in the Classes and Objects lesson:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081935Z" creationid="pingfangx" creationdate="20190102T081935Z">
        <seg>以下是在“类和对象”类中提供的 &lt;c0&gt;Bicycle&lt;/c0&gt; 类的可能实现的示例代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the simplest example of autoboxing:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083910Z" creationid="pingfangx" creationdate="20190103T083910Z">
        <seg>以下是自动装箱的最简单示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the updated class:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093807Z" creationid="pingfangx" creationdate="20190102T093807Z">
        <seg>这是更新的类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here the &lt;c0&gt;instanceof&lt;/c0&gt; operator verifies that &lt;c1&gt;obj&lt;/c1&gt; refers to a &lt;c2&gt;MountainBike&lt;/c2&gt; so that we can make the cast with knowledge that there will be no runtime exception thrown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084037Z" creationid="pingfangx" creationdate="20190102T084037Z">
        <seg>这里 &lt;c0&gt;instanceof&lt;/c0&gt; 运算符验证 &lt;c1&gt;obj&lt;/c1&gt; 是否指向 &lt;c2&gt;MountainBike&lt;/c2&gt;，以便我们可以使用转换，而不会抛出运行时异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here the length of the array is determined by the number of values provided between braces and separated by commas.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041956Z" creationid="pingfangx" creationdate="20180521T041956Z">
        <seg>这里数组的长度由花括号之间提供用逗号分隔的值的数量决定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's a &lt;a0&gt;&lt;c1&gt;BicycleDemo&lt;/c1&gt;&lt;/a0&gt; class that creates two separate &lt;c2&gt;Bicycle&lt;/c2&gt; objects and invokes their methods:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062702Z" creationid="pingfangx" creationdate="20180518T062702Z">
        <seg>这是一个 &lt;a0&gt;&lt;c1&gt;BicycleDemo&lt;/c1&gt;&lt;/a0&gt; 类，它创建两个独立的 &lt;c2&gt;Bicycle&lt;/c2&gt; 对象并调用它们的方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's a program, &lt;a0&gt;&lt;c1&gt;TrigonometricDemo&lt;/c1&gt;&lt;/a0&gt;, that uses each of these methods to compute various trigonometric values for a 45-degree angle:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040418Z" creationid="pingfangx" creationdate="20190103T040418Z">
        <seg>这是一个程序，&lt;a0&gt;&lt;c1&gt;TrigonometricDemo&lt;/c1&gt;&lt;/a0&gt;，它使用这些方法中的每一种来计算 45 度角的各种三角函数值：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's a small program, called &lt;a0&gt;&lt;c1&gt;CreateObjectDemo&lt;/c1&gt;&lt;/a0&gt;, that creates three objects: one &lt;a2&gt;&lt;c3&gt;Point&lt;/c3&gt;&lt;/a2&gt; object and two &lt;a4&gt;&lt;c5&gt;Rectangle&lt;/c5&gt;&lt;/a4&gt; objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T035958Z" creationid="pingfangx" creationdate="20180601T035958Z">
        <seg>这是一个名为 &lt;a0&gt;&lt;c1&gt;CreateObjectDemo&lt;/c1&gt;&lt;/a0&gt; 的小程序，它创建三个对象：一个 &lt;a2&gt;&lt;c3&gt;Point&lt;/c3&gt;&lt;/a2&gt; 对象和两个 &lt;a4&gt;&lt;c5&gt;Rectangle&lt;/c5&gt;&lt;/a4&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example of a compound expression:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074405Z" creationid="pingfangx" creationdate="20180521T074405Z">
        <seg>下面是一个复合表达式的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example of a method that accepts an array as an argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032529Z" creationid="pingfangx" creationdate="20180601T032529Z">
        <seg>下面是一个接受数组作为参数的方法的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's another &lt;c2&gt;Rectangle&lt;/c2&gt; class, with a different implementation from the one in the &lt;a3&gt;Objects&lt;/a3&gt; section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020140Z" creationid="pingfangx" creationdate="20180607T020140Z">
        <seg>这是另一个 &lt;c2&gt;Rectangle&lt;/c2&gt; 类，它与 &lt;a3&gt;Objects&lt;/a3&gt; 部分中的不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's how:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041739Z" creationid="pingfangx" creationdate="20190103T041739Z">
        <seg>这是如何做：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's the &lt;t3&gt;CreateObjectDemo&lt;/t3&gt; code that invokes these two methods:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T084854Z" creationid="pingfangx" creationdate="20180601T084854Z">
        <seg>以下是调用这两种方法的 &lt;t3&gt;CreateObjectDemo&lt;/t3&gt; 代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's the code for the &lt;t0&gt;Point&lt;/t0&gt; class:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062438Z" creationid="pingfangx" creationdate="20180601T062438Z">
        <seg>以下是 &lt;t0&gt;Point&lt;/t0&gt; 类的代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's the code for the &lt;t0&gt;Rectangle&lt;/t0&gt; class, which contains four constructors:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062608Z" creationid="pingfangx" creationdate="20180601T062608Z">
        <seg>以下是 &lt;t0&gt;Rectangle&lt;/t0&gt; 类的代码，其中包含四个构造函数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's the output from this program:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035803Z" creationid="pingfangx" creationdate="20190103T035803Z">
        <seg>这是该程序的输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's the output you'll see when you run &lt;c0&gt;ExponentialDemo&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040146Z" creationid="pingfangx" creationdate="20190103T040146Z">
        <seg>这是您运行 &lt;c0&gt;ExponentialDemo&lt;/c0&gt; 时将看到的输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's the output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040059Z" creationid="pingfangx" creationdate="20180601T040059Z">
        <seg>这是输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, once again, is its listing:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082656Z" creationid="pingfangx" creationdate="20190103T082656Z">
        <seg>这里，再一次，是它的清单：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, the &lt;c5&gt;args&lt;/c5&gt; variable is the parameter to this method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073732Z" creationid="pingfangx" creationdate="20180518T073732Z">
        <seg>这里，&lt;c5&gt;args&lt;/c5&gt; 变量是此方法的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, the returned substring extends to the end of the original string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072722Z" creationid="pingfangx" creationdate="20190103T072722Z">
        <seg>这里，返回的子字符串扩展到原始字符串的末尾。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hexadecimal: Base 16, whose digits consist of the numbers 0 through 9 and the letters A through F</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082815Z" creationid="pingfangx" creationdate="20180518T082815Z">
        <seg>十六进制：基数 16，其数字由数字 0 到 9 以及字母 A 到 F 组成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hide TOC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032652Z" creationid="pingfangx" creationdate="20180518T032652Z">
        <seg>隐藏目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hides</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092719Z" creationid="pingfangx" creationdate="20190102T092719Z">
        <seg>Hides</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hiding Fields</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092630Z" creationid="pingfangx" creationdate="20180521T092630Z">
        <seg>隐藏字段</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hiding Fields (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094308Z" creationid="pingfangx" creationdate="20190102T094308Z">
        <seg>Hiding Fields (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hiding internal data from the outside world, and accessing it only through publicly exposed methods is known as data &lt;s0&gt;encapsulation&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064915Z" creationid="pingfangx" creationdate="20180518T064915Z">
        <seg>隐藏来自外部世界的内部数据，并仅通过公开暴露的方法访问内部数据称为数据 &lt;s0&gt;encapsulation&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hiding internal data from the outside world, and accessing it only through publicly exposed methods is known as data ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064705Z" creationid="pingfangx" creationdate="20180518T064705Z">
        <seg>隐藏来自外部世界的内部数据并仅通过公开暴露的方法访问它，这就是数据___。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hiding internal state and requiring all interaction to be performed through an object's methods is known as &lt;i2&gt;data encapsulation&lt;/i2&gt;  a fundamental principle of object-oriented programming.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061659Z" creationid="pingfangx" creationdate="20180518T061659Z">
        <seg>隐藏内部状态并且要求通过对象的方法执行所有交互被称为 &lt;i2&gt;data encapsulation（数据封装）&lt;/i2&gt; 一个面向对象编程的基本原理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>High performance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033017Z" creationid="pingfangx" creationdate="20180518T033017Z">
        <seg>High performance（高性能）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hint: The program already has another anonymous inner class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021149Z" creationid="pingfangx" creationdate="20190102T021149Z">
        <seg>Hint: The program already has another anonymous inner class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Home</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040530Z" creationid="pingfangx" creationdate="20180518T040530Z">
        <seg>主页</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Home Page</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032052Z" creationid="pingfangx" creationdate="20180518T032052Z">
        <seg>主页</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How Will Java Technology Change My Life?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032705Z" creationid="pingfangx" creationdate="20180518T032705Z">
        <seg>Java 技术将如何改变我的生活？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do you create an instance of &lt;c0&gt;Box&lt;/c0&gt;'s &lt;c1&gt;Filler&lt;/c1&gt; class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013941Z" creationid="pingfangx" creationdate="20190102T013941Z">
        <seg>如何创建 &lt;c0&gt;Box&lt;/c0&gt; 的 &lt;c1&gt;Filler&lt;/c1&gt; 类的实例？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do you create an instance of Box's Filler class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020925Z" creationid="pingfangx" creationdate="20190102T020925Z">
        <seg>你如何创建 Box 的填充类的实例？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do you determine the type of a lambda expression?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081409Z" creationid="pingfangx" creationdate="20181228T081409Z">
        <seg>如何确定 lambda 表达式的类型？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do you write an infinite loop using the &lt;c0&gt;for&lt;/c0&gt; statement?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091100Z" creationid="pingfangx" creationdate="20180521T091100Z">
        <seg>你如何使用 &lt;c0&gt;for&lt;/c0&gt; 语句编写无限循环？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do you write an infinite loop using the &lt;c0&gt;while&lt;/c0&gt; statement?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091122Z" creationid="pingfangx" creationdate="20180521T091122Z">
        <seg>如何使用 &lt;c0&gt;while&lt;/c0&gt; 语句中编写无限循环？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How does a program destroy an object that it creates?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083244Z" creationid="pingfangx" creationdate="20180705T083244Z">
        <seg>程序如何销毁它创建的对象？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How long is the string returned by the following expression?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085217Z" creationid="pingfangx" creationdate="20190103T085217Z">
        <seg>下面的表达式返回的字符串有多长？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How many references to those objects exist after the code executes?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083228Z" creationid="pingfangx" creationdate="20180705T083228Z">
        <seg>代码执行后，对这些对象有多少引用？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, a local class can only access local variables that are declared final.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122657Z" creationid="pingfangx" creationdate="20180705T122657Z">
        <seg>但是，局部类只能访问声明为 final 的局部变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, a method might have the same name as other methods due to &lt;i0&gt;method overloading&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065226Z" creationid="pingfangx" creationdate="20180525T065226Z">
        <seg>但是，由于 &lt;i0&gt;method overloading（方法重载）&lt;/i0&gt;，方法可能与其他方法具有相同的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, advances in compiler and virtual machine technologies are bringing performance close to that of native code without threatening portability.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033433Z" creationid="pingfangx" creationdate="20180518T033433Z">
        <seg>然而，编译器和虚拟机技术的进步使性能接近本地代码的性能，而不会威胁到可移植性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, an &lt;c6&gt;Object&lt;/c6&gt; is not necessarily a &lt;c7&gt;Number&lt;/c7&gt;  it could be a &lt;c8&gt;String&lt;/c8&gt; or another type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092103Z" creationid="pingfangx" creationdate="20180601T092103Z">
        <seg>但是，&lt;c6&gt;Object&lt;/c6&gt; 不一定是 &lt;c7&gt;Number&lt;/c7&gt;  它可能是一个 &lt;c8&gt;String&lt;/c8&gt; 或其他类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, convention discourages this form; the brackets identify the array type and should appear with the type designation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T035109Z" creationid="pingfangx" creationdate="20180521T035058Z">
        <seg>然而，惯例不鼓励这种形式;括号标识数组类型，并应与类型标识一起出现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, if it does not, then the subclass must also be declared &lt;c0&gt;abstract&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T020015Z" creationid="pingfangx" creationdate="20190103T020015Z">
        <seg>但是，如果没有，则子类也必须声明为 &lt;c0&gt;abstract&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, if the superclass has public or protected methods for accessing its private fields, these can also be used by the subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082951Z" creationid="pingfangx" creationdate="20190102T082951Z">
        <seg>但是，如果超类具有访问其私有字段的公共或受保护方法，则子类也可以使用这些方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, if you need to use another number system, the following example shows the correct syntax.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082856Z" creationid="pingfangx" creationdate="20180518T082856Z">
        <seg>但是，如果您需要使用其他数字系统，则以下示例显示正确的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, in a more realistic situation, &lt;c3&gt;myRect&lt;/c3&gt; might be initialized to &lt;c4&gt;null&lt;/c4&gt; in one place, say in a constructor, and used later.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083511Z" creationid="pingfangx" creationdate="20180705T083511Z">
        <seg>但是，在更现实的情况下，&lt;c3&gt;myRect&lt;/c3&gt; 可能会在一个位置初始化为 &lt;c4&gt;null&lt;/c4&gt;，比如在构造函数中，并在以后使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, it would be simpler for your developers if they could reverse an existing &lt;c1&gt;Comparator&lt;/c1&gt; by invoking a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072057Z" creationid="pingfangx" creationdate="20190102T072057Z">
        <seg>但是，如果您的开发人员可以通过调用方法来反转现有的 &lt;c1&gt;Comparator&lt;/c1&gt;，则会更简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, like &lt;a1&gt;inner classes&lt;/a1&gt;, the serialization of lambda expressions is strongly discouraged.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082507Z" creationid="pingfangx" creationdate="20181228T082507Z">
        <seg>但是，与 &lt;a1&gt;inner classes&lt;/a1&gt; 类似，强烈建议不要对 lambda 表达式进行序列化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, like local and anonymous classes, a lambda expression can only access local variables and parameters of the enclosing block that are final or effectively final.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080859Z" creationid="pingfangx" creationdate="20181228T080859Z">
        <seg>但是，与局部和匿名类一样，lambda 表达式只能访问 final 或 effectively final 的封闭块的局部变量和参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, once a condition is satisfied, the appropriate statements are executed &lt;c3&gt;(grade = 'C';)&lt;/c3&gt; and the remaining conditions are not evaluated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081229Z" creationid="pingfangx" creationdate="20180521T081229Z">
        <seg>但是，一旦满足条件，就会执行相应的语句 &lt;c3&gt;(grade = 'C';)&lt;/c3&gt; 并且不计算其余条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, rather than leaving &lt;c3&gt;getZonedDateTime&lt;/c3&gt; as &lt;c4&gt;abstract&lt;/c4&gt; (as in the previous example), you can instead define a &lt;e5&gt;default implementation&lt;/e5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061330Z" creationid="pingfangx" creationdate="20190102T061330Z">
        <seg>但是，您可以改为定义 &lt;e5&gt;默认实现&lt;/e5&gt;，而不是让 &lt;c3&gt;getZonedDateTime&lt;/c3&gt; &lt;c4&gt;abstract&lt;/c4&gt;(如上例所示)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, starting in Java SE 8, a local class can access local variables and parameters of the enclosing block that are final or &lt;e0&gt;effectively final&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122926Z" creationid="pingfangx" creationdate="20180705T122840Z">
        <seg>但是，从 Java SE 8 开始，局部类可以访问 final 或 &lt;e0&gt;effectively final（实际上 final）&lt;/e0&gt; 的封闭块的局部变量和参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the Java programming language also uses the term "variable" as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072523Z" creationid="pingfangx" creationdate="20180518T072523Z">
        <seg>但是，Java 编程语言也使用术语 "变量"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the example clearly illustrates the array syntax.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021828Z" creationid="pingfangx" creationdate="20180521T021828Z">
        <seg>但是，该示例清楚地说明了数组语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the syntax of anonymous classes is bulky considering that the &lt;c0&gt;CheckPerson&lt;/c0&gt; interface contains only one method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091542Z" creationid="pingfangx" creationdate="20180706T091542Z">
        <seg>但是，考虑到 &lt;c0&gt;CheckPerson&lt;/c0&gt; 接口只包含一个方法，匿名类的语法很笨重。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this approach is too verbose; it would be better if you could specify &lt;e0&gt;what&lt;/e0&gt; you want to sort, not &lt;e1&gt;how&lt;/e1&gt; you want to sort.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071214Z" creationid="pingfangx" creationdate="20190102T071214Z">
        <seg>但是，这种方法过于冗长;如果你能指定要排序 &lt;e0&gt;什么（what）&lt;/e0&gt;，而不是 &lt;e1&gt;如何（how）&lt;/e1&gt; 排序，那会更好。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this form of initialization has limitations because of its simplicity.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065746Z" creationid="pingfangx" creationdate="20180705T065746Z">
        <seg>然而，这种形式的初始化由于其简单性而具有局限性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this is not true of all expressions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074435Z" creationid="pingfangx" creationdate="20180521T074435Z">
        <seg>但是，这并非所有表达式都适用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this method to compare the birth dates of two &lt;c0&gt;Person&lt;/c0&gt; instances already exists as &lt;c1&gt;Person.compareByAge&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084153Z" creationid="pingfangx" creationdate="20181228T084153Z">
        <seg>但是，这种比较两个 &lt;c0&gt;Person&lt;/c0&gt; 实例的出生日期的方法已经存在为 &lt;c1&gt;Person.compareByAge&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, unlike local and anonymous classes, lambda expressions do not have any shadowing issues (see &lt;a1&gt;Shadowing&lt;/a1&gt; for more information).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075800Z" creationid="pingfangx" creationdate="20181228T075800Z">
        <seg>但是，与局部和匿名类不同，lambda 表达式没有任何阴影问题(有关更多信息，请参阅 &lt;a1&gt;Shadowing&lt;/a1&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, we can &lt;i2&gt;tell&lt;/i2&gt; the compiler that we promise to assign a &lt;c3&gt;MountainBike&lt;/c3&gt; to &lt;c4&gt;obj&lt;/c4&gt; by &lt;i5&gt;explicit casting:&lt;/i5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083701Z" creationid="pingfangx" creationdate="20190102T083636Z">
        <seg>但是，我们可以 &lt;i2&gt;告诉&lt;/i2&gt; 编译器我们承诺分配一个 &lt;c3&gt;MountainBike&lt;/c3&gt; 给 &lt;c4&gt;obj&lt;/c4&gt; ，通过 &lt;i5&gt;显示转换（explicit casting）:&lt;/i5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, when the Java runtime invokes the method &lt;c2&gt;printPersonsWithPredicate&lt;/c2&gt;, it's expecting a data type of &lt;c3&gt;Predicate&lt;Person&gt;&lt;/c3&gt;, so the lambda expression is of this type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081522Z" creationid="pingfangx" creationdate="20181228T081522Z">
        <seg>但是，当 Java 运行时调用方法 &lt;c2&gt;printPersonsWithPredicate&lt;/c2&gt; 时，它期望数据类型为 &lt;c3&gt;Predicate&lt;Person&gt;&lt;/c3&gt;，因此 lambda 表达式属于此类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, when the supertypes of a class or interface provide multiple default methods with the same signature, the Java compiler follows inheritance rules to resolve the name conflict.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091441Z" creationid="pingfangx" creationdate="20190102T091441Z">
        <seg>但是，当类或接口的超类型提供具有相同签名的多个默认方法时，Java 编译器将遵循继承规则来解决名称冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, whereas a class can extend only one other class, an interface can extend any number of interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061627Z" creationid="pingfangx" creationdate="20190102T061627Z">
        <seg>但是，虽然类只能继承另一个类，但接口可以继承任意数量的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, with abstract classes, you can declare fields that are not static and final, and define public, protected, and private concrete methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021021Z" creationid="pingfangx" creationdate="20190103T021021Z">
        <seg>但是，使用抽象类，您可以声明非静态和 final 的字段，并定义 public，protected 和 private 具体方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you cannot declare constructors in an anonymous class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065558Z" creationid="pingfangx" creationdate="20180706T065558Z">
        <seg>但是，您不能在匿名类中声明构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you didn't have to do all the work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082444Z" creationid="pingfangx" creationdate="20190102T082444Z">
        <seg>但是，您不必完成所有工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you do not have to enclose a void method invocation in braces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075540Z" creationid="pingfangx" creationdate="20181228T075540Z">
        <seg>但是，您不必在大括号中包含 void 方法调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you must take care to properly document the state and behavior that each superclass defines, since that code will not appear in the source file of each subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063631Z" creationid="pingfangx" creationdate="20180518T063631Z">
        <seg>但是，必须注意正确记录每个超类定义的状态和行为，因为该代码不会出现在每个子类的源文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IE=edge</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030233Z" creationid="pingfangx" creationdate="20180518T030233Z">
        <seg>IE=edge</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ISBN: 0201914670; The Swing Tutorial; A Guide to Constructing GUIs, 2nd Edition</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104112Z" creationid="pingfangx" creationdate="20190102T104112Z">
        <seg>ISBN: 0201914670; The Swing Tutorial; A Guide to Constructing GUIs, 2nd Edition</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/QandE/inherit-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092701Z" creationid="pingfangx" creationdate="20180521T092701Z">
        <seg>IandI/QandE/inherit-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/QandE/interfaces-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092543Z" creationid="pingfangx" creationdate="20180521T092543Z">
        <seg>IandI/QandE/interfaces-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/abstract.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092652Z" creationid="pingfangx" creationdate="20180521T092652Z">
        <seg>IandI/abstract.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/createinterface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092438Z" creationid="pingfangx" creationdate="20180521T092438Z">
        <seg>IandI/createinterface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/defaultmethods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092535Z" creationid="pingfangx" creationdate="20180521T092535Z">
        <seg>IandI/defaultmethods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/final.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092644Z" creationid="pingfangx" creationdate="20180521T092644Z">
        <seg>IandI/final.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/hidevariables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092626Z" creationid="pingfangx" creationdate="20180521T092626Z">
        <seg>IandI/hidevariables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042320Z" creationid="pingfangx" creationdate="20180518T042320Z">
        <seg>IandI/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/interfaceAsType.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092445Z" creationid="pingfangx" creationdate="20180521T092445Z">
        <seg>IandI/interfaceAsType.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/interfaceDef.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092440Z" creationid="pingfangx" creationdate="20180521T092440Z">
        <seg>IandI/interfaceDef.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/multipleinheritance.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092555Z" creationid="pingfangx" creationdate="20180521T092555Z">
        <seg>IandI/multipleinheritance.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/nogrow.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092449Z" creationid="pingfangx" creationdate="20180521T092449Z">
        <seg>IandI/nogrow.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/objectclass.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092639Z" creationid="pingfangx" creationdate="20180521T092639Z">
        <seg>IandI/objectclass.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/override.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092617Z" creationid="pingfangx" creationdate="20180521T092617Z">
        <seg>IandI/override.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/polymorphism.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092621Z" creationid="pingfangx" creationdate="20180521T092621Z">
        <seg>IandI/polymorphism.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/subclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092548Z" creationid="pingfangx" creationdate="20180521T092548Z">
        <seg>IandI/subclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/summary-interface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092538Z" creationid="pingfangx" creationdate="20180521T092538Z">
        <seg>IandI/summary-interface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/summaryinherit.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092655Z" creationid="pingfangx" creationdate="20180521T092655Z">
        <seg>IandI/summaryinherit.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/super.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092630Z" creationid="pingfangx" creationdate="20180521T092630Z">
        <seg>IandI/super.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IandI/usinginterface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092443Z" creationid="pingfangx" creationdate="20180521T092443Z">
        <seg>IandI/usinginterface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ideal Use Case for Lambda Expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083721Z" creationid="pingfangx" creationdate="20180706T083721Z">
        <seg>Lambda 表达式的理想用例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Identify the following kinds of expression statements:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075527Z" creationid="pingfangx" creationdate="20180521T075527Z">
        <seg>确定以下几种表达式语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IdentifyMyParts a = new IdentifyMyParts();
IdentifyMyParts b = new IdentifyMyParts();
a.y = 5;
b.y = 6;
a.x = 1;
b.x = 2;
System.out.println("a.y = " + a.y);
System.out.println("b.y = " + b.y);
System.out.println("a.x = " + a.x);
System.out.println("b.x = " + b.x);
System.out.println("IdentifyMyParts.x = " + IdentifyMyParts.x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082514Z" creationid="pingfangx" creationdate="20180705T082514Z">
        <seg>IdentifyMyParts a = new IdentifyMyParts();
IdentifyMyParts b = new IdentifyMyParts();
a.y = 5;
b.y = 6;
a.x = 1;
b.x = 2;
System.out.println("a.y = " + a.y);
System.out.println("b.y = " + b.y);
System.out.println("a.x = " + a.x);
System.out.println("b.x = " + b.x);
System.out.println("IdentifyMyParts.x = " + IdentifyMyParts.x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IdentifyMyParts a = new IdentifyMyParts(); 
IdentifyMyParts b = new IdentifyMyParts(); 
a.y = 5; 
b.y = 6; 
a.x = 1; 
b.x = 2; 
System.out.println("a.y = " + a.y); 
System.out.println("b.y = " + b.y); 
System.out.println("a.x = " + a.x); 
System.out.println("b.x = " + b.x); 
System.out.println("IdentifyMyParts.x = " + IdentifyMyParts.x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082833Z" creationid="pingfangx" creationdate="20180705T082833Z">
        <seg>IdentifyMyParts a = new IdentifyMyParts(); 
IdentifyMyParts b = new IdentifyMyParts(); 
a.y = 5; 
b.y = 6; 
a.x = 1; 
b.x = 2; 
System.out.println("a.y = " + a.y); 
System.out.println("b.y = " + b.y); 
System.out.println("a.x = " + a.x); 
System.out.println("b.x = " + b.x); 
System.out.println("IdentifyMyParts.x = " + IdentifyMyParts.x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IdentifyMyParts.x = 2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082842Z" creationid="pingfangx" creationdate="20180705T082842Z">
        <seg>IdentifyMyParts.x = 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Identifying the state and behavior for real-world objects is a great way to begin thinking in terms of object-oriented programming.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061159Z" creationid="pingfangx" creationdate="20180518T061159Z">
        <seg>识别真实世界对象的状态和行为是从面向对象编程开始思考的好方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;c0&gt;newLength&lt;/c0&gt; is less than &lt;c1&gt;length()&lt;/c1&gt;, the last characters in the character sequence are truncated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081422Z" creationid="pingfangx" creationdate="20190103T081422Z">
        <seg>如果 &lt;c0&gt;newLength&lt;/c0&gt; 小于 &lt;c1&gt;length()&lt;/c1&gt;，则截断字符序列中的最后的字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;c2&gt;newLength&lt;/c2&gt; is greater than &lt;c3&gt;length()&lt;/c3&gt;, null characters are added at the end of the character sequence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081430Z" creationid="pingfangx" creationdate="20190103T081430Z">
        <seg>如果 &lt;c2&gt;newLength&lt;/c2&gt; 大于 &lt;c3&gt;length()&lt;/c3&gt;，则在字符序列的末尾添加空字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;c4&gt;obj&lt;/c4&gt; is not a &lt;c5&gt;MountainBike&lt;/c5&gt; at runtime, an exception will be thrown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083740Z" creationid="pingfangx" creationdate="20190102T083740Z">
        <seg>如果 &lt;c4&gt;obj&lt;/c4&gt; 在运行时不是 &lt;c5&gt;MountainBike&lt;/c5&gt;，则会抛出异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a bolt breaks, you replace &lt;i0&gt;it&lt;/i0&gt;, not the entire machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062058Z" creationid="pingfangx" creationdate="20180518T062058Z">
        <seg>如果螺栓损坏，请更换 &lt;i0&gt;它&lt;/i0&gt;，而不是整个机器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a character or substring is not found, &lt;c6&gt;indexOf()&lt;/c6&gt; and &lt;c7&gt;lastIndexOf()&lt;/c7&gt; return -1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073318Z" creationid="pingfangx" creationdate="20190103T073318Z">
        <seg>如果未找到字符或子字符串，&lt;c6&gt;indexOf()&lt;/c6&gt; 和 &lt;c7&gt;lastIndexOf()&lt;/c7&gt; 将返回-1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a class does not explicitly declare any, the Java compiler automatically provides a no-argument constructor, called the &lt;e0&gt;default constructor&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071646Z" creationid="pingfangx" creationdate="20180601T071646Z">
        <seg>如果一个类没有显式声明任何构造函数，那么 Java 编译器会自动提供一个无参数构造函数，称为 &lt;e0&gt;default constructor（默认构造函数）&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a class has multiple constructors, they must have different signatures.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062650Z" creationid="pingfangx" creationdate="20180601T062650Z">
        <seg>如果一个类有多个构造函数，它们必须有不同的签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a class has no modifier (the default, also known as &lt;i1&gt;package-private&lt;/i1&gt;), it is visible only within its own package (packages are named groups of related classes  you will learn about them in a later lesson.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T035948Z" creationid="pingfangx" creationdate="20180607T035948Z">
        <seg>如果一个类没有修饰符(默认，也称为 &lt;i1&gt;package-private&lt;/i1&gt;)，它只在它自己的包中可见(包是相关类的命名组，你将在以后的课程中学习)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a class includes abstract methods, then the class itself &lt;i0&gt;must&lt;/i0&gt; be declared &lt;c1&gt;abstract&lt;/c1&gt;, as in:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T015952Z" creationid="pingfangx" creationdate="20190103T015952Z">
        <seg>如果一个类包含抽象方法，那么类本身 &lt;i0&gt;必须&lt;/i0&gt; 声明为 &lt;c1&gt;abstract&lt;/c1&gt;，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a class, or one of its superclasses, implements the &lt;c0&gt;Cloneable&lt;/c0&gt; interface, you can use the &lt;c1&gt;clone()&lt;/c1&gt; method to create a copy from an existing object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101512Z" creationid="pingfangx" creationdate="20190102T101512Z">
        <seg>如果某个类或其某个超类实现 &lt;c0&gt;Cloneable&lt;/c0&gt; 接口，则可以使用 &lt;c1&gt;clone()&lt;/c1&gt; 方法从现有对象创建副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a constructor calls a non-final method, a subclass may redefine that method with surprising or undesirable results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104736Z" creationid="pingfangx" creationdate="20190102T104736Z">
        <seg>如果构造函数调用非 final 方法，则子类可能会重新定义该方法导致令人惊讶或不良的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a declaration of a type (such as a member variable or a parameter name) in a particular scope (such as an inner class or a method definition) has the same name as another declaration in the enclosing scope, then the declaration &lt;e0&gt;shadows&lt;/e0&gt; the declaration of the enclosing scope.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091508Z" creationid="pingfangx" creationdate="20180705T091508Z">
        <seg>如果特定范围(例如内部类或方法定义)中的类型声明(例如成员变量或参数名称)与封闭范围中的另一个声明具有相同的名称，则声明 &lt;e0&gt;shadows&lt;/e0&gt; 封闭范围的声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a method marked with &lt;c0&gt;@Override&lt;/c0&gt; fails to correctly override a method in one of its superclasses, the compiler generates an error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033451Z" creationid="pingfangx" creationdate="20190102T033451Z">
        <seg>如果标有 &lt;c0&gt;@Override&lt;/c0&gt; 的方法无法正确覆盖其某个超类中的方法，则编译器会生成错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a second statement is later added to the "then" clause, a common mistake would be forgetting to add the newly required braces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081046Z" creationid="pingfangx" creationdate="20180521T081046Z">
        <seg>如果第二个语句后来被添加到 "then" 子句中，则常见的错误是忘记添加新需要的大括号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a subclass constructor invokes a constructor of its superclass, either explicitly or implicitly, you might think that there will be a whole chain of constructors called, all the way back to the constructor of &lt;c0&gt;Object&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095828Z" creationid="pingfangx" creationdate="20190102T095828Z">
        <seg>如果子类构造函数显式或隐式地调用其超类的构造函数，您可能会认为将调用一整个构造函数链，一直回到 &lt;c0&gt;Object&lt;/c0&gt; 的构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a subclass defines a static method with the same signature as a static method in the superclass, then the method in the subclass &lt;i0&gt;hides&lt;/i0&gt; the one in the superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090341Z" creationid="pingfangx" creationdate="20190102T090341Z">
        <seg>如果子类定义的静态方法与超类中的静态方法具有相同的签名，则子类方法 &lt;i0&gt;隐藏（hides）&lt;/i0&gt; 超类中的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If an update is available, the Java Web Start software will automatically update their installation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033825Z" creationid="pingfangx" creationdate="20180518T033825Z">
        <seg>如果有更新可用，Java Web Start 软件将自动更新其安装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If initialization requires some logic (for example, error handling or a &lt;c0&gt;for&lt;/c0&gt; loop to fill a complex array), simple assignment is inadequate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065758Z" creationid="pingfangx" creationdate="20180705T065758Z">
        <seg>如果初始化需要一些逻辑(例如，错误处理或 &lt;c0&gt;for&lt;/c0&gt; 循环来填充复杂数组)，则简单的赋值是不合适的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it &lt;i9&gt;is&lt;/i9&gt; a "p", the program increments the letter count.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090511Z" creationid="pingfangx" creationdate="20180521T090511Z">
        <seg>如果 &lt;i9&gt;是&lt;/i9&gt; "p"，程序会增加字母计数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it consists of more than one word, capitalize the first letter of each subsequent word.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074529Z" creationid="pingfangx" creationdate="20180518T074529Z">
        <seg>如果它包含多个单词，请将每个后续单词的首字母大写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If more than one annotation of the requested type is present, you can obtain them by first getting their container annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041339Z" creationid="pingfangx" creationdate="20190102T041339Z">
        <seg>如果存在多个所请求类型的注解，则可以通过首先获取其容器注解来获取它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no conversions are necessary, these methods return the original string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073154Z" creationid="pingfangx" creationdate="20190103T073154Z">
        <seg>如果不需要转换，则这些方法返回原始字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If not, you can use a "Unicode escape" such as &lt;c2&gt;'\u0108'&lt;/c2&gt; (capital C with circumflex), or &lt;c3&gt;"S\u00ED Se\u00F1or"&lt;/c3&gt; (Sí Señor in Spanish).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T083302Z" creationid="pingfangx" creationdate="20180518T083302Z">
        <seg>如果不是，你可以使用 "Unicode 转义"，如 &lt;c2&gt;'\u0108'&lt;/c2&gt;(大写字母 C with circumflex)，或者 &lt;c3&gt;"S\u00ED Se\u00F1or"&lt;/c3&gt;(Sí Señor 在西班牙语中)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If other programmers use your class, you want to ensure that errors from misuse cannot happen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041745Z" creationid="pingfangx" creationdate="20180607T041745Z">
        <seg>如果其他程序员使用您的类，您希望确保不会发生误用错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If present, the invocation of another constructor must be the first line in the constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020412Z" creationid="pingfangx" creationdate="20180607T020412Z">
        <seg>如果存在，则另一个构造函数的调用必须是构造函数中的第一行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;c5&gt;Person&lt;/c5&gt; instance does satisfy the criteria specified by &lt;c6&gt;tester&lt;/c6&gt;, the method &lt;c7&gt;printPersron&lt;/c7&gt; is invoked on the &lt;c8&gt;Person&lt;/c8&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093849Z" creationid="pingfangx" creationdate="20180706T093849Z">
        <seg>如果 &lt;c5&gt;Person&lt;/c5&gt; 实例满足 &lt;c6&gt;tester&lt;/c6&gt; 指定的条件，则在 &lt;c8&gt;Person&lt;/c8&gt; 实例上调用方法 &lt;c7&gt;printPersron&lt;/c7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the annotation has no elements, then the parentheses can be omitted, as shown in the previous &lt;c0&gt;@Override&lt;/c0&gt; example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023958Z" creationid="pingfangx" creationdate="20190102T023958Z">
        <seg>如果注解没有元素，则可以省略括号，如前面的 &lt;c0&gt;@Override&lt;/c0&gt; 示例所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the annotations have the same type, then this is called a repeating annotation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024018Z" creationid="pingfangx" creationdate="20190102T024018Z">
        <seg>如果注解具有相同的类型，则称为重复注解：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the boolean expression is false, you will get an error message.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082627Z" creationid="pingfangx" creationdate="20180705T082627Z">
        <seg>如果布尔表达式为 false，则会收到错误消息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the context calls for a distinction, we will use specific terms (static field, local variables, etc.) as appropriate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073938Z" creationid="pingfangx" creationdate="20180518T073938Z">
        <seg>如果上下文需要区分，我们将酌情使用特定的术语(静态字段，局部变量等)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the conversion goes the other way, this is called &lt;e5&gt;unboxing&lt;/e5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083905Z" creationid="pingfangx" creationdate="20190103T083905Z">
        <seg>如果转换方向相反，则称为 &lt;e5&gt;拆箱（unboxing）&lt;/e5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the current character is not a p, the &lt;c8&gt;continue&lt;/c8&gt; statement skips the rest of the loop and proceeds to the next character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090446Z" creationid="pingfangx" creationdate="20180521T090446Z">
        <seg>如果当前字符不是 p，&lt;c8&gt;continue&lt;/c8&gt; 语句会跳过循环的其余部分并继续下一个字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the discussion applies to "all of the above", we may simply say "variables".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073927Z" creationid="pingfangx" creationdate="20180518T073927Z">
        <seg>如果讨论适用于 "所有上述"，我们可以简单地说 " 变量"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the expression evaluates to &lt;c3&gt;true&lt;/c3&gt;, the &lt;c4&gt;while&lt;/c4&gt; statement executes the &lt;e5&gt;statement&lt;/e5&gt;(s) in the &lt;c6&gt;while&lt;/c6&gt; block.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082940Z" creationid="pingfangx" creationdate="20180521T082940Z">
        <seg>如果表达式的计算结果为 &lt;c3&gt;true&lt;/c3&gt;，则 &lt;c4&gt;while&lt;/c4&gt; 语句在 &lt;c6&gt;while&lt;/c6&gt; 块中执行 &lt;e5&gt;statement&lt;/e5&gt;(s)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the method &lt;c6&gt;tester.test&lt;/c6&gt; returns a &lt;c7&gt;true&lt;/c7&gt; value, then the method &lt;c8&gt;printPersons&lt;/c8&gt; is invoked on the &lt;c9&gt;Person&lt;/c9&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090103Z" creationid="pingfangx" creationdate="20180706T090103Z">
        <seg>如果方法 &lt;c6&gt;tester.test&lt;/c6&gt; 返回 &lt;c7&gt;true&lt;/c7&gt; 值，则在 &lt;c9&gt;Person&lt;/c9&gt; 实例上调用方法 &lt;c8&gt;printPersons&lt;/c8&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the method does not require any arguments, use empty parentheses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T084830Z" creationid="pingfangx" creationdate="20180601T084830Z">
        <seg>如果该方法不需要任何参数，请使用空括号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the name is composed of more than one word, the words are separated by an underscore (_).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065327Z" creationid="pingfangx" creationdate="20180705T065327Z">
        <seg>如果名称由多个单词组成，则单词由下划线(_)分隔。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the name you choose consists of only one word, spell that word in all lowercase letters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074523Z" creationid="pingfangx" creationdate="20180518T074523Z">
        <seg>如果您选择的名称只包含一个单词，请以全部小写字母拼出该单词。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the object does not, the method throws a &lt;c3&gt;CloneNotSupportedException&lt;/c3&gt; exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101548Z" creationid="pingfangx" creationdate="20190102T101548Z">
        <seg>如果对象没有，则该方法抛出 &lt;c3&gt;CloneNotSupportedException&lt;/c3&gt; 异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the object on which &lt;c0&gt;clone()&lt;/c0&gt; was invoked does implement the &lt;c1&gt;Cloneable&lt;/c1&gt; interface, &lt;c2&gt;Object&lt;/c2&gt;'s implementation of the &lt;c3&gt;clone()&lt;/c3&gt; method creates an object of the same class as the original object and initializes the new object's member variables to have the same values as the original object's corresponding member variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101646Z" creationid="pingfangx" creationdate="20190102T101646Z">
        <seg>如果调用 &lt;c0&gt;clone()&lt;/c0&gt; 的对象确实实现了 &lt;c1&gt;Cloneable&lt;/c1&gt; 接口，那么 &lt;c2&gt;Object&lt;/c2&gt; 的 &lt;c3&gt;clone()&lt;/c3&gt; 方法创建与原始对象相同的类的对象，并初始化新对象的成员变量，使其具有与原始对象的相应成员变量相同的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the parent has no constructor (&lt;c2&gt;Object&lt;/c2&gt; does have one), the compiler will reject the program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T072253Z" creationid="pingfangx" creationdate="20180601T071818Z">
        <seg>如果父类没有构造函数(&lt;c2&gt;Object&lt;/c2&gt; 确实有一个)，编译器将拒绝该程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the period character (.) is the last character of the string, &lt;c3&gt;dot + 1&lt;/c3&gt; is equal to the length of the string, which is one larger than the largest index into the string (because indices start at 0).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075206Z" creationid="pingfangx" creationdate="20190103T075147Z">
        <seg>如果句点字符(.)是字符串的最后一个字符，则 &lt;c3&gt;dot + 1&lt;/c3&gt; 等于字符串的长度，该字符串大于字符串中的最大索引(因为索引从 0 开始)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the subclass is in the same package as its parent, it also inherits the &lt;i2&gt;package-private&lt;/i2&gt; members of the parent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082643Z" creationid="pingfangx" creationdate="20190102T082643Z">
        <seg>如果子类与其父类在同一个包中，它还会继承父类的 &lt;i2&gt;package-private&lt;/i2&gt; 成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the super class does not have a no-argument constructor, you will get a compile-time error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095602Z" creationid="pingfangx" creationdate="20190102T095602Z">
        <seg>如果超类没有无参数构造函数，则会出现编译时错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the value of the constant in the outside world changes (for example, if it is legislated that pi actually should be 3.975), you will need to recompile any classes that use this constant to get the current value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065538Z" creationid="pingfangx" creationdate="20180705T065538Z">
        <seg>如果外部世界中常量的值发生变化(例如，如果立法规定 pi 实际上应该是 3.975)，则需要重新编译使用此常量来获取当前值的任何类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the variable that controls a &lt;c1&gt;for&lt;/c1&gt; statement is not needed outside of the loop, it's best to declare the variable in the initialization expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085444Z" creationid="pingfangx" creationdate="20180521T085444Z">
        <seg>如果控制 &lt;c1&gt;for&lt;/c1&gt; 语句的变量不需要在循环外，则最好在初始化表达式中声明该变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If there are no parameters, you must use empty parentheses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064935Z" creationid="pingfangx" creationdate="20180525T064935Z">
        <seg>如果没有参数，则必须使用空括号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If there is just one element named &lt;c0&gt;value&lt;/c0&gt;, then the name can be omitted, as in:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023949Z" creationid="pingfangx" creationdate="20190102T023949Z">
        <seg>如果只有一个名为 &lt;c0&gt;value&lt;/c0&gt; 的元素，则可以省略该名称，如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If these methods were production code, they would verify that their arguments were properly constructed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074927Z" creationid="pingfangx" creationdate="20190103T074927Z">
        <seg>如果这些方法是生产代码，他们将验证他们的参数是否正确构造。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If they add them as static methods, then programmers would regard them as utility methods, not as essential, core methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060726Z" creationid="pingfangx" creationdate="20190102T060726Z">
        <seg>如果他们将它们作为静态方法添加，那么程序员会将它们视为实用方法，而不是必要的核心方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If they add them to their original interfaces, then programmers who have implemented those interfaces would have to rewrite their implementations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060716Z" creationid="pingfangx" creationdate="20190102T060716Z">
        <seg>如果他们将它们添加到原始接口，那么实现了这些接口的程序员将不得不重写他们的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this is the case, the parameter is said to &lt;i0&gt;shadow&lt;/i0&gt; the field.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033517Z" creationid="pingfangx" creationdate="20180601T033517Z">
        <seg>如果是这种情况，则该参数被称为 &lt;i0&gt;shadow&lt;/i0&gt; 该字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this method returns a true value for a particular index value, print the element contained in that index value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015014Z" creationid="pingfangx" creationdate="20190102T015014Z">
        <seg>如果此方法返回特定索引值的 true 值，则打印该索引值中包含的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this section confuses you, skip it and return to it after you have finished the lesson on interfaces and inheritance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091748Z" creationid="pingfangx" creationdate="20180601T091748Z">
        <seg>如果本节让您感到困惑，请跳过它，在完成关于接口和继承的课程后再回来查看。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this statement is missing, then the compiler prints an error like the following, and compilation fails:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041758Z" creationid="pingfangx" creationdate="20180521T041758Z">
        <seg>如果缺少这个语句，那么编译器打印出如下所示的错误，编译失败：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this test evaluates to &lt;c0&gt;false&lt;/c0&gt; (meaning that the bicycle is not in motion), control jumps to the end of the &lt;c1&gt;if-then&lt;/c1&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080953Z" creationid="pingfangx" creationdate="20180521T080953Z">
        <seg>如果此测试计算为 &lt;c0&gt;false&lt;/c0&gt;(表示自行车不在运动中)，则控制跳转到 &lt;c1&gt;if-then&lt;/c1&gt; 语句的末尾。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If two or more independently defined default methods conflict, or a default method conflicts with an abstract method, then the Java compiler produces a compiler error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091728Z" creationid="pingfangx" creationdate="20190102T091728Z">
        <seg>如果两个或多个独立定义的默认方法冲突，或者默认方法与抽象方法冲突，则 Java 编译器会产生编译器错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If we are talking about "fields in general" (excluding local variables and parameters), we may simply say "fields".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073915Z" creationid="pingfangx" creationdate="20180518T073915Z">
        <seg>如果我们在谈论 "一般字段"(不包括局部变量和参数)，我们可能会简单地说 "字段"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are just performing a simple increment/decrement, it doesn't really matter which version you choose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065355Z" creationid="pingfangx" creationdate="20180521T065355Z">
        <seg>如果您只是执行简单的递增/递减操作，则选择哪个版本无关紧要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are not yet familiar with the syntax of generics, see the &lt;a0&gt;Generics (Updated)&lt;/a0&gt; lesson.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083927Z" creationid="pingfangx" creationdate="20190103T083927Z">
        <seg>如果您还不熟悉泛型的语法，请参阅 &lt;a0&gt;Generics (Updated)&lt;/a0&gt; 课程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you cannot initialize your local variable where it is declared, make sure to assign it a value before you attempt to use it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082235Z" creationid="pingfangx" creationdate="20180518T082235Z">
        <seg>如果你不能初始化声明它的局部变量，确保在你尝试使用它之前给它赋值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you compile this program, the compiler produces a warning because &lt;c0&gt;open&lt;/c0&gt; was deprecated (in the interface).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041608Z" creationid="pingfangx" creationdate="20190102T041608Z">
        <seg>如果编译此程序，编译器会生成警告，因为不推荐使用 &lt;c0&gt;open&lt;/c0&gt;(在接口中)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you convert the &lt;c0&gt;palindrome&lt;/c0&gt; string to a string builder, you can use the &lt;c1&gt;reverse()&lt;/c1&gt; method in the &lt;c2&gt;StringBuilder&lt;/c2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082757Z" creationid="pingfangx" creationdate="20190103T082757Z">
        <seg>如果将 &lt;c0&gt;palindrome&lt;/c0&gt; 字符串转换为 string builder，则可以使用 &lt;c2&gt;StringBuilder&lt;/c2&gt; 类中的 &lt;c1&gt;reverse()&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you declare &lt;c0&gt;originOne&lt;/c0&gt; like this, its value will be undetermined until an object is actually created and assigned to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042738Z" creationid="pingfangx" creationdate="20180601T042738Z">
        <seg>如果您像这样声明 &lt;c0&gt;originOne&lt;/c0&gt;，那么在实际创建并分配对象之前，其值不确定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you define a reference variable whose type is an interface, any object you assign to it &lt;i0&gt;must&lt;/i0&gt; be an instance of a class that implements the interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062352Z" creationid="pingfangx" creationdate="20190102T062352Z">
        <seg>如果定义类型为接口的引用变量，则分配给它的任何对象 &lt;i0&gt;必须&lt;/i0&gt; 是实现接口的类的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you do not specify that the interface is public, then your interface is accessible only to classes defined in the same package as the interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061601Z" creationid="pingfangx" creationdate="20190102T061601Z">
        <seg>如果未指定接口是公共接口，则只能在与接口相同的程序包中定义的类上访问您的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't explicitly indicate the order for the operations to be performed, the order is determined by the precedence assigned to the operators in use within the expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074614Z" creationid="pingfangx" creationdate="20180521T074614Z">
        <seg>如果您没有明确指出要执行的操作的顺序，则顺序由分配给表达式中使用的操作符的优先级确定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you encounter problems with the instructions in this step, consult the &lt;a0&gt;Common Problems (and Their Solutions)&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034931Z" creationid="pingfangx" creationdate="20180518T034931Z">
        <seg>如果您在此步骤中遇到问题，请参阅 &lt;a0&gt;Common Problems (and Their Solutions)&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you encounter problems with the instructions on this page, consult the &lt;a0&gt;Common Problems (and Their Solutions)&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034310Z" creationid="pingfangx" creationdate="20180518T034310Z">
        <seg>如果您在本页面上遇到问题，请参阅 &lt;a0&gt;Common Problems (and Their Solutions)&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you enter &lt;c0&gt;dir&lt;/c0&gt; at the prompt, you should see your source file, as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034822Z" creationid="pingfangx" creationdate="20180518T034818Z">
        <seg>如果在提示中输入 &lt;c0&gt;dir&lt;/c0&gt;，则应该看到您的源文件，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have comments or suggestions about this trail, use our &lt;a0&gt;feedback page&lt;/a0&gt; to tell us about it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040553Z" creationid="pingfangx" creationdate="20180518T040553Z">
        <seg>如果您对这条线索有任何意见或建议，请使用我们的 &lt;a0&gt;feedback page&lt;/a0&gt; 向我们介绍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have problems, see</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021055Z" creationid="pingfangx" creationdate="20190102T021055Z">
        <seg>如果您有问题，请参阅</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you inspect the code within the constructor, you will see that it creates a new &lt;t3&gt;Point&lt;/t3&gt; object whose &lt;t4&gt;x&lt;/t4&gt; and &lt;t5&gt;y&lt;/t5&gt; values are initialized to 0:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071517Z" creationid="pingfangx" creationdate="20180601T071517Z">
        <seg>如果您检查构造函数中的代码，您将看到它创建了一个新的 &lt;t3&gt;Point&lt;/t3&gt; 对象，其 &lt;t4&gt;x&lt;/t4&gt; 和 &lt;t5&gt;y&lt;/t5&gt; 值被初始化为 0：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you know that a class implements &lt;c0&gt;Relatable&lt;/c0&gt;, then you know that you can compare the size of the objects instantiated from that class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062112Z" creationid="pingfangx" creationdate="20190102T062112Z">
        <seg>如果您知道某个类实现了 &lt;c0&gt;Relatable&lt;/c0&gt;，那么您就知道可以比较从该类实例化的对象的大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you make a point of implementing &lt;c0&gt;Relatable&lt;/c0&gt; in a wide variety of classes, the objects instantiated from &lt;i1&gt;any&lt;/i1&gt; of those classes can be compared with the &lt;c2&gt;findLargest()&lt;/c2&gt; methodprovided that both objects are of the same class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062700Z" creationid="pingfangx" creationdate="20190102T062700Z">
        <seg>如果您要在各种类中实现 &lt;c0&gt;Relatable&lt;/c0&gt;，那么可以将从这些类的 &lt;i1&gt;any&lt;/i1&gt; 实例化的对象与 &lt;c2&gt;findLargest()&lt;/c2&gt; 方法只要两个对象属于同一个类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you make this change, then all classes that implement the old &lt;c0&gt;DoIt&lt;/c0&gt; interface will break because they no longer implement the old interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062922Z" creationid="pingfangx" creationdate="20190102T062922Z">
        <seg>如果进行此更改，则实现旧 &lt;c0&gt;DoIt&lt;/c0&gt; 接口的所有类都将中断，因为它们不再实现旧接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to generate a series of random numbers, you should create an instance of &lt;c1&gt;java.util.Random&lt;/c1&gt; and invoke methods on that object to generate numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040655Z" creationid="pingfangx" creationdate="20190103T040655Z">
        <seg>如果需要生成一系列随机数，则应创建 &lt;c1&gt;java.util.Random&lt;/c1&gt; 的实例，并在该对象上调用方法以生成数字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you override the &lt;c1&gt;equals()&lt;/c1&gt; method, you change the way two objects are equated and &lt;c2&gt;Object&lt;/c2&gt;'s implementation of &lt;c3&gt;hashCode()&lt;/c3&gt; is no longer valid.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103956Z" creationid="pingfangx" creationdate="20190102T103956Z">
        <seg>如果覆盖 &lt;c1&gt;equals()&lt;/c1&gt; 方法，更改两个对象的等效方式，则 &lt;c2&gt;Object&lt;/c2&gt; 的 &lt;c3&gt;hashCode()&lt;/c3&gt; 的实现不再有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you run &lt;c0&gt;Planet.class&lt;/c0&gt; from the command line with an argument of 175, you get this output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020044Z" creationid="pingfangx" creationdate="20190102T020044Z">
        <seg>如果从命令行运行 &lt;c0&gt;Planet.class&lt;/c0&gt;，参数为 175，则会得到以下输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you run into problems, be sure to consult the common problems section; it provides solutions for many issues encountered by new users.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034115Z" creationid="pingfangx" creationdate="20180518T034115Z">
        <seg>如果遇到问题，请务必查阅常见问题部分;它为新用户遇到的许多问题提供了解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you specify a single expression, then the Java runtime evaluates the expression and then returns its value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075514Z" creationid="pingfangx" creationdate="20181228T075514Z">
        <seg>如果指定单个表达式，则 Java 运行时将计算表达式，然后返回其值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you substitute the parameter &lt;c0&gt;x&lt;/c0&gt; in place of &lt;c1&gt;y&lt;/c1&gt; in the declaration of the lambda expression &lt;c2&gt;myConsumer&lt;/c2&gt;, then the compiler generates an error:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080030Z" creationid="pingfangx" creationdate="20181228T080030Z">
        <seg>如果在 lambda 表达式 &lt;c2&gt;myConsumer&lt;/c2&gt; 的声明中替换参数 &lt;c0&gt;x&lt;/c0&gt; 代替 &lt;c1&gt;y&lt;/c1&gt;，则编译器会生成错误：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you try to return a value from a method that is declared &lt;c0&gt;void&lt;/c0&gt;, you will get a compiler error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091343Z" creationid="pingfangx" creationdate="20180601T091343Z">
        <seg>如果您尝试从声明为 &lt;c0&gt;void&lt;/c0&gt; 的方法返回一个值，您将收到编译器错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you use the &lt;c0&gt;assert&lt;/c0&gt; statement, you must run your program with the &lt;c1&gt;ea&lt;/c1&gt; flag:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082638Z" creationid="pingfangx" creationdate="20180705T082638Z">
        <seg>如果使用 &lt;c0&gt;assert&lt;/c0&gt; 语句，则必须使用 &lt;c1&gt;ea&lt;/c1&gt; 标志运行程序：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to add additional methods to an interface, you have several options.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063059Z" creationid="pingfangx" creationdate="20190102T063059Z">
        <seg>如果要向接口添加其他方法，可以使用多个选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to be able to compare the size of similar objects, no matter what they are, the class that instantiates them should implement &lt;c0&gt;Relatable&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062000Z" creationid="pingfangx" creationdate="20190102T062000Z">
        <seg>如果您希望能够比较类似对象的大小，无论它们是什么，实例化它们的类都应该实现 &lt;c0&gt;Relatable&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to get more than one consecutive character from a string, you can use the &lt;c0&gt;substring&lt;/c0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072616Z" creationid="pingfangx" creationdate="20190103T072616Z">
        <seg>如果要从字符串中获取多个连续字符，可以使用 &lt;c0&gt;substring&lt;/c0&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you've never used an object-oriented programming language before, you'll need to learn a few basic concepts before you can begin writing any code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042815Z" creationid="pingfangx" creationdate="20180518T042815Z">
        <seg>如果你以前从未使用过面向对象的编程语言，那么在你开始编写任何代码之前，你需要学习一些基本概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your class claims to implement an interface, all methods defined by that interface must appear in its source code before the class will successfully compile.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064141Z" creationid="pingfangx" creationdate="20180518T064141Z">
        <seg>如果您的类声明实现了一个接口，那么在该类成功编译之前，该接口定义的所有方法都必须出现在其源代码中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your class has no explicit superclass, then it has an implicit superclass of &lt;c0&gt;Object&lt;/c0&gt;, which &lt;i1&gt;does&lt;/i1&gt; have a no-argument constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T035705Z" creationid="pingfangx" creationdate="20180528T035705Z">
        <seg>如果你的类没有显式超类，那么它有一个 &lt;c0&gt;Object&lt;/c0&gt; 的隐式超类，它&lt;i1&gt;有&lt;/i1&gt; 一个无参数的构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your editor and file system allow it, you can use such characters directly in your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T083222Z" creationid="pingfangx" creationdate="20180518T083222Z">
        <seg>如果你的编辑器和文件系统允许，你可以直接在你的代码中使用这些字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your method overrides one of its superclass's methods, you can invoke the overridden method through the use of the keyword &lt;c0&gt;super&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094922Z" creationid="pingfangx" creationdate="20190102T094922Z">
        <seg>如果您的方法覆盖其超类的方法之一，则可以通过使用关键字 &lt;c0&gt;super&lt;/c0&gt; 来调用覆盖方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your variable stores a constant value, such as &lt;c2&gt;static final int NUM_GEARS = 6&lt;/c2&gt;, the convention changes slightly, capitalizing every letter and separating subsequent words with the underscore character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074554Z" creationid="pingfangx" creationdate="20180518T074554Z">
        <seg>如果你的变量存储了一个常数值，比如 &lt;c2&gt;static final int NUM_GEARS = 6&lt;/c2&gt;，那么约定略有变化，大写每个字母并将后续单词与下划线字符分开。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If, for some reason, the compiler detects that the method does not exist in one of the superclasses, then it will generate an error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090306Z" creationid="pingfangx" creationdate="20190102T090306Z">
        <seg>如果由于某种原因，编译器检测到该方法在其中一个超类中不存在，那么它将生成错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If, however, an object contains a reference to an external object, say &lt;c2&gt;ObjExternal&lt;/c2&gt;, you may need to override &lt;c3&gt;clone()&lt;/c3&gt; to get correct behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101725Z" creationid="pingfangx" creationdate="20190102T101725Z">
        <seg>但是，如果对象包含对外部对象的引用，例如 &lt;c2&gt;ObjExternal&lt;/c2&gt;，则可能需要覆盖 &lt;c3&gt;clone()&lt;/c3&gt; 以获得正确的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If, on the other hand, we write</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083517Z" creationid="pingfangx" creationdate="20190102T083517Z">
        <seg>另一方面，如果我们写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Illustration of an array as 10 boxes numbered 0 through 9; an index of 0 indicates the first element in the array</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021543Z" creationid="pingfangx" creationdate="20180521T021543Z">
        <seg>数组为 10 个方框，编号为 0 至 9;索引 0 表示数组中的第一个元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implementing an Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092445Z" creationid="pingfangx" creationdate="20180521T092445Z">
        <seg>实现一个接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implementing an Interface (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061818Z" creationid="pingfangx" creationdate="20190102T061818Z">
        <seg>Implementing an Interface (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implementing an interface allows a class to become more formal about the behavior it promises to provide.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064111Z" creationid="pingfangx" creationdate="20180518T064111Z">
        <seg>实现一个接口允许一个类对它承诺提供的行为变得更加正式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implementing the Relatable Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062123Z" creationid="pingfangx" creationdate="20190102T062123Z">
        <seg>实现 Relatable 接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Book Form</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030631Z" creationid="pingfangx" creationdate="20180518T030631Z">
        <seg>书形式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Java SE 7 and later, any number of underscore characters (&lt;c0&gt;_&lt;/c0&gt;) can appear anywhere between digits in a numerical literal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084252Z" creationid="pingfangx" creationdate="20180518T084252Z">
        <seg>在 Java SE 7 和更高版本中，任何数字的下划线字符(&lt;c0&gt;_&lt;/c0&gt;)都可以出现在数字字面量中的数字之间的任何位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Java SE 7 and later, you can use a &lt;c0&gt;String&lt;/c0&gt; object in the &lt;c1&gt;switch&lt;/c1&gt; statement's expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082542Z" creationid="pingfangx" creationdate="20180521T082542Z">
        <seg>在 Java SE 7 和更高版本中，可以在 &lt;c1&gt;switch&lt;/c1&gt; 语句的表达式中使用 &lt;c0&gt;String&lt;/c0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Java SE 8 and later, you can use the &lt;c4&gt;int&lt;/c4&gt; data type to represent an unsigned 32-bit integer, which has a minimum value of 0 and a maximum value of 2&lt;s5&gt;32&lt;/s5&gt;-1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080640Z" creationid="pingfangx" creationdate="20180518T080640Z">
        <seg>在 Java SE 8 和更高版本中，可以使用 &lt;c4&gt;int&lt;/c4&gt; 数据类型来表示无符号的 32 位整数，其最小值为 0，最大值为 2&lt;s5&gt;32&lt;/s5&gt;-1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Java SE 8 and later, you can use the &lt;c4&gt;long&lt;/c4&gt; data type to represent an unsigned 64-bit long, which has a minimum value of 0 and a maximum value of 2&lt;s5&gt;64&lt;/s5&gt;-1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081415Z" creationid="pingfangx" creationdate="20180518T081415Z">
        <seg>在 Java SE 8 和更高版本中，可以使用 &lt;c4&gt;long&lt;/c4&gt; 数据类型来表示一个无符号的 64 位 long，它的最小值为 0，最大值为 2&lt;s5&gt;64&lt;/s5&gt;-1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a new document, type in the following code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034533Z" creationid="pingfangx" creationdate="20180518T034533Z">
        <seg>在新文档中，输入以下代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a real-world programming situation, you would probably use one of the supported &lt;i0&gt;looping constructs&lt;/i0&gt; to iterate through each element of the array, rather than write each line individually as in the preceding example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021823Z" creationid="pingfangx" creationdate="20180521T021823Z">
        <seg>在现实世界的编程情况下，您可能会使用支持的 &lt;i0&gt;looping constructs（循环结构）&lt;/i0&gt; 之一来遍历数组的每个元素，而不是像前面的示例中那样单独编写每行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to &lt;c0&gt;int&lt;/c0&gt;, the Java programming language supports seven other &lt;i1&gt;primitive data types&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080116Z" creationid="pingfangx" creationdate="20180518T080116Z">
        <seg>除 &lt;c0&gt;int&lt;/c0&gt; 外，Java 编程语言还支持其他七种 &lt;i1&gt;primitive data types（基本数据类型）&lt;/i1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to default methods, you can define &lt;a0&gt;static methods &lt;/a0&gt; in interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064800Z" creationid="pingfangx" creationdate="20190102T064800Z">
        <seg>除了默认方法，您还可以在接口中定义 &lt;a0&gt;static methods &lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to expression statements, there are two other kinds of statements: &lt;i0&gt;declaration statements&lt;/i0&gt; and &lt;i1&gt;control flow statements&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075155Z" creationid="pingfangx" creationdate="20180521T075155Z">
        <seg>除了表达式语句之外，还有两种其他类型的语句：&lt;i0&gt;declaration statements（声明语句）&lt;/i0&gt; 和 &lt;i1&gt;control flow statements（控制流语句）&lt;/i1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to its properties and constructor, &lt;c0&gt;Planet&lt;/c0&gt; has methods that allow you to retrieve the surface gravity and weight of an object on each planet.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020002Z" creationid="pingfangx" creationdate="20190102T020002Z">
        <seg>除了它的属性和构造函数之外，&lt;c0&gt;Planet&lt;/c0&gt; 还有一些方法可以让你获取每个行星上物体的表面重力和重量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to the &lt;c0&gt;String&lt;/c0&gt; class, there is also a &lt;a1&gt;&lt;c2&gt;StringBuilder&lt;/c2&gt; &lt;/a1&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083415Z" creationid="pingfangx" creationdate="20190103T083415Z">
        <seg>除了 &lt;c0&gt;String&lt;/c0&gt; 类之外，还有一个 &lt;a1&gt;&lt;c2&gt;StringBuilder&lt;/c2&gt; &lt;/a1&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to the eight primitive data types listed above, the Java programming language also provides special support for character strings via the &lt;a0&gt;java.lang.String&lt;/a0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081947Z" creationid="pingfangx" creationdate="20180518T081947Z">
        <seg>除了上面列出的八种基本数据类型之外，Java 编程语言还通过 &lt;a0&gt;java.lang.String&lt;/a0&gt; 类为字符串提供了特别的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to the information provided before, additional data about the suspension is included to the output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093942Z" creationid="pingfangx" creationdate="20190102T093846Z">
        <seg>除了之前提供的信息之外，还有关于 suspension 的其他数据包含在输出中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, B itself can be hidden from the outside world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090927Z" creationid="pingfangx" creationdate="20180705T090927Z">
        <seg>另外，B 本身可以对外面隐藏。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, a local class has access to local variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122650Z" creationid="pingfangx" creationdate="20180705T122650Z">
        <seg>此外，局部类可以访问局部变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, a programmer can unwittingly introduce a name conflict by adding a new method to a superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084924Z" creationid="pingfangx" creationdate="20190102T084924Z">
        <seg>此外，程序员可以通过向超类添加新方法而无意中引入名称冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, aggregate operations typically accept lambda expressions as parameters, enabling you to customize how they behave.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074929Z" creationid="pingfangx" creationdate="20181228T074929Z">
        <seg>此外，聚合操作通常接受 lambda 表达式作为参数，使您可以自定义它们的行为方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, an interface can contain constant declarations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061730Z" creationid="pingfangx" creationdate="20190102T061730Z">
        <seg>此外，接口可以包含常量声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, the &lt;c7&gt;Map&lt;K, V&gt;&lt;/c7&gt; interface has been enhanced with many default methods such as &lt;c8&gt;merge&lt;/c8&gt; and &lt;c9&gt;forEach&lt;/c9&gt; that older classes that have implemented this interface do not have to define.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022017Z" creationid="pingfangx" creationdate="20190103T022017Z">
        <seg>此外，&lt;c7&gt;Map&lt;K, V&gt;&lt;/c7&gt; 接口已经增强了许多默认方法，例如 &lt;c8&gt;merge&lt;/c8&gt; 和 &lt;c9&gt;forEach&lt;/c9&gt; 已经实现这个接口的旧类不必定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, the opening and closing braces are optional, provided that the "then" clause contains only one statement:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081007Z" creationid="pingfangx" creationdate="20180521T081007Z">
        <seg>另外，打开和关闭大括号是可选的，只要 "then" 子句只包含一个语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, this approach is unnecessarily restrictive; what if you wanted to print members younger than a certain age, for example?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085826Z" creationid="pingfangx" creationdate="20180706T085826Z">
        <seg>此外，这种方法是不必要的限制;例如，如果您想要打印年龄小于某个年龄的成员，该怎么办？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, you can extend only one class, whether or not it is abstract, whereas you can implement any number of interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021107Z" creationid="pingfangx" creationdate="20190103T021107Z">
        <seg>此外，您只能继承一个类，无论它是否是抽象的，而您可以实现任意数量的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, you can instantiate a class to create an object, which you cannot do with interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084632Z" creationid="pingfangx" creationdate="20190102T084632Z">
        <seg>此外，您可以实例化一个类来创建一个对象，这是您无法使用接口进行的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, you can omit the parentheses if there is only one parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075433Z" creationid="pingfangx" creationdate="20181228T075433Z">
        <seg>此外，如果只有一个参数，则可以省略括号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In an object-oriented drawing application, you can draw circles, rectangles, lines, Bezier curves, and many other graphic objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022123Z" creationid="pingfangx" creationdate="20190103T022123Z">
        <seg>在面向对象的绘图应用程序中，您可以绘制圆形，矩形，线条，贝塞尔曲线和许多其他图形对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In between the percent sign (%) and the converter you can have optional flags and specifiers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033025Z" creationid="pingfangx" creationdate="20190103T033025Z">
        <seg>在百分号(%)和转换器之间，您可以使用可选的标志和说明符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In doing this, you can reuse the fields and methods of the existing class without having to write (and debug!) them yourself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081727Z" creationid="pingfangx" creationdate="20190102T081727Z">
        <seg>在这样做时，您可以重用现有类的字段和方法，而无需自己编写(和调试！)它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In effect, a static nested class is behaviorally a top-level class that has been nested in another top-level class for packaging convenience.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091038Z" creationid="pingfangx" creationdate="20180705T091038Z">
        <seg>实际上，静态嵌套类在行为上是一个顶级类，它已嵌套在另一个顶级类中以方便打包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In essence, the statement calculates the default height of a &lt;t1&gt;Rectangle&lt;/t1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T080023Z" creationid="pingfangx" creationdate="20180601T080023Z">
        <seg>实质上，该语句计算 &lt;t1&gt;Rectangle&lt;/t1&gt; 的默认高度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, each group considers its software highly proprietary and reserves the right to modify it at any time, as long as it continues to adhere to the published interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T053959Z" creationid="pingfangx" creationdate="20190102T053959Z">
        <seg>事实上，每个小组都认为其软件具有高度专有性，并保留随时修改它的权利，只要它继续遵守已发布的接口即可。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, this is the case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095832Z" creationid="pingfangx" creationdate="20190102T095832Z">
        <seg>事实上，情况就是这样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, class declarations can include these components, in order:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030830Z" creationid="pingfangx" creationdate="20180525T030830Z">
        <seg>通常，类声明可以包含这些组件，依次为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, however, the &lt;c6&gt;String&lt;/c6&gt; class has a wider variety of methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083436Z" creationid="pingfangx" creationdate="20190103T083436Z">
        <seg>但是，通常，&lt;c6&gt;String&lt;/c6&gt; 类具有更多种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, they are not needed: You can create a new string by concatenation of substrings you have &lt;i1&gt;removed&lt;/i1&gt; from a string with the substring that you want to insert.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073951Z" creationid="pingfangx" creationdate="20190103T073701Z">
        <seg>通常，它们不是必需的：您可以通过连接要 &lt;i1&gt;移除&lt;/i1&gt; 的源字符的子字符串和要插入的子字符串，来创建一个新字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general-purpose programming, certain operators tend to appear more frequently than others; for example, the assignment operator "&lt;c0&gt;=&lt;/c0&gt;" is far more common than the unsigned right shift operator "&lt;c1&gt;&gt;&gt;&gt;&lt;/c1&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063227Z" creationid="pingfangx" creationdate="20180521T063227Z">
        <seg>在通用编程中，某些运算符往往比其他运算符更频繁出现;例如，赋值运算符 "&lt;c0&gt;=&lt;/c0&gt;" 比无符号右移运算符 "&lt;c1&gt;&gt;&gt;&gt;&lt;/c1&gt;" 更普遍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In its most common form, an interface is a group of related methods with empty bodies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063847Z" creationid="pingfangx" creationdate="20180518T063847Z">
        <seg>在其最常见的形式中，接口是一组具有空体的相关方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In its simplest form, an annotation looks like the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023832Z" creationid="pingfangx" creationdate="20190102T023832Z">
        <seg>在最简单的形式中，注解如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In many cases it will also make your code self-documenting; fields named &lt;c0&gt;cadence&lt;/c0&gt;, &lt;c1&gt;speed&lt;/c1&gt;, and &lt;c2&gt;gear&lt;/c2&gt;, for example, are much more intuitive than abbreviated versions, such as &lt;c3&gt;s&lt;/c3&gt;, &lt;c4&gt;c&lt;/c4&gt;, and &lt;c5&gt;g&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074451Z" creationid="pingfangx" creationdate="20180518T074451Z">
        <seg>在很多情况下，它也会使你的代码自带文档;例如，名为 &lt;c0&gt;cadence&lt;/c0&gt;，&lt;c1&gt;speed&lt;/c1&gt; 和 &lt;c2&gt;gear&lt;/c2&gt; 的字段比缩写版本更直观，例如 &lt;c3&gt;s&lt;/c3&gt;，&lt;c4&gt;c&lt;/c4&gt; 和 &lt;c5&gt;g&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In many cases, you do not have to write your own type checking modules.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040602Z" creationid="pingfangx" creationdate="20190102T040602Z">
        <seg>在许多情况下，您不必编写自己的类型检查模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In multi-word names, the first letter of each of the second and following words should be capitalized.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065149Z" creationid="pingfangx" creationdate="20180525T065149Z">
        <seg>在多词的名称中，第二个单词和后面的单词的首字母应该大写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In object-oriented terms, we say that your bicycle is an &lt;i0&gt;instance&lt;/i0&gt; of the &lt;i1&gt;class of objects&lt;/i1&gt; known as bicycles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062434Z" creationid="pingfangx" creationdate="20180518T062434Z">
        <seg>在面向对象的术语中，我们说你的自行车是称为自行车的 &lt;i1&gt;class of objects（对象的类）&lt;/i1&gt;的 &lt;i0&gt;instance（实例）&lt;/i0&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order for the &lt;c5&gt;StringSwitchDemo&lt;/c5&gt; example to accept any month regardless of case, &lt;c6&gt;month&lt;/c6&gt; is converted to lowercase (with the &lt;a7&gt;&lt;c8&gt;toLowerCase&lt;/c8&gt;&lt;/a7&gt; method), and all the strings associated with the &lt;c9&gt;case&lt;/c9&gt; labels are in lowercase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082646Z" creationid="pingfangx" creationdate="20180521T082646Z">
        <seg>为了让 &lt;c5&gt;StringSwitchDemo&lt;/c5&gt; 示例接受任意月份而不考虑大小写，&lt;c6&gt;month&lt;/c6&gt; 将转换为小写形式(使用 &lt;a7&gt;&lt;c8&gt;toLowerCase&lt;/c8&gt;&lt;/a7&gt; 方法)，并且与 &lt;c9&gt;case&lt;/c9&gt; 标签关联的所有字符串都是小写字母。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order for the compiler to do this, two declarations are required in your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041141Z" creationid="pingfangx" creationdate="20190102T041141Z">
        <seg>为了使编译器执行此操作，代码中需要两个声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In other words, what is the control flow for the code snippet?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091453Z" creationid="pingfangx" creationdate="20180521T091453Z">
        <seg>换句话说，代码片段的控制流程是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In other words: &lt;c1&gt;0.0 &lt;= Math.random() &lt; 1.0&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040536Z" creationid="pingfangx" creationdate="20190103T040528Z">
        <seg>换句话说：&lt;c1&gt; 0.0 &lt;= Math.random()&lt;1.0 &lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In particular, default methods enable you to add methods that accept lambda expressions as parameters to existing interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065142Z" creationid="pingfangx" creationdate="20190102T065142Z">
        <seg>特别是，默认方法使您能够将接受 lambda 表达式的方法添加为现有接口的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In particular, it would be helpful if your developers could create a &lt;c2&gt;Comparator&lt;/c2&gt; instance that compares any object that can return a numerical value from a method such as &lt;c3&gt;getValue&lt;/c3&gt; or &lt;c4&gt;hashCode&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072951Z" creationid="pingfangx" creationdate="20190102T071707Z">
        <seg>特别是，如果您的开发人员可以创建一个 &lt;c2&gt;Comparator&lt;/c2&gt; 实例，以比较可以从一个方法返回数值的任何对象时（如 &lt;c3&gt;getValue&lt;/c3&gt; 或 &lt;c4&gt;hashCode&lt;/c4&gt; ），这会很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In particular, this section talks about the situations where you would use instantiations of these classes rather than the primitive data types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024655Z" creationid="pingfangx" creationdate="20190103T024655Z">
        <seg>特别是，本节讨论了使用这些类的实例化而不是基本数据类型的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In positions where a string of digits is expected</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084556Z" creationid="pingfangx" creationdate="20180518T084556Z">
        <seg>在期望一串数字的位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In so doing, the guidance systems will invoke the interface methods: turn, change lanes, brake, accelerate, and so forth.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055211Z" creationid="pingfangx" creationdate="20190102T055211Z">
        <seg>这样，导航系统将调用接口方法：转弯，更改车道，制动，加速等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In such a case, a &lt;c2&gt;return&lt;/c2&gt; statement can be used to branch out of a control flow block and exit the method and is simply used like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091334Z" creationid="pingfangx" creationdate="20180601T091334Z">
        <seg>在这种情况下，可以使用 &lt;c2&gt;return&lt;/c2&gt; 语句从控制流程块分支退出并退出该方法，并简单地使用如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In that case, the program will compile just fine, but will generate a &lt;c5&gt;NullPointerException&lt;/c5&gt; at runtime.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083518Z" creationid="pingfangx" creationdate="20180705T083518Z">
        <seg>在这种情况下，程序将编译得很好，但会在运行时生成 &lt;c5&gt;NullPointerException&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the &lt;b0&gt; Encoding&lt;/b0&gt; combo box, leave the encoding as ANSI.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034703Z" creationid="pingfangx" creationdate="20180518T034703Z">
        <seg>在 &lt;b0&gt; Encoding&lt;/b0&gt; 组合框中，将编码保留为 ANSI。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the &lt;b0&gt; File name&lt;/b0&gt; text field, type &lt;c1&gt;"HelloWorldApp.java"&lt;/c1&gt;, including the quotation marks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034653Z" creationid="pingfangx" creationdate="20180518T034653Z">
        <seg>在 &lt;b0&gt; File name&lt;/b0&gt; 文本字段中，键入 &lt;c1&gt;"HelloWorldApp.java"&lt;/c1&gt;，包括引号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java language, classes can be &lt;i1&gt;derived&lt;/i1&gt; from other classes, thereby &lt;i2&gt;inheriting&lt;/i2&gt; fields and methods from those classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T080109Z" creationid="pingfangx" creationdate="20190102T080109Z">
        <seg>在 Java 语言中，类可以从其他类 &lt;i1&gt;派生（derived）&lt;/i1&gt;，从而从那些类 &lt;i2&gt;继承（inheriting）&lt;/i2&gt; 字段和方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java platform, many classes derive directly from &lt;c3&gt;Object&lt;/c3&gt;, other classes derive from some of those classes, and so on, forming a hierarchy of classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081846Z" creationid="pingfangx" creationdate="20190102T081846Z">
        <seg>在 Java 平台中，许多类直接从 &lt;c3&gt;Object&lt;/c3&gt; 派生，其他类派生自其中一些类，依此类推，形成类的层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java programming language, a multidimensional array is an array whose components are themselves arrays.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042237Z" creationid="pingfangx" creationdate="20180521T042237Z">
        <seg>在 Java 编程语言中，多维数组是其组件本身就是数组的数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java programming language, all source code is first written in plain text files ending with the &lt;c0&gt;.java&lt;/c0&gt; extension.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033114Z" creationid="pingfangx" creationdate="20180518T033114Z">
        <seg>在 Java 编程语言中，所有源代码首先以纯文本文件写成，后缀为 &lt;c0&gt;.java&lt;/c0&gt; 扩展名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java programming language, an &lt;i0&gt;interface&lt;/i0&gt; is a reference type, similar to a class, that can contain &lt;i1&gt;only&lt;/i1&gt; constants, method signatures, default methods, static methods, and nested types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054038Z" creationid="pingfangx" creationdate="20190102T054038Z">
        <seg>在 Java 编程语言中，&lt;i0&gt;interface&lt;/i0&gt; 是一个类似于类的引用类型，它 &lt;i1&gt;只能&lt;/i1&gt; 包含常量，方法签名，默认方法，静态方法和嵌套类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java programming language, each class is allowed to have one direct superclass, and each superclass has the potential for an unlimited number of &lt;i6&gt;subclasses&lt;/i6&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063446Z" creationid="pingfangx" creationdate="20180518T063446Z">
        <seg>在 Java 编程语言中，每个类都被允许拥有一个直接的超类，每个超类都有可能拥有无限数量的 &lt;i6&gt;subclasses（子类）&lt;/i6&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java programming language, every application must contain a &lt;c0&gt;main&lt;/c0&gt; method whose signature is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035634Z" creationid="pingfangx" creationdate="20180518T035634Z">
        <seg>在 Java 编程语言中，每个应用程序都必须包含一个 &lt;c0&gt;main&lt;/c0&gt; 方法，其签名为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java programming language, strings are objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024739Z" creationid="pingfangx" creationdate="20190103T024739Z">
        <seg>在 Java 编程语言中，字符串是对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java programming language, the terms "field" and "variable" are both used; this is a common source of confusion among new developers, since both often seem to refer to the same thing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073206Z" creationid="pingfangx" creationdate="20180518T073206Z">
        <seg>在 Java 编程语言中，术语 "字段" 和 "变量" 都被使用;这是新开发人员混淆的一个常见原因，因为两者似乎都指向相同的东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java programming language, you can use the same name for all the drawing methods but pass a different argument list to each method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065404Z" creationid="pingfangx" creationdate="20180525T065404Z">
        <seg>在 Java 编程语言中，可以对所有绘图方法使用相同的名称，但将不同的参数列表传递给每个方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Java programming language, you define an enum type by using the &lt;c0&gt;enum&lt;/c0&gt; keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015301Z" creationid="pingfangx" creationdate="20190102T015301Z">
        <seg>在 Java 编程语言中，使用 &lt;c0&gt;enum&lt;/c0&gt; 关键字定义枚举类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the JavaFX example &lt;a0&gt; &lt;c1&gt;HelloWorld.java&lt;/c1&gt;&lt;/a0&gt; (discussed in the previous section &lt;a2&gt;Anonymous Classes&lt;/a2&gt;), you can replace the highlighted anonymous class with a lambda expression in this statement:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075300Z" creationid="pingfangx" creationdate="20181228T075300Z">
        <seg>在 JavaFX 示例 &lt;a0&gt; &lt;c1&gt;HelloWorld.java&lt;/c1&gt;&lt;/a0&gt;(在上一节 &lt;a2&gt;Anonymous Classes&lt;/a2&gt; 中讨论过)中，您可以使用 lambda 表达式替换高亮的匿名类这个说法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the absence of any other explicit superclass, every class is implicitly a subclass of &lt;c11&gt;Object&lt;/c11&gt;.&lt;br12/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T080502Z" creationid="pingfangx" creationdate="20190102T080502Z">
        <seg>在没有任何其他显式超类的情况下，每个类都隐式地是 &lt;c11&gt;Object&lt;/c11&gt; 的子类。&lt;br12/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the case of the &lt;c1&gt;Bicycle&lt;/c1&gt; class, the instance variables are &lt;c2&gt;cadence&lt;/c2&gt;, &lt;c3&gt;gear&lt;/c3&gt;, and &lt;c4&gt;speed&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042246Z" creationid="pingfangx" creationdate="20180607T042246Z">
        <seg>在 &lt;c1&gt;Bicycle&lt;/c1&gt; 类中，实例变量为 &lt;c2&gt;cadence&lt;/c2&gt;，&lt;c3&gt;gear&lt;/c3&gt; 和 &lt;c4&gt;speed&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the code sample, &lt;c0&gt;draw(String s)&lt;/c0&gt; and &lt;c1&gt;draw(int i)&lt;/c1&gt; are distinct and unique methods because they require different argument types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065445Z" creationid="pingfangx" creationdate="20180525T065445Z">
        <seg>在代码示例中，&lt;c0&gt;draw(String s)&lt;/c0&gt; 和 &lt;c1&gt;draw(int i)&lt;/c1&gt; 是截然不同且唯一的方法，因为它们需要不同的参数类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following example, &lt;c0&gt;Planet&lt;/c0&gt; is an enum type that represents the planets in the solar system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015627Z" creationid="pingfangx" creationdate="20190102T015627Z">
        <seg>在以下示例中，&lt;c0&gt;Planet&lt;/c0&gt; 是枚举类型，表示太阳系中的行星。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following example, a deprecated method is used, and the compiler usually generates a warning.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033557Z" creationid="pingfangx" creationdate="20190102T033557Z">
        <seg>在以下示例中，使用了不推荐使用的方法，编译器通常会生成警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following example, the annotation's name is &lt;c1&gt;Override&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023901Z" creationid="pingfangx" creationdate="20190102T023901Z">
        <seg>在以下示例中，注解的名称为 &lt;c1&gt;Override&lt;/c1&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following example, this operator should be read as: "If &lt;c4&gt;someCondition&lt;/c4&gt; is &lt;c5&gt;true&lt;/c5&gt;, assign the value of &lt;c6&gt;value1&lt;/c6&gt; to &lt;c7&gt;result&lt;/c7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070318Z" creationid="pingfangx" creationdate="20180521T070318Z">
        <seg>在以下示例中，应将此运算符理解为：“如果 &lt;c4&gt;someCondition&lt;/c4&gt; 为 &lt;c5&gt;true&lt;/c5&gt;，则将 &lt;c6&gt;value1&lt;/c6&gt; 的值赋给 &lt;c7&gt;result&lt;/c7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following example, you create an array, fill it with integer values, and then output only values of even indices of the array in ascending order.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100549Z" creationid="pingfangx" creationdate="20180705T100549Z">
        <seg>在下面的示例中，您将创建一个数组，用整数值填充它，然后仅按升序输出数组的偶数索引值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following program, called &lt;a0&gt;&lt;c1&gt;ComputeResult&lt;/c1&gt;&lt;/a0&gt;, what is the value of &lt;c2&gt;result&lt;/c2&gt; after each numbered line executes?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085252Z" creationid="pingfangx" creationdate="20190103T085252Z">
        <seg>在以下程序中，名为 &lt;a0&gt;&lt;c1&gt;ComputeResult&lt;/c1&gt;&lt;/a0&gt;，每个编号行执行后 &lt;c2&gt;result&lt;/c2&gt; 的值是多少？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following program, explain why the value "6" is printed twice in a row:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072718Z" creationid="pingfangx" creationdate="20180521T072718Z">
        <seg>在下面的程序中，解释为什么连续两次打印值 "6"：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the preceding lessons, you have seen &lt;i0&gt;inheritance&lt;/i0&gt; mentioned several times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T080030Z" creationid="pingfangx" creationdate="20190102T080030Z">
        <seg>在前面的课程中，您已经多次看到 &lt;i0&gt;inheritance&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the previous example, the &lt;c0&gt;PhoneNumber&lt;/c0&gt; constructor accesses the member &lt;c1&gt;LocalClassExample.regularExpression&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122641Z" creationid="pingfangx" creationdate="20180705T122641Z">
        <seg>在前面的示例中，&lt;c0&gt;PhoneNumber&lt;/c0&gt; 构造函数访问成员 &lt;c1&gt;LocalClassExample.regularExpression&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the previous examples, &lt;c2&gt;Override&lt;/c2&gt; and &lt;c3&gt;SuppressWarnings&lt;/c3&gt; are &lt;a4&gt;predefined Java annotations&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024051Z" creationid="pingfangx" creationdate="20190102T024051Z">
        <seg>在前面的示例中，&lt;c2&gt;Override&lt;/c2&gt; 和 &lt;c3&gt;SuppressWarnings&lt;/c3&gt; 是 &lt;a4&gt;predefined Java annotations&lt;/a4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the program you created in Exercise 1, try leaving the fields uninitialized and print out their values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061902Z" creationid="pingfangx" creationdate="20180521T061902Z">
        <seg>在练习 1 中创建的程序中，尝试将字段未初始化并打印出它们的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the real world, you'll often find many individual objects all of the same kind.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062205Z" creationid="pingfangx" creationdate="20180518T062205Z">
        <seg>在现实世界中，你会经常发现很多单独的物体都是同一种物体。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the robotic car example above, it is the automobile manufacturers who will implement the interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054232Z" creationid="pingfangx" creationdate="20190102T054232Z">
        <seg>在上面的机器人汽车示例中，汽车制造商将实现该接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the same directory, enter the following command at the prompt:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034934Z" creationid="pingfangx" creationdate="20180518T034934Z">
        <seg>在相同的目录中，在提示符处输入以下命令：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the section on &lt;a0&gt;&lt;c1&gt;Interfaces&lt;/c1&gt;&lt;/a0&gt;, it was noted that a class that implements an interface must implement &lt;i2&gt;all&lt;/i2&gt; of the interface's methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022419Z" creationid="pingfangx" creationdate="20190103T022419Z">
        <seg>在 &lt;a0&gt;&lt;c1&gt;Interfaces&lt;/c1&gt;&lt;/a0&gt; 的部分中，注意到实现接口的类必须实现接口的 &lt;i2&gt;所有&lt;/i2&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the spirit of encapsulation, it is common to make fields private.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064022Z" creationid="pingfangx" creationdate="20180525T064022Z">
        <seg>本着封装的精神，将字段私有化是很常见的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In these cases, you're usually trying to pass functionality as an argument to another method, such as what action should be taken when someone clicks a button.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083334Z" creationid="pingfangx" creationdate="20180706T083247Z">
        <seg>在这些情况下，您通常会尝试将函数作为参数传递给另一个方法，例如当有人单击按钮时应采取的操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, "Hello world!" is a &lt;i0&gt;string literal&lt;/i0&gt;a series of characters in your code that is enclosed in double quotes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062935Z" creationid="pingfangx" creationdate="20190103T062935Z">
        <seg>在这种情况下，"Hello world!" 是一个 &lt;i0&gt;string literal&lt;/i0&gt; 代码中的一系列字符，用双引号括起来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, &lt;c0&gt;August&lt;/c0&gt; is printed to standard output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082031Z" creationid="pingfangx" creationdate="20180521T082031Z">
        <seg>在这种情况下，&lt;c0&gt;August&lt;/c0&gt; 被打印到标准输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, &lt;c0&gt;width&lt;/c0&gt; and &lt;c1&gt;height&lt;/c1&gt; are simple names.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073527Z" creationid="pingfangx" creationdate="20180601T073527Z">
        <seg>在这种情况下，&lt;c0&gt;width&lt;/c0&gt; 和 &lt;c1&gt;height&lt;/c1&gt; 是简单名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, class &lt;c0&gt;X&lt;/c0&gt; must be &lt;c1&gt;abstract&lt;/c1&gt; because it does not fully implement &lt;c2&gt;Y&lt;/c2&gt;, but class &lt;c3&gt;XX&lt;/c3&gt; does, in fact, implement &lt;c4&gt;Y&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022707Z" creationid="pingfangx" creationdate="20190103T022433Z">
        <seg>在这种情况下，类 &lt;c0&gt;X&lt;/c0&gt; 必须是 &lt;c1&gt;abstract&lt;/c1&gt;，因为它没有完全实现 &lt;c2&gt;Y&lt;/c2&gt;，但是类 &lt;c3&gt;XX&lt;/c3&gt; ，实际上，它完全实现 &lt;c4&gt;Y&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, however, the annotation causes the warning to be suppressed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033602Z" creationid="pingfangx" creationdate="20190102T033602Z">
        <seg>但是，在这种情况下，注解会导致警告被抑制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, the action is to simply print an error message stating that the bicycle has already stopped.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081127Z" creationid="pingfangx" creationdate="20180521T081127Z">
        <seg>在这种情况下，动作是简单地打印一条错误消息，指出自行车已经停止。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, the compiler or the user must decide which one to use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085057Z" creationid="pingfangx" creationdate="20190102T085057Z">
        <seg>在这种情况下，编译器或用户必须决定使用哪一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, the object returned must implement the specified interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092153Z" creationid="pingfangx" creationdate="20180601T092153Z">
        <seg>在这种情况下，返回的对象必须实现指定的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, the object that &lt;t0&gt;getArea()&lt;/t0&gt; is invoked on is the rectangle returned by the constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085256Z" creationid="pingfangx" creationdate="20180601T085256Z">
        <seg>在这种情况下，&lt;t0&gt;getArea()&lt;/t0&gt; 被调用的对象是构造函数返回的矩形。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, the type of the lambda expression &lt;c2&gt;() -&gt; "done"&lt;/c2&gt; is &lt;c3&gt;Callable&lt;T&gt;&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082235Z" creationid="pingfangx" creationdate="20181228T082235Z">
        <seg>在这种情况下，lambda 表达式 &lt;c2&gt;() -&gt; "done"&lt;/c2&gt; 的类型是 &lt;c3&gt;Callable&lt;T&gt;&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, you can use a lambda expression instead of an anonymous class, as described in the next section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091550Z" creationid="pingfangx" creationdate="20180706T091550Z">
        <seg>在这种情况下，您可以使用 lambda 表达式而不是匿名类，如下一节中所述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, you need a functional interface that contains an abstract method that can take one argument of type &lt;c5&gt;Person&lt;/c5&gt; and returns void.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094013Z" creationid="pingfangx" creationdate="20180706T094013Z">
        <seg>在这种情况下，您需要一个包含抽象方法的函数式接口，该方法可以接受一个 &lt;c5&gt;Person&lt;/c5&gt; 类型的参数并返回 void。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, you need a functional interface that contains an abstract method that returns a value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094249Z" creationid="pingfangx" creationdate="20180706T094249Z">
        <seg>在这种情况下，您需要一个包含返回值的抽象方法的函数式接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, &lt;c1&gt;Bicycle&lt;/c1&gt; now becomes the &lt;i2&gt;superclass&lt;/i2&gt; of &lt;c3&gt;MountainBike&lt;/c3&gt;, &lt;c4&gt;RoadBike&lt;/c4&gt;, and &lt;c5&gt;TandemBike&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063409Z" creationid="pingfangx" creationdate="20180518T063409Z">
        <seg>在这个例子中，&lt;c1&gt;Bicycle&lt;/c1&gt; 现在成为 &lt;c3&gt;MountainBike&lt;/c3&gt;，&lt;c4&gt;RoadBike&lt;/c4&gt; 和 &lt;c5&gt;TandemBike&lt;/c5&gt; 的 &lt;i2&gt;superclass（超类）&lt;/i2&gt; &gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, &lt;c3&gt;this.x&lt;/c3&gt; refers to the member variable &lt;c4&gt;FirstLevel.x&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080756Z" creationid="pingfangx" creationdate="20181228T080756Z">
        <seg>在此示例中，&lt;c3&gt;this.x&lt;/c3&gt; 引用成员变量 &lt;c4&gt;FirstLevel.x&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, it obtains a source of &lt;c1&gt;Person&lt;/c1&gt; objects from the collection &lt;c2&gt;roster&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T073028Z" creationid="pingfangx" creationdate="20181228T073028Z">
        <seg>在此示例中，它从集合 &lt;c2&gt;roster&lt;/c2&gt; 中获取 &lt;c1&gt;Person&lt;/c1&gt; 对象的来源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the &lt;c2&gt;Consumer&lt;/c2&gt; object is a lambda expression that prints a string, which is the e-mail address returned by the &lt;c3&gt;Function&lt;/c3&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T073312Z" creationid="pingfangx" creationdate="20181228T073312Z">
        <seg>在此示例中，&lt;c2&gt;Consumer&lt;/c2&gt; 对象是一个 lambda 表达式，用于输出字符串，该字符串是 &lt;c3&gt;Function&lt;/c3&gt; 对象返回的电子邮件地址。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the &lt;c2&gt;Function&lt;/c2&gt; object is a lambda expression that returns the e-mail address of a member.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T073251Z" creationid="pingfangx" creationdate="20181228T073251Z">
        <seg>在此示例中，&lt;c2&gt;Function&lt;/c2&gt; 对象是一个 lambda 表达式，它返回成员的电子邮件地址。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the &lt;c2&gt;Predicate&lt;/c2&gt; object is a lambda expression that specifies which members would be eligible for Selective Service.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T073205Z" creationid="pingfangx" creationdate="20181228T073149Z">
        <seg>在此示例中，&lt;c2&gt;Predicate&lt;/c2&gt; 对象是一个 lambda 表达式，用于指定哪些成员符合美国兵役登记制度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the anonymous class expression is part of the statement that instantiates the &lt;c0&gt;frenchGreeting&lt;/c0&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T062941Z" creationid="pingfangx" creationdate="20180706T062941Z">
        <seg>在此示例中，匿名类表达式是实例化 &lt;c0&gt;frenchGreeting&lt;/c0&gt; 对象的语句的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the anonymous class is implementing the interface &lt;c0&gt;HelloWorld&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061543Z" creationid="pingfangx" creationdate="20180706T061543Z">
        <seg>在此示例中，匿名类实现接口 &lt;c0&gt;HelloWorld&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the containing annotation type is &lt;c1&gt;Schedules&lt;/c1&gt;, so repeating &lt;c2&gt;@Schedule&lt;/c2&gt; annotations is stored in an &lt;c3&gt;@Schedules&lt;/c3&gt; annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041218Z" creationid="pingfangx" creationdate="20190102T041218Z">
        <seg>在此示例中，包含注解类型为 &lt;c1&gt;Schedules&lt;/c1&gt;，因此重复 &lt;c2&gt;@Schedule&lt;/c2&gt; 注解存储在 &lt;c3&gt;@Schedules&lt;/c3&gt; 注解中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the directory is &lt;c1&gt;myapplication&lt;/c1&gt; on the &lt;c2&gt;C&lt;/c2&gt; drive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034647Z" creationid="pingfangx" creationdate="20180518T034647Z">
        <seg>在此示例中，目录是 &lt;c2&gt;C&lt;/c2&gt; 驱动器上的 &lt;c1&gt;myapplication&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the lambda expression compares two integer values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071322Z" creationid="pingfangx" creationdate="20190102T071322Z">
        <seg>在此示例中，lambda 表达式比较两个整数值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the method creates a new &lt;c0&gt;Polygon&lt;/c0&gt; object and initializes it from an array of &lt;c1&gt;Point&lt;/c1&gt; objects (assume that &lt;c2&gt;Point&lt;/c2&gt; is a class that represents an x, y coordinate):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032624Z" creationid="pingfangx" creationdate="20180601T032624Z">
        <seg>在此示例中，该方法创建一个新的 &lt;c0&gt;Polygon&lt;/c0&gt; 对象并从 &lt;c1&gt;Point&lt;/c1&gt; 对象的数组中初始化它(假设 &lt;c2&gt;Point&lt;/c2&gt; 是一个表示一个 x，y 坐标的类)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the method invocation &lt;c0&gt;btn.setOnAction&lt;/c0&gt; specifies what happens when you select the &lt;b1&gt;Say 'Hello World'&lt;/b1&gt; button.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065706Z" creationid="pingfangx" creationdate="20180706T065649Z">
        <seg>在此示例中，方法调用 &lt;c0&gt;btn.setOnAction&lt;/c0&gt; 指定当您选择 &lt;b1&gt;Say 'Hello World'&lt;/b1&gt; 按钮时会发生什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the range to be copied does not include the array element at index 9 (which contains the character &lt;c3&gt;a&lt;/c3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T054003Z" creationid="pingfangx" creationdate="20180521T054003Z">
        <seg>在此示例中，要复制的范围不包括索引为 9 的数组元素(其中包含字符 &lt;c3&gt;a&lt;/c3&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the variable &lt;c0&gt;item&lt;/c0&gt; holds the current value from the numbers array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085631Z" creationid="pingfangx" creationdate="20180521T085631Z">
        <seg>在这个例子中，变量 &lt;c0&gt;item&lt;/c0&gt; 保存 numbers 数组中的当前值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, we'll use Notepad, a simple editor included with the Windows platforms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034435Z" creationid="pingfangx" creationdate="20180518T034435Z">
        <seg>在这个例子中，我们将使用记事本，这是 Windows 平台附带的一个简单的编辑器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, you can use a &lt;a0&gt;method reference&lt;/a0&gt; instead:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T073105Z" creationid="pingfangx" creationdate="20190102T071723Z">
        <seg>在此示例中，您可以使用 &lt;a0&gt;方法引用（method reference）&lt;/a0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this lesson, be aware that the same naming rules and conventions are used for method and class names, except that</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064347Z" creationid="pingfangx" creationdate="20180525T064347Z">
        <seg>在本课中，请注意，相同的命名规则和约定用于方法和类名称，除此之外</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this lesson, you will find information about defining your own classes, including declaring member variables, methods, and constructors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022948Z" creationid="pingfangx" creationdate="20180525T022948Z">
        <seg>在本课中，您将找到有关定义自己的类的信息，包括声明成员变量，方法和构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this particular example, the order in which the expression is evaluated is unimportant because the result of multiplication is independent of order; the outcome is always the same, no matter in which order you apply the multiplications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074432Z" creationid="pingfangx" creationdate="20180521T074432Z">
        <seg>在这个特定的例子中，计算表达式的顺序并不重要，因为乘法的结果与顺序无关;无论按照何种顺序应用乘法，结果总是相同的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this section, we discuss the use of the &lt;c0&gt;static&lt;/c0&gt; keyword to create fields and methods that belong to the class, rather than to an instance of the class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042215Z" creationid="pingfangx" creationdate="20180607T042215Z">
        <seg>在本节中，我们讨论使用 &lt;c0&gt;static&lt;/c0&gt; 关键字来创建属于类的字段和方法，而不是类的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this situation, the compiler will complain if the superclass doesn't have a no-argument constructor so you must verify that it does.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T035625Z" creationid="pingfangx" creationdate="20180528T035625Z">
        <seg>在这种情况下，如果超类没有无参数构造函数，编译器会发出抱怨，因此您必须验证它是否存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this version, the button actually *does* something</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021146Z" creationid="pingfangx" creationdate="20190102T021146Z">
        <seg>In this version, the button actually *does* something</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this way, legacy code continues to work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041343Z" creationid="pingfangx" creationdate="20190102T041343Z">
        <seg>通过这种方式，遗留代码继续工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this way, you can build on top of the Java type system, adding specific checks when and where you want them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040903Z" creationid="pingfangx" creationdate="20190102T040903Z">
        <seg>这样，您可以在 Java 类型系统的顶部构建，并在需要的时候和特定的地方添加特定的检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In those cases, it's often clearer to refer to the existing method by name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082703Z" creationid="pingfangx" creationdate="20181228T082703Z">
        <seg>在这些情况下，通过名称引用现有方法通常更清楚。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Includes locale-specific grouping characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033545Z" creationid="pingfangx" creationdate="20190103T033545Z">
        <seg>包含特定于语言环境的分组字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Includes sign, whether positive or negative.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033538Z" creationid="pingfangx" creationdate="20190103T033538Z">
        <seg>包括标志，无论是正还是负。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Increment operator; increments a value by 1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065204Z" creationid="pingfangx" creationdate="20180521T065120Z">
        <seg>递增运算符；将值增加 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indices begin at 0, so the character at index 9 is 'O', as illustrated in the following figure:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072606Z" creationid="pingfangx" creationdate="20190103T072606Z">
        <seg>索引从 0 开始，因此索引 9 处的字符为 'O' ，如下图所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information-hiding: By interacting only with an object's methods, the details of its internal implementation remain hidden from the outside world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061948Z" creationid="pingfangx" creationdate="20180518T061948Z">
        <seg>信息隐藏：通过仅与对象的方法交互，其内部实现的细节对外界保持隐藏。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092554Z" creationid="pingfangx" creationdate="20180521T092554Z">
        <seg>继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inheritance (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T075105Z" creationid="pingfangx" creationdate="20190102T075105Z">
        <seg>Inheritance (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inheritance provides a powerful and natural mechanism for organizing and structuring your software.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042945Z" creationid="pingfangx" creationdate="20180518T042945Z">
        <seg>继承为组织和构建软件提供了强大而自然的机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inherited instance methods from classes can override abstract interface methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092121Z" creationid="pingfangx" creationdate="20190102T092121Z">
        <seg>类中的继承实例方法可以覆盖抽象接口方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Initializer blocks for instance variables look just like static initializer blocks, but without the &lt;c0&gt;static&lt;/c0&gt; keyword:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070652Z" creationid="pingfangx" creationdate="20180705T070652Z">
        <seg>实例变量的初始化程序块看起来就像静态初始化程序块，但没有 &lt;c0&gt;static&lt;/c0&gt; 关键字：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Initializing Fields</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092138Z" creationid="pingfangx" creationdate="20180521T092138Z">
        <seg>初始化字段</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Initializing Fields (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065646Z" creationid="pingfangx" creationdate="20180705T065646Z">
        <seg>Initializing Fields (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Initializing Instance Members</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070603Z" creationid="pingfangx" creationdate="20180705T070603Z">
        <seg>初始化实例成员</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Initializing an Object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062419Z" creationid="pingfangx" creationdate="20180601T062419Z">
        <seg>初始化一个对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inner Class Example</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092214Z" creationid="pingfangx" creationdate="20180521T092214Z">
        <seg>内部类示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inner Class Example (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100443Z" creationid="pingfangx" creationdate="20180705T100443Z">
        <seg>Inner Class Example (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inner Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091115Z" creationid="pingfangx" creationdate="20180705T091115Z">
        <seg>内部类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>InnerClass1: getAnotherString invoked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021158Z" creationid="pingfangx" creationdate="20190102T021158Z">
        <seg>InnerClass1: getAnotherString invoked.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>InnerClass1: getAnotherString invoked.&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014808Z" creationid="pingfangx" creationdate="20190102T014808Z">
        <seg>InnerClass1: getAnotherString invoked.&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>InnerClass1: getString invoked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021157Z" creationid="pingfangx" creationdate="20190102T021157Z">
        <seg>InnerClass1: getString invoked.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>InnerClass2 version of getAnother String invoked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021209Z" creationid="pingfangx" creationdate="20190102T021209Z">
        <seg>InnerClass2 version of getAnother String invoked.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>InnerClassDemo?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021145Z" creationid="pingfangx" creationdate="20190102T021145Z">
        <seg>InnerClassDemo?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Insert a backslash character in the text at this point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062512Z" creationid="pingfangx" creationdate="20190103T062512Z">
        <seg>此时在文本中插入反斜杠字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Insert a backspace in the text at this point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062419Z" creationid="pingfangx" creationdate="20190103T062419Z">
        <seg>此时在文本中插入退格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Insert a carriage return in the text at this point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062436Z" creationid="pingfangx" creationdate="20190103T062436Z">
        <seg>此时在文本中插入回车符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Insert a double quote character in the text at this point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062509Z" creationid="pingfangx" creationdate="20190103T062509Z">
        <seg>此时在文本中插入双引号字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Insert a formfeed in the text at this point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062447Z" creationid="pingfangx" creationdate="20190103T062447Z">
        <seg>此时在文本中插入换页符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Insert a newline in the text at this point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062428Z" creationid="pingfangx" creationdate="20190103T062428Z">
        <seg>此时在文本中插入换行符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Insert a single quote character in the text at this point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062456Z" creationid="pingfangx" creationdate="20190103T062456Z">
        <seg>此时在文本中插入单引号字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Insert a tab in the text at this point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062501Z" creationid="pingfangx" creationdate="20190103T062412Z">
        <seg>此时在文本中插入 tab。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inserts the second argument into the string builder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082116Z" creationid="pingfangx" creationdate="20190103T082101Z">
        <seg>将第二个参数插入到 string builder 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside the method, &lt;c0&gt;circle&lt;/c0&gt; initially refers to &lt;c1&gt;myCircle&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034357Z" creationid="pingfangx" creationdate="20180601T034357Z">
        <seg>在该方法内部，&lt;c0&gt;circle&lt;/c0&gt; 最初引用 &lt;c1&gt;myCircle&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instance Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085138Z" creationid="pingfangx" creationdate="20190102T085138Z">
        <seg>实例方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instance initializers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065521Z" creationid="pingfangx" creationdate="20180706T065521Z">
        <seg>实例初始化器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instance methods are preferred over interface default methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091454Z" creationid="pingfangx" creationdate="20190102T091454Z">
        <seg>实例方法优于接口默认方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instance methods can access class variables and class methods directly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065152Z" creationid="pingfangx" creationdate="20180705T065152Z">
        <seg>实例方法可以直接访问类变量和类方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instance methods can access instance variables and instance methods directly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065143Z" creationid="pingfangx" creationdate="20180705T065143Z">
        <seg>实例方法可以直接访问实例变量和实例方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instance variables (non-static fields) are unique to each instance of a class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061509Z" creationid="pingfangx" creationdate="20180521T061509Z">
        <seg>实例变量(非静态字段)对于类的每个实例都是唯一的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instance variables and methods that are accessible to code outside of the class that they are declared in can be referred to by using a qualified name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082314Z" creationid="pingfangx" creationdate="20180705T082314Z">
        <seg>可以通过使用限定名称来引用可在其声明的类之外的代码访问的实例变量和方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instance variables can be initialized in constructors, where error handling or other logic can be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065809Z" creationid="pingfangx" creationdate="20180705T065809Z">
        <seg>实例变量可以在构造函数中初始化，其中可以使用错误处理或其他逻辑。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instances of a class get their own copy of each instance variable, which must be accessed through an instance reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082150Z" creationid="pingfangx" creationdate="20180705T082150Z">
        <seg>类的实例获取每个实例变量的自己的副本，必须通过实例引用访问它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instantiating a Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042830Z" creationid="pingfangx" creationdate="20180601T042830Z">
        <seg>实例化一个类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of implementing this method with a new class, the example uses an anonymous class expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065723Z" creationid="pingfangx" creationdate="20180706T065723Z">
        <seg>该示例使用匿名类表达式，而不是使用新类实现此方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of invoking the method &lt;c0&gt;printPerson&lt;/c0&gt;, you can specify a different action to perform on those &lt;c1&gt;Person&lt;/c1&gt; instances that satisfy the criteria specified by &lt;c2&gt;tester&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093900Z" creationid="pingfangx" creationdate="20180706T093900Z">
        <seg>您可以指定对满足 &lt;c2&gt;tester&lt;/c2&gt; 指定条件的 &lt;c1&gt;Person&lt;/c1&gt; 实例执行的其他操作，而不是调用方法 &lt;c0&gt;printPerson&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of reading integer arguments, it reads floating-point arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041610Z" creationid="pingfangx" creationdate="20190103T041610Z">
        <seg>它不是读取整数参数，而是读取浮点参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, a stream carries values from a source, such as collection, through a pipeline.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074908Z" creationid="pingfangx" creationdate="20181228T074908Z">
        <seg>相反，流通过管道携带来自源（例如集合）的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, the field must be accessed through &lt;c0&gt;super&lt;/c0&gt;, which is covered in the next section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094344Z" creationid="pingfangx" creationdate="20190102T094344Z">
        <seg>相反，必须通过 &lt;c0&gt;super&lt;/c0&gt; 访问该字段，这将在下一节中介绍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instructions for other platforms are in &lt;a0&gt;"Hello World!" for Solaris OS and Linux&lt;/a0&gt; and &lt;a1&gt;"Hello World!" for the NetBeans IDE&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034305Z" creationid="pingfangx" creationdate="20180518T034305Z">
        <seg>其他平台的说明位于 &lt;a0&gt;"Hello World!" for Solaris OS and Linux&lt;/a0&gt; 和 &lt;a1&gt;"Hello World!" for the NetBeans IDE&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084703Z" creationid="pingfangx" creationdate="20190103T084703Z">
        <seg>Integer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integer Literals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082459Z" creationid="pingfangx" creationdate="20180518T082459Z">
        <seg>整数字面量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integer i = new Integer(-8);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084604Z" creationid="pingfangx" creationdate="20190103T084604Z">
        <seg>Integer i = new Integer(-8);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integer literals can be expressed by these number systems:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082752Z" creationid="pingfangx" creationdate="20180518T082752Z">
        <seg>整数字面量可以用这些数字系统表示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integer retValue = Integer.valueOf(arrayOfInts[nextIndex]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101108Z" creationid="pingfangx" creationdate="20180705T101108Z">
        <seg>Integer retValue = Integer.valueOf(arrayOfInts[nextIndex]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integer.valueOf(1).equals(Long.valueOf(1))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041510Z" creationid="pingfangx" creationdate="20190103T041510Z">
        <seg>Integer.valueOf(1).equals(Long.valueOf(1))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IntegerMath addition = (a, b) -&gt; a + b;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075622Z" creationid="pingfangx" creationdate="20181228T075622Z">
        <seg>IntegerMath addition = (a, b) -&gt; a + b;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IntegerMath subtraction = (a, b) -&gt; a - b;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075623Z" creationid="pingfangx" creationdate="20181228T075623Z">
        <seg>IntegerMath subtraction = (a, b) -&gt; a - b;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integrating Default Methods into Existing Libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065037Z" creationid="pingfangx" creationdate="20190102T065037Z">
        <seg>将默认方法集成到现有库中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interface Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090842Z" creationid="pingfangx" creationdate="20190102T090842Z">
        <seg>接口方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092440Z" creationid="pingfangx" creationdate="20180521T092440Z">
        <seg>接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T043119Z" creationid="pingfangx" creationdate="20190102T043119Z">
        <seg>Interfaces (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces and Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092438Z" creationid="pingfangx" creationdate="20180521T092438Z">
        <seg>接口和继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces as APIs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055404Z" creationid="pingfangx" creationdate="20190102T055404Z">
        <seg>作为 API 的接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces cannot be instantiatedthey can only be &lt;i2&gt;implemented&lt;/i2&gt; by classes or &lt;i3&gt;extended&lt;/i3&gt; by other interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054107Z" creationid="pingfangx" creationdate="20190102T054107Z">
        <seg>接口不能实例化 - 它们只能通过类 &lt;i2&gt;implemented&lt;/i2&gt; 或通过其他接口 &lt;i3&gt;extended&lt;/i3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces form a contract between the class and the outside world, and this contract is enforced at build time by the compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064122Z" creationid="pingfangx" creationdate="20180518T064122Z">
        <seg>接口形成了类和外部世界之间的契约，并且这个契约在编译器的编译时执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces in Java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054001Z" creationid="pingfangx" creationdate="20190102T054001Z">
        <seg>Java 中的接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Internally, these objects are treated like variable-length arrays that contain a sequence of characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080437Z" creationid="pingfangx" creationdate="20190103T080437Z">
        <seg>在内部，这些对象被视为包含一系列字符的可变长度数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Invocation of a superclass constructor must be the first line in the subclass constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095518Z" creationid="pingfangx" creationdate="20190102T095518Z">
        <seg>调用超类构造函数必须是子类构造函数中的第一行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Invoke the method &lt;c0&gt;print(DataStructureIterator iterator)&lt;/c0&gt; so that it prints elements that have an odd index value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014049Z" creationid="pingfangx" creationdate="20190102T014049Z">
        <seg>调用方法 &lt;c0&gt;print(DataStructureIterator iterator)&lt;/c0&gt;，以便打印具有奇数索引值的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Invoke this method again with a lambda expression to print elements that have an odd index value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014155Z" creationid="pingfangx" creationdate="20190102T014155Z">
        <seg>使用 lambda 表达式再次调用此方法以打印具有奇数索引值的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Invoke this method with a lambda expression to print elements that have an even index value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014149Z" creationid="pingfangx" creationdate="20190102T014149Z">
        <seg>使用 lambda 表达式调用此方法以打印具有偶数索引值的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Invoke this method with an instance of the class &lt;c1&gt;EvenIterator&lt;/c1&gt; so that it performs the same function as the method &lt;c2&gt;printEven&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014040Z" creationid="pingfangx" creationdate="20190102T014040Z">
        <seg>使用类 &lt;c1&gt;EvenIterator&lt;/c1&gt; 的实例调用此方法，以便它执行与方法 &lt;c2&gt;printEven&lt;/c2&gt; 相同的函数式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Invoking &lt;c6&gt;getArea&lt;/c6&gt; directly on the &lt;c7&gt;other&lt;/c7&gt; instance (&lt;c8&gt;other.getArea()&lt;/c8&gt;) would fail to compile because the compiler does not understand that &lt;c9&gt;other&lt;/c9&gt; is actually an instance of &lt;c10&gt;RectanglePlus&lt;/c10&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062246Z" creationid="pingfangx" creationdate="20190102T062246Z">
        <seg>直接在 &lt;c7&gt;other&lt;/c7&gt; 实例（&lt;c8&gt;other.getArea()&lt;/c8&gt;）上调用 &lt;c6&gt;getArea&lt;/c6&gt; 将无法编译，因为编译器不理解 &lt;c9&gt;other&lt;/c9&gt; 实际上是 &lt;c10&gt;RectanglePlus&lt;/c10&gt; 的一个实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is either object eligible for garbage collection?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083231Z" creationid="pingfangx" creationdate="20180705T083231Z">
        <seg>这两个对象是否有资格进行垃圾回收</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is it what you predicted?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091158Z" creationid="pingfangx" creationdate="20180521T091156Z">
        <seg>这是你预测的吗？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is the following interface valid?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074539Z" creationid="pingfangx" creationdate="20190102T074539Z">
        <seg>以下接口是否有效？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is there a term</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020957Z" creationid="pingfangx" creationdate="20190102T020941Z">
        <seg>Is there a term</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also compares the &lt;c1&gt;String&lt;/c1&gt; and &lt;c2&gt;StringBuilder&lt;/c2&gt; classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024754Z" creationid="pingfangx" creationdate="20190103T024754Z">
        <seg>它还比较 &lt;c1&gt;String&lt;/c1&gt; 和 &lt;c2&gt;StringBuilder&lt;/c2&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also works with &lt;i8&gt;enumerated types&lt;/i8&gt; (discussed in &lt;a9&gt;Enum Types&lt;/a9&gt;), the &lt;a10&gt;&lt;c11&gt;String&lt;/c11&gt;&lt;/a10&gt; class, and a few special classes that wrap certain primitive types: &lt;a12&gt;&lt;c13&gt;Character&lt;/c13&gt;&lt;/a12&gt;, &lt;a14&gt;&lt;c15&gt;Byte&lt;/c15&gt;&lt;/a14&gt;, &lt;a16&gt;&lt;c17&gt;Short&lt;/c17&gt;&lt;/a16&gt;, and &lt;a18&gt;&lt;c19&gt;Integer&lt;/c19&gt;&lt;/a18&gt; (discussed in &lt;a20&gt;Numbers and Strings&lt;/a20&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081929Z" creationid="pingfangx" creationdate="20180521T081552Z">
        <seg>它也适用于 &lt;i8&gt;enumerated types&lt;/i8&gt;(在 &lt;a9&gt;Enum Types&lt;/a9&gt; 中讨论)，&lt;a10&gt;&lt;c11&gt;String&lt;/c11&gt;&lt;/a10&gt; 类以及一些包装某些原始类型的特殊类：&lt;a12&gt;&lt;c13&gt;Character&lt;/c13&gt;&lt;/a12&gt;，&lt;a14&gt;&lt;c15&gt;Byte&lt;/c15&gt;&lt;/a14&gt;，&lt;a16&gt;&lt;c17&gt;Short&lt;/c17&gt;&lt;/a16&gt; 和 &lt;a18&gt;&lt;c19&gt;Integer&lt;/c19&gt;&lt;/a18&gt;(在 &lt;a20&gt;Numbers and Strings&lt;/a20&gt; 中讨论)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It automatically creates the constants that are defined at the beginning of the enum body.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015917Z" creationid="pingfangx" creationdate="20190102T015917Z">
        <seg>它会自动创建在枚举主体开头定义的常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can also be used directly in an expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062306Z" creationid="pingfangx" creationdate="20180601T062306Z">
        <seg>它也可以直接在表达式中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can be called like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033226Z" creationid="pingfangx" creationdate="20180601T033226Z">
        <seg>它可以这样调用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can be fixed by adding the &lt;c2&gt;@Repeatable&lt;/c2&gt; meta-annotation and defining a container annotation type:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041745Z" creationid="pingfangx" creationdate="20190102T041745Z">
        <seg>可以通过添加 &lt;c2&gt;@Repeatable&lt;/c2&gt; 元注解并定义容器注解类型来修复它：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It cannot be the same as the name of another parameter for the same method or constructor, and it cannot be the name of a local variable within the method or constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033457Z" creationid="pingfangx" creationdate="20180601T033457Z">
        <seg>它不能与同一方法或构造函数的另一个参数的名称相同，也不能是方法或构造函数内的局部变量的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It contains mathematical functions to complement the operators built into the language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024956Z" creationid="pingfangx" creationdate="20190103T024956Z">
        <seg>它包含数学函数，以补充语言中内置的运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It contains only those components of a class declaration that are required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030313Z" creationid="pingfangx" creationdate="20180525T030313Z">
        <seg>它仅包含需要的类声明的组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It covers source code comments, the &lt;c3&gt;HelloWorldApp&lt;/c3&gt; class definition block, and the &lt;c4&gt;main&lt;/c4&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032505Z" creationid="pingfangx" creationdate="20180518T032505Z">
        <seg>它涵盖了源代码注释，&lt;c3&gt;HelloWorldApp&lt;/c3&gt; 类定义块和 &lt;c4&gt;main&lt;/c4&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It covers the decisions-making, looping, and branching statements that enable your programs to conditionally execute particular blocks of code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072835Z" creationid="pingfangx" creationdate="20180518T072835Z">
        <seg>它涵盖了条件，循环和分支语句，使您的程序能够有条件地执行特定的代码块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It defines the local class &lt;c2&gt;PhoneNumber&lt;/c2&gt; in the method &lt;c3&gt;validatePhoneNumber&lt;/c3&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122438Z" creationid="pingfangx" creationdate="20180705T122438Z">
        <seg>它在方法 &lt;c3&gt;validatePhoneNumber&lt;/c3&gt; 中定义了局部类 &lt;c2&gt;PhoneNumber&lt;/c2&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It discusses both the Java programming language and platform, providing a broad overview of what this technology can do and how it will make your life easier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032220Z" creationid="pingfangx" creationdate="20180518T032220Z">
        <seg>它讨论了 Java 编程语言和平台，全面概述了这项技术可以做什么以及它如何让你的生活更轻松。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It displays the sum of the arguments, using exactly two digits to the right of the decimal point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041644Z" creationid="pingfangx" creationdate="20190103T041644Z">
        <seg>它保留两位小数显示参数的总和。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It does not call the method that is defined by the variable's type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094109Z" creationid="pingfangx" creationdate="20190102T094050Z">
        <seg>它不会调用由变量类型定义的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It does not include the space after car.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085836Z" creationid="pingfangx" creationdate="20190103T085836Z">
        <seg>它不包括 car 后的空间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It does not need to contain a &lt;c1&gt;return&lt;/c1&gt; statement, but it may do so.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091255Z" creationid="pingfangx" creationdate="20180601T091255Z">
        <seg>它不需要包含 &lt;c1&gt;return&lt;/c1&gt; 语句，但可以这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It follows that you can only use lambda expressions in situations in which the Java compiler can determine a target type:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081857Z" creationid="pingfangx" creationdate="20181228T081857Z">
        <seg>因此，您只能在 Java 编译器可以确定目标类型的情况下使用 lambda 表达式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has a minimum value of -128 and a maximum value of 127 (inclusive).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080253Z" creationid="pingfangx" creationdate="20180518T080253Z">
        <seg>它的最小值为-128，最大值为 127(包括)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080437Z" creationid="pingfangx" creationdate="20180518T080437Z">
        <seg>它的最小值为-32,768，最大值为 32,767(包括)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has a minimum value of &lt;c2&gt;'\u0000'&lt;/c2&gt; (or 0) and a maximum value of &lt;c3&gt;'\uffff'&lt;/c3&gt; (or 65,535 inclusive).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081927Z" creationid="pingfangx" creationdate="20180518T081927Z">
        <seg>它的最小值为 &lt;c2&gt;'\u0000'&lt;/c2&gt;(或 0)，最大值为 &lt;c3&gt;'\uffff'&lt;/c3&gt;(或 65,535)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has two forms, one of which was designed for looping through collections and arrays.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090955Z" creationid="pingfangx" creationdate="20180521T090955Z">
        <seg>它有两种形式，其中一种是为循环集合和数组而设计的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It improves upon this approach with local and anonymous classes, and then finishes with an efficient and concise approach using lambda expressions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085555Z" creationid="pingfangx" creationdate="20180706T085555Z">
        <seg>它使用局部和匿名类改进了这种方法，然后使用 lambda 表达式以高效和简洁的方法完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It intentionally focuses on the basics, showing how even a simple class can cleanly model state and behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042934Z" creationid="pingfangx" creationdate="20180518T042934Z">
        <seg>它故意专注于基础知识，展示一个简单的类甚至可以干净地为状态和行为建模。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It invokes the &lt;c1&gt;String&lt;/c1&gt; method &lt;c2&gt;charAt(i)&lt;/c2&gt;, which returns the i&lt;s3&gt;th&lt;/s3&gt; character in the string, counting from 0.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064004Z" creationid="pingfangx" creationdate="20190103T063848Z">
        <seg>它调用 &lt;c1&gt;String&lt;/c1&gt; 方法 &lt;c2&gt;charAt(i)&lt;/c2&gt;，它返回字符串中的第 i 个字符，从 0 开始计数。&lt;s3&gt;&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is also possible to define your own annotation type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024055Z" creationid="pingfangx" creationdate="20190102T024055Z">
        <seg>也可以定义自己的注解类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is also possible to restrict where an annotation type can be used by using the &lt;c2&gt;@Target&lt;/c2&gt; meta-annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041439Z" creationid="pingfangx" creationdate="20190102T041439Z">
        <seg>也可以通过使用 &lt;c2&gt;@Target&lt;/c2&gt; 元注解来限制可以使用注解类型的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is also possible to use multiple annotations on the same declaration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024003Z" creationid="pingfangx" creationdate="20190102T024003Z">
        <seg>也可以在同一声明上使用多个注解：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is called &lt;i1&gt;constructor chaining&lt;/i1&gt;, and you need to be aware of it when there is a long line of class descent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095900Z" creationid="pingfangx" creationdate="20190102T095900Z">
        <seg>它被称为 &lt;i1&gt;constructor chaining&lt;/i1&gt;，当有很长的类下降时你需要注意它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is cumbersome to use a new name for each methodfor example, &lt;c0&gt;drawString&lt;/c0&gt;, &lt;c1&gt;drawInteger&lt;/c1&gt;, &lt;c2&gt;drawFloat&lt;/c2&gt;, and so on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065350Z" creationid="pingfangx" creationdate="20180525T065350Z">
        <seg>使用每个方法的新名称很麻烦，例如 &lt;c0&gt;drawString&lt;/c0&gt;，&lt;c1&gt;drawInteger&lt;/c1&gt;，&lt;c2&gt;drawFloat&lt;/c2&gt; 等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is grouped into libraries of related classes and interfaces; these libraries are known as &lt;e0&gt;packages&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033405Z" creationid="pingfangx" creationdate="20180518T033405Z">
        <seg>它被分组到相关类和接口的库中;这些库被称为 &lt;e0&gt;packages&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important to design your annotation type carefully to ensure that the programmer &lt;e3&gt;using&lt;/e3&gt; the annotation finds it to be as flexible and powerful as possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041456Z" creationid="pingfangx" creationdate="20190102T041456Z">
        <seg>仔细设计注解类型非常重要，以确保程序员 &lt;e3&gt;using&lt;/e3&gt; 注解发现它尽可能灵活和强大。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is now possible to use an annotation zero times, once, or, if the annotation's type is marked as &lt;c1&gt;@Repeatable&lt;/c1&gt;, more than once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041432Z" creationid="pingfangx" creationdate="20190102T041432Z">
        <seg>现在可以使用注解零次，一次，或者，如果注解的类型标记为 &lt;c1&gt;@Repeatable&lt;/c1&gt;，则不止一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is only necessary that they be declared and initialized before they are used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065952Z" creationid="pingfangx" creationdate="20180705T065952Z">
        <seg>唯一的必要是必须在使用它们之前声明和初始化它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible, however, to define a class that does not implement all of the interface's methods, provided that the class is declared to be &lt;c3&gt;abstract&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022431Z" creationid="pingfangx" creationdate="20190103T022431Z">
        <seg>但是，如果声明该类声明为 &lt;c3&gt;abstract&lt;/c3&gt;，则可以定义一个不实现所有接口方法的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is recommended that you use the upper case letter &lt;c4&gt;L&lt;/c4&gt; because the lower case letter &lt;c5&gt;l&lt;/c5&gt; is hard to distinguish from the digit &lt;c6&gt;1&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082628Z" creationid="pingfangx" creationdate="20180518T082628Z">
        <seg>建议您使用大写字母 &lt;c4&gt;L&lt;/c4&gt;，因为小写字母 &lt;c5&gt;l&lt;/c5&gt; 难以与数字 &lt;c6&gt;1&lt;/c6&gt; 区分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It makes the code simpler and easier to read:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082802Z" creationid="pingfangx" creationdate="20190103T082802Z">
        <seg>它使代码更简单，更易于阅读：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It offers a wide array of useful classes ready for use in your own applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033637Z" creationid="pingfangx" creationdate="20180518T033637Z">
        <seg>它提供了大量有用的类，可以在您自己的应用程序中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It presents the most commonly-used operators first, and the less commonly-used operators last.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072630Z" creationid="pingfangx" creationdate="20180518T072615Z">
        <seg>它首先介绍最常用的运算符，最后是不常用的运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It provides separate instructions for the NetBeans™ integrated development environment (NetBeans IDE), Microsoft Windows, Solaris™ Operating System (Solaris OS), Linux, and Mac users.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032428Z" creationid="pingfangx" creationdate="20180518T032428Z">
        <seg>它为 NetBeans™集成开发环境(NetBeans IDE)，Microsoft Windows，Solaris™操作系统(Solaris OS)，Linux 和 Mac 用户提供了单独的说明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It redefines the default implementation of the &lt;c1&gt;TextField&lt;/c1&gt; class with an anonymous class by overriding the &lt;c2&gt;replaceText&lt;/c2&gt; and &lt;c3&gt;replaceSelection&lt;/c3&gt; methods inherited from the &lt;c4&gt;TextInputControl&lt;/c4&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065949Z" creationid="pingfangx" creationdate="20180706T065949Z">
        <seg>它通过使用匿名类重写从 &lt;c4&gt;TextInputControl&lt;/c4&gt; 继承的 &lt;c2&gt;replaceText&lt;/c2&gt; 和 &lt;c3&gt;replaceSelection&lt;/c3&gt; 方法，重新定义了&lt;c1&gt;TextField&lt;/c1&gt; 类的默认实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It spans everything from basic objects, to networking and security, to XML generation and database access, and more.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033644Z" creationid="pingfangx" creationdate="20180518T033644Z">
        <seg>它涵盖了从基本对象到网络和安全，到 XML 生成和数据库访问等等的所有内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It tells your program to execute a certain section of code &lt;i1&gt;only if&lt;/i1&gt; a particular test evaluates to &lt;c2&gt;true&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081436Z" creationid="pingfangx" creationdate="20180521T080843Z">
        <seg>它告诉程序&lt;i1&gt;只在&lt;/i1&gt;特定的测试结果为 &lt;c2&gt;true&lt;/c2&gt; 时才会执行某段代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It would be simpler for your developers if they could build a &lt;c0&gt;Comparator&lt;/c0&gt; instance from a series of &lt;c1&gt;Comparator&lt;/c1&gt; instances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071905Z" creationid="pingfangx" creationdate="20190102T071905Z">
        <seg>如果他们可以从一系列 &lt;c1&gt;Comparator&lt;/c1&gt; 实例中构建 &lt;c0&gt;Comparator&lt;/c0&gt; 实例，那么对于您的开发人员来说会更简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It would be simpler for your developers if they could create a &lt;c0&gt;Comparator&lt;/c0&gt; instance by invoking the method &lt;c1&gt;Card.getRank&lt;/c1&gt; only.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071343Z" creationid="pingfangx" creationdate="20190102T071343Z">
        <seg>如果他们可以通过仅调用方法 &lt;c1&gt;Card.getRank&lt;/c1&gt; 来创建 &lt;c0&gt;Comparator&lt;/c0&gt; 实例，那么对于开发人员来说会更简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's a functional interface because it contains only one abstract method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092806Z" creationid="pingfangx" creationdate="20180706T092806Z">
        <seg>它是一个函数式接口，因为它只包含一个抽象方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's a shortcut to creating an array manually (the previous method could have used varargs rather than an array).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032816Z" creationid="pingfangx" creationdate="20180601T032816Z">
        <seg>这是手动创建数组的快捷方式(之前的方法可以使用可变参数而不是数组)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's not always necessary to assign a value when a field is declared.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082101Z" creationid="pingfangx" creationdate="20180518T082101Z">
        <seg>当声明一个字段时，并不总是需要赋值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's time to write your first application!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034259Z" creationid="pingfangx" creationdate="20180518T034259Z">
        <seg>现在是编写第一个应用程序的时候了！</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Iterable&lt;X&gt; source,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100547Z" creationid="pingfangx" creationdate="20180706T100547Z">
        <seg>Iterable&lt;X&gt; source,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Iterators are used to step through a data structure and typically have methods to test for the last element, retrieve the current element, and move to the next element.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100809Z" creationid="pingfangx" creationdate="20180705T100809Z">
        <seg>迭代器用于逐步执行数据结构，并且通常具有测试最后一个元素，检索当前元素以及移动到下一个元素的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its body calls the method &lt;c0&gt;Person.compareByAge&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084256Z" creationid="pingfangx" creationdate="20181228T084256Z">
        <seg>它的主体调用方法 &lt;c0&gt;Person.compareByAge&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its formal parameter list is copied from &lt;c0&gt;Comparator&lt;Person&gt;.compare&lt;/c0&gt;, which is &lt;c1&gt;(Person, Person)&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084250Z" creationid="pingfangx" creationdate="20181228T084250Z">
        <seg>它的形式参数列表是从 &lt;c0&gt;Comparator&lt;Person&gt;.compare&lt;/c0&gt; 复制的，它是 &lt;c1&gt;(Person, Person)&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its object orientation, its JavaBeans™ component architecture, and its wide-ranging, easily extendible API let you reuse existing, tested code and introduce fewer bugs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033808Z" creationid="pingfangx" creationdate="20180518T033808Z">
        <seg>它的面向对象，JavaBeans™组件体系结构以及范围广泛且易于扩展的 API 使您可以重复使用现有的经过测试的代码并引入更少的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its packages represent the tasks most commonly associated with general-purpose programming.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064442Z" creationid="pingfangx" creationdate="20180518T064442Z">
        <seg>它的软件包代表了通常与通用编程相关的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its range of values is beyond the scope of this discussion, but is specified in the &lt;a2&gt;Floating-Point Types, Formats, and Values&lt;/a2&gt; section of the Java Language Specification.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081610Z" creationid="pingfangx" creationdate="20180518T081610Z">
        <seg>其值范围超出了本讨论的范围，但在 Java 语言规范的 &lt;a2&gt;Floating-Point Types, Formats, and Values&lt;/a2&gt; 部分中进行了指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its subclasses (which include &lt;c2&gt;HashMap&lt;/c2&gt;, &lt;c3&gt;TreeMap&lt;/c3&gt;, and &lt;c4&gt;ConcurrentHashMap&lt;/c4&gt;) share many methods (including &lt;c5&gt;get&lt;/c5&gt;, &lt;c6&gt;put&lt;/c6&gt;, &lt;c7&gt;isEmpty&lt;/c7&gt;, &lt;c8&gt;containsKey&lt;/c8&gt;, and &lt;c9&gt;containsValue&lt;/c9&gt;) that &lt;c10&gt;AbstractMap&lt;/c10&gt; defines.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021704Z" creationid="pingfangx" creationdate="20190103T021704Z">
        <seg>它的子类(包括 &lt;c2&gt;HashMap&lt;/c2&gt;，&lt;c3&gt;TreeMap&lt;/c3&gt; 和 &lt;c4&gt;ConcurrentHashMap&lt;/c4&gt;)共享许多方法(包括 &lt;c5&gt;get&lt;/c5&gt;，&lt;c6&gt;put&lt;/c6&gt;，&lt;c7&gt;isEmpty&lt;/c7&gt;，&lt;c8&gt;containsKey&lt;/c8&gt;和&lt;c9&gt;containsValue&lt;/c9&gt;)，这些方法由 &lt;c10&gt;AbstractMap&lt;/c10&gt; 定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its syntax can be expressed as:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082834Z" creationid="pingfangx" creationdate="20180521T082834Z">
        <seg>其语法可以表示为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JACK   (11, "Jack" ),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065245Z" creationid="pingfangx" creationdate="20190102T065245Z">
        <seg>JACK   (11, "Jack" ),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JDK 8 API Documentation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030650Z" creationid="pingfangx" creationdate="20180518T030650Z">
        <seg>JDK 8 API 文档</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JUPITER (1.9e+27,   7.1492e7),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020020Z" creationid="pingfangx" creationdate="20190102T020020Z">
        <seg>JUPITER (1.9e+27,   7.1492e7),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java Certification and Training</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030657Z" creationid="pingfangx" creationdate="20180518T030657Z">
        <seg>Java 认证和培训</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java Language Keywords</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075220Z" creationid="pingfangx" creationdate="20180518T075220Z">
        <seg>Java 语言关键字</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java Language Keywords (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075214Z" creationid="pingfangx" creationdate="20180518T075214Z">
        <seg>Java Language Keywords (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java SE 8 Developer Guides</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030647Z" creationid="pingfangx" creationdate="20180518T030647Z">
        <seg>Java SE 8 开发人员指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java SE provides methods to perform some of the most common manipulations related to arrays.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043130Z" creationid="pingfangx" creationdate="20180521T043130Z">
        <seg>Java SE 提供了执行与数组相关的一些最常见操作的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java programming language enum types are much more powerful than their counterparts in other languages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015405Z" creationid="pingfangx" creationdate="20190102T015359Z">
        <seg>Java 编程语言枚举类型比其他语言中的对应类型强大得多。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java requires that the constants be defined first, prior to any fields or methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015813Z" creationid="pingfangx" creationdate="20190102T015813Z">
        <seg>Java 要求在任何字段或方法之前首先定义常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java technology is both a programming language and a platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032823Z" creationid="pingfangx" creationdate="20180518T032823Z">
        <seg>Java 技术既是一种编程语言，也是一个平台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java trail</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040611Z" creationid="pingfangx" creationdate="20180518T040611Z">
        <seg>Java 路径</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>KING   (13, "King" ),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065247Z" creationid="pingfangx" creationdate="20190102T065247Z">
        <seg>KING   (13, "King" ),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Keep in mind that you must use "&lt;c0&gt;==&lt;/c0&gt;", not "&lt;c1&gt;=&lt;/c1&gt;", when testing if two primitive values are equal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065938Z" creationid="pingfangx" creationdate="20180521T065938Z">
        <seg>请记住，在测试两个原始值是否相等时，您必须使用 "&lt;c0&gt;==&lt;/c0&gt;"，而不是 "&lt;c1&gt;=&lt;/c1&gt;"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Kind</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084359Z" creationid="pingfangx" creationdate="20181228T084359Z">
        <seg>类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Kinds of Method References</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084311Z" creationid="pingfangx" creationdate="20181228T084311Z">
        <seg>方法引用类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Kinds of method references</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084349Z" creationid="pingfangx" creationdate="20181228T084349Z">
        <seg>方法引用类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lambda Expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092237Z" creationid="pingfangx" creationdate="20180521T092237Z">
        <seg>Lambda 表达式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lambda Expressions (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T082907Z" creationid="pingfangx" creationdate="20180706T082907Z">
        <seg>Lambda Expressions (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lambda Expressions in GUI Applications</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083852Z" creationid="pingfangx" creationdate="20180706T083852Z">
        <seg>GUI 应用程序中的 Lambda 表达式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lambda expression bodies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081933Z" creationid="pingfangx" creationdate="20181228T081933Z">
        <seg>Lambda 表达式主体</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lambda expressions are lexically scoped.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080330Z" creationid="pingfangx" creationdate="20181228T075850Z">
        <seg>Lambda 表达式是词法（lexically）范围的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lambda expressions enable you to do this, to treat functionality as method argument, or code as data.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083342Z" creationid="pingfangx" creationdate="20180706T083317Z">
        <seg>Lambda 表达式使您可以执行此操作，将函数视为方法参数，或将代码视为数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lambda expressions let you express instances of single-method classes more compactly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083714Z" creationid="pingfangx" creationdate="20180706T083714Z">
        <seg>Lambda 表达式允许您更紧凑地表达单方法的类的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LambdaScopeTest st = new LambdaScopeTest();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080004Z" creationid="pingfangx" creationdate="20181228T080004Z">
        <seg>LambdaScopeTest st = new LambdaScopeTest();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LambdaScopeTest.FirstLevel fl = st.new FirstLevel();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080005Z" creationid="pingfangx" creationdate="20181228T080005Z">
        <seg>LambdaScopeTest.FirstLevel fl = st.new FirstLevel();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LambdaScopeTest.this.x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080002Z" creationid="pingfangx" creationdate="20181228T080002Z">
        <seg>LambdaScopeTest.this.x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Language Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T071945Z" creationid="pingfangx" creationdate="20180518T071945Z">
        <seg>语言基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Last Updated &lt;a0&gt;7/19/2016&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030538Z" creationid="pingfangx" creationdate="20180518T030538Z">
        <seg>最近更新 &lt;a0&gt;7/19/2016&lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Later, the program uses similar code to display information about &lt;t0&gt;rectTwo&lt;/t0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T074228Z" creationid="pingfangx" creationdate="20180601T074228Z">
        <seg>稍后，该程序使用类似的代码来显示有关 &lt;t0&gt;rectTwo&lt;/t0&gt; 的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Learning the Java Language: End of Trail</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093048Z" creationid="pingfangx" creationdate="20180521T093048Z">
        <seg>学习 Java 语言：路径结束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Learning the Java Language: End of Trail (The Java™ Tutorials)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093040Z" creationid="pingfangx" creationdate="20180521T093040Z">
        <seg>Learning the Java Language: End of Trail (The Java™ Tutorials)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Learning the operators of the Java programming language is a good place to start.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062845Z" creationid="pingfangx" creationdate="20180521T062252Z">
        <seg>学习 Java 编程语言的运算符是一个很好的开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Left-justified..</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033548Z" creationid="pingfangx" creationdate="20190103T033548Z">
        <seg>左对齐..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Length and Capacity</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080829Z" creationid="pingfangx" creationdate="20190103T080829Z">
        <seg>长度和容量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Length and Capacity Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081400Z" creationid="pingfangx" creationdate="20190103T081400Z">
        <seg>长度和容量方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: A Closer Look at the "Hello World!" Application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035237Z" creationid="pingfangx" creationdate="20180518T035237Z">
        <seg>课程：仔细观察 "Hello World！" 应用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: A Closer Look at the "Hello World!" Application (The Java™ Tutorials &gt; Getting Started)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035229Z" creationid="pingfangx" creationdate="20180518T035229Z">
        <seg>Lesson: A Closer Look at the "Hello World!" Application (The Java™ Tutorials &gt; Getting Started)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023256Z" creationid="pingfangx" creationdate="20190102T023256Z">
        <seg>课程：注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Annotations (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023232Z" creationid="pingfangx" creationdate="20190102T023232Z">
        <seg>Lesson: Annotations (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Classes and Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022913Z" creationid="pingfangx" creationdate="20180525T022913Z">
        <seg>课程：类和对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Classes and Objects (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022831Z" creationid="pingfangx" creationdate="20180525T022831Z">
        <seg>Lesson: Classes and Objects (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Interfaces and Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042714Z" creationid="pingfangx" creationdate="20190102T042714Z">
        <seg>课程：接口和继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Interfaces and Inheritance (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042656Z" creationid="pingfangx" creationdate="20190102T042656Z">
        <seg>Lesson: Interfaces and Inheritance (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Language Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072508Z" creationid="pingfangx" creationdate="20180518T072508Z">
        <seg>课程：语言基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Language Basics (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T071942Z" creationid="pingfangx" creationdate="20180518T071942Z">
        <seg>Lesson: Language Basics (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Numbers and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024426Z" creationid="pingfangx" creationdate="20190103T024426Z">
        <seg>课程：数字和字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Numbers and Strings (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024410Z" creationid="pingfangx" creationdate="20190103T024410Z">
        <seg>Lesson: Numbers and Strings (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Object-Oriented Programming Concepts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042808Z" creationid="pingfangx" creationdate="20180518T042808Z">
        <seg>课程：面向对象的编程概念</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: Object-Oriented Programming Concepts (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042713Z" creationid="pingfangx" creationdate="20180518T042713Z">
        <seg>Lesson: Object-Oriented Programming Concepts (The Java™ Tutorials &gt; Learning the Java Language)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: The "Hello World!" Application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034035Z" creationid="pingfangx" creationdate="20180518T034035Z">
        <seg>课程："Hello World！" 应用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: The "Hello World!" Application (The Java™ Tutorials &gt; Getting Started)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033950Z" creationid="pingfangx" creationdate="20180518T033950Z">
        <seg>Lesson: The "Hello World!" Application (The Java™ Tutorials &gt; Getting Started)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: The Java Technology Phenomenon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032716Z" creationid="pingfangx" creationdate="20180518T032716Z">
        <seg>课程：Java 技术现象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lesson: The Java Technology Phenomenon (The Java™ Tutorials &gt; Getting Started)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032633Z" creationid="pingfangx" creationdate="20180518T032633Z">
        <seg>Lesson: The Java Technology Phenomenon (The Java™ Tutorials &gt; Getting Started)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let the method be invoked with these arguments:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034349Z" creationid="pingfangx" creationdate="20180601T034349Z">
        <seg>用这些参数调用该方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at a collection of classes and see how access levels affect visibility.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041336Z" creationid="pingfangx" creationdate="20180607T041336Z">
        <seg>我们来看看一组类，并了解访问级别如何影响可视性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like a nested class, a declaration of a type (such as a variable) in an anonymous class shadows any other declarations in the enclosing scope that have the same name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065416Z" creationid="pingfangx" creationdate="20180706T065416Z">
        <seg>与嵌套类一样，匿名类中的类型(例如变量)的声明，会遮蔽封闭范围中具有相同名称的任何其他声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like declarations for variables of other types, an array declaration has two components: the array's type and the array's name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T033249Z" creationid="pingfangx" creationdate="20180521T033249Z">
        <seg>像其他类型变量的声明一样，数组声明包含两个组件：数组的类型和数组的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like e, but not intended to be used by subclasses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021020Z" creationid="pingfangx" creationdate="20190102T021020Z">
        <seg>Like e, but not intended to be used by subclasses.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like local and anonymous classes, lambda expressions can &lt;a0&gt;capture variables&lt;/a0&gt;; they have the same access to local variables of the enclosing scope.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075745Z" creationid="pingfangx" creationdate="20181228T075745Z">
        <seg>像局部和匿名类一样，lambda 表达式可以 &lt;a0&gt;捕获变量（capture variables）&lt;/a0&gt;;它们对封闭范围的局部变量具有相同的访问权限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like local classes, anonymous classes can &lt;a0&gt;capture variables&lt;/a0&gt;; they have the same access to local variables of the enclosing scope:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T064950Z" creationid="pingfangx" creationdate="20180706T064950Z">
        <seg>像局部类一样，匿名类可以 &lt;a0&gt;capture variables（捕获变量）&lt;/a0&gt;;它们对封闭范围的局部变量具有相同的访问权限：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like static methods in classes, you specify that a method definition in an interface is a static method with the &lt;c0&gt;static&lt;/c0&gt; keyword at the beginning of the method signature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065025Z" creationid="pingfangx" creationdate="20190102T065025Z">
        <seg>与类中的静态方法一样，在方法签名开头使用 &lt;c0&gt;static&lt;/c0&gt; 关键字，以指定接口中的方法定义是静态方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List&lt;Card&gt; getCards();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065305Z" creationid="pingfangx" creationdate="20190102T065305Z">
        <seg>List&lt;Card&gt; getCards();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List&lt;Double&gt; ld = new ArrayList&lt;&gt;();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084609Z" creationid="pingfangx" creationdate="20190103T084609Z">
        <seg>List&lt;Double&gt; ld = new ArrayList&lt;&gt;();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List&lt;Integer&gt; li = new ArrayList&lt;&gt;();
for (int i = 1; i &lt; 50; i += 2)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083933Z" creationid="pingfangx" creationdate="20190103T083933Z">
        <seg>List&lt;Integer&gt; li = new ArrayList&lt;&gt;();
for (int i = 1; i &lt; 50; i += 2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List&lt;Person&gt; roster,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094105Z" creationid="pingfangx" creationdate="20180706T094105Z">
        <seg>List&lt;Person&gt; roster,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List&lt;Person&gt; roster, CheckPerson tester) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085931Z" creationid="pingfangx" creationdate="20180706T085931Z">
        <seg>List&lt;Person&gt; roster, CheckPerson tester) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List&lt;Person&gt; roster, Predicate&lt;Person&gt; tester) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093434Z" creationid="pingfangx" creationdate="20180706T093434Z">
        <seg>List&lt;Person&gt; roster, Predicate&lt;Person&gt; tester) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List&lt;Person&gt; roster, int low, int high) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085840Z" creationid="pingfangx" creationdate="20180706T085840Z">
        <seg>List&lt;Person&gt; roster, int low, int high) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Literals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082251Z" creationid="pingfangx" creationdate="20180518T082251Z">
        <seg>Literals（字面量）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Literals of types &lt;c0&gt;char&lt;/c0&gt; and &lt;c1&gt;String&lt;/c1&gt; may contain any Unicode (UTF-16) characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T083159Z" creationid="pingfangx" creationdate="20180518T083159Z">
        <seg>&lt;c0&gt;char&lt;/c0&gt; 和 &lt;c1&gt;String&lt;/c1&gt; 类型的字面量可以包含任何 Unicode(UTF-16)字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Load the page in your browser and bookmark it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064545Z" creationid="pingfangx" creationdate="20180518T064545Z">
        <seg>在浏览器中加载页面并为其添加书签。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092227Z" creationid="pingfangx" creationdate="20180521T092227Z">
        <seg>局部类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101510Z" creationid="pingfangx" creationdate="20180705T101510Z">
        <seg>Local Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local Classes Are Similar To Inner Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121609Z" creationid="pingfangx" creationdate="20180705T121609Z">
        <seg>局部类与内部类相似</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local and Anonymous Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101326Z" creationid="pingfangx" creationdate="20180705T101326Z">
        <seg>局部类和匿名类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065551Z" creationid="pingfangx" creationdate="20180706T065551Z">
        <seg>局部类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local classes are classes that are defined in a &lt;e0&gt;block&lt;/e0&gt;, which is a group of zero or more statements between balanced braces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121159Z" creationid="pingfangx" creationdate="20180705T121159Z">
        <seg>局部类是在 &lt;e0&gt;块&lt;/e0&gt; 中定义的类，它是平衡大括号之间的一组零个或多个语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local classes are non-static because they have access to instance members of the enclosing block.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T142950Z" creationid="pingfangx" creationdate="20180705T142950Z">
        <seg>局部类是非静态的，因为它们可以访问封闭块的实例成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local classes are similar to inner classes because they cannot define or declare any static members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T141327Z" creationid="pingfangx" creationdate="20180705T141327Z">
        <seg>局部类与内部类类似，因为它们无法定义或声明任何静态成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local classes in static methods, such as the class &lt;c0&gt;PhoneNumber&lt;/c0&gt;, which is defined in the static method &lt;c1&gt;validatePhoneNumber&lt;/c1&gt;, can only refer to static members of the enclosing class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T141622Z" creationid="pingfangx" creationdate="20180705T141622Z">
        <seg>静态方法中的局部类（例如类 &lt;c0&gt;PhoneNumber&lt;/c0&gt;）在静态方法 &lt;c1&gt;validatePhoneNumber&lt;/c1&gt; 中定义，只能引用封闭类的静态成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local classes, anonymous classes, and lambda expressions also impart these advantages; however, they are intended to be used for more specific situations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013306Z" creationid="pingfangx" creationdate="20190102T013306Z">
        <seg>局部类，匿名类和 lambda 表达式也具有这些优点;但是，它们旨在用于更具体的情况：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local variables are slightly different; the compiler never assigns a default value to an uninitialized local variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082226Z" creationid="pingfangx" creationdate="20180518T082226Z">
        <seg>局部变量略有不同;编译器从不将默认值分配给未初始化的局部变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local variables store temporary state inside a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061527Z" creationid="pingfangx" creationdate="20180521T061527Z">
        <seg>局部变量在方法内存储临时状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LocalDate birthday;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085437Z" creationid="pingfangx" creationdate="20180706T085437Z">
        <seg>LocalDate birthday;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LocalDate currentDate = LocalDate.from(dateAndTime);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061156Z" creationid="pingfangx" creationdate="20190102T061156Z">
        <seg>LocalDate currentDate = LocalDate.from(dateAndTime);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LocalDate dateToSet = LocalDate.of(day, month, year);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061159Z" creationid="pingfangx" creationdate="20190102T061159Z">
        <seg>LocalDate dateToSet = LocalDate.of(day, month, year);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LocalDateTime getLocalDateTime();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061244Z" creationid="pingfangx" creationdate="20190102T061244Z">
        <seg>LocalDateTime getLocalDateTime();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LocalDateTime getLocalDateTime();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060826Z" creationid="pingfangx" creationdate="20190102T060826Z">
        <seg>LocalDateTime getLocalDateTime();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LocalTime currentTime = LocalTime.from(dateAndTime);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061200Z" creationid="pingfangx" creationdate="20190102T061200Z">
        <seg>LocalTime currentTime = LocalTime.from(dateAndTime);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LocalTime timeToSet = LocalTime.of(hour, minute, second);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061156Z" creationid="pingfangx" creationdate="20190102T061156Z">
        <seg>LocalTime timeToSet = LocalTime.of(hour, minute, second);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logical complement operator;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072056Z" creationid="pingfangx" creationdate="20180521T071551Z">
        <seg>逻辑补码运算符；</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logical complement operator; inverts the value of a boolean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065151Z" creationid="pingfangx" creationdate="20180521T065151Z">
        <seg>逻辑补码运算符；颠倒布尔值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Long</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084703Z" creationid="pingfangx" creationdate="20190103T084703Z">
        <seg>Long</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Look around right now and you'll find many examples of real-world objects: your dog, your desk, your television set, your bicycle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T060934Z" creationid="pingfangx" creationdate="20180518T060934Z">
        <seg>现在环顾四周，你会发现许多真实世界物体的例子：你的狗，你的桌子，你的电视机，你的自行车。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lower Bounded Wildcards</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092923Z" creationid="pingfangx" creationdate="20180521T092923Z">
        <seg>下限通配符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MALE, FEMALE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085436Z" creationid="pingfangx" creationdate="20180706T085436Z">
        <seg>MALE, FEMALE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MARS    (6.421e+23, 3.3972e6),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020019Z" creationid="pingfangx" creationdate="20190102T020019Z">
        <seg>MARS    (6.421e+23, 3.3972e6),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MERCURY (3.303e+23, 2.4397e6),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020018Z" creationid="pingfangx" creationdate="20190102T020018Z">
        <seg>MERCURY (3.303e+23, 2.4397e6),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Main Success Scenario</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085219Z" creationid="pingfangx" creationdate="20180706T085219Z">
        <seg>主要成功案例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make a copy of InnerClassDemo.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021119Z" creationid="pingfangx" creationdate="20190102T021106Z">
        <seg>制作 InnerClassDemo 的副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make a copy of the program you created for b.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021147Z" creationid="pingfangx" creationdate="20190102T021147Z">
        <seg>Make a copy of the program you created for b.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure to write down your observations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061219Z" creationid="pingfangx" creationdate="20180518T061219Z">
        <seg>确保写下你的观察结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Managing Source and Class Files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093022Z" creationid="pingfangx" creationdate="20180521T093022Z">
        <seg>管理源文件和类文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Managing memory explicitly is tedious and error-prone.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085330Z" creationid="pingfangx" creationdate="20180601T085330Z">
        <seg>显式管理内存是单调乏味且容易出错的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Manipulating Characters in a String</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092746Z" creationid="pingfangx" creationdate="20180521T092746Z">
        <seg>操纵字符串中的字符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Manipulating Characters in a String (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072047Z" creationid="pingfangx" creationdate="20190103T072047Z">
        <seg>Manipulating Characters in a String (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many annotations replace comments in code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024728Z" creationid="pingfangx" creationdate="20190102T024728Z">
        <seg>许多注解会替换代码中的注释。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many times during the day.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085412Z" creationid="pingfangx" creationdate="20180706T085412Z">
        <seg>每天很多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Map objects to another value as specified by a &lt;c0&gt;Function&lt;/c0&gt; object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074630Z" creationid="pingfangx" creationdate="20181228T074609Z">
        <seg>将对象映射到 &lt;c0&gt;Function&lt;/c0&gt; 对象指定的另一个值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Map&lt;Integer, Deck&gt; deal(int players, int numberOfCards)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065311Z" creationid="pingfangx" creationdate="20190102T065311Z">
        <seg>Map&lt;Integer, Deck&gt; deal(int players, int numberOfCards)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mapping of each of the actions the method processElements performs with the corresponding aggregate operation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074448Z" creationid="pingfangx" creationdate="20181228T074448Z">
        <seg>方法 processElements 执行的每个操作与相应的聚合操作的映射</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maps each filtered object to a value as specified by the &lt;c0&gt;Function&lt;/c0&gt; object &lt;c1&gt;mapper&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074028Z" creationid="pingfangx" creationdate="20181228T073243Z">
        <seg>将每个过滤出的对象映射到由 &lt;c0&gt;Function&lt;/c0&gt; 对象 &lt;c1&gt;mapper&lt;/c1&gt; 指定的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Math.E);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040139Z" creationid="pingfangx" creationdate="20190103T040139Z">
        <seg>Math.E);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Math.PI);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040420Z" creationid="pingfangx" creationdate="20190103T040420Z">
        <seg>Math.PI);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Math.cos(angle);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035249Z" creationid="pingfangx" creationdate="20190103T035249Z">
        <seg>Math.cos(angle);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Math.cos(radians),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040427Z" creationid="pingfangx" creationdate="20190103T040427Z">
        <seg>Math.cos(radians),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Math.sin(radians),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040424Z" creationid="pingfangx" creationdate="20190103T040424Z">
        <seg>Math.sin(radians),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Math.tan(radians),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040429Z" creationid="pingfangx" creationdate="20190103T040429Z">
        <seg>Math.tan(radians),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Math.toDegrees(Math.acos(Math.cos(radians))));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040428Z" creationid="pingfangx" creationdate="20190103T040428Z">
        <seg>Math.toDegrees(Math.acos(Math.cos(radians))));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Math.toDegrees(Math.asin(Math.sin(radians))));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040424Z" creationid="pingfangx" creationdate="20190103T040424Z">
        <seg>Math.toDegrees(Math.asin(Math.sin(radians))));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Math.toDegrees(Math.atan(Math.tan(radians))));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040429Z" creationid="pingfangx" creationdate="20190103T040429Z">
        <seg>Math.toDegrees(Math.atan(Math.tan(radians))));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MaxVariablesDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041511Z" creationid="pingfangx" creationdate="20190103T041511Z">
        <seg>MaxVariablesDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Meal[] value();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041746Z" creationid="pingfangx" creationdate="20190102T041746Z">
        <seg>Meal[] value();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Member variables in a classthese are called &lt;i0&gt;fields&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T062906Z" creationid="pingfangx" creationdate="20180525T062906Z">
        <seg>类中的成员变量这些被称为 &lt;i0&gt;fields（字段）&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030855Z" creationid="pingfangx" creationdate="20190103T030637Z">
        <seg>方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method References</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092243Z" creationid="pingfangx" creationdate="20180521T092243Z">
        <seg>方法引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method References (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082556Z" creationid="pingfangx" creationdate="20181228T082556Z">
        <seg>Method References (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method bodies exist only for default methods and static methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054046Z" creationid="pingfangx" creationdate="20190102T054046Z">
        <seg>方法体仅适用于默认方法和静态方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method invocations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074840Z" creationid="pingfangx" creationdate="20180521T074840Z">
        <seg>方法调用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method or constructor arguments</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081925Z" creationid="pingfangx" creationdate="20181228T081925Z">
        <seg>方法或构造函数参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method references enable you to do this; they are compact, easy-to-read lambda expressions for methods that already have a name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082726Z" creationid="pingfangx" creationdate="20181228T082726Z">
        <seg>方法引用使您可以这样做;对于已经有名称的方法，它们是紧凑的，易于阅读的 lambda 表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods Implemented by all Subclasses of Number</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030623Z" creationid="pingfangx" creationdate="20190103T030623Z">
        <seg>由 Number 的所有子类实现的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods are not required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074756Z" creationid="pingfangx" creationdate="20190102T074756Z">
        <seg>方法不是必需的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods called from constructors should generally be declared final.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104700Z" creationid="pingfangx" creationdate="20190102T104700Z">
        <seg>从构造函数调用的方法通常应该声明为 final。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods for Comparing Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075449Z" creationid="pingfangx" creationdate="20190103T075449Z">
        <seg>比较字符串的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods for the other &lt;c2&gt;Number&lt;/c2&gt; subclasses are similar:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030829Z" creationid="pingfangx" creationdate="20190103T030829Z">
        <seg>其他 &lt;c2&gt;Number&lt;/c2&gt; 子类的方法类似：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods form the object's &lt;i0&gt;interface&lt;/i0&gt; with the outside world; the buttons on the front of your television set, for example, are the interface between you and the electrical wiring on the other side of its plastic casing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063831Z" creationid="pingfangx" creationdate="20180518T063831Z">
        <seg>方法与外界形成对象的 &lt;i0&gt;interface&lt;/i0&gt;;例如，电视机前面的按钮就是您和塑料外壳另一侧电视之间的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods in the &lt;c0&gt;String&lt;/c0&gt; Class for Manipulating Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074017Z" creationid="pingfangx" creationdate="20190103T074017Z">
        <seg>用于操作字符串的 &lt;c0&gt;String&lt;/c0&gt; 类中的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods operate on an object's internal state and serve as the primary mechanism for object-to-object communication.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061603Z" creationid="pingfangx" creationdate="20180518T061603Z">
        <seg>方法对对象的内部状态进行操作，并作为对象到对象通信的主要机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods that are already overridden by other candidates are ignored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091627Z" creationid="pingfangx" creationdate="20190102T091627Z">
        <seg>其他候选项覆盖的方法将被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods used to obtain information about an object are known as &lt;e0&gt;accessor methods&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063618Z" creationid="pingfangx" creationdate="20190103T063618Z">
        <seg>用于获取对象信息的方法称为 &lt;e0&gt;访问器方法（accessor methods）&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Midweek days are so-so.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015357Z" creationid="pingfangx" creationdate="20190102T015357Z">
        <seg>Midweek days are so-so.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MinVariablesDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041821Z" creationid="pingfangx" creationdate="20190103T041821Z">
        <seg>MinVariablesDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041524Z" creationid="pingfangx" creationdate="20180607T040146Z">
        <seg>Modifier</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifiers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101358Z" creationid="pingfangx" creationdate="20180705T101358Z">
        <seg>修饰符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifiers such as &lt;i0&gt;public&lt;/i0&gt;, &lt;i1&gt;private&lt;/i1&gt;, and a number of others that you will encounter later.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030839Z" creationid="pingfangx" creationdate="20180525T030839Z">
        <seg>诸如 &lt;i0&gt;public&lt;/i0&gt;，&lt;i1&gt;private&lt;/i1&gt; 等修饰符以及稍后将遇到的其他许多修饰符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifiers, return types, and parameters will be discussed later in this lesson.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065008Z" creationid="pingfangx" creationdate="20180525T065008Z">
        <seg>修饰符，返回类型和参数将在本课稍后部分讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifierssuch as &lt;c0&gt;public&lt;/c0&gt;, &lt;c1&gt;private&lt;/c1&gt;, and others you will learn about later.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064804Z" creationid="pingfangx" creationdate="20180525T064804Z">
        <seg>修饰符（如 &lt;c0&gt;public&lt;/c0&gt;，&lt;c1&gt;private&lt;/c1&gt;）以及稍后将会学到的其他修饰符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modularity: The source code for an object can be written and maintained independently of the source code for other objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061926Z" creationid="pingfangx" creationdate="20180518T061926Z">
        <seg>模块化：可以独立于其他对象的源代码编写和维护对象的源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mondays are bad.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015356Z" creationid="pingfangx" creationdate="20190102T015356Z">
        <seg>Mondays are bad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More generally, method declarations have six components, in order:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064757Z" creationid="pingfangx" creationdate="20180525T064757Z">
        <seg>更一般地说，方法声明有六个组件，依次为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More on Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092109Z" creationid="pingfangx" creationdate="20180521T092109Z">
        <seg>更多关于类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More on Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085943Z" creationid="pingfangx" creationdate="20180601T085943Z">
        <seg>More on Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More specifically, in the body, method declarations are allowed but statements are not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T062019Z" creationid="pingfangx" creationdate="20180706T061730Z">
        <seg>更具体地说，在主体中，方法申明是允许的，但语句不允许。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most commonly, you create a string with a statement like</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083314Z" creationid="pingfangx" creationdate="20190103T083314Z">
        <seg>最常见的是，您创建一个带有类似语句的字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of the time, if you are using a single character value, you will use the primitive &lt;c0&gt;char&lt;/c0&gt; type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T042942Z" creationid="pingfangx" creationdate="20190103T042942Z">
        <seg>大多数情况下，如果使用单个字符值，则将使用基本 &lt;c0&gt;char&lt;/c0&gt; 类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most platforms can be described as a combination of the operating system and underlying hardware.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033300Z" creationid="pingfangx" creationdate="20180518T033300Z">
        <seg>大多数平台可以被描述为操作系统和底层硬件的组合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mountain bikes, road bikes, and tandem bikes, for example, all share the characteristics of bicycles (current speed, current pedal cadence, current gear).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062852Z" creationid="pingfangx" creationdate="20180518T062852Z">
        <seg>例如，山地自行车，公路自行车和双人自行车都具有自行车的特征(当前速度，当前踏板节奏，当前档位)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MountainBike myBike = (MountainBike)obj;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083704Z" creationid="pingfangx" creationdate="20190102T083704Z">
        <seg>MountainBike myBike = (MountainBike)obj;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MountainBike myBike = (MountainBike)obj;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083911Z" creationid="pingfangx" creationdate="20190102T083911Z">
        <seg>MountainBike myBike = (MountainBike)obj;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MountainBike myBike = obj;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083517Z" creationid="pingfangx" creationdate="20190102T083517Z">
        <seg>MountainBike myBike = obj;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mr. Smith
Ms. Jones</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042318Z" creationid="pingfangx" creationdate="20180521T042318Z">
        <seg>Mr. Smith
Ms. Jones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multiple Inheritance of State, Implementation, and Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092616Z" creationid="pingfangx" creationdate="20180521T092616Z">
        <seg>状态，实现和类型的多重继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multiple Inheritance of State, Implementation, and Type (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084110Z" creationid="pingfangx" creationdate="20190102T084110Z">
        <seg>Multiple Inheritance of State, Implementation, and Type (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multiplication operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064420Z" creationid="pingfangx" creationdate="20180521T064420Z">
        <seg>乘法运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multithreaded</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032946Z" creationid="pingfangx" creationdate="20180518T032946Z">
        <seg>Multithreaded（多线程）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mustang myApp = new Mustang();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092125Z" creationid="pingfangx" creationdate="20190102T092125Z">
        <seg>Mustang myApp = new Mustang();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MyActionListener that implements the ActionListener interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021121Z" creationid="pingfangx" creationdate="20190102T021121Z">
        <seg>MyActionListener that implements the ActionListener interface</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>N</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040217Z" creationid="pingfangx" creationdate="20180607T040217Z">
        <seg>N</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>NEPTUNE (1.024e+26, 2.4746e7);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020021Z" creationid="pingfangx" creationdate="20190102T020021Z">
        <seg>NEPTUNE (1.024e+26, 2.4746e7);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>NINE   (9 , "Nine" ),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065244Z" creationid="pingfangx" creationdate="20190102T065244Z">
        <seg>NINE   (9 , "Nine" ),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085146Z" creationid="pingfangx" creationdate="20180706T085039Z">
        <seg>Name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Naming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074005Z" creationid="pingfangx" creationdate="20180518T074005Z">
        <seg>命名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Naming a Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065105Z" creationid="pingfangx" creationdate="20180525T065105Z">
        <seg>命名方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Naming a Package</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093015Z" creationid="pingfangx" creationdate="20180521T093015Z">
        <seg>命名一个包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Neither industrial group needs to know &lt;i0&gt;how&lt;/i0&gt; the other group's software is implemented.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T053932Z" creationid="pingfangx" creationdate="20190102T053932Z">
        <seg>工业集团都不需要知道其他集团的软件是 &lt;i0&gt;如何&lt;/i0&gt; 实现的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Neither object is eligible for garbage collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083542Z" creationid="pingfangx" creationdate="20180705T083542Z">
        <seg>这两个对象都没有资格进行垃圾回收。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nested Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092211Z" creationid="pingfangx" creationdate="20180521T092211Z">
        <seg>嵌套类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nested Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090431Z" creationid="pingfangx" creationdate="20180705T090431Z">
        <seg>Nested Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nested classes that are declared &lt;c1&gt;static&lt;/c1&gt; are called &lt;i2&gt;static nested classes&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090532Z" creationid="pingfangx" creationdate="20180705T090532Z">
        <seg>声明为 &lt;c1&gt;static&lt;/c1&gt; 的嵌套类称为 &lt;i2&gt;static nested classes（静态嵌套类）&lt;/i2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>NestedIf.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091453Z" creationid="pingfangx" creationdate="20180521T091453Z">
        <seg>NestedIf.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nesting such "helper classes" makes their package more streamlined.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090818Z" creationid="pingfangx" creationdate="20180705T090818Z">
        <seg>嵌套这样的 "帮助类" 使得它们的包更加简化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, create the &lt;c0&gt;RoadBike&lt;/c0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093944Z" creationid="pingfangx" creationdate="20190102T093944Z">
        <seg>接下来，创建 &lt;c0&gt;RoadBike&lt;/c0&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Non-Reifiable Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093000Z" creationid="pingfangx" creationdate="20180521T093000Z">
        <seg>不可确定的类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Non-static fields are also known as &lt;i2&gt;instance variables&lt;/i2&gt; because their values are unique to each &lt;i3&gt;instance&lt;/i3&gt; of a class (to each object, in other words); the &lt;c4&gt;currentSpeed&lt;/c4&gt; of one bicycle is independent from the &lt;c5&gt;currentSpeed&lt;/c5&gt; of another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073357Z" creationid="pingfangx" creationdate="20180518T073357Z">
        <seg>非静态字段也称为 &lt;i2&gt;instance variables（实例变量）&lt;/i2&gt;，因为它们的值对类的每个 &lt;i3&gt;instance（实例）&lt;/i3&gt;(对于每个对象，换句话说)是唯一的;一辆自行车的 &lt;c4&gt;currentSpeed&lt;/c4&gt; 与另一辆自行车的 &lt;c5&gt;currentSpeed&lt;/c5&gt; 无关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Non-static nested classes (inner classes) have access to other members of the enclosing class, even if they are declared private.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090632Z" creationid="pingfangx" creationdate="20180705T090632Z">
        <seg>非静态嵌套类(内部类)可以访问封闭类的其他成员，即使它们被声明为私有。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Non-static nested classes are called &lt;i3&gt;inner classes&lt;/i3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090549Z" creationid="pingfangx" creationdate="20180705T090549Z">
        <seg>非静态嵌套类称为 &lt;i3&gt;inner classes（内部类）&lt;/i3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Normally, you would put code to initialize an instance variable in a constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070610Z" creationid="pingfangx" creationdate="20180705T070610Z">
        <seg>通常，您可以使用代码在构造函数中初始化实例变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not all combinations of instance and class variables and methods are allowed:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065127Z" creationid="pingfangx" creationdate="20180705T065127Z">
        <seg>并非所有实例和类变量和方法的组合都是允许的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not mention the default method at all, which lets your extended interface inherit the default method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064309Z" creationid="pingfangx" creationdate="20190102T063414Z">
        <seg>不提及默认方法，它允许继承的接口继承默认方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not sure where to start?&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030503Z" creationid="pingfangx" creationdate="20180518T030503Z">
        <seg>不确定从哪里开始？&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that &lt;c0&gt;println()&lt;/c0&gt; prints a string builder, as in:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082822Z" creationid="pingfangx" creationdate="20190103T082822Z">
        <seg>请注意，&lt;c0&gt;println()&lt;/c0&gt; 打印 string builder，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that a lambda expression looks a lot like a method declaration; you can consider lambda expressions as anonymous methods—methods without a name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075601Z" creationid="pingfangx" creationdate="20181228T075601Z">
        <seg>请注意，lambda 表达式看起来很像方法声明;您可以将 lambda 表达式视为匿名方法 - 没有名称的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that after this statement has been executed, the program no longer has a reference to the created &lt;t2&gt;Rectangle&lt;/t2&gt;, because the program never stored the reference anywhere.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T080103Z" creationid="pingfangx" creationdate="20180601T080103Z">
        <seg>请注意，执行此语句后，程序不再引用创建的 &lt;t2&gt;Rectangle&lt;/t2&gt;，因为程序从未将引用存储在任何地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that it immediately precedes the leftmost digit in the formatted &lt;c1&gt;output&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034321Z" creationid="pingfangx" creationdate="20190103T034321Z">
        <seg>请注意，它紧接在格式化的 &lt;c1&gt;output&lt;/c1&gt; 中最左边的数字之前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that many software libraries use both abstract classes and interfaces; the &lt;c0&gt;HashMap&lt;/c0&gt; class implements several interfaces and also extends the abstract class &lt;c1&gt;AbstractMap&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022053Z" creationid="pingfangx" creationdate="20190103T022053Z">
        <seg>请注意，许多软件库都使用抽象类和接口; &lt;c0&gt;HashMap&lt;/c0&gt; 类实现了几个接口，并且还继承了抽象类 &lt;c1&gt;AbstractMap&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that once again, the &lt;c0&gt;printDescription&lt;/c0&gt; method has been overridden.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094011Z" creationid="pingfangx" creationdate="20190102T094011Z">
        <seg>请注意，再次重写了 &lt;c0&gt;printDescription&lt;/c0&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the &lt;c0&gt;EvenIterator&lt;/c0&gt; class refers directly to the &lt;c1&gt;arrayOfInts&lt;/c1&gt; instance variable of the &lt;c2&gt;DataStructure&lt;/c2&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101143Z" creationid="pingfangx" creationdate="20180705T101143Z">
        <seg>请注意，&lt;c0&gt;EvenIterator&lt;/c0&gt; 类直接引用 &lt;c2&gt;DataStructure&lt;/c2&gt; 对象的 &lt;c1&gt;arrayOfInts&lt;/c1&gt; 实例变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the method signatures have no braces and are terminated with a semicolon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054143Z" creationid="pingfangx" creationdate="20190102T054143Z">
        <seg>请注意，方法签名没有大括号，并以分号结束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the second parameter of the &lt;c1&gt;copyOfRange&lt;/c1&gt; method is the initial index of the range to be copied, inclusively, while the third parameter is the final index of the range to be copied, &lt;e2&gt;exclusively&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043614Z" creationid="pingfangx" creationdate="20180521T043614Z">
        <seg>请注意，&lt;c1&gt;copyOfRange&lt;/c1&gt; 方法的第二个参数是要复制的范围的初始索引（包含），而第三个参数是要复制的范围的最终索引，&lt;e2&gt;不包含&lt;/e2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that they can define optional default values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025135Z" creationid="pingfangx" creationdate="20190102T025135Z">
        <seg>请注意，他们可以定义可选的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that this lesson is for advanced users.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031600Z" creationid="pingfangx" creationdate="20180518T031600Z">
        <seg>请注意，本课为高级用户提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that you can also declare an entire class final.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104742Z" creationid="pingfangx" creationdate="20190102T104742Z">
        <seg>请注意，您还可以声明整个类 final。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that you can declare the following in anonymous classes:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065453Z" creationid="pingfangx" creationdate="20180706T065453Z">
        <seg>请注意，您可以在匿名类中声明以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that you must provide an implementation for default methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063133Z" creationid="pingfangx" creationdate="20190102T063133Z">
        <seg>请注意，您必须提供默认方法的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note the overridden &lt;c0&gt;printDescription&lt;/c0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093825Z" creationid="pingfangx" creationdate="20190102T093818Z">
        <seg>请注意重写的 &lt;c0&gt;printDescription&lt;/c0&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice how the code declares a variable within the initialization expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085249Z" creationid="pingfangx" creationdate="20180521T085249Z">
        <seg>注意代码如何在初始化表达式中声明一个变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that the collection &lt;c3&gt;roster&lt;/c3&gt;, which is a collection of type &lt;c4&gt;List&lt;/c4&gt;, is also an object of type &lt;c5&gt;Iterable&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T073053Z" creationid="pingfangx" creationdate="20181228T073053Z">
        <seg>请注意，集合 &lt;c3&gt;roster&lt;/c3&gt; 是 &lt;c4&gt;List&lt;/c4&gt; 类型的集合，也是 &lt;c5&gt;Iterable&lt;/c5&gt; 类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that the interface &lt;c0&gt;Comparator&lt;/c0&gt; is a functional interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084107Z" creationid="pingfangx" creationdate="20181228T084107Z">
        <seg>请注意，接口 &lt;c0&gt;Comparator&lt;/c0&gt; 是一个函数式接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that this expression is the argument passed to the &lt;c4&gt;btn.setOnAction&lt;/c4&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065728Z" creationid="pingfangx" creationdate="20180706T065728Z">
        <seg>请注意，此表达式是传递给 &lt;c4&gt;btn.setOnAction&lt;/c4&gt; 方法的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now click &lt;b0&gt; Save&lt;/b0&gt;, and exit Notepad.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034718Z" creationid="pingfangx" creationdate="20180518T034718Z">
        <seg>现在点击 &lt;b0&gt; Save&lt;/b0&gt;，然后退出记事本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now compile and run the program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021141Z" creationid="pingfangx" creationdate="20190102T021141Z">
        <seg>Now compile and run the program.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now suppose that you have a method declared to return a &lt;c0&gt;Number&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091930Z" creationid="pingfangx" creationdate="20180601T091930Z">
        <seg>现在假设你有一个方法声明返回一个 &lt;c0&gt;Number&lt;/c0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that you have a &lt;c0&gt;.class&lt;/c0&gt; file, you can run your program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034926Z" creationid="pingfangx" creationdate="20180518T034926Z">
        <seg>既然你有一个 &lt;c0&gt;.class&lt;/c0&gt; 文件，你可以运行你的程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that you understand variables and operators, it's time to learn about &lt;i0&gt;expressions&lt;/i0&gt;, &lt;i1&gt;statements&lt;/i1&gt;, and &lt;i2&gt;blocks&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073906Z" creationid="pingfangx" creationdate="20180521T073906Z">
        <seg>现在你已经了解了变量和运算符符，现在该了解 &lt;i0&gt;expressions（表达式）&lt;/i0&gt;，&lt;i1&gt;statements（语句）&lt;/i1&gt; 和 &lt;i2&gt;blocks（块）&lt;/i2&gt;了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that you've learned how to declare and initialize variables, you probably want to know how to &lt;i0&gt;do something&lt;/i0&gt; with them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062244Z" creationid="pingfangx" creationdate="20180521T062244Z">
        <seg>现在你已经学会了如何声明和初始化变量，你可能想知道如何用它们 &lt;i0&gt;do something&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that you've seen the "Hello World!" application (and perhaps even compiled and run it), you might be wondering how it works.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035242Z" creationid="pingfangx" creationdate="20180518T035242Z">
        <seg>现在你已经看到了 "Hello World！" 应用程序(甚至可能编译并运行它)，你可能想知道它是如何工作的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now the prompt should change to &lt;c0&gt;C:\myapplication&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034802Z" creationid="pingfangx" creationdate="20180518T034802Z">
        <seg>现在提示符应该改为 &lt;c0&gt;C:\myapplication&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now the rectangle's origin variable also points to the Point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071421Z" creationid="pingfangx" creationdate="20180601T071421Z">
        <seg>现在矩形的原点变量也指向 Point。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now there are two references to the same &lt;t5&gt;Point object&lt;/t5&gt;an object can have multiple references to it, as shown in the next figure:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071405Z" creationid="pingfangx" creationdate="20180601T071405Z">
        <seg>现在有两个对同一个 &lt;t5&gt;Point object&lt;/t5&gt; 对象可以有多个引用，如下图所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now users of your code can choose to continue to use the old interface or to upgrade to the new interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063113Z" creationid="pingfangx" creationdate="20190102T063113Z">
        <seg>现在，您的代码用户可以选择继续使用旧接口或升级到新接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you are ready to compile.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035033Z" creationid="pingfangx" creationdate="20180518T034855Z">
        <seg>现在你已经准备好编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you want to set a timer to run a method, &lt;t1&gt;doPeriodicCleanup&lt;/t1&gt;, on the last day of the month and on every Friday at 11:00 p.m.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041046Z" creationid="pingfangx" creationdate="20190102T041046Z">
        <seg>现在，您要设置计时器以在该月的最后一天以及每周五的晚上 11 点运行方法 &lt;t1&gt;doPeriodicCleanup&lt;/t1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Number of Days = 29</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082527Z" creationid="pingfangx" creationdate="20180521T082527Z">
        <seg>Number of Days = 29</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>NumberHolder.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083250Z" creationid="pingfangx" creationdate="20180705T083250Z">
        <seg>NumberHolder.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>NumberHolderDisplay.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083727Z" creationid="pingfangx" creationdate="20180705T083727Z">
        <seg>NumberHolderDisplay.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092709Z" creationid="pingfangx" creationdate="20180521T092709Z">
        <seg>数字</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Numbers (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024815Z" creationid="pingfangx" creationdate="20190103T024815Z">
        <seg>Numbers (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Numbers and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092706Z" creationid="pingfangx" creationdate="20180521T092706Z">
        <seg>数字和字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>O roar again!"; 
String roar = anotherPalindrome.substring(11, 15);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072953Z" creationid="pingfangx" creationdate="20190103T072953Z">
        <seg>O roar again!"; 
String roar = anotherPalindrome.substring(11, 15);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>O roar again!"; 
char aChar = anotherPalindrome.charAt(9);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072556Z" creationid="pingfangx" creationdate="20190103T072556Z">
        <seg>O roar again!"; 
char aChar = anotherPalindrome.charAt(9);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object as a Superclass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100521Z" creationid="pingfangx" creationdate="20180521T092644Z">
        <seg>Object 作为超类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object as a Superclass (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100406Z" creationid="pingfangx" creationdate="20190102T100406Z">
        <seg>Object as a Superclass (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object creation expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074842Z" creationid="pingfangx" creationdate="20180521T074842Z">
        <seg>对象创建表达式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object dest, int destPos, int length)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042411Z" creationid="pingfangx" creationdate="20180521T042411Z">
        <seg>Object dest, int destPos, int length)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object fields are accessed by their name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073419Z" creationid="pingfangx" creationdate="20180601T073419Z">
        <seg>对象字段通过其名称进行访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object obj = new MountainBike();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083427Z" creationid="pingfangx" creationdate="20190102T083427Z">
        <seg>Object obj = new MountainBike();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object oriented</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032927Z" creationid="pingfangx" creationdate="20180518T032927Z">
        <seg>Object oriented（面向对象）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object-Oriented Programming Concepts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042722Z" creationid="pingfangx" creationdate="20180518T042722Z">
        <seg>面向对象的编程概念</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object-oriented programming allows classes to &lt;i0&gt;inherit&lt;/i0&gt; commonly used state and behavior from other classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063357Z" creationid="pingfangx" creationdate="20180518T063357Z">
        <seg>面向对象编程允许从其他类 &lt;i0&gt;inherit（继承）&lt;/i0&gt; 常用的状态和行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092053Z" creationid="pingfangx" creationdate="20180521T092053Z">
        <seg>对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T035100Z" creationid="pingfangx" creationdate="20180601T035100Z">
        <seg>Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objects are key to understanding &lt;i0&gt;object-oriented&lt;/i0&gt; technology.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T060923Z" creationid="pingfangx" creationdate="20180518T060923Z">
        <seg>对象是理解 &lt;i0&gt;object-oriented&lt;/i0&gt; 技术的关键。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objects of the same type have their own copy of the same instance fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T074236Z" creationid="pingfangx" creationdate="20180601T074236Z">
        <seg>相同类型的对象具有自己的相同实例字段的副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objects that are instances of an inner class exist &lt;i0&gt;within&lt;/i0&gt; an instance of the outer class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091248Z" creationid="pingfangx" creationdate="20180705T091248Z">
        <seg>作为内部类实例的对象在存在于一个外部类的实例&lt;i0&gt;中&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Obtain a source of objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074544Z" creationid="pingfangx" creationdate="20181228T074544Z">
        <seg>获取对象的源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Obtains a source of objects from the collection &lt;c0&gt;source&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T102633Z" creationid="pingfangx" creationdate="20180706T102633Z">
        <seg>从集合 &lt;c0&gt;source&lt;/c0&gt; 获取对象源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often, event handler interfaces are functional interfaces; they tend to have only one method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075243Z" creationid="pingfangx" creationdate="20181228T075243Z">
        <seg>通常，事件处理程序接口是函数式接口;他们往往只有一种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often, the wrapping is done by the compilerif you use a primitive where an object is expected, the compiler &lt;i1&gt;boxes&lt;/i1&gt; the primitive in its wrapper class for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030116Z" creationid="pingfangx" creationdate="20190103T025423Z">
        <seg>通常，包装是由编译器完成的 - 如果你在期望对象时使用基本类型，编译器会 &lt;i1&gt;装箱&lt;/i1&gt; 基本类型到它的包装类中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Omit one or two methods and try compiling.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064819Z" creationid="pingfangx" creationdate="20180518T064819Z">
        <seg>省略一个或两个方法并尝试编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Omitting them can make the code more brittle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081033Z" creationid="pingfangx" creationdate="20180521T081033Z">
        <seg>省略它们会使代码变得更脆弱。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once again, you can omit these modifiers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061743Z" creationid="pingfangx" creationdate="20190102T061743Z">
        <seg>再一次，您可以省略这些修饰符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once an object has completed the work for which it was created, its resources are recycled for use by other objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T035941Z" creationid="pingfangx" creationdate="20180601T035941Z">
        <seg>一旦一个对象完成了它所创建的工作，其资源就会被回收以供其他对象使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once created, an object can be easily passed around inside the system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061932Z" creationid="pingfangx" creationdate="20180518T061932Z">
        <seg>一旦创建，一个对象可以很容易地在系统内传递。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you've created an object, you probably want to use it for something.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073310Z" creationid="pingfangx" creationdate="20180601T073310Z">
        <seg>一旦你创建了一个对象，你可能想用它来做一些事情。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One accessor method that you can use with strings is the &lt;c1&gt;length()&lt;/c1&gt; method, which returns the number of characters contained in the string object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063641Z" creationid="pingfangx" creationdate="20190103T063641Z">
        <seg>可以与字符串一起使用的一种访问器方法是 &lt;c1&gt;length()&lt;/c1&gt; 方法，该方法返回字符串对象中包含的字符数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One issue with anonymous classes is that if the implementation of your anonymous class is very simple, such as an interface that contains only one method, then the syntax of anonymous classes may seem unwieldy and unclear.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T082942Z" creationid="pingfangx" creationdate="20180706T082942Z">
        <seg>匿名类的一个问题是，如果匿名类的实现非常简单，例如只包含一个方法的接口，那么匿名类的语法可能看起来不实用且不清楚。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the arguments of the following invocation of the method &lt;c0&gt;printPersons&lt;/c0&gt; is an anonymous class that filters members that are eligible for Selective Service in the United States: those who are male and between the ages of 18 and 25:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091506Z" creationid="pingfangx" creationdate="20180706T091506Z">
        <seg>下面调用方法 &lt;c0&gt;printPersons&lt;/c0&gt; 的一个参数是一个匿名类，用于过滤符合美国兵役登记制度的成员：男性且年龄在 18 到 25 岁之间的成员：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the most common operators that you'll encounter is the simple assignment operator "&lt;c0&gt;=&lt;/c0&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063825Z" creationid="pingfangx" creationdate="20180521T063825Z">
        <seg>您将遇到的最常见的运算符之一是简单赋值运算符 "&lt;c0&gt;=&lt;/c0&gt;"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One possible implementation of the &lt;c5&gt;applyBrakes&lt;/c5&gt; method could be as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080902Z" creationid="pingfangx" creationdate="20180521T080902Z">
        <seg>&lt;c5&gt;applyBrakes&lt;/c5&gt; 方法的一种可能实现方式如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One reason why the Java programming language does not permit you to extend more than one class is to avoid the issues of &lt;e1&gt;multiple inheritance of state&lt;/e1&gt;, which is the ability to inherit fields from multiple classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084708Z" creationid="pingfangx" creationdate="20190102T084708Z">
        <seg>Java 编程语言不允许继承多个类的一个原因是为了避免 &lt;e1&gt;multiple inheritance of state&lt;/e1&gt;，这是从多个类继承字段的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One significant difference between classes and interfaces is that classes can have fields whereas interfaces cannot.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084559Z" creationid="pingfangx" creationdate="20190102T084559Z">
        <seg>类和接口之间的一个显着区别是类可以有字段而接口不能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One simplistic approach is to create several methods; each method searches for members that match one characteristic, such as gender or age.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085624Z" creationid="pingfangx" creationdate="20180706T085624Z">
        <seg>一种简单的方法是创建几种方法;每种方法都会搜索与一个特征匹配的成员，例如性别或年龄。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One way to create an array is with the &lt;c0&gt;new&lt;/c0&gt; operator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041122Z" creationid="pingfangx" creationdate="20180521T041122Z">
        <seg>创建数组的一种方法是使用 &lt;c0&gt;new&lt;/c0&gt; 运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One way to do this is to implement the &lt;c2&gt;Comparator&lt;/c2&gt; interface to specify how you want the cards sorted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071020Z" creationid="pingfangx" creationdate="20190102T071020Z">
        <seg>一种方法是实现 &lt;c2&gt;Comparator&lt;/c2&gt; 接口，以指定您希望卡牌的排序方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only default and static methods have implementations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074733Z" creationid="pingfangx" creationdate="20190102T074733Z">
        <seg>只有默认和静态方法才有实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only instances of the declaring class need to use this nested</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021011Z" creationid="pingfangx" creationdate="20190102T021011Z">
        <seg>Only instances of the declaring class need to use this nested</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>OperateCar.super.startEngine(key);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091818Z" creationid="pingfangx" creationdate="20190102T091818Z">
        <seg>OperateCar.super.startEngine(key);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064405Z" creationid="pingfangx" creationdate="20180521T064405Z">
        <seg>运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operator Precedence</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062747Z" creationid="pingfangx" creationdate="20180521T062747Z">
        <seg>运算符优先级</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072156Z" creationid="pingfangx" creationdate="20180518T072156Z">
        <seg>运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062218Z" creationid="pingfangx" creationdate="20180521T062218Z">
        <seg>Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operators are special symbols that perform specific operations on one, two, or three &lt;i1&gt;operands&lt;/i1&gt;, and then return a result.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062858Z" creationid="pingfangx" creationdate="20180521T062322Z">
        <seg>运算符是对一个，两个或三个 &lt;i1&gt;operands（运算数）&lt;/i1&gt; 执行特定运算的特殊符号，然后返回结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operators may be used in building &lt;s0&gt;expressions&lt;/s0&gt;, which compute values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075556Z" creationid="pingfangx" creationdate="20180521T075556Z">
        <seg>运算符可用于构建计算值的 &lt;s0&gt;expressions&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operators may be used in building ___, which compute values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075441Z" creationid="pingfangx" creationdate="20180521T075441Z">
        <seg>运算符可以用于构建___，计算值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operators may be used in building expressions, which compute values; expressions are the core components of statements; statements may be grouped into blocks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072731Z" creationid="pingfangx" creationdate="20180518T072731Z">
        <seg>运算符可以用于构建计算值的表达式;表达式是语句的核心组成部分;语句可能被分组成块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operators on the same line have equal precedence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062910Z" creationid="pingfangx" creationdate="20180521T062430Z">
        <seg>同一行上的运算符具有相同的优先级。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operators that have a higher precedence get evaluated first.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074650Z" creationid="pingfangx" creationdate="20180521T074650Z">
        <seg>优先级较高的运算符首先得到计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operators with higher precedence are evaluated before operators with relatively lower precedence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062412Z" creationid="pingfangx" creationdate="20180521T062412Z">
        <seg>具有较高优先级的运算符在优先级相对较低的运算符之前进行计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or you can use reference types, such as strings, arrays, or objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064305Z" creationid="pingfangx" creationdate="20180525T064305Z">
        <seg>或者你可以使用引用类型，比如字符串，数组或者对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, the bike has a front and back shock absorber, &lt;c7&gt;Dual&lt;/c7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093805Z" creationid="pingfangx" creationdate="20190102T093805Z">
        <seg>或者，自行车有前后减震器，&lt;c7&gt;Dual&lt;/c7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, you can explicitly drop an object reference by setting the variable to the special value &lt;t0&gt;null&lt;/t0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085813Z" creationid="pingfangx" creationdate="20180601T085813Z">
        <seg>或者，您可以通过将变量设置为特殊值 &lt;t0&gt;null&lt;/t0&gt; 来显式删除对象引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, you can use the following (longer) instructions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034524Z" creationid="pingfangx" creationdate="20180518T034524Z">
        <seg>或者，您可以使用以下(较长)的说明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Oracle Training and Professional Certification</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030654Z" creationid="pingfangx" creationdate="20180518T030654Z">
        <seg>Oracle 培训和专业认证</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Oracle University</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030700Z" creationid="pingfangx" creationdate="20180518T030700Z">
        <seg>Oracle 大学</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other Methods for Manipulating Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072959Z" creationid="pingfangx" creationdate="20190103T072959Z">
        <seg>操纵字符串的其他方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other Methods in the &lt;c0&gt;String&lt;/c0&gt; Class for Manipulating Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073023Z" creationid="pingfangx" creationdate="20190103T073023Z">
        <seg>用于操作字符串的 &lt;c0&gt;String&lt;/c0&gt; 类中的其他方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other Resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030642Z" creationid="pingfangx" creationdate="20180518T030642Z">
        <seg>其他资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other access modifiers will be discussed later.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063736Z" creationid="pingfangx" creationdate="20180525T063736Z">
        <seg>其他访问修饰符将在稍后讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other methods were introduced in Java SE 8 that scan through the container annotation to return multiple annotations at once, such as &lt;a2&gt;AnnotatedElement.getAnnotationsByType(Class&lt;T&gt;)&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041354Z" creationid="pingfangx" creationdate="20190102T041354Z">
        <seg>Java SE 8 中引入了其他方法，它们扫描容器注解以一次返回多个注解，例如 &lt;a2&gt;AnnotatedElement.getAnnotationsByType(Class&lt;T&gt;)&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Others require different implementations (for example, resize or draw).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022155Z" creationid="pingfangx" creationdate="20190103T022155Z">
        <seg>其他需要不同的实现(例如，调整大小或绘制)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, a change in &lt;c4&gt;ObjExternal&lt;/c4&gt; made by one object will be visible in its clone also.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101800Z" creationid="pingfangx" creationdate="20190102T101800Z">
        <seg>否则，一个对象所做的关于 &lt;c4&gt;ObjExternal&lt;/c4&gt; 的更改也将在其克隆中可见。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, assign the value of &lt;c8&gt;value2&lt;/c8&gt; to &lt;c9&gt;result&lt;/c9&gt;."</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070326Z" creationid="pingfangx" creationdate="20180521T070326Z">
        <seg>否则，将 &lt;c8&gt;value2&lt;/c8&gt; 的值赋给 &lt;c9&gt;result&lt;/c9&gt;。“</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, you will get a compiler error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042801Z" creationid="pingfangx" creationdate="20180601T042801Z">
        <seg>否则，你会得到一个编译器错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>OuterClass.InnerClass innerObject = outerObject.new InnerClass();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091328Z" creationid="pingfangx" creationdate="20180705T091328Z">
        <seg>OuterClass.InnerClass innerObject = outerObject.new InnerClass();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>OuterClass.StaticNestedClass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091058Z" creationid="pingfangx" creationdate="20180705T091058Z">
        <seg>OuterClass.StaticNestedClass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>OuterClass.StaticNestedClass nestedObject =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091106Z" creationid="pingfangx" creationdate="20180705T091106Z">
        <seg>OuterClass.StaticNestedClass nestedObject =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034142Z" creationid="pingfangx" creationdate="20190103T034142Z">
        <seg>输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070035Z" creationid="pingfangx" creationdate="20180521T070035Z">
        <seg>输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overloaded methods are differentiated by the number and the type of the arguments passed into the method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065435Z" creationid="pingfangx" creationdate="20180525T065435Z">
        <seg>重载的方法通过传递给方法的参数的数量和类型来区分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overloading Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065229Z" creationid="pingfangx" creationdate="20180525T065229Z">
        <seg>重载方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overrides</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092712Z" creationid="pingfangx" creationdate="20190102T092712Z">
        <seg>Overrides</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overriding and Hiding Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092621Z" creationid="pingfangx" creationdate="20180521T092621Z">
        <seg>覆盖和隐藏方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overriding and Hiding Methods (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085127Z" creationid="pingfangx" creationdate="20190102T085127Z">
        <seg>Overriding and Hiding Methods (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overriding methods will be discussed in &lt;a3&gt;Interfaces and Inheritance&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033429Z" creationid="pingfangx" creationdate="20190102T033429Z">
        <seg>覆盖方法将在 &lt;a3&gt;Interfaces and Inheritance&lt;/a3&gt; 中讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Package</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040213Z" creationid="pingfangx" creationdate="20180607T040204Z">
        <seg>Package</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Packages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093006Z" creationid="pingfangx" creationdate="20180521T093006Z">
        <seg>包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parallel sorting of large arrays on multiprocessor systems is faster than sequential array sorting.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T054811Z" creationid="pingfangx" creationdate="20180521T054811Z">
        <seg>多处理器系统上的大型数组的并行排序比顺序数组排序要快。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parameter Names</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033249Z" creationid="pingfangx" creationdate="20180601T033249Z">
        <seg>参数名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parameter Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032426Z" creationid="pingfangx" creationdate="20180601T032426Z">
        <seg>参数类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parameters are variables that provide extra information to a method; both local variables and parameters are always classified as "variables" (not "fields").</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061539Z" creationid="pingfangx" creationdate="20180521T061539Z">
        <seg>参数是为方法提供额外信息的变量;局部变量和参数总是被分类为 "变量"(而不是 " 字段")。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parent obj1 = new Parent();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070503Z" creationid="pingfangx" creationdate="20180521T070503Z">
        <seg>Parent obj1 = new Parent();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parent obj2 = new Child();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070504Z" creationid="pingfangx" creationdate="20180521T070504Z">
        <seg>Parent obj2 = new Child();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parentheses that contain the arguments to a constructor, just like a normal class instance creation expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061637Z" creationid="pingfangx" creationdate="20180706T061637Z">
        <seg>包含构造函数参数的圆括号，就像普通的类实例创建表达式一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Passed as a parameter to a method that expects a value of the corresponding primitive type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084550Z" creationid="pingfangx" creationdate="20190103T084550Z">
        <seg>作为参数传递给期望相应基本类型的值的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Passed as a parameter to a method that expects an object of the corresponding wrapper class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084329Z" creationid="pingfangx" creationdate="20190103T084329Z">
        <seg>作为参数传递给期望相应包装类的对象的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Passing Information to a Method or a Constructor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092052Z" creationid="pingfangx" creationdate="20180521T092052Z">
        <seg>将信息传递给方法或构造函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Passing Information to a Method or a Constructor (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180529T071642Z" creationid="pingfangx" creationdate="20180529T071642Z">
        <seg>Passing Information to a Method or a Constructor (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Passing Primitive Data Type Arguments</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033822Z" creationid="pingfangx" creationdate="20180601T033822Z">
        <seg>传递基本数据类型参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Passing Reference Data Type Arguments</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034044Z" creationid="pingfangx" creationdate="20180601T034044Z">
        <seg>传递引用数据类型参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Pattern</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034135Z" creationid="pingfangx" creationdate="20190103T034135Z">
        <seg>模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Pegasus myApp = new Pegasus();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091511Z" creationid="pingfangx" creationdate="20190102T091511Z">
        <seg>Pegasus myApp = new Pegasus();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perform action on selected members</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085048Z" creationid="pingfangx" creationdate="20180706T085048Z">
        <seg>对选定的成员执行操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perform an action as specified by a &lt;c0&gt;Consumer&lt;/c0&gt; object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074638Z" creationid="pingfangx" creationdate="20181228T074638Z">
        <seg>执行 &lt;c0&gt;Consumer&lt;/c0&gt; 对象指定的操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs an action on each mapped object as specified by the &lt;c0&gt;Consumer&lt;/c0&gt; object &lt;c1&gt;block&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074139Z" creationid="pingfangx" creationdate="20181228T073302Z">
        <seg>对每个映射对象执行由 &lt;c0&gt;Consumer&lt;/c0&gt; 对象 &lt;c1&gt;block&lt;/c1&gt; 指定的操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Person[] rosterAsArray = roster.toArray(new Person[roster.size()]);

class PersonAgeComparator implements Comparator&lt;Person&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084045Z" creationid="pingfangx" creationdate="20181228T084045Z">
        <seg>Person[] rosterAsArray = roster.toArray(new Person[roster.size()]);

class PersonAgeComparator implements Comparator&lt;Person&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PhoneNumber myNumber1 = new PhoneNumber(phoneNumber1);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122520Z" creationid="pingfangx" creationdate="20180705T122520Z">
        <seg>PhoneNumber myNumber1 = new PhoneNumber(phoneNumber1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PhoneNumber myNumber2 = new PhoneNumber(phoneNumber2);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122521Z" creationid="pingfangx" creationdate="20180705T122521Z">
        <seg>PhoneNumber myNumber2 = new PhoneNumber(phoneNumber2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PhoneNumber(String phoneNumber) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123024Z" creationid="pingfangx" creationdate="20180705T123024Z">
        <seg>PhoneNumber(String phoneNumber) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PhoneNumber(String phoneNumber){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122457Z" creationid="pingfangx" creationdate="20180705T122457Z">
        <seg>PhoneNumber(String phoneNumber){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Placing your code into packages makes large software projects easier to manage.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T043054Z" creationid="pingfangx" creationdate="20180518T043054Z">
        <seg>将您的代码放入软件包中可以使大型软件项目更易于管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Planet(double mass, double radius) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020026Z" creationid="pingfangx" creationdate="20190102T020026Z">
        <seg>Planet(double mass, double radius) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Playing cards have two distinguishing properties: rank and suit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082542Z" creationid="pingfangx" creationdate="20180705T082542Z">
        <seg>扑克牌有两个显着特征：排名和套装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Pluggability and debugging ease: If a particular object turns out to be problematic, you can simply remove it from your application and plug in a different object as its replacement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062039Z" creationid="pingfangx" creationdate="20180518T062039Z">
        <seg>可插拔性和调试简便性：如果某个特定对象变得有问题，您可以简单地将它从应用程序中删除，并插入其他对象作为替换对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Point originOne = new Point(23, 94);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040017Z" creationid="pingfangx" creationdate="20180601T040017Z">
        <seg>Point originOne = new Point(23, 94);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Point originOne;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042724Z" creationid="pingfangx" creationdate="20180601T042724Z">
        <seg>Point originOne;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Polymorphism</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092626Z" creationid="pingfangx" creationdate="20180521T092626Z">
        <seg>多态</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Polymorphism (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092813Z" creationid="pingfangx" creationdate="20190102T092813Z">
        <seg>Polymorphism (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Polymorphism can be demonstrated with a minor modification to the &lt;c0&gt;Bicycle&lt;/c0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093212Z" creationid="pingfangx" creationdate="20190102T093212Z">
        <seg>可以通过对 &lt;c0&gt;Bicycle&lt;/c0&gt; 类的微小修改来演示多态性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Portable</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033012Z" creationid="pingfangx" creationdate="20180518T033012Z">
        <seg>Portable（便携式）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Portions of this library (also known as the "Application Programming Interface", or "API") will be discussed throughout the remainder of the tutorial.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035815Z" creationid="pingfangx" creationdate="20180518T035815Z">
        <seg>这个库的一部分(也称为 "应用程序编程接口" 或 "API")将在本教程的剩余部分中讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Postconditions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085209Z" creationid="pingfangx" creationdate="20180706T085209Z">
        <seg>后置条件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Precedence</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062949Z" creationid="pingfangx" creationdate="20180521T062949Z">
        <seg>优先级</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Preconditions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085151Z" creationid="pingfangx" creationdate="20180706T085151Z">
        <seg>前提条件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Predefined Annotation Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092352Z" creationid="pingfangx" creationdate="20180521T092352Z">
        <seg>预定义的注解类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Predefined Annotation Types (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033233Z" creationid="pingfangx" creationdate="20190102T033233Z">
        <seg>Predefined Annotation Types (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Predicate&lt;Person&gt; tester,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094106Z" creationid="pingfangx" creationdate="20180706T094106Z">
        <seg>Predicate&lt;Person&gt; tester,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Predicate&lt;X&gt; tester,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100547Z" creationid="pingfangx" creationdate="20180706T100547Z">
        <seg>Predicate&lt;X&gt; tester,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Previously, you learned that to declare a variable, you write:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042528Z" creationid="pingfangx" creationdate="20180601T042528Z">
        <seg>以前，您了解到要声明一个变量，您可以这样写：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Primary Actor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085110Z" creationid="pingfangx" creationdate="20180706T085110Z">
        <seg>主要操作者</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Primitive Data Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072105Z" creationid="pingfangx" creationdate="20180518T072105Z">
        <seg>基本数据类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Primitive Data Types (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075903Z" creationid="pingfangx" creationdate="20180518T075903Z">
        <seg>Primitive Data Types (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Primitive arguments, such as an &lt;c0&gt;int&lt;/c0&gt; or a &lt;c1&gt;double&lt;/c1&gt;, are passed into methods &lt;i2&gt;by value&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034611Z" creationid="pingfangx" creationdate="20180601T033853Z">
        <seg>基本参数（如 &lt;c0&gt;int&lt;/c0&gt; 或 &lt;c1&gt;double&lt;/c1&gt;）&lt;i2&gt;通过值&lt;/i2&gt;传递到方法中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Primitive type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084658Z" creationid="pingfangx" creationdate="20190103T084658Z">
        <seg>基本类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Primitive types are special data types built into the language; they are not objects created from a class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082318Z" creationid="pingfangx" creationdate="20180518T082318Z">
        <seg>基本类型是内置于语言中的特殊数据类型;它们不是从一个类创建的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Primitive values do not share state with other primitive values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080148Z" creationid="pingfangx" creationdate="20180518T080148Z">
        <seg>基本值不与其他基本值共享状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Printed in Subclass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095406Z" creationid="pingfangx" creationdate="20190102T095406Z">
        <seg>Printed in Subclass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Printed in Superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095406Z" creationid="pingfangx" creationdate="20190102T095406Z">
        <seg>Printed in Superclass.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prior to an &lt;c0&gt;F&lt;/c0&gt; or &lt;c1&gt;L&lt;/c1&gt; suffix</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084549Z" creationid="pingfangx" creationdate="20180518T084549Z">
        <seg>在 &lt;c0&gt;F&lt;/c0&gt; 或 &lt;c1&gt;L&lt;/c1&gt; 后缀之前</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Private Members in a Superclass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082922Z" creationid="pingfangx" creationdate="20190102T082922Z">
        <seg>超级私有会员</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Problem.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013850Z" creationid="pingfangx" creationdate="20190102T013850Z">
        <seg>Problem.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ProblemSolved.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014659Z" creationid="pingfangx" creationdate="20190102T014659Z">
        <seg>ProblemSolved.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Problems arise with this type of multiple inheritance, such as name conflicts and ambiguity.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084832Z" creationid="pingfangx" creationdate="20190102T084832Z">
        <seg>这种类型的多重继承会出现问题，例如名称冲突和歧义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Programmers often refer to it as the "for loop" because of the way in which it repeatedly loops until a particular condition is satisfied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T084408Z" creationid="pingfangx" creationdate="20180521T084408Z">
        <seg>程序员经常将其称为 "for 循环"，因为它的重复循环方式直到满足特定的条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Programmers relying on this interface will protest loudly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063044Z" creationid="pingfangx" creationdate="20190102T063044Z">
        <seg>依赖此接口的程序员将大声抗议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Providing Constructors for Your Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092045Z" creationid="pingfangx" creationdate="20180521T092045Z">
        <seg>为您的类提供构造函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Providing Constructors for Your Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034503Z" creationid="pingfangx" creationdate="20180528T034503Z">
        <seg>Providing Constructors for Your Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Put the</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021123Z" creationid="pingfangx" creationdate="20190102T021123Z">
        <seg>Put the</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QUEEN  (12, "Queen"),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065246Z" creationid="pingfangx" creationdate="20190102T065246Z">
        <seg>QUEEN  (12, "Queen"),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/characters-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024421Z" creationid="pingfangx" creationdate="20190103T024421Z">
        <seg>QandE/characters-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/creating-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022848Z" creationid="pingfangx" creationdate="20180525T022848Z">
        <seg>QandE/creating-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/enum-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022858Z" creationid="pingfangx" creationdate="20180525T022858Z">
        <seg>QandE/enum-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/inherit-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042709Z" creationid="pingfangx" creationdate="20190102T042709Z">
        <seg>QandE/inherit-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/interfaces-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042701Z" creationid="pingfangx" creationdate="20190102T042701Z">
        <seg>QandE/interfaces-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/nested-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022856Z" creationid="pingfangx" creationdate="20180525T022856Z">
        <seg>QandE/nested-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/numbers-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024415Z" creationid="pingfangx" creationdate="20190103T024415Z">
        <seg>QandE/numbers-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/objects-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022849Z" creationid="pingfangx" creationdate="20180525T022849Z">
        <seg>QandE/objects-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040531Z" creationid="pingfangx" creationdate="20180518T040531Z">
        <seg>QandE/questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/questions_expressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072422Z" creationid="pingfangx" creationdate="20180518T072422Z">
        <seg>QandE/questions_expressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/questions_flow.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072503Z" creationid="pingfangx" creationdate="20180518T072503Z">
        <seg>QandE/questions_flow.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/questions_operators.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072417Z" creationid="pingfangx" creationdate="20180518T072417Z">
        <seg>QandE/questions_operators.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QandE/questions_variables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072135Z" creationid="pingfangx" creationdate="20180518T072135Z">
        <seg>QandE/questions_variables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question 1: Consider the following two classes:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023651Z" creationid="pingfangx" creationdate="20190103T023651Z">
        <seg>问题 1：考虑以下两个类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question 1: What methods would a class that implements the &lt;c0&gt;java.lang.CharSequence&lt;/c0&gt; interface have to implement?&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074713Z" creationid="pingfangx" creationdate="20190102T074706Z">
        <seg>问题 1：实现 &lt;c0&gt;java.lang.CharSequence&lt;/c0&gt; 接口的类必须实现哪些方法？&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question 1a: Which method overrides a method in the superclass?&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023710Z" creationid="pingfangx" creationdate="20190103T023710Z">
        <seg>问题 1a：哪个方法覆盖了超类中的方法？&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question 1b: Which method hides a method in the superclass?&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023730Z" creationid="pingfangx" creationdate="20190103T023730Z">
        <seg>问题 1b：哪个方法隐藏了超类中的方法？&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question 1c: What do the other methods do?&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023734Z" creationid="pingfangx" creationdate="20190103T023734Z">
        <seg>问题 1c：其他方法有什么作用？&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question 2: Consider the &lt;a0&gt;&lt;c1&gt;Card&lt;/c1&gt;&lt;/a0&gt;, &lt;a2&gt;&lt;c3&gt;Deck&lt;/c3&gt;&lt;/a2&gt;, and &lt;a4&gt;&lt;c5&gt;DisplayDeck&lt;/c5&gt;&lt;/a4&gt; classes you wrote in the previous exercise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023748Z" creationid="pingfangx" creationdate="20190103T023748Z">
        <seg>问题 2：考虑 &lt;a0&gt;&lt;c1&gt;Card&lt;/c1&gt;&lt;/a0&gt;，&lt;a2&gt;&lt;c3&gt;Deck&lt;/c3&gt;&lt;/a2&gt; 和 &lt;a4&gt;&lt;c5&gt;DisplayDeck&lt;/c5&gt;&lt;/a4&gt; 您在上一个练习中写的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question 2: What is wrong with the following interface?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074722Z" creationid="pingfangx" creationdate="20190102T074722Z">
        <seg>问题 2：以下接口有什么问题？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question 3: Fix the interface in Question 2.&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074735Z" creationid="pingfangx" creationdate="20190102T074735Z">
        <seg>问题 3：修复问题 2 中的接口。&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question 4: Is the following interface valid?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074748Z" creationid="pingfangx" creationdate="20190102T074748Z">
        <seg>问题 4：以下接口是否有效？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035952Z" creationid="pingfangx" creationdate="20180518T035952Z">
        <seg>问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042750Z" creationid="pingfangx" creationdate="20180518T042750Z">
        <seg>问题和练习</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092435Z" creationid="pingfangx" creationdate="20180521T092435Z">
        <seg>问题和练习：注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Annotations (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041539Z" creationid="pingfangx" creationdate="20190102T041539Z">
        <seg>Questions and Exercises: Annotations (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Characters and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092809Z" creationid="pingfangx" creationdate="20180521T092809Z">
        <seg>问题和练习：字符和字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Characters and Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085124Z" creationid="pingfangx" creationdate="20190103T085124Z">
        <seg>Questions and Exercises: Characters and Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092204Z" creationid="pingfangx" creationdate="20180521T092204Z">
        <seg>问题和练习：类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082434Z" creationid="pingfangx" creationdate="20180705T082434Z">
        <seg>Questions and Exercises: Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Control Flow Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091023Z" creationid="pingfangx" creationdate="20180521T091023Z">
        <seg>问题和练习：控制流</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Control Flow Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091016Z" creationid="pingfangx" creationdate="20180521T091016Z">
        <seg>Questions and Exercises: Control Flow Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Creating and Using Packages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093036Z" creationid="pingfangx" creationdate="20180521T093036Z">
        <seg>问题和练习：创建和使用包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Enum Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092312Z" creationid="pingfangx" creationdate="20180521T092312Z">
        <seg>问题和练习：枚举类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Enum Types (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020142Z" creationid="pingfangx" creationdate="20190102T020142Z">
        <seg>Questions and Exercises: Enum Types (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Expressions, Statements, and Blocks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075431Z" creationid="pingfangx" creationdate="20180521T075431Z">
        <seg>问题和练习：表达式，语句和块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Expressions, Statements, and Blocks (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075426Z" creationid="pingfangx" creationdate="20180521T075426Z">
        <seg>Questions and Exercises: Expressions, Statements, and Blocks (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Generics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093004Z" creationid="pingfangx" creationdate="20180521T093004Z">
        <seg>问题和练习：泛型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035951Z" creationid="pingfangx" creationdate="20180518T035951Z">
        <seg>问题和练习：入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Getting Started (The Java™ Tutorials &gt; Getting Started)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035947Z" creationid="pingfangx" creationdate="20180518T035947Z">
        <seg>Questions and Exercises: Getting Started (The Java™ Tutorials &gt; Getting Started)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092703Z" creationid="pingfangx" creationdate="20180521T092703Z">
        <seg>问题和练习：继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Inheritance (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023442Z" creationid="pingfangx" creationdate="20190103T023442Z">
        <seg>Questions and Exercises: Inheritance (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092548Z" creationid="pingfangx" creationdate="20180521T092548Z">
        <seg>问题与练习：接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Interfaces (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074459Z" creationid="pingfangx" creationdate="20190102T074459Z">
        <seg>Questions and Exercises: Interfaces (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Nested Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092305Z" creationid="pingfangx" creationdate="20180521T092305Z">
        <seg>问题与练习：嵌套类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Nested Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013847Z" creationid="pingfangx" creationdate="20190102T013847Z">
        <seg>Questions and Exercises: Nested Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092731Z" creationid="pingfangx" creationdate="20180521T092731Z">
        <seg>问题和练习：数字</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Numbers (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041350Z" creationid="pingfangx" creationdate="20190103T041350Z">
        <seg>Questions and Exercises: Numbers (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Object-Oriented Programming Concepts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T043105Z" creationid="pingfangx" creationdate="20180518T043105Z">
        <seg>问题和练习：面向对象的编程概念</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Object-Oriented Programming Concepts (The Java™ Tutorials &gt; Learning the Java Language &gt; Object-Oriented Programming Concepts)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064624Z" creationid="pingfangx" creationdate="20180518T064624Z">
        <seg>Questions and Exercises: Object-Oriented Programming Concepts (The Java™ Tutorials &gt; Learning the Java Language &gt; Object-Oriented Programming Concepts)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092209Z" creationid="pingfangx" creationdate="20180521T092209Z">
        <seg>问题和练习：对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083212Z" creationid="pingfangx" creationdate="20180705T083212Z">
        <seg>Questions and Exercises: Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072311Z" creationid="pingfangx" creationdate="20180521T072311Z">
        <seg>问题和练习：运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072305Z" creationid="pingfangx" creationdate="20180521T072305Z">
        <seg>Questions and Exercises: Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061757Z" creationid="pingfangx" creationdate="20180521T061757Z">
        <seg>问题和练习：变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Questions and Exercises: Variables (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061727Z" creationid="pingfangx" creationdate="20180521T061727Z">
        <seg>Questions and Exercises: Variables (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Random Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040458Z" creationid="pingfangx" creationdate="20190103T040458Z">
        <seg>随机数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rank(int value, String text) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065249Z" creationid="pingfangx" creationdate="20190102T065249Z">
        <seg>Rank(int value, String text) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Raw Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092828Z" creationid="pingfangx" creationdate="20180521T092828Z">
        <seg>原始类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Real-world objects contain &lt;s0&gt;state&lt;/s0&gt; and &lt;s1&gt;behavior&lt;/s1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064859Z" creationid="pingfangx" creationdate="20180518T064859Z">
        <seg>真实世界对象包含 &lt;s0&gt;state&lt;/s0&gt; 和 &lt;s1&gt;behavior&lt;/s1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Real-world objects contain ___ and ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064644Z" creationid="pingfangx" creationdate="20180518T064644Z">
        <seg>真实世界的对象包含___和___。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Real-world objects share two characteristics: They all have &lt;i0&gt;state&lt;/i0&gt; and &lt;i1&gt;behavior&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T060945Z" creationid="pingfangx" creationdate="20180518T060945Z">
        <seg>真实世界的对象有两个特征：它们都具有 &lt;i0&gt;state&lt;/i0&gt; 和 &lt;i1&gt;behavior&lt;/i1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recall from the &lt;a1&gt;&lt;c2&gt;Bicycle&lt;/c2&gt; &lt;/a1&gt; example that &lt;c3&gt;MountainBike&lt;/c3&gt; is a subclass of &lt;c4&gt;Bicycle&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095501Z" creationid="pingfangx" creationdate="20190102T095501Z">
        <seg>回想一下 &lt;a1&gt;&lt;c2&gt;Bicycle&lt;/c2&gt; &lt;/a1&gt; 示例 &lt;c3&gt;MountainBike&lt;/c3&gt; 是 &lt;c4&gt;Bicycle&lt;/c4&gt; 的子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recall that the &lt;t0&gt;new&lt;/t0&gt; operator returns a reference to an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T075942Z" creationid="pingfangx" creationdate="20180601T075942Z">
        <seg>回想一下，&lt;t0&gt;new&lt;/t0&gt; 操作符返回一个对象的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recall that the signature for the &lt;c3&gt;main&lt;/c3&gt; method is &lt;c4&gt;public static void main(String[] args)&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073727Z" creationid="pingfangx" creationdate="20180518T073727Z">
        <seg>回想一下，&lt;c3&gt;main&lt;/c3&gt; 方法的签名是 &lt;c4&gt;public static void main(String[] args)&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recall the lambda expression that selected members who are male and between the ages 18 and 25 years:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081429Z" creationid="pingfangx" creationdate="20181228T081429Z">
        <seg>回想一下 lambda 表达式，它选择了男性且年龄在 18 到 25 岁之间的成员：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reconsider the &lt;c0&gt;CheckPerson&lt;/c0&gt; interface:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092712Z" creationid="pingfangx" creationdate="20180706T092712Z">
        <seg>重新考虑 &lt;c0&gt;CheckPerson&lt;/c0&gt; 接口：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reconsider the method &lt;c0&gt;printPersonsWithPredicate&lt;/c0&gt; to see where else you could use lambda expressions:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093751Z" creationid="pingfangx" creationdate="20180706T093751Z">
        <seg>重新考虑方法 &lt;c0&gt;printPersonsWithPredicate&lt;/c0&gt; 以查看可以使用 lambda 表达式的其他位置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reconsider the method &lt;c0&gt;processPersonsWithFunction&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100156Z" creationid="pingfangx" creationdate="20180706T100156Z">
        <seg>重新考虑方法 &lt;c0&gt;processPersonsWithFunction&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rectangle myRect = new Rectangle();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083719Z" creationid="pingfangx" creationdate="20180705T083719Z">
        <seg>Rectangle myRect = new Rectangle();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rectangle myRect;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083216Z" creationid="pingfangx" creationdate="20180705T083216Z">
        <seg>Rectangle myRect;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rectangle rect = new Rectangle();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071558Z" creationid="pingfangx" creationdate="20180601T071558Z">
        <seg>Rectangle rect = new Rectangle();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rectangle rectOne = new Rectangle(originOne, 100, 200);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040017Z" creationid="pingfangx" creationdate="20180601T040017Z">
        <seg>Rectangle rectOne = new Rectangle(originOne, 100, 200);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rectangle rectTwo = new Rectangle(50, 100);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040018Z" creationid="pingfangx" creationdate="20180601T040018Z">
        <seg>Rectangle rectTwo = new Rectangle(50, 100);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rectangle.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083449Z" creationid="pingfangx" creationdate="20180705T083449Z">
        <seg>Rectangle.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Redeclare the default method, which makes it &lt;c0&gt;abstract&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063420Z" creationid="pingfangx" creationdate="20190102T063420Z">
        <seg>重新声明默认方法，使其成为 &lt;c0&gt;abstract&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Redefine the default method, which overrides it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063440Z" creationid="pingfangx" creationdate="20190102T063440Z">
        <seg>重新定义默认方法，将重写该方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Refer to member variables that enclose larger scopes by the class name to which they belong.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091658Z" creationid="pingfangx" creationdate="20180705T091658Z">
        <seg>请参阅通过它们所属的类名包含较大范围的成员变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Refer to the Bicycle class if you forget the required syntax.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064807Z" creationid="pingfangx" creationdate="20180518T064807Z">
        <seg>如果您忘记了所需的语法，请参阅 Bicycle 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference data type parameters, such as objects, are also passed into methods &lt;i0&gt;by value&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034724Z" creationid="pingfangx" creationdate="20180601T034113Z">
        <seg>引用数据类型的参数（如对象）也&lt;i0&gt;通过值&lt;/i0&gt;传递到方法中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference to a Constructor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084854Z" creationid="pingfangx" creationdate="20181228T084854Z">
        <seg>引用构造函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference to a Static Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084633Z" creationid="pingfangx" creationdate="20181228T084633Z">
        <seg>引用静态方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference to a constructor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084618Z" creationid="pingfangx" creationdate="20181228T084618Z">
        <seg>引用构造函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference to a static method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084526Z" creationid="pingfangx" creationdate="20181228T084526Z">
        <seg>引用静态方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference to an Instance Method of a Particular Object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084704Z" creationid="pingfangx" creationdate="20181228T084704Z">
        <seg>引用特定对象的实例方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference to an Instance Method of an Arbitrary Object of a Particular Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084745Z" creationid="pingfangx" creationdate="20181228T084745Z">
        <seg>对特定类型的任意对象的实例方法的引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference to an instance method of a particular object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084543Z" creationid="pingfangx" creationdate="20181228T084543Z">
        <seg>引用特定对象的实例方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference to an instance method of an arbitrary object of a particular type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084615Z" creationid="pingfangx" creationdate="20181228T084615Z">
        <seg>引用特定类型的任意对象的实例方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>References that are held in a variable are usually dropped when the variable goes out of scope.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085757Z" creationid="pingfangx" creationdate="20180601T085757Z">
        <seg>当变量超出范围时，保存在变量中的引用通常会被删除。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Referencing an Object's Fields</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073357Z" creationid="pingfangx" creationdate="20180601T073357Z">
        <seg>引用对象的字段</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Region is of length &lt;c0&gt;len&lt;/c0&gt; and begins at the index &lt;c1&gt;toffset&lt;/c1&gt; for this string and &lt;c2&gt;ooffset&lt;/c2&gt; for the other string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075816Z" creationid="pingfangx" creationdate="20190103T075816Z">
        <seg>Region 的长度为 &lt;c0&gt;len&lt;/c0&gt;，从该字符串的索引 &lt;c1&gt;toffset&lt;/c1&gt; 开始，从另一个字符串的 &lt;c2&gt;ooffset&lt;/c2&gt; 开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Regular expressions are covered in the lesson titled "Regular Expressions."</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073057Z" creationid="pingfangx" creationdate="20190103T073057Z">
        <seg>正则表达式在标题为 "正则表达式" 的课程中介绍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Regular expressions are discussed in the lesson titled "Regular Expressions."</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075845Z" creationid="pingfangx" creationdate="20190103T075845Z">
        <seg>正则表达式在标题为 "正则表达式" 的课程中讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Relatable obj1 = (Relatable)object1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062628Z" creationid="pingfangx" creationdate="20190102T062628Z">
        <seg>Relatable obj1 = (Relatable)object1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Relatable obj2 = (Relatable)object2;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062628Z" creationid="pingfangx" creationdate="20190102T062628Z">
        <seg>Relatable obj2 = (Relatable)object2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Relying on such default values, however, is generally considered bad programming style.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082131Z" creationid="pingfangx" creationdate="20180518T082131Z">
        <seg>然而，依赖于这种默认值，通常被认为是糟糕的编程风格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remainder operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064442Z" creationid="pingfangx" creationdate="20180521T064442Z">
        <seg>求余运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember that a program can have multiple references to the same object; all references to an object must be dropped before the object is eligible for garbage collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085832Z" creationid="pingfangx" creationdate="20180601T085832Z">
        <seg>请记住，一个程序可以有多个对同一个对象的引用;在对象符合垃圾回收条件之前，必须删除对对象的所有引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember, invoking a method on a particular object is the same as sending a message to that object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085243Z" creationid="pingfangx" creationdate="20180601T085243Z">
        <seg>请记住，在特定对象上调用方法与向该对象发送消息相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember, to use a lambda expression, you need to implement a functional interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093946Z" creationid="pingfangx" creationdate="20180706T093946Z">
        <seg>请记住，要使用 lambda 表达式，您需要实现一个函数式接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Repeating Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092430Z" creationid="pingfangx" creationdate="20180521T092430Z">
        <seg>重复注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Repeating Annotations (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040956Z" creationid="pingfangx" creationdate="20190102T040956Z">
        <seg>Repeating Annotations (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Repeating annotations are supported as of the Java SE 8 release.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024025Z" creationid="pingfangx" creationdate="20190102T024025Z">
        <seg>从 Java SE 8 发行版开始，支持重复注解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Replaces each substring of this string that matches the given regular expression with the given replacement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074822Z" creationid="pingfangx" creationdate="20190103T074249Z">
        <seg>将此字符串中与给定正则表达式匹配的的每一个子字符串替换为给定的 replacement。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Replaces each substring of this string that matches the literal target sequence with the specified literal replacement sequence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074613Z" creationid="pingfangx" creationdate="20190103T074233Z">
        <seg>将此字符串中与 target 匹配的每个子字符串替换为指定的 replacement 序列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Replaces the first substring of this string that matches the given regular expression with the given replacement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074748Z" creationid="pingfangx" creationdate="20190103T074257Z">
        <seg>将此字符串中与给定正则表达式匹配的的第一个子字符串替换为给定的 replacement。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Replaces the specified character(s) in this string builder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082209Z" creationid="pingfangx" creationdate="20190103T082209Z">
        <seg>替换 string builder 中的指定字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Replacing Characters and Substrings into a String</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073537Z" creationid="pingfangx" creationdate="20190103T073537Z">
        <seg>将字符和子字符串替换为字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Restrictions on Generics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093002Z" creationid="pingfangx" creationdate="20180521T093002Z">
        <seg>对泛型的限制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Retrieving Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041256Z" creationid="pingfangx" creationdate="20190102T041256Z">
        <seg>获取注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Return statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081915Z" creationid="pingfangx" creationdate="20181228T081915Z">
        <seg>返回语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returned as a double.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035630Z" creationid="pingfangx" creationdate="20190103T035630Z">
        <seg>返回 double。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returning a Class or Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091717Z" creationid="pingfangx" creationdate="20180601T091717Z">
        <seg>返回一个类或接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returning a Value from a Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092114Z" creationid="pingfangx" creationdate="20180521T092114Z">
        <seg>从方法中返回一个值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returning a Value from a Method (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091010Z" creationid="pingfangx" creationdate="20180601T091010Z">
        <seg>Returning a Value from a Method (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returning values from methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T090201Z" creationid="pingfangx" creationdate="20180601T090201Z">
        <seg>从方法返回值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns &lt;c0&gt;true&lt;/c0&gt; if and only if the argument is a &lt;c1&gt;String&lt;/c1&gt; object that represents the same sequence of characters as this object, ignoring differences in case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075725Z" creationid="pingfangx" creationdate="20190103T075725Z">
        <seg>返回 &lt;c0&gt;true&lt;/c0&gt; 当且仅当参数是 &lt;c1&gt;String&lt;/c1&gt; 对象，且该对象表示与此对象相同的字符序列，忽略大小写的差异。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns &lt;c0&gt;true&lt;/c0&gt; if and only if the argument is a &lt;c1&gt;String&lt;/c1&gt; object that represents the same sequence of characters as this object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075655Z" creationid="pingfangx" creationdate="20190103T075655Z">
        <seg>当且仅当参数是 &lt;c1&gt;String&lt;/c1&gt; 对象时，且该对象表示与此对象相同的字符序列时返回 &lt;c0&gt;true&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns &lt;c0&gt;true&lt;/c0&gt; if this string ends with or begins with the substring specified as an argument to the method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075523Z" creationid="pingfangx" creationdate="20190103T075523Z">
        <seg>如果此字符串以指定为方法的参数的子字符串结束或以其开头，则返回 &lt;c0&gt;true&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a &lt;c0&gt;String&lt;/c0&gt; object representing the specified character value  that is, a one-character string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062315Z" creationid="pingfangx" creationdate="20190103T062315Z">
        <seg>返回表示指定字符值的 &lt;c0&gt;String&lt;/c0&gt; 对象也就是说，一个字符的字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a &lt;c0&gt;String&lt;/c0&gt; object representing the specified integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030951Z" creationid="pingfangx" creationdate="20190103T030951Z">
        <seg>返回表示指定整数的 &lt;c0&gt;String&lt;/c0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a &lt;c0&gt;String&lt;/c0&gt; object representing the value of this &lt;c1&gt;Integer&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030940Z" creationid="pingfangx" creationdate="20190103T030940Z">
        <seg>返回表示此 &lt;c1&gt;Integer&lt;/c1&gt; 的值的 &lt;c0&gt;String&lt;/c0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a copy of this string converted to lowercase or uppercase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073150Z" creationid="pingfangx" creationdate="20190103T073150Z">
        <seg>返回转换为小写或大写的此字符串的副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a copy of this string with leading and trailing white space removed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073143Z" creationid="pingfangx" creationdate="20190103T073143Z">
        <seg>返回此字符串的副本，其中移除了前导和尾随空格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a new character sequence constructed from &lt;c0&gt;beginIndex&lt;/c0&gt; index up until &lt;c1&gt;endIndex&lt;/c1&gt; - 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073134Z" creationid="pingfangx" creationdate="20190103T073134Z">
        <seg>返回从 &lt;c0&gt;beginIndex&lt;/c0&gt; 索引到 &lt;c1&gt;endIndex&lt;/c1&gt; - 1 构造的新字符序列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a new string resulting from replacing all occurrences of oldChar in this string with newChar.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074408Z" creationid="pingfangx" creationdate="20190103T074029Z">
        <seg>返回一个新字符串，将此字符串中所有的 oldChar 替换为 newChar 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a new string that is a substring of this string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072640Z" creationid="pingfangx" creationdate="20190103T072640Z">
        <seg>返回一个新字符串，该字符串是此字符串的子字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a string that contains the character sequence in the builder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082235Z" creationid="pingfangx" creationdate="20190103T082235Z">
        <seg>返回包含 string builder 中的字符序列的字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns an &lt;c0&gt;Integer&lt;/c0&gt; object holding the integer value of the specified string representation, parsed with the value of radix.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T031115Z" creationid="pingfangx" creationdate="20190103T031115Z">
        <seg>返回一个 &lt;c0&gt;Integer&lt;/c0&gt; 对象，其中包含指定字符串表示形式的整数值，并使用 radix 值进行解析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns an &lt;c0&gt;Integer&lt;/c0&gt; object holding the value of the specified primitive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T031035Z" creationid="pingfangx" creationdate="20190103T031018Z">
        <seg>返回包含指定基本类型值的 &lt;c0&gt;Integer&lt;/c0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns an &lt;c0&gt;Integer&lt;/c0&gt; object holding the value of the specified string representation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T031117Z" creationid="pingfangx" creationdate="20190103T031031Z">
        <seg>返回包含指定字符串表示形式值的 &lt;c0&gt;Integer&lt;/c0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns an integer (decimal only).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030914Z" creationid="pingfangx" creationdate="20190103T030914Z">
        <seg>返回一个整数(仅限小数)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns an integer indicating whether this string is greater than (result is &gt; 0), equal to (result is = 0), or less than (result is &lt; 0) the argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075622Z" creationid="pingfangx" creationdate="20190103T075622Z">
        <seg>返回一个整数，指示此字符串是否大于(结果&gt; 0)，等于(结果是= 0)或小于(结果是&lt; 0)参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns an integer, given a string representation of decimal, binary, octal, or hexadecimal (&lt;c0&gt;radix&lt;/c0&gt; equals 10, 2, 8, or 16 respectively) numbers as input.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030933Z" creationid="pingfangx" creationdate="20190103T030933Z">
        <seg>给定十进制，二进制，八进制或十六进制(&lt;c0&gt;radix&lt;/c0&gt; 分别等于 10,2,8 或 16)数字作为输入的字符串表示形式，返回一个整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the absolute value of the argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035609Z" creationid="pingfangx" creationdate="20190103T035609Z">
        <seg>返回参数的绝对值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the arccosine of the specified double value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040331Z" creationid="pingfangx" creationdate="20190103T040331Z">
        <seg>返回指定 double 值的反余弦值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the arcsine of the specified double value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040326Z" creationid="pingfangx" creationdate="20190103T040326Z">
        <seg>返回指定 double 值的反正弦值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the arctangent of the specified double value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040335Z" creationid="pingfangx" creationdate="20190103T040335Z">
        <seg>返回指定 double 值的反正切值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the base of the natural logarithms, e, to the power of the argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040211Z" creationid="pingfangx" creationdate="20190103T040017Z">
        <seg>返回以自然对数 e 为底，参数次幂的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the closest long or int, as indicated by the method's return type, to the argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035902Z" creationid="pingfangx" creationdate="20190103T035729Z">
        <seg>返回最接近参数的 long 或 int，如方法的返回类型所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the cosine of the specified double value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040312Z" creationid="pingfangx" creationdate="20190103T040312Z">
        <seg>返回指定 double 值的余弦值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the index of the first (last) occurrence of the specified character, searching forward (backward) from the specified index.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073451Z" creationid="pingfangx" creationdate="20190103T073451Z">
        <seg>返回指定字符的第一个(最后一个)匹配项的索引，从指定的索引向前(向后)搜索。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the index of the first (last) occurrence of the specified character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073420Z" creationid="pingfangx" creationdate="20190103T073420Z">
        <seg>返回指定字符的第一个(最后一个)匹配项的索引。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the index of the first (last) occurrence of the specified substring, searching forward (backward) from the specified index.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073508Z" creationid="pingfangx" creationdate="20190103T073508Z">
        <seg>返回指定子字符串的第一个(最后一个)匹配项的索引，从指定的索引向前(向后)搜索。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the index of the first (last) occurrence of the specified substring.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073500Z" creationid="pingfangx" creationdate="20190103T073500Z">
        <seg>返回指定子字符串的第一个(最后一个)匹配项的索引。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the integer that is closest in value to the argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035648Z" creationid="pingfangx" creationdate="20190103T035648Z">
        <seg>返回与参数值最接近的整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the larger of the two arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035743Z" creationid="pingfangx" creationdate="20190103T035743Z">
        <seg>返回两个参数中较大的一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the largest integer that is less than or equal to the argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035641Z" creationid="pingfangx" creationdate="20190103T035641Z">
        <seg>返回小于或等于参数的最大整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the natural logarithm of the argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040028Z" creationid="pingfangx" creationdate="20190103T040028Z">
        <seg>返回参数的自然对数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the sine of the specified double value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040309Z" creationid="pingfangx" creationdate="20190103T040309Z">
        <seg>返回指定 double 值的正弦值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the smaller of the two arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035735Z" creationid="pingfangx" creationdate="20190103T035735Z">
        <seg>返回两个参数中较小的一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the smallest integer that is greater than or equal to the argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035615Z" creationid="pingfangx" creationdate="20190103T035615Z">
        <seg>返回大于或等于参数的最小整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the square root of the argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040124Z" creationid="pingfangx" creationdate="20190103T040124Z">
        <seg>返回参数的平方根。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the tangent of the specified double value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040317Z" creationid="pingfangx" creationdate="20190103T040317Z">
        <seg>返回指定 double 值的正切值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the uppercase or lowercase form of the specified char value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062243Z" creationid="pingfangx" creationdate="20190103T062243Z">
        <seg>返回指定 char 值的大写或小写形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns the value of the first argument raised to the power of the second argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040120Z" creationid="pingfangx" creationdate="20190103T040120Z">
        <seg>返回第一个参数的第二个参数次幂的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns true if the string contains the specified character sequence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073512Z" creationid="pingfangx" creationdate="20190103T073512Z">
        <seg>如果字符串包含指定的字符序列，则返回 true。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reverses the sequence of characters in this string builder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082218Z" creationid="pingfangx" creationdate="20190103T082218Z">
        <seg>反转此 string builder 中的字符序列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rewrite the &lt;c0&gt;Deck&lt;/c0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020235Z" creationid="pingfangx" creationdate="20190102T020235Z">
        <seg>重写 &lt;c0&gt;Deck&lt;/c0&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rewrite the class &lt;c0&gt;Card&lt;/c0&gt; from the exercise in &lt;a1&gt;Questions and Exercises: Classes&lt;/a1&gt; so that it represents the rank and suit of a card with enum types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020224Z" creationid="pingfangx" creationdate="20190102T020224Z">
        <seg>从 &lt;a1&gt;Questions and Exercises: Classes&lt;/a1&gt; 中的练习重写类 &lt;c0&gt;Card&lt;/c0&gt;，以便它表示具有枚举类型的卡的等级和套装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Robust</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033046Z" creationid="pingfangx" creationdate="20180518T033042Z">
        <seg>Robust（健壮）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run the Program</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034353Z" creationid="pingfangx" creationdate="20180518T034353Z">
        <seg>运行程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run the program</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034504Z" creationid="pingfangx" creationdate="20180518T034504Z">
        <seg>运行该程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running the program produces this output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064030Z" creationid="pingfangx" creationdate="20190103T064030Z">
        <seg>运行该程序会产生以下输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running this program produces the same output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082807Z" creationid="pingfangx" creationdate="20190103T082804Z">
        <seg>运行此程序会产生相同的输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SATURN  (5.688e+26, 6.0268e7),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020020Z" creationid="pingfangx" creationdate="20190102T020020Z">
        <seg>SATURN  (5.688e+26, 6.0268e7),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SEVEN  (7 , "Seven"),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065243Z" creationid="pingfangx" creationdate="20190102T065243Z">
        <seg>SEVEN  (7 , "Seven"),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SIX    (6 , "Six"  ),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065242Z" creationid="pingfangx" creationdate="20190102T065242Z">
        <seg>SIX    (6 , "Six"  ),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SOURCE sourceCollection,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084929Z" creationid="pingfangx" creationdate="20181228T084929Z">
        <seg>SOURCE sourceCollection,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SPADES   (4, "Spades"  );</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065236Z" creationid="pingfangx" creationdate="20190102T065236Z">
        <seg>SPADES   (4, "Spades"  );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SUNDAY, MONDAY, TUESDAY, WEDNESDAY,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015306Z" creationid="pingfangx" creationdate="20190102T015306Z">
        <seg>SUNDAY, MONDAY, TUESDAY, WEDNESDAY,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Save the code in a file with the name &lt;c0&gt;HelloWorldApp.java&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034633Z" creationid="pingfangx" creationdate="20180518T034633Z">
        <seg>将代码保存在名为 &lt;c0&gt;HelloWorldApp.java&lt;/c0&gt; 的文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scene scene = new Scene(root, 300, 150);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065953Z" creationid="pingfangx" creationdate="20180706T065953Z">
        <seg>Scene scene = new Scene(root, 300, 150);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Schedule[] value();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041253Z" creationid="pingfangx" creationdate="20190102T041253Z">
        <seg>Schedule[] value();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Searches for a match as specified by the string argument (which contains a regular expression) and splits this string into an array of strings accordingly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073043Z" creationid="pingfangx" creationdate="20190103T073043Z">
        <seg>搜索字符串参数(包含正则表达式)指定的匹配项，并相应地将此字符串拆分为字符串数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Searching an array for a specific value to get the index at which it is placed (the &lt;c0&gt;binarySearch&lt;/c0&gt; method).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T054436Z" creationid="pingfangx" creationdate="20180521T054436Z">
        <seg>在数组中搜索特定值以获取它所在的索引(&lt;c0&gt;binarySearch&lt;/c0&gt; 方法)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Searching for Characters and Substrings in a String</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073204Z" creationid="pingfangx" creationdate="20190103T073204Z">
        <seg>在字符串中搜索字符和子字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Second, when you write a class, you need to decide what access level every member variable and every method in your class should have.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041329Z" creationid="pingfangx" creationdate="20180607T041329Z">
        <seg>其次，当你编写一个类时，你需要决定每个成员变量和类中每个方法应具有的访问级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Secure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033052Z" creationid="pingfangx" creationdate="20180518T033052Z">
        <seg>Secure（安全）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Shadowing&lt;/a0&gt; for more information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123638Z" creationid="pingfangx" creationdate="20180705T123638Z">
        <seg>有关更多信息，请参见 &lt;a0&gt;遮蔽&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Syntax of Lambda Expressions&lt;/a0&gt; for information about how to define lambda expressions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092049Z" creationid="pingfangx" creationdate="20180706T092049Z">
        <seg>有关如何定义 lambda 表达式的信息，请参阅 &lt;a0&gt;Syntax of Lambda Expressions&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a1&gt;Learning Paths&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030508Z" creationid="pingfangx" creationdate="20180518T030508Z">
        <seg>请参阅 &lt;a1&gt;Learning Paths&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a2&gt;Understanding Class Members&lt;/a2&gt; for more information.) The following code excerpt compiles because the static member &lt;c3&gt;EnglishGoodbye.farewell&lt;/c3&gt; is a constant variable:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T145236Z" creationid="pingfangx" creationdate="20180705T145219Z">
        <seg>有关更多信息，请参阅 &lt;a2&gt;了解类成员&lt;/a2&gt;。）以下代码片断可以编译，因为静态成员 &lt;c3&gt;EnglishGoodbye.farewell&lt;/c3&gt; 是一个常量变量：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a3&gt;&lt;c4&gt;ProblemSolved.java&lt;/c4&gt;&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014716Z" creationid="pingfangx" creationdate="20190102T014713Z">
        <seg>参见 &lt;a3&gt;&lt;c4&gt;ProblemSolved.java&lt;/c4&gt;&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See Class2.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021209Z" creationid="pingfangx" creationdate="20190102T021209Z">
        <seg>See Class2.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the &lt;a3&gt;AnnotatedElement&lt;/a3&gt; class specification for information on all of the available methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041359Z" creationid="pingfangx" creationdate="20190102T041359Z">
        <seg>有关所有可用方法的信息，请参阅 &lt;a3&gt;AnnotatedElement&lt;/a3&gt; 类规范。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the section &lt;a1&gt;Lambda Expressions&lt;/a1&gt; for more information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065740Z" creationid="pingfangx" creationdate="20180706T065740Z">
        <seg>有关更多信息，请参阅 &lt;a1&gt;Lambda Expressions&lt;/a1&gt; 部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the section &lt;a5&gt;Implicit and Synthetic Parameters&lt;/a5&gt; in the section &lt;a6&gt;Obtaining Names of Method Parameters&lt;/a6&gt; for more information about the synthetic constructs generated when an inner class is compiled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091953Z" creationid="pingfangx" creationdate="20180705T091953Z">
        <seg>有关在编译内部类时生成的合成构造的更多信息，请参阅 &lt;a6&gt;获取方法参数名称&lt;/a6&gt; 部分中的 &lt;a5&gt;隐式和合成参数&lt;/a5&gt; 部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the section The Number Classes for more information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081247Z" creationid="pingfangx" creationdate="20180518T081247Z">
        <seg>有关更多信息，请参阅数字类部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Select one of the sentences from this book to use as the data.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074609Z" creationid="pingfangx" creationdate="20190102T074609Z">
        <seg>选择本书中的一个句子作为数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Serialization</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083930Z" creationid="pingfangx" creationdate="20180705T091704Z">
        <seg>序列化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set&lt;Person&gt; rosterSet = transferElements(roster, HashSet::new);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T085035Z" creationid="pingfangx" creationdate="20181228T085035Z">
        <seg>Set&lt;Person&gt; rosterSet = transferElements(roster, HashSet::new);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set&lt;Person&gt; rosterSet = transferElements(roster, HashSet&lt;Person&gt;::new);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T085109Z" creationid="pingfangx" creationdate="20181228T085109Z">
        <seg>Set&lt;Person&gt; rosterSet = transferElements(roster, HashSet&lt;Person&gt;::new);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set&lt;Person&gt; rosterSetLambda =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T085028Z" creationid="pingfangx" creationdate="20181228T085028Z">
        <seg>Set&lt;Person&gt; rosterSetLambda =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sets the length of the character sequence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081405Z" creationid="pingfangx" creationdate="20190103T081405Z">
        <seg>设置字符序列的长度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sex gender;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085437Z" creationid="pingfangx" creationdate="20180706T085437Z">
        <seg>Sex gender;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ShadowTest st = new ShadowTest();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091534Z" creationid="pingfangx" creationdate="20180705T091534Z">
        <seg>ShadowTest st = new ShadowTest();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ShadowTest.FirstLevel fl = st.new FirstLevel();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091534Z" creationid="pingfangx" creationdate="20180705T091534Z">
        <seg>ShadowTest.FirstLevel fl = st.new FirstLevel();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shadowing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091412Z" creationid="pingfangx" creationdate="20180705T091412Z">
        <seg>遮蔽</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shadowing and Local Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123253Z" creationid="pingfangx" creationdate="20180705T121524Z">
        <seg>遮蔽和局部类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shadowing fields can make your code difficult to read and is conventionally used only within constructors and methods that set a particular field.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033540Z" creationid="pingfangx" creationdate="20180601T033540Z">
        <seg>阴影字段可能会使您的代码难以阅读，并且通常仅用于设置特定字段的构造函数和方法中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>She said "Hello!" to me.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062603Z" creationid="pingfangx" creationdate="20190103T062603Z">
        <seg>She said "Hello!" to me.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Short</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084704Z" creationid="pingfangx" creationdate="20190103T084704Z">
        <seg>Short</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Show the code you would use to accomplish this task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041447Z" creationid="pingfangx" creationdate="20190103T041447Z">
        <seg>显示您将用于完成此任务的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Show two ways to concatenate the following two strings together to get the string &lt;c0&gt;"Hi, mom."&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085302Z" creationid="pingfangx" creationdate="20190103T085302Z">
        <seg>显示两种方法将以下两个字符串连接在一起以获取字符串 &lt;c0&gt;"Hi, mom."&lt;/c0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, an &lt;c3&gt;Object&lt;/c3&gt; &lt;i4&gt;may be&lt;/i4&gt; a &lt;c5&gt;Bicycle&lt;/c5&gt; or a &lt;c6&gt;MountainBike&lt;/c6&gt;, but it isn't necessarily.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083347Z" creationid="pingfangx" creationdate="20190102T083250Z">
        <seg>类似地，&lt;c3&gt;Object&lt;/c3&gt; &lt;i4&gt;可能是&lt;/i4&gt; 一个 &lt;c5&gt;Bicycle&lt;/c5&gt; 或 &lt;c6&gt;MountainBike&lt;/c6&gt;，但不一定如此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, if you use a number object when a primitive is expected, the compiler &lt;i2&gt;unboxes&lt;/i2&gt; the object for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025507Z" creationid="pingfangx" creationdate="20190103T025433Z">
        <seg>类似地，如果在期望基本类型时使用数字对象，则编译器会 &lt;i2&gt;拆箱&lt;/i2&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, they can all be compared with the following methods:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062704Z" creationid="pingfangx" creationdate="20190102T062704Z">
        <seg>同样，它们都可以与以下方法进行比较：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, you can declare arrays of other types:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T034847Z" creationid="pingfangx" creationdate="20180521T034847Z">
        <seg>同样，你可以声明其他类型的数组：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, you can prevent a method from being overridden by subclasses by declaring it as a final method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023328Z" creationid="pingfangx" creationdate="20190103T023328Z">
        <seg>同样，您可以通过将方法声明为最终方法来防止子类覆盖该方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simple</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032915Z" creationid="pingfangx" creationdate="20180518T032915Z">
        <seg>Simple（简单）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simple Assignment Operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071120Z" creationid="pingfangx" creationdate="20180521T071120Z">
        <seg>简单赋值运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply declaring a reference variable does not create an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042744Z" creationid="pingfangx" creationdate="20180601T042744Z">
        <seg>简单地声明一个引用变量不会创建一个对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since a primitive type is returned instead of an object, the &lt;c4&gt;parseFloat()&lt;/c4&gt; method is more direct than the &lt;c5&gt;valueOf()&lt;/c5&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065252Z" creationid="pingfangx" creationdate="20190103T065252Z">
        <seg>由于返回基本类型而不是对象，因此 &lt;c4&gt;parseFloat()&lt;/c4&gt; 方法比 &lt;c5&gt;valueOf()&lt;/c5&gt; 方法更直接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since all numbers can be converted to strings (as you will see later in this lesson), you can use these methods to print out an arbitrary mixture of strings and numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032053Z" creationid="pingfangx" creationdate="20190103T032053Z">
        <seg>由于所有数字都可以转换为字符串(您将在本课程后面看到)，您可以使用这些方法打印出字符串和数字的任意混合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since strings are immutable, what these methods really do is create and return a new string that contains the result of the operation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063554Z" creationid="pingfangx" creationdate="20190103T063554Z">
        <seg>由于字符串是不可变的，因此这些方法真正做的是创建并返回包含操作结果的新字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So "7" doesn't get printed until the next line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073411Z" creationid="pingfangx" creationdate="20180521T073411Z">
        <seg>所以 "7" 直到下一行才会被打印出来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So to refer to the &lt;t2&gt;origin&lt;/t2&gt;, &lt;t3&gt;width&lt;/t3&gt;, and &lt;t4&gt;height&lt;/t4&gt; fields within the &lt;t5&gt;Rectangle&lt;/t5&gt; object named &lt;t6&gt;rectOne&lt;/t6&gt;, the &lt;t7&gt;CreateObjectDemo&lt;/t7&gt; class must use the names &lt;t8&gt;rectOne.origin&lt;/t8&gt;, &lt;t9&gt;rectOne.width&lt;/t9&gt;, and &lt;t10&gt;rectOne.height&lt;/t10&gt;, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073829Z" creationid="pingfangx" creationdate="20180601T073717Z">
        <seg>所以要引用名为 &lt;t6&gt;rectOne&lt;/t6&gt; 的 &lt;t5&gt;Rectangle&lt;/t5&gt; 对象中的 &lt;t2&gt;origin&lt;/t2&gt;，&lt;t3&gt;width&lt;/t3&gt; 和 &lt;t4&gt;height&lt;/t4&gt; 字段，&lt;t7&gt;CreateObjectDemo&lt;/t7&gt; 类必须分别使用名称 &lt;t8&gt;rectOne.origin&lt;/t8&gt;，&lt;t9&gt;rectOne.width&lt;/t9&gt; 和 &lt;t10&gt;rectOne.height&lt;/t10&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So using the simple names &lt;c5&gt;x&lt;/c5&gt; or &lt;c6&gt;y&lt;/c6&gt; within the body of the method refers to the parameter, &lt;i7&gt;not&lt;/i7&gt; to the field.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033736Z" creationid="pingfangx" creationdate="20180601T033736Z">
        <seg>因此，在方法体内使用简单名称 &lt;c5&gt;x&lt;/c5&gt; 或 &lt;c6&gt;y&lt;/c6&gt; 是指该字段的参数 &lt;i7&gt;而不是&lt;/i7&gt;字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So you could use the value returned from new to access a new object's fields:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T075949Z" creationid="pingfangx" creationdate="20180601T075949Z">
        <seg>所以你可以使用从 new 返回的值来访问新对象的字段：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, to refer to &lt;c4&gt;printMethod()&lt;/c4&gt; inherited from &lt;c5&gt;Superclass&lt;/c5&gt;, &lt;c6&gt;Subclass&lt;/c6&gt; must use a qualified name, using &lt;c7&gt;super&lt;/c7&gt; as shown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095427Z" creationid="pingfangx" creationdate="20190102T095327Z">
        <seg>因此，要引用从 &lt;c5&gt;Superclass&lt;/c5&gt; 继承的 &lt;c4&gt;printMethod()&lt;/c4&gt;，&lt;c6&gt;Subclass&lt;/c6&gt; 必须使用限定名称，如所示的使用 &lt;c7&gt;super&lt;/c7&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Software</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030702Z" creationid="pingfangx" creationdate="20180518T030702Z">
        <seg>软件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Software objects are conceptually similar to real-world objects: they too consist of state and related behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061413Z" creationid="pingfangx" creationdate="20180518T061413Z">
        <seg>软件对象在概念上与真实世界的对象相似：它们也包含状态和相关行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Software objects are often used to model the real-world objects that you find in everyday life.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042856Z" creationid="pingfangx" creationdate="20180518T042856Z">
        <seg>软件对象通常用于模拟您在日常生活中发现的真实世界对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Solution:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091432Z" creationid="pingfangx" creationdate="20180521T091432Z">
        <seg>解答：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some annotation types are used by the Java compiler, and some apply to other annotations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033245Z" creationid="pingfangx" creationdate="20190102T033245Z">
        <seg>Java 编译器使用某些注解类型，有些注解类型适用于其他注解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some methods, such as &lt;t0&gt;getArea()&lt;/t0&gt;, return a value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085152Z" creationid="pingfangx" creationdate="20180601T085152Z">
        <seg>某些方法（如 &lt;t0&gt;getArea()&lt;/t0&gt;）会返回一个值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some object-oriented languages require that you keep track of all the objects you create and that you explicitly destroy them when they are no longer needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085321Z" creationid="pingfangx" creationdate="20180601T085321Z">
        <seg>一些面向对象的语言要求你跟踪你创建的所有对象，并且在不再需要时明确地销毁它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of these states and behaviors are the same for all graphic objects (for example: position, fill color, and moveTo).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022149Z" creationid="pingfangx" creationdate="20190103T022149Z">
        <seg>所有图形对象中的一些状态和行为都是相同的(例如：位置，填充颜色和 moveTo)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some other useful operations provided by methods in the &lt;c0&gt;java.util.Arrays&lt;/c0&gt; class, are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T054016Z" creationid="pingfangx" creationdate="20180521T054011Z">
        <seg>由 &lt;c0&gt;java.util.Arrays&lt;/c0&gt; 类中的方法提供的一些其他有用的操作有：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some virtual machines, such as the &lt;a1&gt;Java SE HotSpot at a Glance&lt;/a1&gt;, perform additional steps at runtime to give your application a performance boost.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033226Z" creationid="pingfangx" creationdate="20180518T033226Z">
        <seg>一些虚拟机（例如 &lt;a1&gt;Java SE HotSpot at a Glance&lt;/a1&gt;）在运行时执行其他步骤，以提高应用程序的性能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SomethingIsRight.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083714Z" creationid="pingfangx" creationdate="20180705T083714Z">
        <seg>SomethingIsRight.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you need to convert a number to a string because you need to operate on the value in its string form.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065327Z" creationid="pingfangx" creationdate="20190103T065327Z">
        <seg>有时您需要将数字转换为字符串，因为您需要对其字符串形式的值进行操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes, however, a lambda expression does nothing but call an existing method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082656Z" creationid="pingfangx" creationdate="20181228T082656Z">
        <seg>但是，有时，lambda 表达式只会调用现有方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes, you want to have variables that are common to all objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042542Z" creationid="pingfangx" creationdate="20180607T042542Z">
        <seg>有时候，你想拥有所有对象通用的变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sorting an array into ascending order.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T054508Z" creationid="pingfangx" creationdate="20180521T054508Z">
        <seg>按升序排列数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Source Code Comments</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035408Z" creationid="pingfangx" creationdate="20180518T035408Z">
        <seg>源码注释</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specialized Trails and Lessons</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031446Z" creationid="pingfangx" creationdate="20180518T031446Z">
        <seg>专业的路径与课程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify the default value as &lt;c4&gt;unassigned&lt;/c4&gt; for engineer and &lt;c5&gt;unknown&lt;/c5&gt; for date.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041641Z" creationid="pingfangx" creationdate="20190102T041641Z">
        <seg>为工程师指定默认值 &lt;c4&gt;unassigned&lt;/c4&gt;，为日期指定 &lt;c5&gt;unknown&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify the default value as &lt;c5&gt;unassigned&lt;/c5&gt; for engineer and &lt;c6&gt;unknown&lt;/c6&gt; for date.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041756Z" creationid="pingfangx" creationdate="20190102T041756Z">
        <seg>为工程师指定默认值 &lt;c5&gt;unassigned&lt;/c5&gt;，为日期指定 &lt;c6&gt;unknown&lt;/c6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StackPane root = new StackPane();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065646Z" creationid="pingfangx" creationdate="20180706T065646Z">
        <seg>StackPane root = new StackPane();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StandardDeck myDeck = new StandardDeck();
myDeck.shuffle();
myDeck.sort(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071300Z" creationid="pingfangx" creationdate="20190102T071300Z">
        <seg>StandardDeck myDeck = new StandardDeck();
myDeck.shuffle();
myDeck.sort(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StandardDeck myDeck = new StandardDeck();
myDeck.shuffle();
myDeck.sort(new SortByRankThenSuit());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071103Z" creationid="pingfangx" creationdate="20190102T071103Z">
        <seg>StandardDeck myDeck = new StandardDeck();
myDeck.shuffle();
myDeck.sort(new SortByRankThenSuit());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting in Java SE 8, if you declare the local class in a method, it can access the method's parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123222Z" creationid="pingfangx" creationdate="20180705T123222Z">
        <seg>从 Java SE 8 开始，如果在方法中声明局部类，它可以访问方法的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074803Z" creationid="pingfangx" creationdate="20180521T074803Z">
        <seg>语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Statements are roughly equivalent to sentences in natural languages, but instead of ending with a period, a statement ends with a &lt;s0&gt;semicolon&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075612Z" creationid="pingfangx" creationdate="20180521T075612Z">
        <seg>语句大致相当于自然语言中的句子，但不以句点结束，语句以 &lt;s0&gt;semicolon&lt;/s0&gt; 结尾。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Statements are roughly equivalent to sentences in natural languages, but instead of ending with a period, a statement ends with a ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075502Z" creationid="pingfangx" creationdate="20180521T075502Z">
        <seg>陈述大致相当于自然语言的句子，但不是以句点结束，而是以___结尾。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Statements are roughly equivalent to sentences in natural languages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074809Z" creationid="pingfangx" creationdate="20180521T074809Z">
        <seg>语句大致相当于自然语言中的句子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Statements may be grouped into &lt;s0&gt;blocks&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075604Z" creationid="pingfangx" creationdate="20180521T075604Z">
        <seg>语句可以分组为 &lt;s0&gt;blocks&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Statements may be grouped into ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075447Z" creationid="pingfangx" creationdate="20180521T075447Z">
        <seg>陈述可以分组为___。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Static Initialization Blocks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065955Z" creationid="pingfangx" creationdate="20180705T065955Z">
        <seg>静态初始化块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Static Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063543Z" creationid="pingfangx" creationdate="20190102T063543Z">
        <seg>静态方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Static Nested Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090950Z" creationid="pingfangx" creationdate="20180705T090950Z">
        <seg>静态嵌套类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Static methods like &lt;c7&gt;compareUnsigned&lt;/c7&gt;, &lt;c8&gt;divideUnsigned&lt;/c8&gt; etc have been added to the &lt;a9&gt;&lt;c10&gt;Integer&lt;/c10&gt;&lt;/a9&gt; class to support the arithmetic operations for unsigned integers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081316Z" creationid="pingfangx" creationdate="20180518T081316Z">
        <seg>类似 &lt;c7&gt;compareUnsigned&lt;/c7&gt;，&lt;c8&gt;divideUnsigned&lt;/c8&gt; 等静态方法已被添加到 &lt;a9&gt;&lt;c10&gt;Integer&lt;/c10&gt;&lt;/a9&gt; 类中以支持无符号整数的算术运算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Static methods, which have the &lt;c0&gt;static&lt;/c0&gt; modifier in their declarations, should be invoked with the class name, without the need for creating an instance of the class, as in</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043505Z" creationid="pingfangx" creationdate="20180607T043505Z">
        <seg>静态方法，在声明中使用 &lt;c0&gt;static&lt;/c0&gt; 修饰符的方法，应该用类名调用，而不需要创建类的实例，如</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Static nested classes are accessed using the enclosing class name:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091057Z" creationid="pingfangx" creationdate="20180705T091057Z">
        <seg>使用封闭的类名访问静态嵌套类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Static nested classes do not have access to other members of the enclosing class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090645Z" creationid="pingfangx" creationdate="20180705T090645Z">
        <seg>静态嵌套类无权访问封闭类的其他成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Static nested classes, inner classes, anonymous inner classes, local classes, and lambda expressions are covered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023141Z" creationid="pingfangx" creationdate="20180525T023141Z">
        <seg>包括静态嵌套类，内部类，匿名内部类，本地类和 lambda 表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Step 1: Declare a Repeatable Annotation Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041145Z" creationid="pingfangx" creationdate="20190102T041145Z">
        <seg>第 1 步：声明可重复的注解类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Step 2: Declare the Containing Annotation Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041236Z" creationid="pingfangx" creationdate="20190102T041236Z">
        <seg>第 2 步：声明包含注解类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Still, it is likely to make your programs better and requires less effort than other languages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033754Z" creationid="pingfangx" creationdate="20180518T033754Z">
        <seg>尽管如此，它可能会使您的程序更好，并且比其他语言花费更少的工作量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stream&lt;E&gt; &lt;s0&gt;stream&lt;/s0&gt;()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074550Z" creationid="pingfangx" creationdate="20181228T074550Z">
        <seg>Stream&lt;E&gt; &lt;s0&gt;stream&lt;/s0&gt;()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stream&lt;T&gt; &lt;s0&gt;filter&lt;/s0&gt;(Predicate&lt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074603Z" creationid="pingfangx" creationdate="20181228T074603Z">
        <seg>Stream&lt;T&gt; &lt;s0&gt;filter&lt;/s0&gt;(Predicate&lt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String (or any object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082215Z" creationid="pingfangx" creationdate="20180518T082215Z">
        <seg>String(或任何对象)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String Length</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063557Z" creationid="pingfangx" creationdate="20190103T063557Z">
        <seg>字符串长度</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String anotherPalindrome = "Niagara.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072555Z" creationid="pingfangx" creationdate="20190103T072555Z">
        <seg>String anotherPalindrome = "Niagara.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String author();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024840Z" creationid="pingfangx" creationdate="20190102T024840Z">
        <seg>String author();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String base5String = "230";
int result = Integer.valueOf(base5String, 5);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041740Z" creationid="pingfangx" creationdate="20190103T041740Z">
        <seg>String base5String = "230";
int result = Integer.valueOf(base5String, 5);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String currentNumber = phoneNumber.replaceAll(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122500Z" creationid="pingfangx" creationdate="20180705T122500Z">
        <seg>String currentNumber = phoneNumber.replaceAll(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String data = mapper.apply(p);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094310Z" creationid="pingfangx" creationdate="20180706T094310Z">
        <seg>String data = mapper.apply(p);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String date() default "[unknown]";
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041816Z" creationid="pingfangx" creationdate="20190102T041816Z">
        <seg>String date() default "[unknown]";
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String date();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024841Z" creationid="pingfangx" creationdate="20190102T024841Z">
        <seg>String date();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String dayOfMonth() default "first";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041157Z" creationid="pingfangx" creationdate="20190102T041157Z">
        <seg>String dayOfMonth() default "first";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String dayOfWeek() default "Mon";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041158Z" creationid="pingfangx" creationdate="20190102T041158Z">
        <seg>String dayOfWeek() default "Mon";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String deckToString();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065310Z" creationid="pingfangx" creationdate="20190102T065310Z">
        <seg>String deckToString();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String emailAddress;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085438Z" creationid="pingfangx" creationdate="20180706T085438Z">
        <seg>String emailAddress;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String engineer() default "[unassigned]";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041815Z" creationid="pingfangx" creationdate="20190102T041815Z">
        <seg>String engineer() default "[unassigned]";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String findMe = "Eggs";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075855Z" creationid="pingfangx" creationdate="20190103T075855Z">
        <seg>String findMe = "Eggs";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String firstString = "This is";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064827Z" creationid="pingfangx" creationdate="20180521T064827Z">
        <seg>String firstString = "This is";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String formattedPhoneNumber = null;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122456Z" creationid="pingfangx" creationdate="20180705T122456Z">
        <seg>String formattedPhoneNumber = null;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String fs;
fs = String.format("The value of the float " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064832Z" creationid="pingfangx" creationdate="20190103T064832Z">
        <seg>String fs;
fs = String.format("The value of the float " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String greeting = "Hello world!";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062857Z" creationid="pingfangx" creationdate="20190103T062857Z">
        <seg>String greeting = "Hello world!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String hannah = "Did Hannah see bees?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085144Z" creationid="pingfangx" creationdate="20190103T085144Z">
        <seg>String hannah = "Did Hannah see bees?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String hi = "Hi, ";
String mom = "mom.";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085302Z" creationid="pingfangx" creationdate="20190103T085302Z">
        <seg>String hi = "Hi, ";
String mom = "mom.";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String identifyMyself();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092123Z" creationid="pingfangx" creationdate="20190102T092123Z">
        <seg>String identifyMyself();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String lastModified() default "N/A";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024843Z" creationid="pingfangx" creationdate="20190102T024843Z">
        <seg>String lastModified() default "N/A";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String lastModifiedBy() default "N/A";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024844Z" creationid="pingfangx" creationdate="20190102T024844Z">
        <seg>String lastModifiedBy() default "N/A";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String month = "August";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082611Z" creationid="pingfangx" creationdate="20180521T082611Z">
        <seg>String month = "August";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String monthString;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082016Z" creationid="pingfangx" creationdate="20180521T082016Z">
        <seg>String monthString;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String myName = "Fred F. Flintstone";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085903Z" creationid="pingfangx" creationdate="20190103T085903Z">
        <seg>String myName = "Fred F. Flintstone";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String name = "mundo";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061134Z" creationid="pingfangx" creationdate="20180706T061134Z">
        <seg>String name = "mundo";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String name = "tout le monde";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061131Z" creationid="pingfangx" creationdate="20180706T061131Z">
        <seg>String name = "tout le monde";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String name = "world";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061127Z" creationid="pingfangx" creationdate="20180706T061127Z">
        <seg>String name = "world";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String name;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085437Z" creationid="pingfangx" creationdate="20180706T085437Z">
        <seg>String name;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String original = "software";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085253Z" creationid="pingfangx" creationdate="20190103T085253Z">
        <seg>String original = "software";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String output = myFormatter.format(value);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034050Z" creationid="pingfangx" creationdate="20190103T034050Z">
        <seg>String output = myFormatter.format(value);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String palindrome = "Dot saw I was Tod";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064008Z" creationid="pingfangx" creationdate="20190103T064008Z">
        <seg>String palindrome = "Dot saw I was Tod";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String palindrome = "Dot saw I was Tod";
int len = palindrome.length();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063649Z" creationid="pingfangx" creationdate="20190103T063649Z">
        <seg>String palindrome = "Dot saw I was Tod";
int len = palindrome.length();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String phoneNumber1, String phoneNumber2) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122440Z" creationid="pingfangx" creationdate="20180705T122440Z">
        <seg>String phoneNumber1, String phoneNumber2) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String quote =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064552Z" creationid="pingfangx" creationdate="20190103T064552Z">
        <seg>String quote =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String replace(CharSequence target, CharSequence replacement)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074029Z" creationid="pingfangx" creationdate="20190103T074029Z">
        <seg>String replace(CharSequence target, CharSequence replacement)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String replace(char oldChar, char newChar)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074018Z" creationid="pingfangx" creationdate="20190103T074018Z">
        <seg>String replace(char oldChar, char newChar)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String replaceAll(String regex, String replacement)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074234Z" creationid="pingfangx" creationdate="20190103T074234Z">
        <seg>String replaceAll(String regex, String replacement)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String replaceFirst(String regex, String replacement)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074251Z" creationid="pingfangx" creationdate="20190103T074251Z">
        <seg>String replaceFirst(String regex, String replacement)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String reversePalindrome =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064021Z" creationid="pingfangx" creationdate="20190103T064021Z">
        <seg>String reversePalindrome =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String s = "Hello world!";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083314Z" creationid="pingfangx" creationdate="20190103T083314Z">
        <seg>String s = "Hello world!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String s = Double.toString(d);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065437Z" creationid="pingfangx" creationdate="20190103T065437Z">
        <seg>String s = Double.toString(d);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String s = invoke(() -&gt; "done");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082214Z" creationid="pingfangx" creationdate="20181228T082214Z">
        <seg>String s = invoke(() -&gt; "done");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String s1 = "" + i;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065342Z" creationid="pingfangx" creationdate="20190103T065342Z">
        <seg>String s1 = "" + i;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String s2 = String.valueOf(i);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065345Z" creationid="pingfangx" creationdate="20190103T065345Z">
        <seg>String s2 = String.valueOf(i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String searchMe = "Green Eggs and Ham";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075854Z" creationid="pingfangx" creationdate="20190103T075854Z">
        <seg>String searchMe = "Green Eggs and Ham";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String searchMe = "Look for a substring in me";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090636Z" creationid="pingfangx" creationdate="20180521T090636Z">
        <seg>String searchMe = "Look for a substring in me";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String searchMe = "peter piper picked a " + "peck of pickled peppers";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090512Z" creationid="pingfangx" creationdate="20180521T090512Z">
        <seg>String searchMe = "peter piper picked a " + "peck of pickled peppers";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String secondString = " a concatenated string.";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064828Z" creationid="pingfangx" creationdate="20180521T064828Z">
        <seg>String secondString = " a concatenated string.";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String string1 = "Cosmo and Laine:";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085928Z" creationid="pingfangx" creationdate="20190103T085928Z">
        <seg>String string1 = "Cosmo and Laine:";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String string1 = "saw I was ";
System.out.println("Dot " + string1 + "Tod");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064427Z" creationid="pingfangx" creationdate="20190103T064427Z">
        <seg>String string1 = "saw I was ";
System.out.println("Dot " + string1 + "Tod");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String string2 = "Maid, clean soon!";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085929Z" creationid="pingfangx" creationdate="20190103T085929Z">
        <seg>String string2 = "Maid, clean soon!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String string2) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085922Z" creationid="pingfangx" creationdate="20190103T085922Z">
        <seg>String string2) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String substring = "sub";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090638Z" creationid="pingfangx" creationdate="20180521T090638Z">
        <seg>String substring = "sub";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String substring(int beginIndex)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072703Z" creationid="pingfangx" creationdate="20190103T072703Z">
        <seg>String substring(int beginIndex)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String substring(int beginIndex, int endIndex)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072636Z" creationid="pingfangx" creationdate="20190103T072636Z">
        <seg>String substring(int beginIndex, int endIndex)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String suspensionType){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093810Z" creationid="pingfangx" creationdate="20190102T093810Z">
        <seg>String suspensionType){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String synopsis();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041815Z" creationid="pingfangx" creationdate="20190102T041815Z">
        <seg>String synopsis();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String thirdString = firstString+secondString;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064828Z" creationid="pingfangx" creationdate="20180521T064828Z">
        <seg>String thirdString = firstString+secondString;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String toLowerCase()&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073143Z" creationid="pingfangx" creationdate="20190103T073143Z">
        <seg>String toLowerCase()&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String toString()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030934Z" creationid="pingfangx" creationdate="20190103T030934Z">
        <seg>String toString()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String toUpperCase()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073144Z" creationid="pingfangx" creationdate="20190103T073144Z">
        <seg>String toUpperCase()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String trim()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073135Z" creationid="pingfangx" creationdate="20190103T073135Z">
        <seg>String trim()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String workingCopy1 = removeJunk(string1);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085922Z" creationid="pingfangx" creationdate="20190103T085922Z">
        <seg>String workingCopy1 = removeJunk(string1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String workingCopy2 = removeJunk(string2);

	    workingCopy1 = workingCopy1.toLowerCase();
	    workingCopy2 = workingCopy2.toLowerCase();

	    workingCopy1 = sort(workingCopy1);
	    workingCopy2 = sort(workingCopy2);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085922Z" creationid="pingfangx" creationdate="20190103T085922Z">
        <seg>String workingCopy2 = removeJunk(string2);

	    workingCopy1 = workingCopy1.toLowerCase();
	    workingCopy2 = workingCopy2.toLowerCase();

	    workingCopy1 = sort(workingCopy1);
	    workingCopy2 = sort(workingCopy2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuffer myInitials = new StringBuffer();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085904Z" creationid="pingfangx" creationdate="20190103T085904Z">
        <seg>StringBuffer myInitials = new StringBuffer();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder Operations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081628Z" creationid="pingfangx" creationdate="20190103T081628Z">
        <seg>StringBuilder 操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder append(Object obj)&lt;br8/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081946Z" creationid="pingfangx" creationdate="20190103T081946Z">
        <seg>StringBuilder append(Object obj)&lt;br8/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder append(String s)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081947Z" creationid="pingfangx" creationdate="20190103T081947Z">
        <seg>StringBuilder append(String s)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder append(boolean b)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081942Z" creationid="pingfangx" creationdate="20190103T081942Z">
        <seg>StringBuilder append(boolean b)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder append(char c)&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081943Z" creationid="pingfangx" creationdate="20190103T081943Z">
        <seg>StringBuilder append(char c)&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder append(char[] str)&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081943Z" creationid="pingfangx" creationdate="20190103T081943Z">
        <seg>StringBuilder append(char[] str)&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder append(char[] str, int offset, int len)&lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081944Z" creationid="pingfangx" creationdate="20190103T081944Z">
        <seg>StringBuilder append(char[] str, int offset, int len)&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder append(double d)&lt;br4/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081945Z" creationid="pingfangx" creationdate="20190103T081945Z">
        <seg>StringBuilder append(double d)&lt;br4/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder append(float f)&lt;br5/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081945Z" creationid="pingfangx" creationdate="20190103T081945Z">
        <seg>StringBuilder append(float f)&lt;br5/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder append(int i)&lt;br6/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081945Z" creationid="pingfangx" creationdate="20190103T081945Z">
        <seg>StringBuilder append(int i)&lt;br6/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder append(long lng)&lt;br7/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081946Z" creationid="pingfangx" creationdate="20190103T081946Z">
        <seg>StringBuilder append(long lng)&lt;br7/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder delete(int start, int end)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082034Z" creationid="pingfangx" creationdate="20190103T082034Z">
        <seg>StringBuilder delete(int start, int end)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder deleteCharAt(int index)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082035Z" creationid="pingfangx" creationdate="20190103T082035Z">
        <seg>StringBuilder deleteCharAt(int index)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder dest = new StringBuilder(len);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085925Z" creationid="pingfangx" creationdate="20190103T085925Z">
        <seg>StringBuilder dest = new StringBuilder(len);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder insert(int index, char[] str, int offset, int len)&lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082057Z" creationid="pingfangx" creationdate="20190103T082057Z">
        <seg>StringBuilder insert(int index, char[] str, int offset, int len)&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder insert(int offset, Object obj)&lt;br8/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082059Z" creationid="pingfangx" creationdate="20190103T082059Z">
        <seg>StringBuilder insert(int offset, Object obj)&lt;br8/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder insert(int offset, String s)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082100Z" creationid="pingfangx" creationdate="20190103T082100Z">
        <seg>StringBuilder insert(int offset, String s)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder insert(int offset, boolean b)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082055Z" creationid="pingfangx" creationdate="20190103T082055Z">
        <seg>StringBuilder insert(int offset, boolean b)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder insert(int offset, char c)&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082056Z" creationid="pingfangx" creationdate="20190103T082056Z">
        <seg>StringBuilder insert(int offset, char c)&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder insert(int offset, char[] str)&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082057Z" creationid="pingfangx" creationdate="20190103T082057Z">
        <seg>StringBuilder insert(int offset, char[] str)&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder insert(int offset, double d)&lt;br4/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082058Z" creationid="pingfangx" creationdate="20190103T082058Z">
        <seg>StringBuilder insert(int offset, double d)&lt;br4/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder insert(int offset, float f)&lt;br5/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082058Z" creationid="pingfangx" creationdate="20190103T082058Z">
        <seg>StringBuilder insert(int offset, float f)&lt;br5/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder insert(int offset, int i)&lt;br6/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082058Z" creationid="pingfangx" creationdate="20190103T082058Z">
        <seg>StringBuilder insert(int offset, int i)&lt;br6/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder insert(int offset, long lng)&lt;br7/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082059Z" creationid="pingfangx" creationdate="20190103T082059Z">
        <seg>StringBuilder insert(int offset, long lng)&lt;br7/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder replace(int start, int end, String s)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082147Z" creationid="pingfangx" creationdate="20190103T082147Z">
        <seg>StringBuilder replace(int start, int end, String s)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder result = new StringBuilder("hi");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085253Z" creationid="pingfangx" creationdate="20190103T085253Z">
        <seg>StringBuilder result = new StringBuilder("hi");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder reverse()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082209Z" creationid="pingfangx" creationdate="20190103T082209Z">
        <seg>StringBuilder reverse()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder sb = new StringBuilder("Able was I ere I saw Elba.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085140Z" creationid="pingfangx" creationdate="20190103T085140Z">
        <seg>StringBuilder sb = new StringBuilder("Able was I ere I saw Elba.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder sb = new StringBuilder(palindrome);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082803Z" creationid="pingfangx" creationdate="20190103T082803Z">
        <seg>StringBuilder sb = new StringBuilder(palindrome);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081034Z" creationid="pingfangx" creationdate="20190103T081034Z">
        <seg>StringBuilder()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder(CharSequence cs)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081053Z" creationid="pingfangx" creationdate="20190103T081053Z">
        <seg>StringBuilder(CharSequence cs)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder(String s)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081131Z" creationid="pingfangx" creationdate="20190103T081131Z">
        <seg>StringBuilder(String s)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringBuilder(int initCapacity)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081114Z" creationid="pingfangx" creationdate="20190103T081114Z">
        <seg>StringBuilder(int initCapacity)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StringSwitchDemo.getMonthNumber(month);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082615Z" creationid="pingfangx" creationdate="20180521T082615Z">
        <seg>StringSwitchDemo.getMonthNumber(month);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String[] reviewers();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024849Z" creationid="pingfangx" creationdate="20190102T024849Z">
        <seg>String[] reviewers();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String[] stringArray = { "Barbara", "James", "Mary", "John",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084752Z" creationid="pingfangx" creationdate="20181228T084752Z">
        <seg>String[] stringArray = { "Barbara", "James", "Mary", "John",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String[] students = new String[10];
String studentName = "Peter Parker";
students[0] = studentName;
studentName = null;
...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083231Z" creationid="pingfangx" creationdate="20180705T083231Z">
        <seg>String[] students = new String[10];
String studentName = "Peter Parker";
students[0] = studentName;
studentName = null;
...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String[] students = new String[10];
String studentName = "Peter Smith";
students[0] = studentName;
studentName = null;
...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083524Z" creationid="pingfangx" creationdate="20180705T083524Z">
        <seg>String[] students = new String[10];
String studentName = "Peter Smith";
students[0] = studentName;
studentName = null;
...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String[][] names = {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042311Z" creationid="pingfangx" creationdate="20180521T042311Z">
        <seg>String[][] names = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092738Z" creationid="pingfangx" creationdate="20180521T092738Z">
        <seg>Strings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062650Z" creationid="pingfangx" creationdate="20190103T062650Z">
        <seg>Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strings are a sequence of characters and are widely used in Java programming.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083250Z" creationid="pingfangx" creationdate="20190103T083250Z">
        <seg>字符串是一系列字符，广泛用于 Java 编程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strings are more commonly concatenated with the &lt;c0&gt;+&lt;/c0&gt; operator, as in</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064415Z" creationid="pingfangx" creationdate="20190103T064415Z">
        <seg>字符串通常与 &lt;c0&gt;+&lt;/c0&gt; 运算符连接，如</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strings should always be used unless string builders offer an advantage in terms of simpler code (see the sample program at the end of this section) or better performance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080749Z" creationid="pingfangx" creationdate="20190103T080728Z">
        <seg>除非 string builder 在使代码更简单(参见本节末尾的示例程序)或性能更好方面提供了优势，否则应始终使用 string。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strings, which are widely used in Java programming, are a sequence of characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024736Z" creationid="pingfangx" creationdate="20190103T024736Z">
        <seg>在 Java 编程中广泛使用的字符串是一系列字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Studying its output will help reinforce what you've just learned.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063347Z" creationid="pingfangx" creationdate="20180521T063347Z">
        <seg>学习它的输出将有助于巩固你刚刚学到的东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040213Z" creationid="pingfangx" creationdate="20180607T040205Z">
        <seg>Subclass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclass Constructors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095410Z" creationid="pingfangx" creationdate="20190102T095410Z">
        <seg>子类构造函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclass Instance Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092708Z" creationid="pingfangx" creationdate="20190102T092708Z">
        <seg>子类实例方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclass Static Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092717Z" creationid="pingfangx" creationdate="20190102T092717Z">
        <seg>子类静态方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclass s = new Subclass();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094944Z" creationid="pingfangx" creationdate="20190102T094944Z">
        <seg>Subclass s = new Subclass();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclasses of a class can define their own unique behaviors and yet share some of the same functionality of the parent class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093200Z" creationid="pingfangx" creationdate="20190102T093200Z">
        <seg>类的子类可以定义它们自己的唯一行为，但仍然共享父类的一些相同函数式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclasses then provide the implementations for the abstract methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023418Z" creationid="pingfangx" creationdate="20190103T023418Z">
        <seg>然后，子类提供抽象方法的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subsequent characters may be letters, digits, dollar signs, or underscore characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074346Z" creationid="pingfangx" creationdate="20180518T074346Z">
        <seg>后续字符可能是字母，数字，美元符号或下划线字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subsequent sections of this lesson will back up and explain class declarations step by step.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023626Z" creationid="pingfangx" creationdate="20180525T023626Z">
        <seg>本课的后续部分将逐步回顾并解释类声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subtraction operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064418Z" creationid="pingfangx" creationdate="20180521T064418Z">
        <seg>减法运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such a class is called a &lt;i0&gt;nested class&lt;/i0&gt; and is illustrated here:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090501Z" creationid="pingfangx" creationdate="20180705T090501Z">
        <seg>这样的类称为 &lt;i0&gt;nested class（嵌套类）&lt;/i0&gt;，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such a class is said to be &lt;i15&gt;descended&lt;/i15&gt; from all the classes in the inheritance chain stretching back to &lt;c16&gt;Object&lt;/c16&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081651Z" creationid="pingfangx" creationdate="20190102T081651Z">
        <seg>这样的类被称为 &lt;i15&gt;descended&lt;/i15&gt; 从延伸回 &lt;c16&gt;Object&lt;/c16&gt; 的继承链中的所有类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such a concatenation can be a mixture of any objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064443Z" creationid="pingfangx" creationdate="20190103T064443Z">
        <seg>这种连接可以是任何对象的混合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such a field is not related to any individual object, but to the class as a whole.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043030Z" creationid="pingfangx" creationdate="20180607T043005Z">
        <seg>这样的字段与任何单个对象无关，而是与整个类相关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such overloaded methods neither hide nor override the superclass instance methodsthey are new methods, unique to the subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092745Z" creationid="pingfangx" creationdate="20190102T092745Z">
        <seg>这样的重载方法既不隐藏也不覆盖超类实例方法 - 它们是新方法，对于子类是唯一的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such statements are called &lt;e0&gt;expression statements&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074856Z" creationid="pingfangx" creationdate="20180521T074856Z">
        <seg>这样的语句被称为 &lt;e0&gt;expression statements（表达式语句）&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suit(int value, String text) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065237Z" creationid="pingfangx" creationdate="20190102T065237Z">
        <seg>Suit(int value, String text) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092610Z" creationid="pingfangx" creationdate="20190102T092610Z">
        <seg>总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Characters and Strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092802Z" creationid="pingfangx" creationdate="20180521T092802Z">
        <seg>字符和字符串总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Characters and Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083149Z" creationid="pingfangx" creationdate="20190103T083149Z">
        <seg>Summary of Characters and Strings (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Control Flow Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061409Z" creationid="pingfangx" creationdate="20180518T072503Z">
        <seg>控制流语句总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Control Flow Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090847Z" creationid="pingfangx" creationdate="20180521T090847Z">
        <seg>Summary of Control Flow Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Creating and Using Classes and Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092200Z" creationid="pingfangx" creationdate="20180521T092144Z">
        <seg>创建及使用类和对象的总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Creating and Using Classes and Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T081825Z" creationid="pingfangx" creationdate="20180705T081825Z">
        <seg>Summary of Creating and Using Classes and Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Creating and Using Packages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093030Z" creationid="pingfangx" creationdate="20180521T093030Z">
        <seg>创建和使用包总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092700Z" creationid="pingfangx" creationdate="20180521T092700Z">
        <seg>继承总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Inheritance (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022757Z" creationid="pingfangx" creationdate="20190103T022757Z">
        <seg>Summary of Inheritance (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092542Z" creationid="pingfangx" creationdate="20180521T092542Z">
        <seg>接口总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Interfaces (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074044Z" creationid="pingfangx" creationdate="20190102T074044Z">
        <seg>Summary of Interfaces (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Numbers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092723Z" creationid="pingfangx" creationdate="20180521T092723Z">
        <seg>数字总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Numbers (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040907Z" creationid="pingfangx" creationdate="20190103T040907Z">
        <seg>Summary of Numbers (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061422Z" creationid="pingfangx" creationdate="20180518T072416Z">
        <seg>运算符总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071056Z" creationid="pingfangx" creationdate="20180521T071056Z">
        <seg>Summary of Operators (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061357Z" creationid="pingfangx" creationdate="20180518T072132Z">
        <seg>变量总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary of Variables (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061452Z" creationid="pingfangx" creationdate="20180521T061452Z">
        <seg>Summary of Variables (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Superclass Instance Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092704Z" creationid="pingfangx" creationdate="20190102T092704Z">
        <seg>超类实例方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Superclass Static Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092705Z" creationid="pingfangx" creationdate="20190102T092705Z">
        <seg>超类静态方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supplier&lt;DEST&gt; collectionFactory) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084930Z" creationid="pingfangx" creationdate="20181228T084930Z">
        <seg>Supplier&lt;DEST&gt; collectionFactory) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that a software group traditionally starts the body of every class with comments providing important information:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024824Z" creationid="pingfangx" creationdate="20190102T024824Z">
        <seg>假设一个软件组传统上在每个类的主体都以注释开始，其中包含提供重要信息的注释：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that members of this social networking application are represented by the following &lt;a0&gt;&lt;c1&gt;Person&lt;/c1&gt;&lt;/a0&gt; class:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085433Z" creationid="pingfangx" creationdate="20180706T085433Z">
        <seg>假设此社交网络应用程序的成员由以下 &lt;a0&gt;&lt;c1&gt;Person&lt;/c1&gt;&lt;/a0&gt; 类表示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that the members of your social networking application are contained in an array, and you want to sort the array by age.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084032Z" creationid="pingfangx" creationdate="20181228T084032Z">
        <seg>假设您的社交网络应用程序的成员包含在一个数组中，并且您希望按年龄对数组进行排序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that the members of your social networking application are stored in a &lt;c0&gt;List&lt;Person&gt;&lt;/c0&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085449Z" creationid="pingfangx" creationdate="20180706T085447Z">
        <seg>假设您的社交网络应用程序的成员存储在 &lt;c0&gt;List&lt;Person&gt;&lt;/c0&gt; 实例中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that you are creating a social networking application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083942Z" creationid="pingfangx" creationdate="20180706T083942Z">
        <seg>假设您正在创建社交网络应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that you are the developer who wrote the &lt;c2&gt;Comparator&lt;/c2&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071220Z" creationid="pingfangx" creationdate="20190102T071220Z">
        <seg>假设您是编写 &lt;c2&gt;Comparator&lt;/c2&gt; 接口的开发人员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that you extend the interface &lt;c0&gt;TimeClient&lt;/c0&gt; as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063445Z" creationid="pingfangx" creationdate="20190102T063445Z">
        <seg>假设您继承接口 &lt;c0&gt;TimeClient&lt;/c0&gt;，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that you have a class hierarchy in which &lt;c1&gt;ImaginaryNumber&lt;/c1&gt; is a subclass of &lt;c2&gt;java.lang.Number&lt;/c2&gt;, which is in turn a subclass of &lt;c3&gt;Object&lt;/c3&gt;, as illustrated in &lt;s4&gt;the following figure&lt;/s4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091918Z" creationid="pingfangx" creationdate="20180601T091918Z">
        <seg>假设您有一个类层次结构，其中 &lt;c1&gt;ImaginaryNumber&lt;/c1&gt; 是 &lt;c2&gt;java.lang.Number&lt;/c2&gt; 的子类，而又是 &lt;c3&gt;Object&lt;/c3&gt; 的子类，如 &lt;s4&gt;下图&lt;/s4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that you have a class that can use calligraphy to draw various types of data (strings, integers, and so on) and that contains a method for drawing each data type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065335Z" creationid="pingfangx" creationdate="20180525T065335Z">
        <seg>假设您有一个可以使用书法绘制各种类型的数据(字符串，整数等)并包含绘制每种数据类型方法的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that you have overloaded the method &lt;c0&gt;invoke&lt;/c0&gt; as follows (see &lt;a1&gt;Defining Methods&lt;/a1&gt; for more information about overloading methods):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082200Z" creationid="pingfangx" creationdate="20181228T082200Z">
        <seg>假设您已按如下方式重载方法 &lt;c0&gt;invoke&lt;/c0&gt;(有关重载方法的详细信息，请参阅 &lt;a1&gt;Defining Methods&lt;/a1&gt;)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that you upgrade your application and change the structure of the &lt;c1&gt;Person&lt;/c1&gt; class such that it contains different member variables; perhaps the class records and measures ages with a different data type or algorithm.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085813Z" creationid="pingfangx" creationdate="20180706T085813Z">
        <seg>假设您升级应用程序并更改 &lt;c1&gt;Person&lt;/c1&gt; 类的结构，使其包含不同的成员变量;也许该类记录和测量年龄与不同的数据类型或算法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that you want to add new functionality to the &lt;c0&gt;TimeClient&lt;/c0&gt; interface, such as the ability to specify a time zone through a &lt;a1&gt;&lt;c2&gt;ZonedDateTime&lt;/c2&gt;&lt;/a1&gt; object (which is like a &lt;a3&gt;&lt;c4&gt;LocalDateTime&lt;/c4&gt;&lt;/a3&gt; object except that it stores time zone information):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061222Z" creationid="pingfangx" creationdate="20190102T061222Z">
        <seg>假设您要向 &lt;c0&gt;TimeClient&lt;/c0&gt; 接口添加新函数式，例如通过 &lt;a1&gt;&lt;c2&gt;ZonedDateTime&lt;/c2&gt;&lt;/a1&gt; 对象指定时区的函数式(这是像 &lt;a3&gt;&lt;c4&gt;LocalDateTime&lt;/c4&gt;&lt;/a3&gt; 对象，除了它存储时区信息)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that you want to validate the members' profiles or retrieve their contact information?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094241Z" creationid="pingfangx" creationdate="20180706T094241Z">
        <seg>假设您要验证成员的个人资料或检索他们的联系信息？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that your developers would like to create a &lt;c0&gt;Comparator&lt;/c0&gt; instance that could compare objects with more than one criteria.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071806Z" creationid="pingfangx" creationdate="20190102T071806Z">
        <seg>假设您的开发人员想要创建一个 &lt;c0&gt;Comparator&lt;/c0&gt; 实例，该实例可以比较具有多个条件的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that your developers would like to create a &lt;c0&gt;Comparator&lt;/c0&gt; instance that enables them to sort a collection of objects in reverse order.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072025Z" creationid="pingfangx" creationdate="20190102T072025Z">
        <seg>假设您的开发人员想要创建一个 &lt;c0&gt;Comparator&lt;/c0&gt; 实例，使他们能够以相反的顺序对对象集合进行排序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose that, at a later time, you want to add a third method to &lt;c0&gt;DoIt&lt;/c0&gt;, so that the interface now becomes:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062910Z" creationid="pingfangx" creationdate="20190102T062910Z">
        <seg>假设稍后您想要向 &lt;c0&gt;DoIt&lt;/c0&gt; 添加第三个方法，这样接口现在变成：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose you have written a time server that periodically notifies its clients of the current date and time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074632Z" creationid="pingfangx" creationdate="20190102T074632Z">
        <seg>假设您已经编写了一个定期通知其客户当前日期和时间的时间服务器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose you want a lambda expression similar to &lt;c3&gt;printPerson&lt;/c3&gt;, one that takes one argument (an object of type &lt;c4&gt;Person&lt;/c4&gt;) and returns void.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093933Z" creationid="pingfangx" creationdate="20180706T093933Z">
        <seg>假设你想要一个类似于 &lt;c3&gt;printPerson&lt;/c3&gt; 的 lambda 表达式，一个接受一个参数(类型为 &lt;c4&gt;Person&lt;/c4&gt; 的对象)并返回 void。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Syntax of Anonymous Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060349Z" creationid="pingfangx" creationdate="20180706T060349Z">
        <seg>匿名类的语法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Syntax of Lambda Expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083855Z" creationid="pingfangx" creationdate="20180706T083855Z">
        <seg>Lambda 表达式的语法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Synthetic constructs enable Java compilers to implement new Java language features without changes to the JVM. However, synthetic constructs can vary among different Java compiler implementations, which means that &lt;c4&gt;.class&lt;/c4&gt; files can vary among different implementations as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091857Z" creationid="pingfangx" creationdate="20180705T091857Z">
        <seg>合成构造使 Java 编译器能够在不更改 JVM 的情况下实现新的 Java 语言功能。但是，合成构造在不同的 Java 编译器实现中可能不同，这意味着 &lt;c4&gt;.class&lt;/c4&gt; 文件也可以在不同的实现之间变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.arraycopy(copyFrom, 2, copyTo, 0, 7);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042959Z" creationid="pingfangx" creationdate="20180521T042959Z">
        <seg>System.arraycopy(copyFrom, 2, copyTo, 0, 7);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.err.println("Invalid time zone: " + zoneString +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061344Z" creationid="pingfangx" creationdate="20190102T061344Z">
        <seg>System.err.println("Invalid time zone: " + zoneString +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.err.println("Invalid zone ID: " + zoneString +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063524Z" creationid="pingfangx" creationdate="20190102T063524Z">
        <seg>System.err.println("Invalid zone ID: " + zoneString +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.err.println("The bicycle has already stopped!");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081130Z" creationid="pingfangx" creationdate="20180521T081130Z">
        <seg>System.err.println("The bicycle has already stopped!");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.err.println("Usage: java Planet &lt;earth_weight&gt;");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020033Z" creationid="pingfangx" creationdate="20190102T020033Z">
        <seg>System.err.println("Usage: java Planet &lt;earth_weight&gt;");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.exit(-1);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020034Z" creationid="pingfangx" creationdate="20190102T020034Z">
        <seg>System.exit(-1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%+,8d%n%n", n); //  --&gt;  "+461,012"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033619Z" creationid="pingfangx" creationdate="20190103T033619Z">
        <seg>System.out.format("%+,8d%n%n", n); //  --&gt;  "+461,012"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%+8d%n", n);    //  --&gt;  " +461012"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033618Z" creationid="pingfangx" creationdate="20190103T033618Z">
        <seg>System.out.format("%+8d%n", n);    //  --&gt;  " +461012"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%,8d%n", n);    // --&gt;  " 461,012"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033618Z" creationid="pingfangx" creationdate="20190103T033618Z">
        <seg>System.out.format("%,8d%n", n);    // --&gt;  " 461,012"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%-10.3f%n", pi);  // --&gt;  "3.142"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033621Z" creationid="pingfangx" creationdate="20190103T033621Z">
        <seg>System.out.format("%-10.3f%n", pi);  // --&gt;  "3.142"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%.3f%n", pi);     // --&gt;  "3.142"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033620Z" creationid="pingfangx" creationdate="20190103T033620Z">
        <seg>System.out.format("%.3f%n", pi);     // --&gt;  "3.142"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%08d%n", n);    //  --&gt;  "00461012"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033617Z" creationid="pingfangx" creationdate="20190103T033617Z">
        <seg>System.out.format("%08d%n", n);    //  --&gt;  "00461012"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%10.3f%n", pi);   // --&gt;  "     3.142"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033621Z" creationid="pingfangx" creationdate="20190103T033621Z">
        <seg>System.out.format("%10.3f%n", pi);   // --&gt;  "     3.142"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%d%n", n);      //  --&gt;  "461012"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033617Z" creationid="pingfangx" creationdate="20190103T033617Z">
        <seg>System.out.format("%d%n", n);      //  --&gt;  "461012"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%f%n", pi);       // --&gt;  "3.141593"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033620Z" creationid="pingfangx" creationdate="20190103T033620Z">
        <seg>System.out.format("%f%n", pi);       // --&gt;  "3.141593"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%tB %te, %tY%n", c, c, c); // --&gt;  "May 29, 2006"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033623Z" creationid="pingfangx" creationdate="20190103T033623Z">
        <seg>System.out.format("%tB %te, %tY%n", c, c, c); // --&gt;  "May 29, 2006"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%tD%n", c);    // --&gt;  "05/29/06"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033624Z" creationid="pingfangx" creationdate="20190103T033624Z">
        <seg>System.out.format("%tD%n", c);    // --&gt;  "05/29/06"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("%tl:%tM %tp%n", c, c, c);  // --&gt;  "2:34 am"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033623Z" creationid="pingfangx" creationdate="20190103T033623Z">
        <seg>System.out.format("%tl:%tM %tp%n", c, c, c);  // --&gt;  "2:34 am"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("The arccosine of %.4f " + "is %.4f degrees %n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040427Z" creationid="pingfangx" creationdate="20190103T040427Z">
        <seg>System.out.format("The arccosine of %.4f " + "is %.4f degrees %n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("The arcsine of %.4f " + "is %.4f degrees %n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040423Z" creationid="pingfangx" creationdate="20190103T040423Z">
        <seg>System.out.format("The arcsine of %.4f " + "is %.4f degrees %n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("The arctangent of %.4f " + "is %.4f degrees %n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040428Z" creationid="pingfangx" creationdate="20190103T040428Z">
        <seg>System.out.format("The arctangent of %.4f " + "is %.4f degrees %n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("The cosine of %.1f " + "degrees is %.4f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040422Z" creationid="pingfangx" creationdate="20190103T040422Z">
        <seg>System.out.format("The cosine of %.1f " + "degrees is %.4f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("The sine of %.1f " + "degrees is %.4f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040421Z" creationid="pingfangx" creationdate="20190103T040421Z">
        <seg>System.out.format("The sine of %.1f " + "degrees is %.4f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("The tangent of %.1f " + "degrees is %.4f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040422Z" creationid="pingfangx" creationdate="20190103T040422Z">
        <seg>System.out.format("The tangent of %.1f " + "degrees is %.4f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("The value of " + "the float variable is " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032807Z" creationid="pingfangx" creationdate="20190103T032807Z">
        <seg>System.out.format("The value of " + "the float variable is " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format("The value of pi " + "is %.4f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040420Z" creationid="pingfangx" creationdate="20190103T040420Z">
        <seg>System.out.format("The value of pi " + "is %.4f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format(.....);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032434Z" creationid="pingfangx" creationdate="20190103T032434Z">
        <seg>System.out.format(.....);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.format(Locale.FRANCE,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033137Z" creationid="pingfangx" creationdate="20190103T033137Z">
        <seg>System.out.format(Locale.FRANCE,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.print(iterator.next() + " ");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100913Z" creationid="pingfangx" creationdate="20180705T100913Z">
        <seg>System.out.print(iterator.next() + " ");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("%s: %d, %s%n", name, idnum, address);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033227Z" creationid="pingfangx" creationdate="20180601T033227Z">
        <seg>System.out.printf("%s: %d, %s%n", name, idnum, address);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("%s: %d, %s, %s, %s%n", name, idnum, address, phone, email);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033241Z" creationid="pingfangx" creationdate="20180601T033230Z">
        <seg>System.out.printf("%s: %d, %s, %s, %s%n", name, idnum, address, phone, email);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("The absolute value " + "of %.3f is %.3f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035754Z" creationid="pingfangx" creationdate="20190103T035754Z">
        <seg>System.out.printf("The absolute value " + "of %.3f is %.3f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("The ceiling of " + "%.2f is %.0f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035755Z" creationid="pingfangx" creationdate="20190103T035755Z">
        <seg>System.out.printf("The ceiling of " + "%.2f is %.0f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("The floor of " + "%.2f is %.0f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035757Z" creationid="pingfangx" creationdate="20190103T035757Z">
        <seg>System.out.printf("The floor of " + "%.2f is %.0f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("The max of %d and " + "%d is %d%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035759Z" creationid="pingfangx" creationdate="20190103T035759Z">
        <seg>System.out.printf("The max of %d and " + "%d is %d%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("The min of of %d " + "and %d is %d%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035801Z" creationid="pingfangx" creationdate="20190103T035801Z">
        <seg>System.out.printf("The min of of %d " + "and %d is %d%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("The rint of %.2f " + "is %.0f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035758Z" creationid="pingfangx" creationdate="20190103T035758Z">
        <seg>System.out.printf("The rint of %.2f " + "is %.0f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("The value of " + "e is %.4f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040138Z" creationid="pingfangx" creationdate="20190103T040138Z">
        <seg>System.out.printf("The value of " + "e is %.4f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("The value of the float " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064827Z" creationid="pingfangx" creationdate="20190103T064827Z">
        <seg>System.out.printf("The value of the float " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("Your weight on %s is %f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015531Z" creationid="pingfangx" creationdate="20190102T015531Z">
        <seg>System.out.printf("Your weight on %s is %f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("exp(%.3f) " + "is %.3f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040139Z" creationid="pingfangx" creationdate="20190103T040139Z">
        <seg>System.out.printf("exp(%.3f) " + "is %.3f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("log(%.3f) is " + "%.3f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040141Z" creationid="pingfangx" creationdate="20190103T040141Z">
        <seg>System.out.printf("log(%.3f) is " + "%.3f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("pow(%.3f, %.3f) " + "is %.3f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040142Z" creationid="pingfangx" creationdate="20190103T040142Z">
        <seg>System.out.printf("pow(%.3f, %.3f) " + "is %.3f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.printf("sqrt(%.3f) is " + "%.3f%n",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040143Z" creationid="pingfangx" creationdate="20190103T040143Z">
        <seg>System.out.printf("sqrt(%.3f) is " + "%.3f%n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println( (s.length() - dot - 1) +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065438Z" creationid="pingfangx" creationdate="20190103T065438Z">
        <seg>System.out.println( (s.length() - dot - 1) +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(!success);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065230Z" creationid="pingfangx" creationdate="20180521T065230Z">
        <seg>System.out.println(!success);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("    String 1: " + string1);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085931Z" creationid="pingfangx" creationdate="20190103T085931Z">
        <seg>System.out.println("    String 1: " + string1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("    String 2: " + string2);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085931Z" creationid="pingfangx" creationdate="20190103T085931Z">
        <seg>System.out.println("    String 2: " + string2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("1 + 2 = " + result);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064522Z" creationid="pingfangx" creationdate="20180521T064522Z">
        <seg>System.out.println("1 + 2 = " + result);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("20 - 10 = " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075625Z" creationid="pingfangx" creationdate="20181228T075625Z">
        <seg>System.out.println("20 - 10 = " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("40 + 2 = " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075624Z" creationid="pingfangx" creationdate="20181228T075624Z">
        <seg>System.out.println("40 + 2 = " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("After invoking passMethod, x = " + x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034018Z" creationid="pingfangx" creationdate="20180601T034018Z">
        <seg>System.out.println("After invoking passMethod, x = " + x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Area of rectOne: " + rectOne.getArea());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040025Z" creationid="pingfangx" creationdate="20180601T040025Z">
        <seg>System.out.println("Area of rectOne: " + rectOne.getArea());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Area of rectOne: " + rectOne.getArea());
...
rectTwo.move(40, 72);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T084855Z" creationid="pingfangx" creationdate="20180601T084855Z">
        <seg>System.out.println("Area of rectOne: " + rectOne.getArea());
...
rectTwo.move(40, 72);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Bye bye");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144542Z" creationid="pingfangx" creationdate="20180705T144542Z">
        <seg>System.out.println("Bye bye");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Condition is false.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075355Z" creationid="pingfangx" creationdate="20180521T075355Z">
        <seg>System.out.println("Condition is false.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Condition is true.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075354Z" creationid="pingfangx" creationdate="20180521T075354Z">
        <seg>System.out.println("Condition is true.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Count is: " + count);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083003Z" creationid="pingfangx" creationdate="20180521T083003Z">
        <seg>System.out.println("Count is: " + count);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Count is: " + i);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085236Z" creationid="pingfangx" creationdate="20180521T085236Z">
        <seg>System.out.println("Count is: " + i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Count is: " + item);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085626Z" creationid="pingfangx" creationdate="20180521T085626Z">
        <seg>System.out.println("Count is: " + item);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Current time: " + myTimeClient.toString());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063345Z" creationid="pingfangx" creationdate="20190102T063345Z">
        <seg>System.out.println("Current time: " + myTimeClient.toString());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element 1 at index 0: " + anArray[0]);
System.out.println("Element 2 at index 1: " + anArray[1]);
System.out.println("Element 3 at index 2: " + anArray[2]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041829Z" creationid="pingfangx" creationdate="20180521T041829Z">
        <seg>System.out.println("Element 1 at index 0: " + anArray[0]);
System.out.println("Element 2 at index 1: " + anArray[1]);
System.out.println("Element 3 at index 2: " + anArray[2]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element at index 0: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021710Z" creationid="pingfangx" creationdate="20180521T021710Z">
        <seg>System.out.println("Element at index 0: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element at index 1: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021711Z" creationid="pingfangx" creationdate="20180521T021711Z">
        <seg>System.out.println("Element at index 1: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element at index 2: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021713Z" creationid="pingfangx" creationdate="20180521T021713Z">
        <seg>System.out.println("Element at index 2: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element at index 3: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021714Z" creationid="pingfangx" creationdate="20180521T021714Z">
        <seg>System.out.println("Element at index 3: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element at index 4: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021715Z" creationid="pingfangx" creationdate="20180521T021715Z">
        <seg>System.out.println("Element at index 4: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element at index 5: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021716Z" creationid="pingfangx" creationdate="20180521T021716Z">
        <seg>System.out.println("Element at index 5: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element at index 6: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021717Z" creationid="pingfangx" creationdate="20180521T021717Z">
        <seg>System.out.println("Element at index 6: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element at index 7: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021718Z" creationid="pingfangx" creationdate="20180521T021718Z">
        <seg>System.out.println("Element at index 7: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element at index 8: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021719Z" creationid="pingfangx" creationdate="20180521T021719Z">
        <seg>System.out.println("Element at index 8: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Element at index 9: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021720Z" creationid="pingfangx" creationdate="20180521T021720Z">
        <seg>System.out.println("Element at index 9: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Extension = " + myHomePage.extension());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074944Z" creationid="pingfangx" creationdate="20190103T074944Z">
        <seg>System.out.println("Extension = " + myHomePage.extension());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("February");
}
...  // and so on</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082121Z" creationid="pingfangx" creationdate="20180521T082121Z">
        <seg>System.out.println("February");
}
...  // and so on</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Filename = " + myHomePage.filename());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074944Z" creationid="pingfangx" creationdate="20190103T074944Z">
        <seg>System.out.println("Filename = " + myHomePage.filename());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("First number is " + myNumber1.getNumber());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122524Z" creationid="pingfangx" creationdate="20180705T122524Z">
        <seg>System.out.println("First number is " + myNumber1.getNumber());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("First number is invalid");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122523Z" creationid="pingfangx" creationdate="20180705T122523Z">
        <seg>System.out.println("First number is invalid");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Found " + numPs + " p's in the string.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090529Z" creationid="pingfangx" creationdate="20180521T090529Z">
        <seg>System.out.println("Found " + numPs + " p's in the string.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Found " + searchfor + " at " + i + ", " + j);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090136Z" creationid="pingfangx" creationdate="20180521T090136Z">
        <seg>System.out.println("Found " + searchfor + " at " + i + ", " + j);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Found " + searchfor + " at index " + i);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085849Z" creationid="pingfangx" creationdate="20180521T085849Z">
        <seg>System.out.println("Found " + searchfor + " at index " + i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Fridays are better.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015344Z" creationid="pingfangx" creationdate="20190102T015344Z">
        <seg>System.out.println("Fridays are better.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Grade = " + grade);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081152Z" creationid="pingfangx" creationdate="20180521T081152Z">
        <seg>System.out.println("Grade = " + grade);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Height of rectOne: " + rectOne.height);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040024Z" creationid="pingfangx" creationdate="20180601T040024Z">
        <seg>System.out.println("Height of rectOne: " + rectOne.height);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Hello " + name);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T143124Z" creationid="pingfangx" creationdate="20180705T143124Z">
        <seg>System.out.println("Hello " + name);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Hello World!");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035758Z" creationid="pingfangx" creationdate="20180518T035758Z">
        <seg>System.out.println("Hello World!");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Hello World!"); // Display the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035248Z" creationid="pingfangx" creationdate="20180518T035248Z">
        <seg>System.out.println("Hello World!"); // Display the string.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Hello World!"); //Display the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035628Z" creationid="pingfangx" creationdate="20180518T035628Z">
        <seg>System.out.println("Hello World!"); //Display the string.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Hello World!"); &lt;b1&gt;// Display the string.&lt;/b1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035436Z" creationid="pingfangx" creationdate="20180518T035436Z">
        <seg>System.out.println("Hello World!"); &lt;b1&gt;// Display the string.&lt;/b1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Hello World!"); &lt;s0&gt;// method invocation statement&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075627Z" creationid="pingfangx" creationdate="20180521T075627Z">
        <seg>System.out.println("Hello World!"); &lt;s0&gt;// method invocation statement&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Hello World!); //Display the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040339Z" creationid="pingfangx" creationdate="20180518T040339Z">
        <seg>System.out.println("Hello World!); //Display the string.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Hi Mom");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074531Z" creationid="pingfangx" creationdate="20190102T074531Z">
        <seg>System.out.println("Hi Mom");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Hola Mundo!"); //Display the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040328Z" creationid="pingfangx" creationdate="20180518T040328Z">
        <seg>System.out.println("Hola Mundo!"); //Display the string.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Hola, " + name);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061135Z" creationid="pingfangx" creationdate="20180706T061135Z">
        <seg>System.out.println("Hola, " + name);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Invalid month number");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082413Z" creationid="pingfangx" creationdate="20180521T082413Z">
        <seg>System.out.println("Invalid month number");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Invalid month");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082617Z" creationid="pingfangx" creationdate="20180521T082617Z">
        <seg>System.out.println("Invalid month");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Invalid month.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082524Z" creationid="pingfangx" creationdate="20180521T082524Z">
        <seg>System.out.println("Invalid month.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("January");
} else if (month == 2) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082121Z" creationid="pingfangx" creationdate="20180521T082121Z">
        <seg>System.out.println("January");
} else if (month == 2) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("LambdaScopeTest.this.x = " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080001Z" creationid="pingfangx" creationdate="20181228T080001Z">
        <seg>System.out.println("LambdaScopeTest.this.x = " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Midweek days are so-so.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015346Z" creationid="pingfangx" creationdate="20190102T015346Z">
        <seg>System.out.println("Midweek days are so-so.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Mondays are bad.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015342Z" creationid="pingfangx" creationdate="20190102T015342Z">
        <seg>System.out.println("Mondays are bad.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("My initials are: " + myInitials);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085906Z" creationid="pingfangx" creationdate="20190103T085906Z">
        <seg>System.out.println("My initials are: " + myInitials);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("No match found.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075859Z" creationid="pingfangx" creationdate="20190103T075859Z">
        <seg>System.out.println("No match found.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Number of Days = "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082525Z" creationid="pingfangx" creationdate="20180521T082525Z">
        <seg>System.out.println("Number of Days = "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Original numbers are " + phoneNumber1 +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123228Z" creationid="pingfangx" creationdate="20180705T123228Z">
        <seg>System.out.println("Original numbers are " + phoneNumber1 +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Path = " + myHomePage.path());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074945Z" creationid="pingfangx" creationdate="20190103T074945Z">
        <seg>System.out.println("Path = " + myHomePage.path());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Printed in Subclass");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094944Z" creationid="pingfangx" creationdate="20190102T094944Z">
        <seg>System.out.println("Printed in Subclass");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Printed in Superclass.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094936Z" creationid="pingfangx" creationdate="20190102T094936Z">
        <seg>System.out.println("Printed in Superclass.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Salut " + name);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061133Z" creationid="pingfangx" creationdate="20180706T061133Z">
        <seg>System.out.println("Salut " + name);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Second number is " + myNumber2.getNumber());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122525Z" creationid="pingfangx" creationdate="20180705T122525Z">
        <seg>System.out.println("Second number is " + myNumber2.getNumber());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Second number is invalid");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122525Z" creationid="pingfangx" creationdate="20180705T122525Z">
        <seg>System.out.println("Second number is invalid");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("ShadowTest.this.x = " + ShadowTest.this.x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091532Z" creationid="pingfangx" creationdate="20180705T091532Z">
        <seg>System.out.println("ShadowTest.this.x = " + ShadowTest.this.x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("She said \"Hello!\" to me.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062620Z" creationid="pingfangx" creationdate="20190103T062620Z">
        <seg>System.out.println("She said \"Hello!\" to me.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Testing whether the following "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085930Z" creationid="pingfangx" creationdate="20190103T085930Z">
        <seg>System.out.println("Testing whether the following "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("The " + "MountainBike has a" +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093817Z" creationid="pingfangx" creationdate="20190102T093817Z">
        <seg>System.out.println("The " + "MountainBike has a" +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("The RoadBike" + " has " + getTireWidth() +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094006Z" creationid="pingfangx" creationdate="20190102T094006Z">
        <seg>System.out.println("The RoadBike" + " has " + getTireWidth() +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("The instance method in Animal");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090641Z" creationid="pingfangx" creationdate="20190102T090641Z">
        <seg>System.out.println("The instance method in Animal");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("The instance method in Cat");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090648Z" creationid="pingfangx" creationdate="20190102T090648Z">
        <seg>System.out.println("The instance method in Cat");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("The object's" + " class is " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103552Z" creationid="pingfangx" creationdate="20190102T103552Z">
        <seg>System.out.println("The object's" + " class is " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("The static method in Animal");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090637Z" creationid="pingfangx" creationdate="20190102T090637Z">
        <seg>System.out.println("The static method in Animal");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("The static method in Cat");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090648Z" creationid="pingfangx" creationdate="20190102T090648Z">
        <seg>System.out.println("The static method in Cat");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("They ARE anagrams!");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085933Z" creationid="pingfangx" creationdate="20190103T085933Z">
        <seg>System.out.println("They ARE anagrams!");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("They are NOT anagrams!");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085933Z" creationid="pingfangx" creationdate="20190103T085933Z">
        <seg>System.out.println("They are NOT anagrams!");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("This program " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065209Z" creationid="pingfangx" creationdate="20190103T065209Z">
        <seg>System.out.println("This program " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Time in California: " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063345Z" creationid="pingfangx" creationdate="20190102T063345Z">
        <seg>System.out.println("Time in California: " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Weekends are best.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015345Z" creationid="pingfangx" creationdate="20190102T015345Z">
        <seg>System.out.println("Weekends are best.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Width and height are: " + width + ", " + height);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073523Z" creationid="pingfangx" creationdate="20180601T073523Z">
        <seg>System.out.println("Width and height are: " + width + ", " + height);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Width of rectOne: "  + rectOne.width);
System.out.println("Height of rectOne: " + rectOne.height);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T074108Z" creationid="pingfangx" creationdate="20180601T074108Z">
        <seg>System.out.println("Width of rectOne: "  + rectOne.width);
System.out.println("Height of rectOne: " + rectOne.height);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Width of rectOne: " + rectOne.width);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040024Z" creationid="pingfangx" creationdate="20180601T040024Z">
        <seg>System.out.println("Width of rectOne: " + rectOne.width);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("X Position of rectTwo: " + rectTwo.origin.x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040033Z" creationid="pingfangx" creationdate="20180601T040033Z">
        <seg>System.out.println("X Position of rectTwo: " + rectTwo.origin.x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("Y Position of rectTwo: " + rectTwo.origin.y);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040034Z" creationid="pingfangx" creationdate="20180601T040034Z">
        <seg>System.out.println("Y Position of rectTwo: " + rectTwo.origin.y);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("\nBike is " + "in gear " + this.gear</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093234Z" creationid="pingfangx" creationdate="20190102T093234Z">
        <seg>System.out.println("\nBike is " + "in gear " + this.gear</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("a % b = " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065207Z" creationid="pingfangx" creationdate="20190103T065207Z">
        <seg>System.out.println("a % b = " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("a * b = " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065205Z" creationid="pingfangx" creationdate="20190103T065205Z">
        <seg>System.out.println("a * b = " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("a + b = " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065203Z" creationid="pingfangx" creationdate="20190103T065203Z">
        <seg>System.out.println("a + b = " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("a - b = " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065204Z" creationid="pingfangx" creationdate="20190103T065204Z">
        <seg>System.out.println("a - b = " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("a / b = " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065206Z" creationid="pingfangx" creationdate="20190103T065206Z">
        <seg>System.out.println("a / b = " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("absolute value of " + i + " = " + absVal);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084609Z" creationid="pingfangx" creationdate="20190103T084609Z">
        <seg>System.out.println("absolute value of " + i + " = " + absVal);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("cadence:" +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062544Z" creationid="pingfangx" creationdate="20180518T062544Z">
        <seg>System.out.println("cadence:" +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("first string");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091635Z" creationid="pingfangx" creationdate="20180521T091635Z">
        <seg>System.out.println("first string");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("first string");
else</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091415Z" creationid="pingfangx" creationdate="20180521T091415Z">
        <seg>System.out.println("first string");
else</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("first string");
else System.out.println("second string");
System.out.println("third string");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091124Z" creationid="pingfangx" creationdate="20180521T091124Z">
        <seg>System.out.println("first string");
else System.out.println("second string");
System.out.println("third string");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("myRect's area is " + myRect.area());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083217Z" creationid="pingfangx" creationdate="20180705T083217Z">
        <seg>System.out.println("myRect's area is " + myRect.area());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("obj1 instanceof Child: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070505Z" creationid="pingfangx" creationdate="20180521T070505Z">
        <seg>System.out.println("obj1 instanceof Child: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("obj1 instanceof MyInterface: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070506Z" creationid="pingfangx" creationdate="20180521T070506Z">
        <seg>System.out.println("obj1 instanceof MyInterface: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("obj1 instanceof Parent: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070504Z" creationid="pingfangx" creationdate="20180521T070504Z">
        <seg>System.out.println("obj1 instanceof Parent: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("obj2 instanceof Child: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070508Z" creationid="pingfangx" creationdate="20180521T070508Z">
        <seg>System.out.println("obj2 instanceof Child: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("obj2 instanceof MyInterface: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070509Z" creationid="pingfangx" creationdate="20180521T070509Z">
        <seg>System.out.println("obj2 instanceof MyInterface: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("obj2 instanceof Parent: "</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070507Z" creationid="pingfangx" creationdate="20180521T070507Z">
        <seg>System.out.println("obj2 instanceof Parent: "</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("objects are equal");
} else {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102639Z" creationid="pingfangx" creationdate="20190102T102639Z">
        <seg>System.out.println("objects are equal");
} else {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("objects are not equal");
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102640Z" creationid="pingfangx" creationdate="20190102T102640Z">
        <seg>System.out.println("objects are not equal");
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("pi = " + pi);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084613Z" creationid="pingfangx" creationdate="20190103T084613Z">
        <seg>System.out.println("pi = " + pi);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("second string");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091645Z" creationid="pingfangx" creationdate="20180521T091645Z">
        <seg>System.out.println("second string");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("second string");

System.out.println("third string");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091635Z" creationid="pingfangx" creationdate="20180521T091635Z">
        <seg>System.out.println("second string");

System.out.println("third string");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("second string");
System.out.println("third string");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091416Z" creationid="pingfangx" creationdate="20180521T091416Z">
        <seg>System.out.println("second string");
System.out.println("third string");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("this.x = " + this.x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091531Z" creationid="pingfangx" creationdate="20180705T091531Z">
        <seg>System.out.println("this.x = " + this.x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("value1 != value2");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070030Z" creationid="pingfangx" creationdate="20180521T070030Z">
        <seg>System.out.println("value1 != value2");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("value1 &lt; value2");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070032Z" creationid="pingfangx" creationdate="20180521T070032Z">
        <seg>System.out.println("value1 &lt; value2");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("value1 &lt;= value2");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070033Z" creationid="pingfangx" creationdate="20180521T070033Z">
        <seg>System.out.println("value1 &lt;= value2");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("value1 == value2");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070029Z" creationid="pingfangx" creationdate="20180521T070029Z">
        <seg>System.out.println("value1 == value2");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("value1 &gt; value2");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070031Z" creationid="pingfangx" creationdate="20180521T070031Z">
        <seg>System.out.println("value1 &gt; value2");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("value1 is 1 AND value2 is 2");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070215Z" creationid="pingfangx" creationdate="20180521T070215Z">
        <seg>System.out.println("value1 is 1 AND value2 is 2");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("value1 is 1 OR value2 is 1");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070216Z" creationid="pingfangx" creationdate="20180521T070216Z">
        <seg>System.out.println("value1 is 1 OR value2 is 1");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("x = " + x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091530Z" creationid="pingfangx" creationdate="20180705T091530Z">
        <seg>System.out.println("x = " + x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("x = " + x); // Statement A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080000Z" creationid="pingfangx" creationdate="20181228T080000Z">
        <seg>System.out.println("x = " + x); // Statement A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println("y = " + y);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080000Z" creationid="pingfangx" creationdate="20181228T080000Z">
        <seg>System.out.println("y = " + y);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100913Z" creationid="pingfangx" creationdate="20180705T100913Z">
        <seg>System.out.println();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(++i);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065523Z" creationid="pingfangx" creationdate="20180521T065523Z">
        <seg>System.out.println(++i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(++i);  // "6"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072722Z" creationid="pingfangx" creationdate="20180521T072722Z">
        <seg>System.out.println(++i);  // "6"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(&lt;s10&gt;"value1 == value2"&lt;/s10&gt;);&lt;/c8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074048Z" creationid="pingfangx" creationdate="20180521T074048Z">
        <seg>System.out.println(&lt;s10&gt;"value1 == value2"&lt;/s10&gt;);&lt;/c8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(anArray.length);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042347Z" creationid="pingfangx" creationdate="20180521T042347Z">
        <seg>System.out.println(anArray.length);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(dot + " digits " +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065437Z" creationid="pingfangx" creationdate="20190103T065437Z">
        <seg>System.out.println(dot + " digits " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(farewell);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T145238Z" creationid="pingfangx" creationdate="20180705T145238Z">
        <seg>System.out.println(farewell);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(firstBook.toString());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104105Z" creationid="pingfangx" creationdate="20190102T104105Z">
        <seg>System.out.println(firstBook.toString());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(foundIt ?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090648Z" creationid="pingfangx" creationdate="20180521T090648Z">
        <seg>System.out.println(foundIt ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(i);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065518Z" creationid="pingfangx" creationdate="20180521T065518Z">
        <seg>System.out.println(i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(i);    // "4"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072720Z" creationid="pingfangx" creationdate="20180521T072720Z">
        <seg>System.out.println(i);    // "4"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(i);    // "5"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072721Z" creationid="pingfangx" creationdate="20180521T072721Z">
        <seg>System.out.println(i);    // "5"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(i);    // "7"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072723Z" creationid="pingfangx" creationdate="20180521T072723Z">
        <seg>System.out.println(i);    // "7"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(i++);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065526Z" creationid="pingfangx" creationdate="20180521T065526Z">
        <seg>System.out.println(i++);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(i++);  // "6"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072722Z" creationid="pingfangx" creationdate="20180521T072722Z">
        <seg>System.out.println(i++);  // "6"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(monthName);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082414Z" creationid="pingfangx" creationdate="20180521T082414Z">
        <seg>System.out.println(monthName);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(monthString);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082027Z" creationid="pingfangx" creationdate="20180521T082027Z">
        <seg>System.out.println(monthString);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(myApp.identifyMyself());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091512Z" creationid="pingfangx" creationdate="20190102T091512Z">
        <seg>System.out.println(myApp.identifyMyself());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(myTimeClient.toString());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061206Z" creationid="pingfangx" creationdate="20190102T061206Z">
        <seg>System.out.println(myTimeClient.toString());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(names[0][0] + names[1][0]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042315Z" creationid="pingfangx" creationdate="20180521T042315Z">
        <seg>System.out.println(names[0][0] + names[1][0]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(names[0][2] + names[1][1]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042316Z" creationid="pingfangx" creationdate="20180521T042316Z">
        <seg>System.out.println(names[0][2] + names[1][1]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(new String(copyTo));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043000Z" creationid="pingfangx" creationdate="20180521T043000Z">
        <seg>System.out.println(new String(copyTo));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(original_result + " % 7 = " + result);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064546Z" creationid="pingfangx" creationdate="20180521T064546Z">
        <seg>System.out.println(original_result + " % 7 = " + result);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(original_result + " * 2 = " + result);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064532Z" creationid="pingfangx" creationdate="20180521T064532Z">
        <seg>System.out.println(original_result + " * 2 = " + result);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(original_result + " + 8 = " + result);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064540Z" creationid="pingfangx" creationdate="20180521T064540Z">
        <seg>System.out.println(original_result + " + 8 = " + result);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(original_result + " - 1 = " + result);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064528Z" creationid="pingfangx" creationdate="20180521T064528Z">
        <seg>System.out.println(original_result + " - 1 = " + result);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(original_result + " / 2 = " + result);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064535Z" creationid="pingfangx" creationdate="20180521T064535Z">
        <seg>System.out.println(original_result + " / 2 = " + result);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(result);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065216Z" creationid="pingfangx" creationdate="20180521T065216Z">
        <seg>System.out.println(result);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(returnedMonthNumber);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082618Z" creationid="pingfangx" creationdate="20180521T082618Z">
        <seg>System.out.println(returnedMonthNumber);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(reversePalindrome);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064023Z" creationid="pingfangx" creationdate="20190103T064023Z">
        <seg>System.out.println(reversePalindrome);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(sb);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082804Z" creationid="pingfangx" creationdate="20190103T082804Z">
        <seg>System.out.println(sb);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(searchMe.substring(i, i + findMeLength));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075858Z" creationid="pingfangx" creationdate="20190103T075858Z">
        <seg>System.out.println(searchMe.substring(i, i + findMeLength));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(searchfor + " not in the array");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085850Z" creationid="pingfangx" creationdate="20180521T085850Z">
        <seg>System.out.println(searchfor + " not in the array");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(success);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065229Z" creationid="pingfangx" creationdate="20180521T065229Z">
        <seg>System.out.println(success);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(thirdString);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064829Z" creationid="pingfangx" creationdate="20180521T064829Z">
        <seg>System.out.println(thirdString);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(val &amp; bitmask);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070954Z" creationid="pingfangx" creationdate="20180521T070954Z">
        <seg>System.out.println(val &amp; bitmask);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System.out.println(value + "  " + pattern + "  " + output);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034050Z" creationid="pingfangx" creationdate="20190103T034050Z">
        <seg>System.out.println(value + "  " + pattern + "  " + output);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TEN    (10, "Ten"  ),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065244Z" creationid="pingfangx" creationdate="20190102T065244Z">
        <seg>TEN    (10, "Ten"  ),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TEXT The Save As dialog, as described in the text.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034709Z" creationid="pingfangx" creationdate="20180518T034709Z">
        <seg>TEXT 另存为对话框，如文中所述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>THREE  (3 , "Three"),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065240Z" creationid="pingfangx" creationdate="20190102T065240Z">
        <seg>THREE  (3 , "Three"),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>THURSDAY, FRIDAY, SATURDAY 
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015306Z" creationid="pingfangx" creationdate="20190102T015306Z">
        <seg>THURSDAY, FRIDAY, SATURDAY 
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Take a minute right now to observe the real-world objects that are in your immediate area.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061205Z" creationid="pingfangx" creationdate="20180518T061205Z">
        <seg>现在花一点时间观察您附近区域的真实世界物体。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Talk about Java technology seems to be everywhere, but what exactly is it?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032721Z" creationid="pingfangx" creationdate="20180518T032721Z">
        <seg>谈论 Java 技术似乎无处不在，但究竟是什么呢？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Target Types and Method Arguments</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083913Z" creationid="pingfangx" creationdate="20180706T083913Z">
        <seg>目标类型和方法参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Target Typing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083916Z" creationid="pingfangx" creationdate="20180706T083908Z">
        <seg>目标类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Technically, the final &lt;c0&gt;break&lt;/c0&gt; is not required because flow falls out of the &lt;c1&gt;switch&lt;/c1&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082429Z" creationid="pingfangx" creationdate="20180521T082429Z">
        <seg>从技术上讲，最终 &lt;c0&gt;break&lt;/c0&gt; 不是必需的，因为流程不在 &lt;c1&gt;switch&lt;/c1&gt; 语句中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ten characters in width, right justified, with three places after decimal point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033602Z" creationid="pingfangx" creationdate="20190103T033602Z">
        <seg>宽度为十个字符，右对齐，小数点后三位。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests whether the specified region of this string matches the specified region of the String argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075745Z" creationid="pingfangx" creationdate="20190103T075745Z">
        <seg>测试此字符串的指定区域是否与 String 参数的指定区域匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests whether this string matches the specified regular expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075840Z" creationid="pingfangx" creationdate="20190103T075840Z">
        <seg>测试此字符串是否与指定的正则表达式匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That includes natural enum types such as the planets in our solar system and data sets where you know all possible values at compile timefor example, the choices on a menu, command line flags, and so on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015333Z" creationid="pingfangx" creationdate="20190102T015333Z">
        <seg>这包括自然枚举类型，例如我们太阳系中的行星和数据集，您可以在编译时知道所有可能的值，例如，菜单上的选项，命令行标志等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, how a &lt;i0&gt;subclass&lt;/i0&gt; can inherit fields and methods from a &lt;i1&gt;superclass&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042810Z" creationid="pingfangx" creationdate="20190102T042810Z">
        <seg>也就是说，&lt;i0&gt;subclass&lt;/i0&gt; 如何从 &lt;i1&gt;superclass&lt;/i1&gt; 继承字段和方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, how a &lt;i3&gt;subclass&lt;/i3&gt; can inherit fields and methods from a &lt;i4&gt;superclass&lt;/i4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042356Z" creationid="pingfangx" creationdate="20180518T042356Z">
        <seg>也就是说，&lt;i3&gt;subclass&lt;/i3&gt; 如何继承 &lt;i4&gt;superclass&lt;/i4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, there is only one &lt;c5&gt;x&lt;/c5&gt;: when the value of &lt;c6&gt;x&lt;/c6&gt; changes in any instance it affects the value of &lt;c7&gt;x&lt;/c7&gt; for all instances of &lt;c8&gt;IdentifyMyParts&lt;/c8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082947Z" creationid="pingfangx" creationdate="20180705T082947Z">
        <seg>也就是说，只有一个 &lt;c5&gt;x&lt;/c5&gt;：当 &lt;c6&gt;x&lt;/c6&gt; 的值在任何实例中发生变化时，它会影响所有 &lt;c8&gt;IdentifyMyParts&lt;/c8&gt;实例的 &lt;c7&gt;x&lt;/c7&gt; 的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's because it's not a complete application; it's just the blueprint for bicycles that might be &lt;i2&gt;used&lt;/i2&gt; in an application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062640Z" creationid="pingfangx" creationdate="20180518T062640Z">
        <seg>那是因为它不是一个完整的应用程序;这只是在应用程序中可能被 &lt;i2&gt;使用&lt;/i2&gt; 的自行车蓝图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The "Hello World!" Application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033955Z" creationid="pingfangx" creationdate="20180518T033955Z">
        <seg>"Hello World！" 应用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The "Hello World!" application consists of three primary components: &lt;a0&gt;source code comments&lt;/a0&gt;, &lt;a1&gt;the &lt;c2&gt;HelloWorldApp&lt;/c2&gt; class definition&lt;/a1&gt;, and &lt;a3&gt;the &lt;c4&gt;main&lt;/c4&gt; method&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035351Z" creationid="pingfangx" creationdate="20180518T035314Z">
        <seg>"Hello World！" 应用程序由三个主要部分组成：&lt;a0&gt;源码注释&lt;/a0&gt;，&lt;a1&gt;&lt;c2&gt;HelloWorldApp&lt;/c2&gt; 类定义&lt;/a1&gt; 和 &lt;a3&gt;&lt;c4&gt;main&lt;/c4&gt; 方法&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The "Hello World!" application ignores its command-line arguments, but you should be aware of the fact that such arguments do exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035754Z" creationid="pingfangx" creationdate="20180518T035754Z">
        <seg>"Hello World！" 应用程序会忽略它的命令行参数，但您应该意识到这样的参数确实存在的事实。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The 9th element, for example, would therefore be accessed at index 8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021624Z" creationid="pingfangx" creationdate="20180521T021624Z">
        <seg>例如，第 9 个元素将在索引 8 处访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt; Java Development Kit&lt;/a0&gt; (JDK)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030710Z" creationid="pingfangx" creationdate="20180518T030710Z">
        <seg>The &lt;a0&gt; Java Development Kit&lt;/a0&gt; (JDK)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;&lt;t2&gt;Unboxing&lt;/t2&gt;&lt;/c1&gt;&lt;/a0&gt; example shows how this works:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084603Z" creationid="pingfangx" creationdate="20190103T084603Z">
        <seg>&lt;a0&gt;&lt;c1&gt;&lt;t2&gt;Unboxing&lt;/t2&gt;&lt;/c1&gt;&lt;/a0&gt; 示例显示了它的工作原理：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;Class&lt;/c1&gt;&lt;/a0&gt; class, in the &lt;c2&gt;java.lang&lt;/c2&gt; package, has a large number of methods (more than 50).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103612Z" creationid="pingfangx" creationdate="20190102T103612Z">
        <seg>&lt;c2&gt;java.lang&lt;/c2&gt; 包中的 &lt;a0&gt;&lt;c1&gt;Class&lt;/c1&gt;&lt;/a0&gt; 类具有大量方法(超过 50 个)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;DataStructure.java&lt;/c1&gt;&lt;/a0&gt; example that follows consists of:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100557Z" creationid="pingfangx" creationdate="20180705T100557Z">
        <seg>接下来的 &lt;a0&gt;&lt;c1&gt;DataStructure.java&lt;/c1&gt;&lt;/a0&gt; 示例包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;Math&lt;/c1&gt; &lt;/a0&gt;class in the &lt;c2&gt;java.lang&lt;/c2&gt; package provides methods and constants for doing more advanced mathematical computation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035238Z" creationid="pingfangx" creationdate="20190103T035238Z">
        <seg>&lt;c2&gt;java.lang&lt;/c2&gt; 包中的 &lt;a0&gt;&lt;c1&gt;Math&lt;/c1&gt; &lt;/a0&gt; 类提供了进行更高级数学计算的方法和常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;Object&lt;/c1&gt;&lt;/a0&gt; class, defined in the &lt;c2&gt;java.lang&lt;/c2&gt; package, defines and implements behavior common to all classesincluding the ones that you write.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081830Z" creationid="pingfangx" creationdate="20190102T081830Z">
        <seg>在 &lt;c2&gt;java.lang&lt;/c2&gt; 包中定义的 &lt;a0&gt;&lt;c1&gt;Object&lt;/c1&gt;&lt;/a0&gt; 类定义并实现所有类共有的行为，包括您编写的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;Object&lt;/c1&gt;&lt;/a0&gt; class, in the &lt;c2&gt;java.lang&lt;/c2&gt; package, sits at the top of the class hierarchy tree.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100511Z" creationid="pingfangx" creationdate="20190102T100433Z">
        <seg>&lt;c2&gt;java.lang&lt;/c2&gt; 包中的 &lt;a0&gt;&lt;c1&gt;Object&lt;/c1&gt;&lt;/a0&gt; 类位于类层次结构树的顶部。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;String&lt;/c1&gt; &lt;/a0&gt; class has over 60 methods and 13 constructors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083308Z" creationid="pingfangx" creationdate="20190103T083308Z">
        <seg>&lt;a0&gt;&lt;c1&gt;String&lt;/c1&gt; &lt;/a0&gt; 类有 60 多个方法和 13 个构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;ToStringDemo&lt;/c1&gt;&lt;/a0&gt; example uses the &lt;c2&gt;toString&lt;/c2&gt; method to convert a number to a string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065407Z" creationid="pingfangx" creationdate="20190103T065407Z">
        <seg>&lt;a0&gt;&lt;c1&gt;ToStringDemo&lt;/c1&gt;&lt;/a0&gt; 示例使用 &lt;c2&gt;toString&lt;/c2&gt; 方法将数字转换为字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;java.lang.String&lt;/c1&gt;&lt;/a0&gt; class represents character strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061602Z" creationid="pingfangx" creationdate="20180521T061602Z">
        <seg>&lt;a0&gt;&lt;c1&gt;java.lang.String&lt;/c1&gt;&lt;/a0&gt; 类表示字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;Classes and Objects&lt;/a0&gt; lesson will cover everything you need to know about writing methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090741Z" creationid="pingfangx" creationdate="20180521T090741Z">
        <seg>&lt;a0&gt;Classes and Objects&lt;/a0&gt; 课程将涵盖您需要了解的有关编写方法的一切内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;Java Platform API Specification&lt;/a0&gt; contains the complete listing for all packages, interfaces, classes, fields, and methods supplied by the Java SE platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064542Z" creationid="pingfangx" creationdate="20180518T064542Z">
        <seg>&lt;a0&gt;Java Platform API Specification&lt;/a0&gt; 包含 Java SE 平台提供的所有包，接口，类，字段和方法的完整列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;What Is an Object?&lt;/a0&gt; discussion introduced you to fields, but you probably have still a few questions, such as: What are the rules and conventions for naming a field?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073059Z" creationid="pingfangx" creationdate="20180518T073059Z">
        <seg>&lt;a0&gt;What Is an Object?&lt;/a0&gt; 讨论向你介绍了字段，但你可能还有一些问题，例如：命名字段的规则和约定是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a1&gt;Java Language&lt;/a1&gt; trail contains a &lt;a2&gt;Generics&lt;/a2&gt; lesson that is suitable for beginners.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031619Z" creationid="pingfangx" creationdate="20180518T031619Z">
        <seg>&lt;a1&gt;Java Language&lt;/a1&gt; 路径包含适合初学者的 &lt;a2&gt;Generics&lt;/a2&gt; 课程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a2&gt;&lt;c3&gt;String&lt;/c3&gt; &lt;/a2&gt; class includes a method, &lt;c4&gt;getChars()&lt;/c4&gt;, to convert a string, or a portion of a string, into an array of characters so we could replace the first &lt;c5&gt;for&lt;/c5&gt; loop in the program above with</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064225Z" creationid="pingfangx" creationdate="20190103T064225Z">
        <seg>&lt;a2&gt;&lt;c3&gt;String&lt;/c3&gt; &lt;/a2&gt; 类包含一个方法 &lt;c4&gt;getChars()&lt;/c4&gt;，用于将字符串或字符串的一部分转换为字符数组，以便我们可以替换上面程序中的第一个 &lt;c5&gt;for&lt;/c5&gt; 循环</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a7&gt;&lt;c8&gt;Long&lt;/c8&gt;&lt;/a7&gt; class also contains methods like &lt;c9&gt;compareUnsigned&lt;/c9&gt;, &lt;c10&gt;divideUnsigned&lt;/c10&gt; etc to support arithmetic operations for unsigned long.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081437Z" creationid="pingfangx" creationdate="20180518T081437Z">
        <seg>&lt;a7&gt;&lt;c8&gt;Long&lt;/c8&gt;&lt;/a7&gt; 类还包含像 &lt;c9&gt;compareUnsigned&lt;/c9&gt;，&lt;c10&gt; divideUnsigned &lt;/c10&gt; 等方法来支持无符号 long 的算术运算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;%d&lt;/c0&gt; specifies that the single variable is a decimal integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033041Z" creationid="pingfangx" creationdate="20190103T033041Z">
        <seg>&lt;c0&gt;%d&lt;/c0&gt; 指定单个变量是十进制整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&amp;&amp;&lt;/c0&gt; and &lt;c1&gt;||&lt;/c1&gt; operators perform &lt;e2&gt;Conditional-AND&lt;/e2&gt; and &lt;e3&gt;Conditional-OR&lt;/e3&gt; operations on two boolean expressions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070132Z" creationid="pingfangx" creationdate="20180521T070132Z">
        <seg>&lt;c0&gt;&amp;&amp;&lt;/c0&gt; 和 &lt;c1&gt;||&lt;/c1&gt; 运算符对两个布尔表达式执行 &lt;e2&gt;Conditional-AND（符件与）&lt;/e2&gt; 和&lt;e3&gt;Conditional-OR（条件或）&lt;/e3&gt; 操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;+&lt;/c0&gt; operator can also be used for concatenating (joining) two strings together, as shown in the following &lt;a1&gt;&lt;c2&gt;ConcatDemo&lt;/c2&gt;&lt;/a1&gt; program:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064825Z" creationid="pingfangx" creationdate="20180521T064825Z">
        <seg>&lt;c0&gt;+&lt;/c0&gt; 运算符也可用于串连(连接)两个字符串，如下面的 &lt;a1&gt;&lt;c2&gt;ConcatDemo&lt;/c2&gt;&lt;/a1&gt; 程序所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;+&lt;/c0&gt; operator is widely used in &lt;c1&gt;print&lt;/c1&gt; statements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064426Z" creationid="pingfangx" creationdate="20190103T064426Z">
        <seg>&lt;c0&gt;+&lt;/c0&gt; 运算符广泛用于 &lt;c1&gt;print&lt;/c1&gt; 语句中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Bicycle&lt;/c0&gt; Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065606Z" creationid="pingfangx" creationdate="20180705T065606Z">
        <seg>&lt;c0&gt;Bicycle&lt;/c0&gt; 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Bicycle&lt;/c0&gt; class uses the following lines of code to define its fields:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063154Z" creationid="pingfangx" creationdate="20180525T063154Z">
        <seg>&lt;c0&gt;Bicycle&lt;/c0&gt; 类使用以下几行代码来定义其字段：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Cat&lt;/c0&gt; class overrides the instance method in &lt;c1&gt;Animal&lt;/c1&gt; and hides the static method in &lt;c2&gt;Animal&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090705Z" creationid="pingfangx" creationdate="20190102T090705Z">
        <seg>&lt;c0&gt;Cat&lt;/c0&gt; 类会覆盖 &lt;c1&gt;Animal&lt;/c1&gt; 中的实例方法，并隐藏 &lt;c2&gt;Animal&lt;/c2&gt; 中的静态方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;CheckPerson.test&lt;/c0&gt; method contains one parameter, &lt;c1&gt;p&lt;/c1&gt;, which represents an instance of the &lt;c2&gt;Person&lt;/c2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075421Z" creationid="pingfangx" creationdate="20181228T075421Z">
        <seg>&lt;c0&gt;CheckPerson.test&lt;/c0&gt; 方法包含一个参数 &lt;c1&gt;p&lt;/c1&gt;，它表示 &lt;c2&gt;Person&lt;/c2&gt; 类的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;CheckPerson&lt;/c0&gt; interface is a &lt;i1&gt;functional interface&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091748Z" creationid="pingfangx" creationdate="20180706T091748Z">
        <seg>&lt;c0&gt;CheckPerson&lt;/c0&gt; 接口是 &lt;i1&gt;functional interface（函数式接口）&lt;/i1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Circle&lt;/c0&gt; class has three fields: &lt;c1&gt;x&lt;/c1&gt;, &lt;c2&gt;y&lt;/c2&gt;, and &lt;c3&gt;radius&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033618Z" creationid="pingfangx" creationdate="20180601T033618Z">
        <seg>&lt;c0&gt;Circle&lt;/c0&gt; 类有三个字段：&lt;c1&gt;x&lt;/c1&gt;，&lt;c2&gt;y&lt;/c2&gt; 和 &lt;c3&gt;radius&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Comparator&lt;/c0&gt; interface has been enhanced with other versions of the default method &lt;c1&gt;thenComparing&lt;/c1&gt; (such as &lt;a2&gt;&lt;c3&gt;thenComparingDouble&lt;/c3&gt;&lt;/a2&gt; and &lt;a4&gt;&lt;c5&gt;thenComparingLong&lt;/c5&gt;&lt;/a4&gt;) that enable you to build &lt;c6&gt;Comparator&lt;/c6&gt; instances that compare other data types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072007Z" creationid="pingfangx" creationdate="20190102T072007Z">
        <seg>&lt;c0&gt;Comparator&lt;/c0&gt; 接口已使用其他版本的默认方法 &lt;c1&gt;thenComparing&lt;/c1&gt; 进行了增强(例如 &lt;a2&gt;&lt;c3&gt;thenComparingDouble&lt;/c3&gt;&lt;/a2&gt; 和 &lt;a4&gt;&lt;c5&gt;thenComparingLong&lt;/c5&gt;&lt;/a4&gt;)，使您能够构建比较其他数据类型的 &lt;c6&gt;Comparator&lt;/c6&gt; 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Comparator&lt;/c0&gt; interface has been enhanced with other versions of the static method &lt;c1&gt;comparing&lt;/c1&gt; such as &lt;a2&gt;&lt;c3&gt;comparingDouble&lt;/c3&gt;&lt;/a2&gt; and &lt;a4&gt;&lt;c5&gt;comparingLong&lt;/c5&gt;&lt;/a4&gt; that enable you to create &lt;c6&gt;Comparator&lt;/c6&gt; instances that compare other data types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071752Z" creationid="pingfangx" creationdate="20190102T071752Z">
        <seg>&lt;c0&gt;Comparator&lt;/c0&gt; 接口已通过其他版本的静态方法 &lt;c1&gt;comparing&lt;/c1&gt; 进行了增强，例如 &lt;a2&gt;&lt;c3&gt;comparingDouble&lt;/c3&gt;&lt;/a2&gt; 和 &lt;a4&gt;&lt;c5&gt;comparingLong&lt;/c5&gt;&lt;/a4&gt;，使您能够创建比较其他数据类型的 &lt;c6&gt;Comparator&lt;/c6&gt; 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;DataStructure&lt;/c0&gt; outer class, which includes a constructor to create an instance of &lt;c1&gt;DataStructure&lt;/c1&gt; containing an array filled with consecutive integer values (0, 1, 2, 3, and so on) and a method that prints elements of the array that have an even index value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100659Z" creationid="pingfangx" creationdate="20180705T100659Z">
        <seg>&lt;c0&gt;DataStructure&lt;/c0&gt; 外部类，包括用于创建 &lt;c1&gt;DataStructure&lt;/c1&gt; 实例的构造函数，其中包含一个填充了连续整数值(0,1,2,3 等)的数组以及打印具有偶数索引值的数组元素的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Deck&lt;/c0&gt; interface contains various methods that manipulate cards in a deck:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T070136Z" creationid="pingfangx" creationdate="20190102T065303Z">
        <seg>&lt;c0&gt;Deck&lt;/c0&gt; 接口包含操作牌堆中的牌各种方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;EvenIterator&lt;/c0&gt; inner class, which implements the &lt;c1&gt;DataStructureIterator&lt;/c1&gt; interface, which extends the &lt;a2&gt;&lt;c3&gt;Iterator&lt;/c3&gt;&lt;/a2&gt;&lt;c4&gt;&lt;&lt;/c4&gt; &lt;a5&gt;&lt;c6&gt;Integer&lt;/c6&gt;&lt;/a5&gt;&lt;c7&gt;&gt;&lt;/c7&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100742Z" creationid="pingfangx" creationdate="20180705T100742Z">
        <seg>&lt;c0&gt;EvenIterator&lt;/c0&gt; 内部类，它实现 &lt;c1&gt;DataStructureIterator&lt;/c1&gt; 接口，继承 &lt;a2&gt;&lt;c3&gt;Iterator&lt;/c3&gt;&lt;/a2&gt;&lt;c4&gt;&lt;&lt;/c4&gt; &lt;a5&gt;&lt;c6&gt;Integer&lt;/c6&gt;&lt;/a5&gt;&lt;c7&gt;&gt;&lt;/c7&gt; 接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Function&lt;T,R&gt;&lt;/c0&gt; interface contains the method &lt;c1&gt;R apply(T t)&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094255Z" creationid="pingfangx" creationdate="20180706T094255Z">
        <seg>&lt;c0&gt;Function&lt;T,R&gt;&lt;/c0&gt; 接口包含方法 &lt;c1&gt;R apply(T t)&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;HelloWorldApp&lt;/c0&gt; Class Definition</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035525Z" creationid="pingfangx" creationdate="20180518T035525Z">
        <seg>&lt;c0&gt;HelloWorldApp&lt;/c0&gt; 类定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Math&lt;/c0&gt; class also includes more than 40 static methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035512Z" creationid="pingfangx" creationdate="20190103T035512Z">
        <seg>&lt;c0&gt;Math&lt;/c0&gt; 类还包含 40 多种静态方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Math&lt;/c0&gt; class also provides a collection of trigonometric functions, which are summarized in the following table.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040238Z" creationid="pingfangx" creationdate="20190103T040238Z">
        <seg>&lt;c0&gt;Math&lt;/c0&gt; 类还提供了三角函数的集合，如下表所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Math&lt;/c0&gt; class contains a variety of class methods for performing mathematical functions, including exponential, logarithmic, and trigonometric methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041300Z" creationid="pingfangx" creationdate="20190103T041300Z">
        <seg>&lt;c0&gt;Math&lt;/c0&gt; 类包含用于执行数学函数的各种类方法，包括指数，对数和三角函数方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Math&lt;/c0&gt; class includes two constants:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035432Z" creationid="pingfangx" creationdate="20190103T035432Z">
        <seg>&lt;c0&gt;Math&lt;/c0&gt; 类包含两个常量：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;MountainBike&lt;/c0&gt; class at the beginning of this lesson did just that.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180529T065404Z" creationid="pingfangx" creationdate="20180529T065404Z">
        <seg>本课开始的 &lt;c0&gt;MountainBike&lt;/c0&gt; 类就是这样做的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Number&lt;/c0&gt; classes include constants and useful class methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041149Z" creationid="pingfangx" creationdate="20190103T041149Z">
        <seg>&lt;c0&gt;Number&lt;/c0&gt; 类包括常量和有用的类方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Number&lt;/c0&gt; subclasses that wrap primitive numeric types ( &lt;a1&gt;&lt;c2&gt;Byte&lt;/c2&gt;&lt;/a1&gt;, &lt;a3&gt;&lt;c4&gt;Integer&lt;/c4&gt;&lt;/a3&gt;, &lt;a5&gt;&lt;c6&gt;Double&lt;/c6&gt;&lt;/a5&gt;, &lt;a7&gt;&lt;c8&gt;Float&lt;/c8&gt;&lt;/a7&gt;, &lt;a9&gt;&lt;c10&gt;Long&lt;/c10&gt;&lt;/a9&gt;, and &lt;a11&gt;&lt;c12&gt;Short&lt;/c12&gt;&lt;/a11&gt;) each provide a class method named &lt;c13&gt;valueOf&lt;/c13&gt; that converts a string to an object of that type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065141Z" creationid="pingfangx" creationdate="20190103T065141Z">
        <seg>包含基本数字类型的 &lt;c0&gt;Number&lt;/c0&gt; 子类(&lt;a1&gt;&lt;c2&gt;Byte&lt;/c2&gt;&lt;/a1&gt;，&lt;a3&gt;&lt;c4&gt;Integer&lt;/c4&gt;&lt;/a3&gt;，&lt;a5&gt;&lt;c6&gt;Double&lt;/c6&gt;&lt;/a5&gt;，&lt;a7&gt;&lt;c8&gt;Float&lt;/c8&gt;&lt;/a7&gt;，&lt;a9&gt;&lt;c10&gt;Long&lt;/c10&gt;&lt;/a9&gt; 和 &lt;a11&gt;&lt;c12&gt;Short&lt;/c12&gt;&lt;/a11&gt;)每个都提供一个名为 &lt;c13&gt;valueOf&lt;/c13&gt; 的类方法，该方法将字符串转换为该类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Object&lt;/c0&gt; class is the top of the class hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023258Z" creationid="pingfangx" creationdate="20190103T023258Z">
        <seg>&lt;c0&gt;Object&lt;/c0&gt; 类是类层次结构的顶部。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Object&lt;/c0&gt; class provides a callback method, &lt;c1&gt;finalize()&lt;/c1&gt;, that &lt;i2&gt;may be&lt;/i2&gt; invoked on an object when it becomes garbage.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103019Z" creationid="pingfangx" creationdate="20190102T103019Z">
        <seg>&lt;c0&gt;Object&lt;/c0&gt; 类提供了一个回调方法 &lt;c1&gt;finalize()&lt;/c1&gt;，当对象变为垃圾时，&lt;i2&gt;可能&lt;/i2&gt; 调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Object&lt;/c0&gt;'s &lt;c1&gt;toString()&lt;/c1&gt; method returns a &lt;c2&gt;String&lt;/c2&gt; representation of the object, which is very useful for debugging.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104021Z" creationid="pingfangx" creationdate="20190102T104021Z">
        <seg>&lt;c0&gt;Object&lt;/c0&gt; 的 &lt;c1&gt;toString()&lt;/c1&gt; 方法返回对象的 &lt;c2&gt;String&lt;/c2&gt; 表示，这对于调试非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;String&lt;/c0&gt; class also includes a number of utility methods, among them &lt;c1&gt;split()&lt;/c1&gt;, &lt;c2&gt;toLowerCase()&lt;/c2&gt;, &lt;c3&gt;toUpperCase()&lt;/c3&gt;, and &lt;c4&gt;valueOf()&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083346Z" creationid="pingfangx" creationdate="20190103T083346Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; 类还包含许多实用方法，其中包括 &lt;c1&gt;split()&lt;/c1&gt;，&lt;c2&gt;toLowerCase()&lt;/c2&gt;，&lt;c3&gt;toUpperCase()&lt;/c3&gt; 和 &lt;c4&gt;valueOf()&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;String&lt;/c0&gt; class also provides a search method, &lt;c1&gt;contains&lt;/c1&gt;, that returns true if the string contains a particular character sequence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073327Z" creationid="pingfangx" creationdate="20190103T073327Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; 类还提供了一个搜索方法 &lt;c1&gt;contains&lt;/c1&gt;，如果字符串包含特定字符序列，则返回 true。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;String&lt;/c0&gt; class does have four methods for &lt;i1&gt;replacing&lt;/i1&gt; found characters or substrings, however.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074005Z" creationid="pingfangx" creationdate="20190103T074005Z">
        <seg>但是，&lt;c0&gt;String&lt;/c0&gt; 类有 &lt;i1&gt;replacing&lt;/i1&gt; 找到的字符或子字符串的四种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;String&lt;/c0&gt; class has a number of methods for comparing strings and portions of strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075433Z" creationid="pingfangx" creationdate="20190103T075433Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; 类有许多用于比较字符串和字符串部分的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;String&lt;/c0&gt; class has a number of methods for examining the contents of strings, finding characters or substrings within a string, changing case, and other tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072527Z" creationid="pingfangx" creationdate="20190103T072527Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; 类有许多方法可用于检查字符串的内容，查找字符串中的字符或获取子字符串，更改大小写以及其他任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;String&lt;/c0&gt; class has many methods to find and retrieve substrings; these can then be easily reassembled into new strings using the &lt;c1&gt;+&lt;/c1&gt; concatenation operator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083335Z" creationid="pingfangx" creationdate="20190103T083335Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; 类有许多方法可以查找和获取子字符串;然后可以使用 &lt;c1&gt;+&lt;/c1&gt; 连接运算符轻松地将它们重新组合成新的字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;String&lt;/c0&gt; class has very few methods for inserting characters or substrings into a string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073632Z" creationid="pingfangx" creationdate="20190103T073632Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; 类只有很少的方法可以将字符或子字符串插入到字符串中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;String&lt;/c0&gt; class includes a method for concatenating two strings:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064319Z" creationid="pingfangx" creationdate="20190103T064319Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; 类包含用于连接两个字符串的方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;String&lt;/c0&gt; in the &lt;c1&gt;switch&lt;/c1&gt; expression is compared with the expressions associated with each &lt;c2&gt;case&lt;/c2&gt; label as if the &lt;a3&gt;&lt;c4&gt;String.equals&lt;/c4&gt;&lt;/a3&gt; method were being used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082635Z" creationid="pingfangx" creationdate="20180521T082635Z">
        <seg>将 &lt;c1&gt;switch&lt;/c1&gt; 表达式中的 &lt;c0&gt;String&lt;/c0&gt; 与每个 &lt;c2&gt;case&lt;/c2&gt; 标签关联的表达式进行比较，就像 &lt;a3&gt;&lt;c4&gt;String.equals&lt;/c4&gt;&lt;/a3&gt; 方法正在使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;StringBuilder&lt;/c0&gt; class has some methods related to length and capacity that the &lt;c1&gt;String&lt;/c1&gt; class does not have:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081353Z" creationid="pingfangx" creationdate="20190103T081353Z">
        <seg>&lt;c0&gt;StringBuilder&lt;/c0&gt; 类有一些 &lt;c1&gt;String&lt;/c1&gt; 类没有的长度和容量相关的方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;StringBuilder&lt;/c0&gt; class, like the &lt;c1&gt;String&lt;/c1&gt; class, has a &lt;c2&gt;length()&lt;/c2&gt; method that returns the length of the character sequence in the builder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080907Z" creationid="pingfangx" creationdate="20190103T080907Z">
        <seg>与 &lt;c1&gt;String&lt;/c1&gt; 类一样，&lt;c0&gt;StringBuilder&lt;/c0&gt; 类具有 &lt;c2&gt;length()&lt;/c2&gt; 方法，该方法返回 builder 中字符序列的长度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;StringDemo&lt;/c0&gt; program that was listed in the section titled "Strings" is an example of a program that would be more efficient if a &lt;c1&gt;StringBuilder&lt;/c1&gt; were used instead of a &lt;c2&gt;String&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082639Z" creationid="pingfangx" creationdate="20190103T082639Z">
        <seg>标题为 "Strings" 一节中列出的 &lt;c0&gt;StringDemo&lt;/c0&gt; 程序是一个程序的示例，如果使用 &lt;c1&gt;StringBuilder&lt;/c1&gt; 代替 &lt;c2&gt;String&lt;/c2&gt; 会更有效率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;System&lt;/c0&gt; class has an &lt;c1&gt;arraycopy&lt;/c1&gt; method that you can use to efficiently copy data from one array into another:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042400Z" creationid="pingfangx" creationdate="20180521T042400Z">
        <seg>&lt;c0&gt;System&lt;/c0&gt; 类有一个 &lt;c1&gt;arraycopy&lt;/c1&gt; 方法，您可以使用该方法将数据从一个数组有效地复制到另一个数组中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;break&lt;/c0&gt; Statement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085727Z" creationid="pingfangx" creationdate="20180521T085727Z">
        <seg>&lt;c0&gt;break&lt;/c0&gt; 语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;break&lt;/c0&gt; statement has two forms: labeled and unlabeled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085732Z" creationid="pingfangx" creationdate="20180521T085732Z">
        <seg>&lt;c0&gt;break&lt;/c0&gt; 语句有两种形式：带标签和无标签。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;break&lt;/c0&gt; statement terminates the labeled statement; it does not transfer the flow of control to the label.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090154Z" creationid="pingfangx" creationdate="20180521T090154Z">
        <seg>&lt;c0&gt;break&lt;/c0&gt; 语句终止带标签的语句;它不会将控制流转移到标签上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;break&lt;/c0&gt; statement, shown in boldface, terminates the &lt;c1&gt;for&lt;/c1&gt; loop when that value is found.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085917Z" creationid="pingfangx" creationdate="20180521T085903Z">
        <seg>当找到该值时，以粗体显示的 &lt;c0&gt;break&lt;/c0&gt; 语句会终止 &lt;c1&gt;for&lt;/c1&gt; 循环。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;continue&lt;/c0&gt; Statement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090219Z" creationid="pingfangx" creationdate="20180521T090214Z">
        <seg>&lt;c0&gt;continue&lt;/c0&gt; 语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;continue&lt;/c0&gt; statement skips the current iteration of a &lt;c1&gt;for&lt;/c1&gt;, &lt;c2&gt;while&lt;/c2&gt; , or &lt;c3&gt;do-while&lt;/c3&gt; loop.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090337Z" creationid="pingfangx" creationdate="20180521T090337Z">
        <seg>&lt;c0&gt;continue&lt;/c0&gt; 语句跳过 &lt;c1&gt;for&lt;/c1&gt;，&lt;c2&gt;while&lt;/c2&gt; 或 &lt;c3&gt;do-while&lt;/c3&gt; 循环的当前迭代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;enum&lt;/c0&gt; declaration defines a &lt;i1&gt;class&lt;/i1&gt; (called an &lt;i2&gt;enum type&lt;/i2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015442Z" creationid="pingfangx" creationdate="20190102T015417Z">
        <seg>&lt;c0&gt;enum&lt;/c0&gt; 声明定义了一个 &lt;i1&gt;class&lt;/i1&gt;(称为 &lt;i2&gt;enum type&lt;/i2&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;equals()&lt;/c0&gt; method compares two objects for equality and returns &lt;c1&gt;true&lt;/c1&gt; if they are equal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101859Z" creationid="pingfangx" creationdate="20190102T101859Z">
        <seg>&lt;c0&gt;equals()&lt;/c0&gt; 方法比较两个对象是否相等，如果它们相等则返回 &lt;c1&gt;true&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;finalize()&lt;/c0&gt; method &lt;e1&gt;may be&lt;/e1&gt; called automatically by the system, but when it is called, or even if it is called, is uncertain.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103228Z" creationid="pingfangx" creationdate="20190102T103228Z">
        <seg>&lt;c0&gt;finalize()&lt;/c0&gt; 方法 &lt;e1&gt;可能&lt;/e1&gt;由系统自动调用，但是它何时被调用，或者它是否被调用，是不确定的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;for&lt;/c0&gt; statement also has another form designed for iteration through &lt;a1&gt;Collections&lt;/a1&gt; and &lt;a2&gt;arrays&lt;/a2&gt; This form is sometimes referred to as the &lt;i3&gt;enhanced for&lt;/i3&gt; statement, and can be used to make your loops more compact and easy to read.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090755Z" creationid="pingfangx" creationdate="20180521T085607Z">
        <seg>&lt;c0&gt;for&lt;/c0&gt; 语句还有另一种形式，用于迭代 &lt;a1&gt;Collections&lt;/a1&gt; 和 &lt;a2&gt;arrays&lt;/a2&gt; 这种形式有时被称为&lt;i3&gt;增强型 for （enhanced for）&lt;/i3&gt;语句，可用于使循环更紧凑，易于阅读。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;for&lt;/c0&gt; statement provides a compact way to iterate over a range of values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090624Z" creationid="pingfangx" creationdate="20180521T084354Z">
        <seg>&lt;c0&gt;for&lt;/c0&gt; 语句提供了一种在一系列值上迭代的简洁方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;getArea()&lt;/c0&gt; method in the &lt;c1&gt;Rectangle&lt;/c1&gt; &lt;a2&gt;&lt;c3&gt;Rectangle&lt;/c3&gt;&lt;/a2&gt; class that was discussed in the sections on objects returns an integer:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091547Z" creationid="pingfangx" creationdate="20180601T091547Z">
        <seg>在 &lt;c1&gt;Rectangle&lt;/c1&gt; 类中的 &lt;c0&gt;getArea()&lt;/c0&gt; 方法返回一个整数，&lt;a2&gt;&lt;c3&gt;Rectangle&lt;/c3&gt;&lt;/a2&gt; 类已经在前面的 objects 部分讨论过：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;getArea&lt;/c0&gt; method returns a primitive type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091630Z" creationid="pingfangx" creationdate="20180601T091630Z">
        <seg>&lt;c0&gt;getArea&lt;/c0&gt; 方法返回一个基本类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;getClass()&lt;/c0&gt; method returns a &lt;c1&gt;Class&lt;/c1&gt; object, which has methods you can use to get information about the class, such as its name (&lt;c2&gt;getSimpleName()&lt;/c2&gt;), its superclass (&lt;c3&gt;getSuperclass()&lt;/c3&gt;), and the interfaces it implements (&lt;c4&gt;getInterfaces()&lt;/c4&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103530Z" creationid="pingfangx" creationdate="20190102T103530Z">
        <seg>&lt;c0&gt;getClass()&lt;/c0&gt; 方法返回一个 &lt;c1&gt;Class&lt;/c1&gt; 对象，该对象具有可用于获取有关类的信息的方法，例如其名称（&lt;c2&gt;getSimpleName()&lt;/c2&gt;），它的超类（&lt;c3&gt;getSuperclass()&lt;/c3&gt;），以及它实现的接口（&lt;c4&gt;getInterfaces()&lt;/c4&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;if-then-else&lt;/c0&gt; Statement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081054Z" creationid="pingfangx" creationdate="20180521T081054Z">
        <seg>&lt;c0&gt;if-then-else&lt;/c0&gt; 语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;if-then-else&lt;/c0&gt; statement provides a secondary path of execution when an "if" clause evaluates to &lt;c1&gt;false&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081108Z" creationid="pingfangx" creationdate="20180521T081108Z">
        <seg>当 "if" 子句计算为 &lt;c1&gt;false&lt;/c1&gt; 时，&lt;c0&gt;if-then-else&lt;/c0&gt; 语句提供执行的辅助路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;if-then&lt;/c0&gt; Statement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080817Z" creationid="pingfangx" creationdate="20180521T080817Z">
        <seg>&lt;c0&gt;if-then&lt;/c0&gt; 语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;if-then&lt;/c0&gt; statement is the most basic of all the control flow statements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080822Z" creationid="pingfangx" creationdate="20180521T080822Z">
        <seg>&lt;c0&gt;if-then&lt;/c0&gt; 语句是所有控制流程语句中最基本的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;instanceof&lt;/c0&gt; operator compares an object to a specified type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070413Z" creationid="pingfangx" creationdate="20180521T070413Z">
        <seg>&lt;c0&gt;instanceof&lt;/c0&gt; 运算符将对象与指定的类型进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;java.io&lt;/c0&gt; package includes a &lt;c1&gt;PrintStream&lt;/c1&gt; class that has two formatting methods that you can use to replace &lt;c2&gt;print&lt;/c2&gt; and &lt;c3&gt;println&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032150Z" creationid="pingfangx" creationdate="20190103T032150Z">
        <seg>&lt;c0&gt;java.io&lt;/c0&gt; 包中包含一个 &lt;c1&gt;PrintStream&lt;/c1&gt; 类，它有两种格式化方法可用于替换 &lt;c2&gt;print&lt;/c2&gt; 和 &lt;c3&gt;println&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;main&lt;/c0&gt; Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035621Z" creationid="pingfangx" creationdate="20180518T035621Z">
        <seg>&lt;c0&gt;main&lt;/c0&gt; 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;main&lt;/c0&gt; method accepts a single argument: an array of elements of type &lt;c1&gt;String&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035721Z" creationid="pingfangx" creationdate="20180518T035721Z">
        <seg>&lt;c0&gt;main&lt;/c0&gt; 方法接受一个参数：&lt;c1&gt;String&lt;/c1&gt; 类型元素的数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;main&lt;/c0&gt; method is similar to the &lt;c1&gt;main&lt;/c1&gt; function in C and C++; it's the entry point for your application and will subsequently invoke all the other methods required by your program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035700Z" creationid="pingfangx" creationdate="20180518T035700Z">
        <seg>&lt;c0&gt;main&lt;/c0&gt; 方法类似于 C 和 C ++中的 &lt;c1&gt;main&lt;/c1&gt; 函数;它是您的应用程序的入口点，随后将调用您的程序所需的所有其他方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;new&lt;/c0&gt; operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061218Z" creationid="pingfangx" creationdate="20180706T061218Z">
        <seg>&lt;c0&gt;new&lt;/c0&gt; 运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;notify&lt;/c0&gt;, &lt;c1&gt;notifyAll&lt;/c1&gt;, and &lt;c2&gt;wait&lt;/c2&gt; methods of &lt;c3&gt;Object&lt;/c3&gt; all play a part in synchronizing the activities of independently running threads in a program, which is discussed in a later lesson and won't be covered here.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101048Z" creationid="pingfangx" creationdate="20190102T101048Z">
        <seg>&lt;c3&gt;Object&lt;/c3&gt; 的 &lt;c0&gt;notify&lt;/c0&gt;, &lt;c1&gt;notifyAll&lt;/c1&gt; 和 &lt;c2&gt;wait&lt;/c2&gt; 方法都在一个程序中同步独立运行的线程的活动中起作用，将在后面的课程中讨论，这里不会涉及。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;pattern&lt;/c0&gt; specifies leading and trailing zeros, because the 0 character is used instead of the pound sign (#).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034351Z" creationid="pingfangx" creationdate="20190103T034303Z">
        <seg>&lt;c0&gt;pattern&lt;/c0&gt; 指定前导零和尾随零，因为使用 0 字符而不是井号(#)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;printf&lt;/c0&gt; and &lt;c1&gt;format&lt;/c1&gt; methods are overloaded.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033059Z" creationid="pingfangx" creationdate="20190103T033059Z">
        <seg>&lt;c0&gt;printf&lt;/c0&gt; 和 &lt;c1&gt;format&lt;/c1&gt; 方法已重载。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;public&lt;/c0&gt; access specifier indicates that the interface can be used by any class in any package.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061534Z" creationid="pingfangx" creationdate="20190102T061534Z">
        <seg>&lt;c0&gt;public&lt;/c0&gt; 访问说明符表示该接口可以被任何包中的任何类使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;random()&lt;/c0&gt; method returns a pseudo-randomly selected number between 0.0 and 1.0.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040518Z" creationid="pingfangx" creationdate="20190103T040518Z">
        <seg>&lt;c0&gt;random()&lt;/c0&gt; 方法返回一个介于 0.0 和 1.0 之间的伪随机选择的数字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;return&lt;/c0&gt; Statement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090654Z" creationid="pingfangx" creationdate="20180521T090654Z">
        <seg>&lt;c0&gt;return&lt;/c0&gt; 语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;returnANumber&lt;/c0&gt; method can return an &lt;c1&gt;ImaginaryNumber&lt;/c1&gt; but not an &lt;c2&gt;Object&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091942Z" creationid="pingfangx" creationdate="20180601T091942Z">
        <seg>&lt;c0&gt;returnANumber&lt;/c0&gt; 方法可以返回 &lt;c1&gt;ImaginaryNumber&lt;/c1&gt;，但不能返回 &lt;c2&gt;Object&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;static&lt;/c0&gt; modifier, in combination with the &lt;c1&gt;final&lt;/c1&gt; modifier, is also used to define constants.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065243Z" creationid="pingfangx" creationdate="20180705T065243Z">
        <seg>&lt;c0&gt;static&lt;/c0&gt; 修饰符与 &lt;c1&gt;final&lt;/c1&gt; 修饰符结合使用，也用于定义常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;substring&lt;/c0&gt; Methods in the &lt;c1&gt;String&lt;/c1&gt; Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072632Z" creationid="pingfangx" creationdate="20190103T072632Z">
        <seg>&lt;c1&gt;String&lt;/c1&gt; 类中的 &lt;c0&gt;substring&lt;/c0&gt; 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;this&lt;/c0&gt; keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T090204Z" creationid="pingfangx" creationdate="20180601T090204Z">
        <seg>&lt;c0&gt;this&lt;/c0&gt; 关键字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;value&lt;/c0&gt; has three digits to the right of the decimal point, but the &lt;c1&gt;pattern&lt;/c1&gt; has only two.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034243Z" creationid="pingfangx" creationdate="20190103T034243Z">
        <seg>&lt;c0&gt;value&lt;/c0&gt; 在小数点右边有三位数，但 &lt;c1&gt;pattern&lt;/c1&gt; 只有两位。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;while&lt;/c0&gt; statement continually executes a block of statements while a particular condition is &lt;c1&gt;true&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082831Z" creationid="pingfangx" creationdate="20180521T082831Z">
        <seg>&lt;c0&gt;while&lt;/c0&gt; 语句在特定条件为 &lt;c1&gt;true&lt;/c1&gt; 时连续执行语句块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;while&lt;/c0&gt; statement evaluates &lt;i1&gt;expression&lt;/i1&gt;, which must return a &lt;c2&gt;boolean&lt;/c2&gt; value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082913Z" creationid="pingfangx" creationdate="20180521T082913Z">
        <seg>&lt;c0&gt;while&lt;/c0&gt; 语句计算 &lt;i1&gt;expression&lt;/i1&gt; 时，必须返回 &lt;c2&gt;boolean&lt;/c2&gt; 值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c15&gt;for&lt;/c15&gt; statement provides a compact way to iterate over a range of values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090930Z" creationid="pingfangx" creationdate="20180521T090930Z">
        <seg>&lt;c15&gt;for&lt;/c15&gt; 语句提供了一种紧凑的方式来遍历一系列值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;%n&lt;/c1&gt; is a platform-independent newline character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033049Z" creationid="pingfangx" creationdate="20190103T033049Z">
        <seg>&lt;c1&gt;%n&lt;/c1&gt; 是与平台无关的换行符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;MIN_VALUE&lt;/c1&gt; and &lt;c2&gt;MAX_VALUE&lt;/c2&gt; constants contain the smallest and largest values that can be contained by an object of that type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041207Z" creationid="pingfangx" creationdate="20190103T041200Z">
        <seg>&lt;c1&gt;MIN_VALUE&lt;/c1&gt; 和 &lt;c2&gt;MAX_VALUE&lt;/c2&gt; 常量包含该类型对象可以包含的最小值和最大值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;String&lt;/c1&gt; class provides accessor methods that return the position within the string of a specific character or substring: &lt;c2&gt;indexOf()&lt;/c2&gt; and &lt;c3&gt;lastIndexOf()&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073247Z" creationid="pingfangx" creationdate="20190103T073247Z">
        <seg>&lt;c1&gt;String&lt;/c1&gt; 类提供了访问器方法，这些方法返回特定字符或子字符串在字符串中的位置：&lt;c2&gt;indexOf()&lt;/c2&gt; 和 &lt;c3&gt;lastIndexOf()&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;return&lt;/c1&gt; statement exits from the current method, and control flow returns to where the method was invoked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090704Z" creationid="pingfangx" creationdate="20180521T090704Z">
        <seg>&lt;c1&gt;return&lt;/c1&gt; 语句从当前方法中退出，并且控制流返回到调用方法的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;substring&lt;/c1&gt; method has two versions, as shown in the following table:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072620Z" creationid="pingfangx" creationdate="20190103T072620Z">
        <seg>&lt;c1&gt;substring&lt;/c1&gt; 方法有两个版本，如下表所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;Comparator&lt;/c2&gt; interface has been enhanced with this ability with the default method &lt;a3&gt;&lt;c4&gt;reversed&lt;/c4&gt;&lt;/a3&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072143Z" creationid="pingfangx" creationdate="20190102T072143Z">
        <seg>&lt;c2&gt;Comparator&lt;/c2&gt; 接口使用默认方法 &lt;a3&gt;&lt;c4&gt;reversed&lt;/c4&gt;&lt;/a3&gt; 增强了此功能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;Comparator&lt;/c2&gt; interface has been enhanced with this ability with the default method &lt;a3&gt;&lt;c4&gt;thenComparing&lt;/c4&gt;&lt;/a3&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071936Z" creationid="pingfangx" creationdate="20190102T071936Z">
        <seg>&lt;c2&gt;Comparator&lt;/c2&gt; 接口已使用默认方法 &lt;a3&gt;&lt;c4&gt;thenComparing&lt;/c4&gt;&lt;/a3&gt; 对此功能进行了增强：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;Object&lt;/c2&gt; class does thisa number of its methods are &lt;c3&gt;final&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104530Z" creationid="pingfangx" creationdate="20190102T104530Z">
        <seg>&lt;c2&gt;Object&lt;/c2&gt; 类这样做了它的一些方法是 &lt;c3&gt;final&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;String&lt;/c2&gt; class has an equivalent class method, &lt;c3&gt;format()&lt;/c3&gt;, that returns a &lt;c4&gt;String&lt;/c4&gt; object rather than a &lt;c5&gt;PrintStream&lt;/c5&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064711Z" creationid="pingfangx" creationdate="20190103T064711Z">
        <seg>&lt;c2&gt;String&lt;/c2&gt; 类具有等效的类方法 &lt;c3&gt;format()&lt;/c3&gt;，它返回 &lt;c4&gt;String&lt;/c4&gt; 对象而不是 &lt;c5&gt;PrintStream&lt;/c5&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;String&lt;/c2&gt; class has thirteen constructors that allow you to provide the initial value of the string using different sources, such as an array of characters:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063502Z" creationid="pingfangx" creationdate="20190103T063502Z">
        <seg>&lt;c2&gt;String&lt;/c2&gt; 类有 13 个构造函数，允许您使用不同的源提供字符串的初始值，例如字符数组：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;byte&lt;/c2&gt; data type can be useful for saving memory in large &lt;a3&gt;arrays&lt;/a3&gt;, where the memory savings actually matters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080328Z" creationid="pingfangx" creationdate="20180518T080328Z">
        <seg>&lt;c2&gt;byte&lt;/c2&gt; 数据类型可用于节省大型 &lt;a3&gt;arrays&lt;/a3&gt; 中的内存，其中内存节省实际上很重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;equals()&lt;/c2&gt; method provided in the &lt;c3&gt;Object&lt;/c3&gt; class uses the identity operator (&lt;c4&gt;==&lt;/c4&gt;) to determine whether two objects are equal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102341Z" creationid="pingfangx" creationdate="20190102T102341Z">
        <seg>&lt;c3&gt;Object&lt;/c3&gt; 类中提供的 &lt;c2&gt;equals()&lt;/c2&gt; 方法使用相等运算符(&lt;c4&gt;==&lt;/c4&gt;)来确定两个对象是否相等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;final&lt;/c2&gt; modifier indicates that the value of this field cannot change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065249Z" creationid="pingfangx" creationdate="20180705T065249Z">
        <seg>&lt;c2&gt;final&lt;/c2&gt; 修饰符表示此字段的值不能更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;format&lt;/c2&gt; method handles this by rounding up.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034253Z" creationid="pingfangx" creationdate="20190103T034253Z">
        <seg>&lt;c2&gt;format&lt;/c2&gt; 方法通过四舍五入处理此问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;return&lt;/c2&gt; statement has two forms: one that returns a value, and one that doesn't.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090709Z" creationid="pingfangx" creationdate="20180521T090709Z">
        <seg>&lt;c2&gt;return&lt;/c2&gt; 语句有两种形式：一种返回值，另一种不返回。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;unchecked&lt;/c2&gt; warning can occur when interfacing with legacy code written before the advent of &lt;a3&gt;generics&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033644Z" creationid="pingfangx" creationdate="20190102T033644Z">
        <seg>当与 &lt;a3&gt;generics&lt;/a3&gt; 出现之前编写的遗留代码接口时，可能会发生 &lt;c2&gt;unchecked&lt;/c2&gt; 警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;EventHandler&lt;ActionEvent&gt;&lt;/c3&gt; interface contains only one method, &lt;c4&gt;void handle(T event)&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075320Z" creationid="pingfangx" creationdate="20181228T075320Z">
        <seg>&lt;c3&gt;EventHandler&lt;ActionEvent&gt;&lt;/c3&gt; 接口只包含一个方法，&lt;c4&gt;void handle(T event)&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;EventHandler&lt;ActionEvent&gt;&lt;/c3&gt; interface contains only one method, handle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065714Z" creationid="pingfangx" creationdate="20180706T065714Z">
        <seg>&lt;c3&gt;EventHandler&lt;ActionEvent&gt;&lt;/c3&gt; 接口只包含一个方法 handle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;String&lt;/c3&gt; class has a number of methods, some of which will be discussed below, that appear to modify strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063523Z" creationid="pingfangx" creationdate="20190103T063523Z">
        <seg>&lt;c3&gt;String&lt;/c3&gt; 类有许多方法，其中一些将在下面讨论，似乎可以修改字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;String&lt;/c3&gt; representation for an object depends entirely on the object, which is why you need to override &lt;c4&gt;toString()&lt;/c4&gt; in your classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104040Z" creationid="pingfangx" creationdate="20190102T104040Z">
        <seg>对象的 &lt;c3&gt;String&lt;/c3&gt; 表示完全取决于对象，这就是您需要在类中覆盖 &lt;c4&gt;toString()&lt;/c4&gt; 的原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;byteValue&lt;/c3&gt;, &lt;c4&gt;shortValue&lt;/c4&gt;, and similar methods convert one numeric type to another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041214Z" creationid="pingfangx" creationdate="20190103T041214Z">
        <seg>&lt;c3&gt;byteValue&lt;/c3&gt;，&lt;c4&gt;shortValue&lt;/c4&gt; 和类似方法将一种数字类型转换为另一种数字类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;default&lt;/c3&gt; section handles all values that are not explicitly handled by one of the &lt;c4&gt;case&lt;/c4&gt; sections.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082443Z" creationid="pingfangx" creationdate="20180521T082443Z">
        <seg>&lt;c3&gt;default&lt;/c3&gt; 部分处理所有未由 &lt;c4&gt;case&lt;/c4&gt; 部分之一明确处理的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;format()&lt;/c3&gt; method, which &lt;c4&gt;DecimalFormat&lt;/c4&gt; inherits from &lt;c5&gt;NumberFormat&lt;/c5&gt;, is then invoked by &lt;c6&gt;myFormatter&lt;/c6&gt;it accepts a &lt;c7&gt;double&lt;/c7&gt; value as an argument and returns the formatted number in a string:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034042Z" creationid="pingfangx" creationdate="20190103T034042Z">
        <seg>&lt;c3&gt;format()&lt;/c3&gt; 方法，&lt;c4&gt;DecimalFormat&lt;/c4&gt; 继承自 &lt;c5&gt;NumberFormat&lt;/c5&gt;，然后由 &lt;c6&gt;myFormatter&lt;/c6&gt; 调用它接受一个 &lt;c7&gt;double&lt;/c7&gt; 值作为参数并返回字符串中的格式化数字：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;if-then-else&lt;/c3&gt; statement provides a secondary path of execution when an "if" clause evaluates to &lt;c4&gt;false&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090858Z" creationid="pingfangx" creationdate="20180521T090858Z">
        <seg>当 "if" 子句计算为 &lt;c4&gt;false&lt;/c4&gt; 时，&lt;c3&gt;if-then-else&lt;/c3&gt; 语句提供执行的辅助路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;javadoc&lt;/c3&gt; tool uses doc comments when preparing automatically generated documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035516Z" creationid="pingfangx" creationdate="20180518T035516Z">
        <seg>准备自动生成的文档时，&lt;c3&gt;javadoc&lt;/c3&gt; 工具使用文档注释。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;main&lt;/c3&gt; method in this class creates an instance of &lt;c4&gt;Cat&lt;/c4&gt; and invokes &lt;c5&gt;testClassMethod()&lt;/c5&gt; on the class and &lt;c6&gt;testInstanceMethod()&lt;/c6&gt; on the instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090818Z" creationid="pingfangx" creationdate="20190102T090818Z">
        <seg>此类中的 &lt;c3&gt;main&lt;/c3&gt; 方法创建 &lt;c4&gt;Cat&lt;/c4&gt; 的实例，然后在类上调用 &lt;c5&gt;testClassMethod()&lt;/c5&gt; 方法，并且在实例上调用 &lt;c6&gt;testInstanceMethod()&lt;/c6&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c4&gt;StringBuilder&lt;/c4&gt; class offers a few methods that can be useful for strings, among them &lt;c5&gt;reverse()&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083430Z" creationid="pingfangx" creationdate="20190103T083430Z">
        <seg>&lt;c4&gt;StringBuilder&lt;/c4&gt; 类提供了一些对字符串有用的方法，其中包括 &lt;c5&gt;reverse()&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c4&gt;break&lt;/c4&gt; statements are necessary because without them, statements in &lt;c5&gt;switch&lt;/c5&gt; blocks &lt;e6&gt;fall through&lt;/e6&gt;: All statements after the matching &lt;c7&gt;case&lt;/c7&gt; label are executed in sequence, regardless of the expression of subsequent &lt;c8&gt;case&lt;/c8&gt; labels, until a &lt;c9&gt;break&lt;/c9&gt; statement is encountered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082335Z" creationid="pingfangx" creationdate="20180521T082335Z">
        <seg>&lt;c4&gt;break&lt;/c4&gt; 语句是必需的，因为如果没有它们，&lt;c5&gt;switch&lt;/c5&gt; 块会 &lt;e6&gt;fall through&lt;/e6&gt;：匹配 &lt;c7&gt;case&lt;/c7&gt; 之后的所有语句标签按顺序执行，无论后续 &lt;c8&gt;case&lt;/c8&gt; 标签的表达如何，直到遇到 &lt;c9&gt;break&lt;/c9&gt; 语句为止。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c4&gt;indexOf()&lt;/c4&gt; methods search forward from the beginning of the string, and the &lt;c5&gt;lastIndexOf()&lt;/c5&gt; methods search backward from the end of the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073309Z" creationid="pingfangx" creationdate="20190103T073309Z">
        <seg>&lt;c4&gt;indexOf()&lt;/c4&gt; 方法从字符串的开头向前搜索，&lt;c5&gt;lastIndexOf()&lt;/c5&gt; 方法从字符串的末尾向后搜索。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c4&gt;private&lt;/c4&gt; modifier specifies that the member can only be accessed in its own class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040016Z" creationid="pingfangx" creationdate="20180607T040016Z">
        <seg>&lt;c4&gt;private&lt;/c4&gt; 修饰符指定该成员只能在其自己的类中访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c4&gt;setOrigin&lt;/c4&gt; method has two parameters, each of which has the same name as one of the fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033627Z" creationid="pingfangx" creationdate="20180601T033627Z">
        <seg>&lt;c4&gt;setOrigin&lt;/c4&gt; 方法有两个参数，每个参数都与其中一个字段具有相同的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;Author&lt;/c5&gt; and &lt;c6&gt;Ebook&lt;/c6&gt; annotations in the previous example are custom annotation types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024059Z" creationid="pingfangx" creationdate="20190102T024059Z">
        <seg>上一个示例中的 &lt;c5&gt;Author&lt;/c5&gt; 和 &lt;c6&gt;Ebook&lt;/c6&gt; 注解是自定义注解类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;Comparator&lt;/c5&gt; interface has been enhanced with this ability with the static method &lt;a6&gt;&lt;c7&gt;comparing&lt;/c7&gt;&lt;/a6&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071716Z" creationid="pingfangx" creationdate="20190102T071716Z">
        <seg>&lt;c5&gt;Comparator&lt;/c5&gt; 接口已通过静态方法 &lt;a6&gt;&lt;c7&gt;comparing&lt;/c7&gt;&lt;/a6&gt; 增强了此功能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;GraphicObject&lt;/c5&gt; class can look something like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022300Z" creationid="pingfangx" creationdate="20190103T022300Z">
        <seg>&lt;c5&gt;GraphicObject&lt;/c5&gt; 类看起来像这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;Number&lt;/c5&gt; subclasses also have methods for converting strings to numbers and vice versa.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083409Z" creationid="pingfangx" creationdate="20190103T083409Z">
        <seg>&lt;c5&gt;Number&lt;/c5&gt; 子类还具有将字符串转换为数字的方法，反之亦然。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;String&lt;/c5&gt; class is not technically a primitive data type, but considering the special support given to it by the language, you'll probably tend to think of it as such.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082047Z" creationid="pingfangx" creationdate="20180518T082047Z">
        <seg>&lt;c5&gt;String&lt;/c5&gt; 类在技术上不是原始数据类型，但考虑到该语言给予它的特殊支持，您可能倾向于这样认为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;equals()&lt;/c5&gt; method provided by &lt;c6&gt;Object&lt;/c6&gt; tests whether the object &lt;i7&gt;references&lt;/i7&gt; are equalthat is, if the objects compared are the exact same object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102417Z" creationid="pingfangx" creationdate="20190102T102417Z">
        <seg>&lt;c6&gt;Object&lt;/c6&gt; 提供的 &lt;c5&gt;equals()&lt;/c5&gt; 方法测试对象 &lt;i7&gt;references&lt;/i7&gt; 是否相等也就是说，比较的对象是否是完全相同的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;protected&lt;/c5&gt; modifier specifies that the member can only be accessed within its own package (as with &lt;i6&gt;package-private&lt;/i6&gt;) and, in addition, by a subclass of its class in another package.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040056Z" creationid="pingfangx" creationdate="20180607T040056Z">
        <seg>&lt;c5&gt;protected&lt;/c5&gt; 修饰符指定成员只能在其自己的包中访问(与 &lt;i6&gt;package-private&lt;/i6&gt; 一样)，另外，还可以在另一个包中由其类的子类访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;public&lt;/c5&gt; keyword identifies these fields as public members, accessible by any object that can access the class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063336Z" creationid="pingfangx" creationdate="20180525T063336Z">
        <seg>&lt;c5&gt;public&lt;/c5&gt; 关键字将这些字段标识为公共成员，可由任何可访问该类的对象访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;switch&lt;/c5&gt; statement evaluates its expression, then executes all statements that follow the matching &lt;c6&gt;case&lt;/c6&gt; label.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082112Z" creationid="pingfangx" creationdate="20180521T082112Z">
        <seg>&lt;c5&gt;switch&lt;/c5&gt; 语句计算其表达式，然后执行匹配的 &lt;c6&gt;case&lt;/c6&gt; 标签后面的所有语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;valueOf&lt;/c5&gt; method converts a string to a number, and the &lt;c6&gt;toString&lt;/c6&gt; method converts a number to a string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041226Z" creationid="pingfangx" creationdate="20190103T041226Z">
        <seg>&lt;c5&gt;valueOf&lt;/c5&gt; 方法将字符串转换为数字，&lt;c6&gt;toString&lt;/c6&gt; 方法将数字转换为字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c6&gt;Consumer&lt;T&gt;&lt;/c6&gt; interface contains the method &lt;c7&gt;void accept(T t)&lt;/c7&gt;, which has these characteristics.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094023Z" creationid="pingfangx" creationdate="20180706T094023Z">
        <seg>&lt;c6&gt;Consumer&lt;T&gt;&lt;/c6&gt; 接口包含方法 &lt;c7&gt;void accept(T t)&lt;/c7&gt;，它具有这些特性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c7&gt;Card&lt;/c7&gt; interface contains two &lt;c8&gt;enum&lt;/c8&gt; types (&lt;c9&gt;Suit&lt;/c9&gt; and &lt;c10&gt;Rank&lt;/c10&gt;) and two abstract methods (&lt;c11&gt;getSuit&lt;/c11&gt; and &lt;c12&gt;getRank&lt;/c12&gt;):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065232Z" creationid="pingfangx" creationdate="20190102T065232Z">
        <seg>&lt;c7&gt;Card&lt;/c7&gt; 接口包含两个 &lt;c8&gt;enum&lt;/c8&gt; 类型(&lt;c9&gt;Suit&lt;/c9&gt; 和 &lt;c10&gt;Rank&lt;/c10&gt;)和两个抽象方法(&lt;c11&gt;getSuit&lt;/c11&gt; 和 &lt;c12&gt;getRank&lt;/c12&gt;)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c7&gt;java&lt;/c7&gt; launcher tool then runs your application with an instance of the Java Virtual Machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033152Z" creationid="pingfangx" creationdate="20180518T033152Z">
        <seg>然后，&lt;c7&gt;java&lt;/c7&gt; 启动程序工具使用 Java 虚拟机的一个实例运行您的应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c7&gt;while&lt;/c7&gt; statement continues testing the expression and executing its block until the expression evaluates to &lt;c8&gt;false&lt;/c8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082950Z" creationid="pingfangx" creationdate="20180521T082950Z">
        <seg>&lt;c7&gt;while&lt;/c7&gt; 语句继续测试表达式并执行其块，直到表达式计算为 &lt;c8&gt;false&lt;/c8&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c8&gt;while&lt;/c8&gt; and &lt;c9&gt;do-while&lt;/c9&gt; statements continually execute a block of statements while a particular condition is &lt;c10&gt;true&lt;/c10&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090911Z" creationid="pingfangx" creationdate="20180521T090911Z">
        <seg>&lt;c8&gt;while&lt;/c8&gt; 和 &lt;c9&gt;do-while&lt;/c9&gt; 语句在特定条件为 &lt;c10&gt;true&lt;/c10&gt; 时连续执行一段语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Java Application Programming Interface&lt;/e0&gt; (API)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033314Z" creationid="pingfangx" creationdate="20180518T033314Z">
        <seg>&lt;e0&gt;Java Application Programming Interface&lt;/e0&gt;(API)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Java Virtual Machine&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033309Z" creationid="pingfangx" creationdate="20180518T033309Z">
        <seg>&lt;e0&gt;Java Virtual Machine&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;increment&lt;/e0&gt; expression is invoked after each iteration through the loop; it is perfectly acceptable for this expression to increment &lt;i1&gt;or&lt;/i1&gt; decrement a value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085213Z" creationid="pingfangx" creationdate="20180521T085213Z">
        <seg>在循环的每次迭代之后调用 &lt;e0&gt;increment&lt;/e0&gt; 表达式;这个表达式增加 &lt;i1&gt;or&lt;/i1&gt; 递减一个值是完全可以接受的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;initialization&lt;/e0&gt; expression initializes the loop; it's executed once, as the loop begins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085152Z" creationid="pingfangx" creationdate="20180521T085152Z">
        <seg>&lt;e0&gt;initialization&lt;/e0&gt; 表达式初始化循环;它会在循环开始时执行一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e1&gt;class body&lt;/e1&gt; (the area between the braces) contains all the code that provides for the life cycle of the objects created from the class: constructors for initializing new objects, declarations for the fields that provide the state of the class and its objects, and methods to implement the behavior of the class and its objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030255Z" creationid="pingfangx" creationdate="20180525T030255Z">
        <seg>&lt;e1&gt;class body&lt;/e1&gt;(大括号之间的区域)包含所有提供从类创建的对象的生命周期的代码：用于初始化新对象的构造函数，申明提供类及其对象的状态的字段，以及实现类及其对象行为的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;s0&gt;do-while&lt;/s0&gt; statement is similar to the &lt;c1&gt;while&lt;/c1&gt; statement, but evaluates its expression at the &lt;s2&gt;bottom&lt;/s2&gt; of the loop.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091325Z" creationid="pingfangx" creationdate="20180521T091325Z">
        <seg>&lt;s0&gt;do-while&lt;/s0&gt; 语句类似于 &lt;c1&gt;while&lt;/c1&gt; 语句，但是会在循环的 &lt;s2&gt;bottom&lt;/s2&gt; 处计算其表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;s0&gt;switch&lt;/s0&gt; statement allows for any number of possible execution paths.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091309Z" creationid="pingfangx" creationdate="20180521T091309Z">
        <seg>&lt;s0&gt;switch&lt;/s0&gt; 语句允许任意数量的可能执行路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;t0&gt;Rectangle&lt;/t0&gt; class has two methods: &lt;t1&gt;getArea()&lt;/t1&gt; to compute the rectangle's area and &lt;t2&gt;move()&lt;/t2&gt; to change the rectangle's origin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T084850Z" creationid="pingfangx" creationdate="20180601T084850Z">
        <seg>&lt;t0&gt;Rectangle&lt;/t0&gt; 类有两个方法：&lt;t1&gt;getArea()&lt;/t1&gt; 来计算矩形区域，&lt;t2&gt;move()&lt;/t2&gt; 来更改矩形的原点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;t0&gt;Rectangle&lt;/t0&gt; constructor used in the following statement doesn't take any arguments, so it's called a &lt;e1&gt;no-argument constructor&lt;/e1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071556Z" creationid="pingfangx" creationdate="20180601T071556Z">
        <seg>以下语句中使用的 &lt;t0&gt;Rectangle&lt;/t0&gt; 构造函数不带任何参数，因此称为 &lt;e1&gt;no-argument constructor（无参构造函数）&lt;/e1&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;t0&gt;new&lt;/t0&gt; operator instantiates a class by allocating memory for a new object and returning a reference to that memory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042855Z" creationid="pingfangx" creationdate="20180601T042855Z">
        <seg>&lt;t0&gt;new&lt;/t0&gt; 运算符通过为新对象分配内存并返回对该内存的引用来实例化一个类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;t0&gt;new&lt;/t0&gt; operator requires a single, postfix argument: a call to a constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T043003Z" creationid="pingfangx" creationdate="20180601T043003Z">
        <seg>&lt;t0&gt;new&lt;/t0&gt; 运算符需要一个单一的后缀参数：对构造函数的调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;t0&gt;new&lt;/t0&gt; operator returns a reference to the object it created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T043014Z" creationid="pingfangx" creationdate="20180601T043014Z">
        <seg>&lt;t0&gt;new&lt;/t0&gt; 运算符返回对其创建的对象的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;t1&gt;new&lt;/t1&gt; operator also invokes the object constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042901Z" creationid="pingfangx" creationdate="20180601T042901Z">
        <seg>&lt;t1&gt;new&lt;/t1&gt; 运算符也调用对象构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;t1&gt;new&lt;/t1&gt; operator returns an object reference, so you can use the value returned from new to invoke a new object's methods:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085048Z" creationid="pingfangx" creationdate="20180601T085048Z">
        <seg>&lt;t1&gt;new&lt;/t1&gt; 运算符返回一个对象引用，因此您可以使用 new 返回的值来调用新对象的方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The API and Java Virtual Machine insulate the program from the underlying hardware.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033422Z" creationid="pingfangx" creationdate="20180518T033422Z">
        <seg>API 和 Java 虚拟机将程序与底层硬件隔离开来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The API is a large collection of ready-made software components that provide many useful capabilities.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033356Z" creationid="pingfangx" creationdate="20180518T033356Z">
        <seg>API 是大量现成的软件组件，提供许多有用的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ActionListener interface defines a single method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021123Z" creationid="pingfangx" creationdate="20190102T021123Z">
        <seg>The ActionListener interface defines a single method.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Arithmetic Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064211Z" creationid="pingfangx" creationdate="20180521T064211Z">
        <seg>算术运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Conditional Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070040Z" creationid="pingfangx" creationdate="20180521T070040Z">
        <seg>条件运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The DecimalFormat Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033657Z" creationid="pingfangx" creationdate="20190103T033657Z">
        <seg>DecimalFormat 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Equality and Relational Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065847Z" creationid="pingfangx" creationdate="20180521T065847Z">
        <seg>相等性和关系运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Format of an Annotation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023826Z" creationid="pingfangx" creationdate="20190102T023826Z">
        <seg>注解的格式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Garbage Collector</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085429Z" creationid="pingfangx" creationdate="20180601T085311Z">
        <seg>垃圾回收器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Interface Body</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061648Z" creationid="pingfangx" creationdate="20190102T061648Z">
        <seg>接口主体</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JRE infers the method type arguments, which in this case are &lt;c3&gt;(Person, Person)&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084738Z" creationid="pingfangx" creationdate="20181228T084738Z">
        <seg>JRE 推断出方法类型参数，在本例中是 &lt;c3&gt;(Person, Person)&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java Language Specification lists two categories: &lt;c0&gt;deprecation&lt;/c0&gt; and &lt;c1&gt;unchecked&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033618Z" creationid="pingfangx" creationdate="20190102T033618Z">
        <seg>Java 语言规范列出了两个类别：&lt;c0&gt;deprecation&lt;/c0&gt; 和 &lt;c1&gt;unchecked&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java Platform</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033245Z" creationid="pingfangx" creationdate="20180518T033245Z">
        <seg>Java 平台</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java Platform Class Hierarchy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081806Z" creationid="pingfangx" creationdate="20190102T081806Z">
        <seg>Java 平台类层次结构</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java Programming Language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032825Z" creationid="pingfangx" creationdate="20180518T032825Z">
        <seg>Java 编程语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java SE 8 release does not provide a type checking framework, but it allows you to write (or download) a type checking framework that is implemented as one or more pluggable modules that are used in conjunction with the Java compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040738Z" creationid="pingfangx" creationdate="20190102T040738Z">
        <seg>Java SE 8 版本不提供类型检查框架，但它允许您编写(或下载)类型检查框架，该框架实现为与 Java 编译器结合使用的一个或多个可插入模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java SE Development Kit 8 (JDK 8)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034405Z" creationid="pingfangx" creationdate="20180518T034405Z">
        <seg>The Java SE Development Kit 8 (JDK 8)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java Technology Phenomenon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032656Z" creationid="pingfangx" creationdate="20180518T032656Z">
        <seg>Java 技术现象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java Tutorials are practical guides for programmers who want to use the Java programming language to create applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030827Z" creationid="pingfangx" creationdate="20180518T030827Z">
        <seg>Java 教程是希望使用 Java 编程语言创建应用程序的程序员的实用指南。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java Tutorials have been written for JDK 8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030715Z" creationid="pingfangx" creationdate="20180518T030715Z">
        <seg>Java 教程是为 JDK 8 编写的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java application &lt;i0&gt;launcher tool&lt;/i0&gt; (&lt;c1&gt;java&lt;/c1&gt;) uses the Java virtual machine to run your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034509Z" creationid="pingfangx" creationdate="20180518T034509Z">
        <seg>Java 应用程序 &lt;i0&gt;launcher tool&lt;/i0&gt;(&lt;c1&gt;java&lt;/c1&gt;)使用 Java 虚拟机来运行您的应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java compiler applies autoboxing when a primitive value is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084316Z" creationid="pingfangx" creationdate="20190103T084316Z">
        <seg>Java 编译器应用自动装箱，当基本值为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java compiler applies unboxing when an object of a wrapper class is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084543Z" creationid="pingfangx" creationdate="20190103T084543Z">
        <seg>Java 编译器应用拆箱，当包装类的对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java compiler automatically wraps (boxes) primitives for you when necessary and unboxes them, again when necessary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041141Z" creationid="pingfangx" creationdate="20190103T041141Z">
        <seg>Java 编译器会在必要时自动为您包装(装箱)基本类型，并在必要时再将它们拆箱。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java compiler copies initializer blocks into every constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070707Z" creationid="pingfangx" creationdate="20180705T070707Z">
        <seg>Java 编译器将初始化程序块复制到每个构造函数中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java compiler differentiates the constructors based on the number and the type of the arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062701Z" creationid="pingfangx" creationdate="20180601T062701Z">
        <seg>Java 编译器根据参数的数量和类型区分构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java compiler infers that you want to create a &lt;c0&gt;HashSet&lt;/c0&gt; collection that contains elements of type &lt;c1&gt;Person&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T085056Z" creationid="pingfangx" creationdate="20181228T085056Z">
        <seg>Java 编译器推断您要创建包含 &lt;c1&gt;Person&lt;/c1&gt; 类型元素的 &lt;c0&gt;HashSet&lt;/c0&gt; 集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java compiler provides some rules to determine which default method a particular class uses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084951Z" creationid="pingfangx" creationdate="20190102T084951Z">
        <seg>Java 编译器提供了一些规则来确定特定类使用哪种默认方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java compiler will also create a &lt;c0&gt;Character&lt;/c0&gt; object for you under some circumstances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T061819Z" creationid="pingfangx" creationdate="20190103T061819Z">
        <seg>在某些情况下，Java 编译器还将为您创建 &lt;c0&gt;Character&lt;/c0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java platform allows you to create as many objects as you want (limited, of course, by what your system can handle), and you don't have to worry about destroying them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085401Z" creationid="pingfangx" creationdate="20180601T085401Z">
        <seg>Java 平台允许您根据需要创建任意数量的对象(当然，受限于您的系统可以处理的内容)，而且您不必担心去销毁它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java platform differs from most other platforms in that it's a software-only platform that runs on top of other hardware-based platforms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033305Z" creationid="pingfangx" creationdate="20180518T033305Z">
        <seg>Java 平台不同于大多数其他平台，因为它是一个运行在其他基于硬件的平台之上的纯软件平台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java platform has two components:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033307Z" creationid="pingfangx" creationdate="20180518T033307Z">
        <seg>Java 平台有两个组件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java platform provides an enormous class library (a set of packages) suitable for use in your own applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064427Z" creationid="pingfangx" creationdate="20180518T064427Z">
        <seg>Java 平台提供了适用于您自己的应用程序的庞大的类库(一组包)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java platform provides the &lt;a0&gt;&lt;c1&gt;String&lt;/c1&gt; &lt;/a0&gt; class to create and manipulate strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062849Z" creationid="pingfangx" creationdate="20190103T062849Z">
        <seg>Java 平台提供 &lt;a0&gt;&lt;c1&gt;String&lt;/c1&gt; &lt;/a0&gt; 类来创建和操作字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language &lt;i0&gt;compiler&lt;/i0&gt; (&lt;c1&gt;javac&lt;/c1&gt;) takes your source file and translates its text into instructions that the Java virtual machine can understand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034500Z" creationid="pingfangx" creationdate="20180518T034500Z">
        <seg>Java 编程语言 &lt;i0&gt;compiler&lt;/i0&gt;(&lt;c1&gt;javac&lt;/c1&gt;)会将您的源文件转换为 Java 虚拟机可以理解的指令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language allows you to construct compound expressions from various smaller expressions as long as the data type required by one part of the expression matches the data type of the other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074402Z" creationid="pingfangx" creationdate="20180521T074402Z">
        <seg>Java 编程语言允许您从各种较小的表达式构造复合表达式，只要表达式的一部分所需的数据类型与另一部分的数据类型匹配即可。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language allows you to define a class within another class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090436Z" creationid="pingfangx" creationdate="20180705T090436Z">
        <seg>Java 编程语言允许您在另一个类中定义类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language also provides a &lt;c0&gt;do-while&lt;/c0&gt; statement, which can be expressed as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083022Z" creationid="pingfangx" creationdate="20180521T083022Z">
        <seg>Java 编程语言还提供了一个 &lt;c0&gt;do-while&lt;/c0&gt; 语句，它可以表示如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language also provides operators that perform bitwise and bit shift operations on integral types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070640Z" creationid="pingfangx" creationdate="20180521T070640Z">
        <seg>Java 编程语言还提供了对整型类型执行按位和移位操作的运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language also supports a few special escape sequences for &lt;c0&gt;char&lt;/c0&gt; and &lt;c1&gt;String&lt;/c1&gt; literals: &lt;c2&gt;\b&lt;/c2&gt; (backspace), &lt;c3&gt;\t&lt;/c3&gt; (tab), &lt;c4&gt;\n&lt;/c4&gt; (line feed), &lt;c5&gt;\f&lt;/c5&gt; (form feed), &lt;c6&gt;\r&lt;/c6&gt; (carriage return), &lt;c7&gt;\"&lt;/c7&gt; (double quote), &lt;c8&gt;\'&lt;/c8&gt; (single quote), and &lt;c9&gt;\\&lt;/c9&gt; (backslash).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T083957Z" creationid="pingfangx" creationdate="20180518T083957Z">
        <seg>Java 编程语言还支持 &lt;c0&gt;char&lt;/c0&gt; 和 &lt;c1&gt;String&lt;/c1&gt; 字面量的一些特殊转义序列：&lt;c2&gt;\b&lt;/c2&gt;（退格），&lt;c3&gt;\t&lt;/c3&gt; （tab），&lt;c4&gt;\n&lt;/c4&gt;（换行符），&lt;c5&gt;\f&lt;/c5&gt;（换页符），&lt;c6&gt;\r&lt;/c6&gt; （回车），&lt;c7&gt;\"&lt;/c7&gt; （双引号）， &lt;c8&gt;\'&lt;/c8&gt; （单引号）和 &lt;c9&gt;\\&lt;/c9&gt;（反斜杠）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language defines the following kinds of variables:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073212Z" creationid="pingfangx" creationdate="20180518T073212Z">
        <seg>Java 编程语言定义了以下几种变量：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language has other methods, however, that allow you to exercise much more control over your print output when numbers are included.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032119Z" creationid="pingfangx" creationdate="20190103T032119Z">
        <seg>但是，Java 编程语言还有其他方法，可以在包含数字时对打印输出进行更多控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language is a high-level language that can be characterized by all of the following buzzwords:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032831Z" creationid="pingfangx" creationdate="20180518T032831Z">
        <seg>Java 编程语言是一种高级语言，可以用以下所有流行语来表征：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language is statically-typed, which means that all variables must first be declared before they can be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075956Z" creationid="pingfangx" creationdate="20180518T075956Z">
        <seg>Java 编程语言是静态类型的，这意味着所有变量必须先声明才能使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language provides a &lt;i0&gt;wrapper&lt;/i0&gt; class that "wraps" the &lt;c1&gt;char&lt;/c1&gt; in a &lt;c2&gt;Character&lt;/c2&gt; object for this purpose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T061648Z" creationid="pingfangx" creationdate="20190103T061648Z">
        <seg>Java 编程语言提供了一个 &lt;i0&gt;包装（wrapper）&lt;/i0&gt; 类，为此目的将 &lt;c1&gt;char&lt;/c1&gt;"包装" 在 &lt;c2&gt;Character&lt;/c2&gt; 对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language provides a &lt;i1&gt;wrapper&lt;/i1&gt; class that "wraps" the &lt;c2&gt;char&lt;/c2&gt; in a &lt;c3&gt;Character&lt;/c3&gt; object for this purpose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083219Z" creationid="pingfangx" creationdate="20190103T083219Z">
        <seg>Java 编程语言提供了一个 &lt;i1&gt;wrapper&lt;/i1&gt; 类，用于为此目的在 &lt;c3&gt;Character&lt;/c3&gt; 对象中 "包装" &lt;c2&gt;char&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language provides operators that perform addition, subtraction, multiplication, and division.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064306Z" creationid="pingfangx" creationdate="20180521T064306Z">
        <seg>Java 编程语言提供了执行加法，减法，乘法和除法的运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language supports &lt;e0&gt;multiple inheritance of type&lt;/e0&gt;, which is the ability of a class to implement more than one interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085004Z" creationid="pingfangx" creationdate="20190102T085004Z">
        <seg>Java 编程语言支持 &lt;e0&gt;multiple inheritance of type&lt;/e0&gt; 的多重继承，这是类实现多个接口的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language supports &lt;i0&gt;overloading&lt;/i0&gt; methods, and Java can distinguish between methods with different &lt;i1&gt;method signatures&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065250Z" creationid="pingfangx" creationdate="20180525T065250Z">
        <seg>Java 编程语言支持 &lt;i0&gt;overloading（重载）&lt;/i0&gt; 方法，Java 可以区分具有不同 &lt;i1&gt;method signatures（方法签名）&lt;/i1&gt; 的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language supports basic arithmetic with its arithmetic operators: +, -, *, /, and %.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034938Z" creationid="pingfangx" creationdate="20190103T034938Z">
        <seg>Java 编程语言支持基本算术及其算术运算符：+, -, *, /, 和 %。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language supports static methods as well as static variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043420Z" creationid="pingfangx" creationdate="20180607T043420Z">
        <seg>Java 编程语言支持静态方法和静态变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language supports three kinds of comments:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035448Z" creationid="pingfangx" creationdate="20180518T035448Z">
        <seg>Java 编程语言支持三种注释：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java programming language uses both "fields" and "variables" as part of its terminology.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061502Z" creationid="pingfangx" creationdate="20180521T061502Z">
        <seg>Java 编程语言使用 "字段" 和 "变量" 作为其术语的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java runtime environment deletes objects when it determines that they are no longer being used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085416Z" creationid="pingfangx" creationdate="20180601T085416Z">
        <seg>Java 运行时环境在确定它们不再被使用时会删除对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java runtime environment has a garbage collector that periodically frees the memory used by objects that are no longer referenced.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085855Z" creationid="pingfangx" creationdate="20180601T085855Z">
        <seg>Java 运行时环境有一个垃圾回收器，它周期性地释放不再被引用的对象所使用的内存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java virtual machine (JVM) calls the appropriate method for the object that is referred to in each variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094103Z" creationid="pingfangx" creationdate="20190102T094050Z">
        <seg>Java 虚拟机(JVM)为每个变量中引用的对象调用适当的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java™ Tutorials</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030223Z" creationid="pingfangx" creationdate="20180518T030223Z">
        <seg>Java™ 教程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The MountainBike has a Dual suspension.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094048Z" creationid="pingfangx" creationdate="20190102T094048Z">
        <seg>The MountainBike has a Dual suspension.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The NetBeans IDE runs on all of the platforms listed below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034104Z" creationid="pingfangx" creationdate="20180518T034104Z">
        <seg>NetBeans IDE 可在以下列出的所有平台上运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The NetBeans IDE runs on the Java platform, which means that you can use it with any operating system for which there is a JDK 7 available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034123Z" creationid="pingfangx" creationdate="20180518T034123Z">
        <seg>NetBeans IDE 在 Java 平台上运行，这意味着您可以将其用于任何可用 JDK 7 的操作系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Numbers Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092711Z" creationid="pingfangx" creationdate="20180521T092711Z">
        <seg>数字类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Numbers Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025019Z" creationid="pingfangx" creationdate="20190103T025019Z">
        <seg>The Numbers Classes (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The RoadBike has 23 MM tires.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094049Z" creationid="pingfangx" creationdate="20190102T094049Z">
        <seg>The RoadBike has 23 MM tires.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Save As dialog just before you click &lt;b0&gt; Save&lt;/b0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034716Z" creationid="pingfangx" creationdate="20180518T034716Z">
        <seg>单击 &lt;b0&gt; Save&lt;/b0&gt; 之前的另存为对话框。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Search Methods in the &lt;c0&gt;String&lt;/c0&gt; Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073408Z" creationid="pingfangx" creationdate="20190103T073408Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; 类中的搜索方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Simple Assignment Operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063812Z" creationid="pingfangx" creationdate="20180521T063812Z">
        <seg>简单赋值运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The StringBuilder Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092757Z" creationid="pingfangx" creationdate="20180521T092757Z">
        <seg>StringBuilder 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The StringBuilder Class (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080153Z" creationid="pingfangx" creationdate="20190103T080153Z">
        <seg>The StringBuilder Class (The Java™ Tutorials &gt; Learning the Java Language &gt; Numbers and Strings)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Type Comparison Operator instanceof</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070408Z" creationid="pingfangx" creationdate="20180521T070408Z">
        <seg>类型比较运算符 instanceof</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Unary Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064840Z" creationid="pingfangx" creationdate="20180521T064840Z">
        <seg>一元运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ___ statement allows for any number of possible execution paths.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091030Z" creationid="pingfangx" creationdate="20180521T091030Z">
        <seg>___语句允许任意数量的可能执行路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ___ statement is similar to the &lt;c0&gt;while&lt;/c0&gt; statement, but evaluates its expression at the ___ of the loop.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091054Z" creationid="pingfangx" creationdate="20180521T091054Z">
        <seg>___语句与 &lt;c0&gt;while&lt;/c0&gt; 语句中类似，但在循环的___处计算其表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ability of a subclass to override a method allows a class to inherit from a superclass whose behavior is "close enough" and then to modify behavior as needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085758Z" creationid="pingfangx" creationdate="20190102T085758Z">
        <seg>子类覆盖方法的能力允许类从行为 "足够接近" 的超类继承，然后根据需要修改行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The absolute value of -191.635 is 191.635
The ceiling of 43.74 is 44
The floor of 43.74 is 43
The rint of 43.74 is 44
The max of 16 and 45 is 45
The min of 16 and 45 is 16</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035804Z" creationid="pingfangx" creationdate="20190103T035804Z">
        <seg>The absolute value of -191.635 is 191.635
The ceiling of 43.74 is 44
The floor of 43.74 is 43
The rint of 43.74 is 44
The max of 16 and 45 is 45
The min of 16 and 45 is 16</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The access specifier for an overriding method can allow more, but not less, access than the overridden method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092257Z" creationid="pingfangx" creationdate="20190102T092257Z">
        <seg>覆盖方法的访问说明符可以允许比覆盖方法更多，但不能更少，的访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The advantage of private static methods is that they can be reused later if you need to reinitialize the class variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070559Z" creationid="pingfangx" creationdate="20180705T070559Z">
        <seg>私有静态方法的优点是，如果需要重新初始化类变量，可以在以后重用它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The annotation can include &lt;e0&gt;elements&lt;/e0&gt;, which can be named or unnamed, and there are values for those elements:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023916Z" creationid="pingfangx" creationdate="20190102T023916Z">
        <seg>注解可以包含 &lt;e0&gt;elements&lt;/e0&gt;，可以是命名或未命名，并且这些元素有值：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The annotation type can be one of the types that are defined in the &lt;c0&gt;java.lang&lt;/c0&gt; or &lt;c1&gt;java.lang.annotation&lt;/c1&gt; packages of the Java SE API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024040Z" creationid="pingfangx" creationdate="20190102T024040Z">
        <seg>注解类型可以是 Java SE API 的 &lt;c0&gt;java.lang&lt;/c0&gt; 或 &lt;c1&gt;java.lang.annotation&lt;/c1&gt; 包中定义的类型之一。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The annotation type definition looks similar to an interface definition where the keyword &lt;c0&gt;interface&lt;/c0&gt; is preceded by the at sign (&lt;c1&gt;@&lt;/c1&gt;) (@ = AT, as in annotation type).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024935Z" creationid="pingfangx" creationdate="20190102T024935Z">
        <seg>注解类型定义类似于接口定义，其中关键字 &lt;c0&gt;interface&lt;/c0&gt; 前面带有 at 符号(&lt;c1&gt;@&lt;/c1&gt;)(@ = AT，如注解类型)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The annotation type must be marked with the &lt;c0&gt;@Repeatable&lt;/c0&gt; meta-annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041149Z" creationid="pingfangx" creationdate="20190102T041149Z">
        <seg>注解类型必须使用 &lt;c0&gt;@Repeatable&lt;/c0&gt; 元注解进行标记。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The anonymous class expression consists of the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061214Z" creationid="pingfangx" creationdate="20180706T061214Z">
        <seg>匿名类表达式包含以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The anonymous class expression is highlighted:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065635Z" creationid="pingfangx" creationdate="20180706T065635Z">
        <seg>匿名类表达式高亮：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The append method always adds these characters at the end of the existing character sequence, while the insert method adds the characters at a specified point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081929Z" creationid="pingfangx" creationdate="20190103T081929Z">
        <seg>append 方法总是在现有字符序列的末尾添加这些字符，而 insert 方法在指定点添加字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The array &lt;c3&gt;students&lt;/c3&gt; is not eligible for garbage collection because it has one reference to the object &lt;c4&gt;studentName&lt;/c4&gt; even though that object has been assigned the value &lt;c5&gt;null&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083601Z" creationid="pingfangx" creationdate="20180705T083601Z">
        <seg>数组 &lt;c3&gt;students&lt;/c3&gt; 不符合垃圾回收的条件，因为它有一个对象 &lt;c4&gt;studentName&lt;/c4&gt; 的引用，即使该对象已被赋值 &lt;c5&gt;null&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The arrow token, &lt;c0&gt;-&gt;&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075446Z" creationid="pingfangx" creationdate="20181228T075446Z">
        <seg>箭头标记 &lt;c0&gt;-&gt;&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The at sign character (&lt;c0&gt;@&lt;/c0&gt;) indicates to the compiler that what follows is an annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023847Z" creationid="pingfangx" creationdate="20190102T023847Z">
        <seg>at 符号字符(&lt;c0&gt;@&lt;/c0&gt;)向编译器指示后面的内容是注解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The auto manufacturers must publish an industry-standard interface that spells out in detail what methods can be invoked to make the car move (any car, from any manufacturer).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T053834Z" creationid="pingfangx" creationdate="20190102T053834Z">
        <seg>汽车制造商必须发布一个行业标准的接口，详细说明可以调用哪些方法来使汽车移动(任何汽车，来自任何制造商)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The behavior of the methods that return a single annotation, such as &lt;a0&gt;AnnotatedElement.getAnnotation(Class&lt;T&gt;)&lt;/a0&gt;, are unchanged in that they only return a single annotation if &lt;e1&gt;one&lt;/e1&gt; annotation of the requested type is present.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041330Z" creationid="pingfangx" creationdate="20190102T041330Z">
        <seg>返回单个注解的方法（例如 &lt;a0&gt;AnnotatedElement.getAnnotation(Class&lt;T&gt;)&lt;/a0&gt;）的行为未更改，因为如果 &lt;e1&gt;one&lt;/e1&gt; 注解，它们只返回单个注解请求的类型存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The bit pattern is given by the left-hand operand, and the number of positions to shift by the right-hand operand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070904Z" creationid="pingfangx" creationdate="20180521T070904Z">
        <seg>位模式由左侧操作数给出，操作数移动位置的数量由右侧操作数给出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The bitwise &lt;c0&gt;&amp;&lt;/c0&gt; operator performs a bitwise AND operation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070924Z" creationid="pingfangx" creationdate="20180521T070924Z">
        <seg>按位 &lt;c0&gt;&amp;&lt;/c0&gt; 运算符执行按位与运算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The bitwise &lt;c0&gt;^&lt;/c0&gt; operator performs a bitwise exclusive OR operation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070928Z" creationid="pingfangx" creationdate="20180521T070928Z">
        <seg>按位 &lt;c0&gt;^&lt;/c0&gt; 运算符执行按位异或运算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The bitwise &lt;c0&gt;|&lt;/c0&gt; operator performs a bitwise inclusive OR operation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070936Z" creationid="pingfangx" creationdate="20180521T070936Z">
        <seg>按位 &lt;c0&gt;|&lt;/c0&gt; 运算符执行按位或运算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The body of a &lt;c0&gt;switch&lt;/c0&gt; statement is known as a &lt;i1&gt;switch block&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082035Z" creationid="pingfangx" creationdate="20180521T082035Z">
        <seg>&lt;c0&gt;switch&lt;/c0&gt; 语句的主体被称为 &lt;i1&gt;switch block&lt;/i1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The body of the previous annotation definition contains &lt;i0&gt;annotation type element&lt;/i0&gt; declarations, which look a lot like methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025110Z" creationid="pingfangx" creationdate="20190102T025110Z">
        <seg>前一个注解定义的主体包含 &lt;i0&gt;注解类型元素（annotation type element）&lt;/i0&gt; 声明，它们看起来很像方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The boolean argument indicates whether case should be ignored; if true, case is ignored when comparing characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075834Z" creationid="pingfangx" creationdate="20190103T075834Z">
        <seg>boolean 参数指示是否应忽略大小写;如果为 true，则在比较字符时忽略大小写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The capacity, which is returned by the &lt;c1&gt;capacity()&lt;/c1&gt; method, is always greater than or equal to the length (usually greater than) and will automatically expand as necessary to accommodate additions to the string builder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081023Z" creationid="pingfangx" creationdate="20190103T081023Z">
        <seg>由 &lt;c1&gt;capacity()&lt;/c1&gt; 方法返回的容量始终大于或等于长度(通常大于)，并将根据需要自动扩展以适应 string builder 的添加。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class &lt;a0&gt;&lt;c1&gt;PlayingCard&lt;/c1&gt;&lt;/a0&gt; implements the interface &lt;c2&gt;Card&lt;/c2&gt;, and the class &lt;a3&gt;&lt;c4&gt;StandardDeck&lt;/c4&gt;&lt;/a3&gt; implements the interface &lt;c5&gt;Deck&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065406Z" creationid="pingfangx" creationdate="20190102T065406Z">
        <seg>类 &lt;a0&gt;&lt;c1&gt;PlayingCard&lt;/c1&gt;&lt;/a0&gt; 实现接口 &lt;c2&gt;Card&lt;/c2&gt;，类 &lt;a3&gt;&lt;c4&gt;StandardDeck&lt;/c4&gt;&lt;/a3&gt; 实现接口 &lt;c5&gt;Deck&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class &lt;c0&gt;StandardDeck&lt;/c0&gt; implements the abstract method &lt;c1&gt;Deck.sort&lt;/c1&gt; as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065423Z" creationid="pingfangx" creationdate="20190102T065423Z">
        <seg>类 &lt;c0&gt;StandardDeck&lt;/c0&gt; 实现抽象方法 &lt;c1&gt;Deck.sort&lt;/c1&gt;，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class &lt;c1&gt;EvenIterator&lt;/c1&gt; is an inner, non-static class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014901Z" creationid="pingfangx" creationdate="20190102T014848Z">
        <seg>类 &lt;c1&gt;EvenIterator&lt;/c1&gt; 是一个内部的非静态类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class &lt;c8&gt;PlayingCard&lt;/c8&gt; implements the &lt;a9&gt;&lt;c10&gt;Comparable.compareTo&lt;/c10&gt;&lt;/a9&gt; method as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065609Z" creationid="pingfangx" creationdate="20190102T065609Z">
        <seg>类 &lt;c8&gt;PlayingCard&lt;/c8&gt; 实现 &lt;a9&gt;&lt;c10&gt;Comparable.compareTo&lt;/c10&gt;&lt;/a9&gt; 方法，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class body contains fields, methods, and constructors for the class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T081949Z" creationid="pingfangx" creationdate="20180705T081949Z">
        <seg>类主体包含类的字段，方法和构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class body, surrounded by braces, {}.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030946Z" creationid="pingfangx" creationdate="20180525T030946Z">
        <seg>类体，由大括号包围，{}。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class from which the subclass is derived is called a &lt;i5&gt;superclass&lt;/i5&gt; (also a &lt;i6&gt;base class&lt;/i6&gt; or a &lt;i7&gt;parent class&lt;/i7&gt;).&lt;br8/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T080209Z" creationid="pingfangx" creationdate="20190102T080209Z">
        <seg>从中派生子类的类称为 &lt;i5&gt;superclass&lt;/i5&gt;(也是 &lt;i6&gt;base class&lt;/i6&gt; 或 &lt;i7&gt;parent class&lt;/i7&gt;)。&lt;br8/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class hierarchy for ImaginaryNumber</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091921Z" creationid="pingfangx" creationdate="20180601T091921Z">
        <seg>ImaginaryNumber 的类层次结构</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class hierarchy of Number.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030144Z" creationid="pingfangx" creationdate="20190103T030144Z">
        <seg>Number 的类层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class name can be preceded by modifiers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T081938Z" creationid="pingfangx" creationdate="20180705T081938Z">
        <seg>类名可以在修饰符之后。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class name, with the initial letter capitalized by convention.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030854Z" creationid="pingfangx" creationdate="20180525T030854Z">
        <seg>类名称，首字母大写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The clone() Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101112Z" creationid="pingfangx" creationdate="20190102T101112Z">
        <seg>clone() 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The closer to the top of the table an operator appears, the higher its precedence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062905Z" creationid="pingfangx" creationdate="20180521T062352Z">
        <seg>运算符出现在靠近表格顶部的位置时，其优先级越高。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code &lt;c0&gt;System.out.println(++i);&lt;/c0&gt; evaluates to 6, because the prefix version of &lt;c1&gt;++&lt;/c1&gt; evaluates to the incremented value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073359Z" creationid="pingfangx" creationdate="20180521T073359Z">
        <seg>代码 &lt;c0&gt;System.out.println(++i);&lt;/c0&gt; 的计算结果为 6，因为前缀版本 &lt;c1&gt;++&lt;/c1&gt; 的计算结果为递增值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code &lt;c0&gt;result++;&lt;/c0&gt; and &lt;c1&gt;++result;&lt;/c1&gt; will both end in &lt;c2&gt;result&lt;/c2&gt; being incremented by one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065324Z" creationid="pingfangx" creationdate="20180521T065324Z">
        <seg>代码 &lt;c0&gt;result++;&lt;/c0&gt; 和 &lt;c1&gt;++result;&lt;/c1&gt; 结束时 &lt;c2&gt;result&lt;/c2&gt; 都将加 1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code &lt;c4&gt;static int numGears = 6;&lt;/c4&gt; would create such a static field.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073500Z" creationid="pingfangx" creationdate="20180518T073500Z">
        <seg>代码 &lt;c4&gt;static int numGears = 6;&lt;/c4&gt; 会创建这样一个静态字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code displays the name of the month, based on the value of &lt;c4&gt;month&lt;/c4&gt;, using the &lt;c5&gt;switch&lt;/c5&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082013Z" creationid="pingfangx" creationdate="20180521T082013Z">
        <seg>该代码使用 &lt;c5&gt;switch&lt;/c5&gt; 语句根据 &lt;c4&gt;month&lt;/c4&gt; 的值显示月份的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code example calculates the number of days in a particular month:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082454Z" creationid="pingfangx" creationdate="20180521T082454Z">
        <seg>代码示例计算特定月份的天数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code in the method body will treat the parameter as an array in either case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033118Z" creationid="pingfangx" creationdate="20180601T033118Z">
        <seg>在任何一种情况下，方法主体中的代码都会将参数视为数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler automatically adds some special methods when it creates an enum.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015455Z" creationid="pingfangx" creationdate="20190102T015455Z">
        <seg>编译器在创建枚举时会自动添加一些特殊方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler automatically provides a no-argument, default constructor for any class without constructors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T035324Z" creationid="pingfangx" creationdate="20180528T035324Z">
        <seg>编译器自动为任何没有构造函数的类提供一个无参数的默认构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler cannot catch this sort of error; you'll just get the wrong results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081052Z" creationid="pingfangx" creationdate="20180521T081052Z">
        <seg>编译器无法捕捉到这种错误;你只会得到错误的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler does not consider return type when differentiating methods, so you cannot declare two methods with the same signature even if they have a different return type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065516Z" creationid="pingfangx" creationdate="20180525T065516Z">
        <seg>编译器在区分方法时不考虑返回类型，所以即使它们具有不同的返回类型，也不能声明具有相同签名的两个方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler does not generate an error because it creates an &lt;t6&gt;Integer&lt;/t6&gt; object from &lt;t7&gt;i&lt;/t7&gt; and adds the object to &lt;t8&gt;li&lt;/t8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084132Z" creationid="pingfangx" creationdate="20190103T084132Z">
        <seg>编译器不会生成错误，因为它从 &lt;t7&gt;i&lt;/t7&gt; 创建 &lt;t6&gt;Integer&lt;/t6&gt; 对象，并将对象添加到 &lt;t8&gt;li&lt;/t8&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler does not generate an error because it invokes the &lt;t3&gt;intValue&lt;/t3&gt; method to convert an &lt;t4&gt;Integer&lt;/t4&gt; to an &lt;t5&gt;int&lt;/t5&gt; at runtime:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084459Z" creationid="pingfangx" creationdate="20190103T084459Z">
        <seg>编译器不会生成错误，因为它在运行时调用 &lt;t3&gt;intValue&lt;/t3&gt; 方法将 &lt;t4&gt;Integer&lt;/t4&gt; 转换为 &lt;t5&gt;int&lt;/t5&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler generates a warning whenever a program uses a method, class, or field with the &lt;c4&gt;@Deprecated&lt;/c4&gt; annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033323Z" creationid="pingfangx" creationdate="20190102T033323Z">
        <seg>只要程序使用带有 &lt;c4&gt;@Deprecated&lt;/c4&gt; 注解的方法，类或字段，编译器就会生成警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler generates an error similar to "modifier 'static' is only allowed in constant variable declaration" when it encounters this method definition:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144537Z" creationid="pingfangx" creationdate="20180705T144537Z">
        <seg>当遇到此方法定义时，编译器会生成类似于 "修饰符 'static' 只允许在常量变量声明中使用"的错误：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler generates the error "variable x is already defined in method methodInFirstLevel(int)" because the lambda expression does not introduce a new level of scoping.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080111Z" creationid="pingfangx" creationdate="20181228T080111Z">
        <seg>编译器生成错误 "变量 x 已在方法 methodInFirstLevel(int) 中定义"，因为 lambda 表达式不会引入新的作用域级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler generates the error message, "non-static variable this cannot be referenced from a static context" when it encounters the expression &lt;c0&gt;new EvenIterator()&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014832Z" creationid="pingfangx" creationdate="20190102T014832Z">
        <seg>当遇到表达式 &lt;c0&gt;new EvenIterator()&lt;/c0&gt; 时，编译器会生成错误消息 "非静态变量，这不能从静态上下文引用"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler has generated a bytecode file, &lt;c0&gt;HelloWorldApp.class&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034903Z" creationid="pingfangx" creationdate="20180518T034903Z">
        <seg>编译器生成了一个字节码文件 &lt;c0&gt;HelloWorldApp.class&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler ignores everything from &lt;c0&gt;/*&lt;/c0&gt; to &lt;c1&gt;*/&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035453Z" creationid="pingfangx" creationdate="20180518T035453Z">
        <seg>编译器忽略从 &lt;c0&gt;/*&lt;/c0&gt; 到 &lt;c1&gt;*/&lt;/c1&gt; 的所有内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler ignores everything from &lt;c0&gt;//&lt;/c0&gt; to the end of the line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035523Z" creationid="pingfangx" creationdate="20180518T035523Z">
        <seg>编译器会忽略 &lt;c0&gt;//&lt;/c0&gt; 到行尾的所有内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler ignores this kind of comment, just like it ignores comments that use &lt;c1&gt;/*&lt;/c1&gt; and &lt;c2&gt;*/&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035511Z" creationid="pingfangx" creationdate="20180518T035511Z">
        <seg>编译器会忽略这种注释，就像忽略使用 &lt;c1&gt;/*&lt;/c1&gt; 和 &lt;c2&gt;*/&lt;/c2&gt; 的注释一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compiler will assign a reasonable default value for fields of the above types; for local variables, a default value is never assigned.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061618Z" creationid="pingfangx" creationdate="20180521T061618Z">
        <seg>编译器将为上述类型的字段分配一个合理的默认值;对于局部变量，从不分配默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The component type of the array type must be the repeatable annotation type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041247Z" creationid="pingfangx" creationdate="20190102T041247Z">
        <seg>数组类型的组件类型必须是可重复的注解类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The constructor in the &lt;t0&gt;Point&lt;/t0&gt; class takes two integer arguments, as declared by the code &lt;t1&gt;(int a, int b)&lt;/t1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062526Z" creationid="pingfangx" creationdate="20180601T062526Z">
        <seg>&lt;t0&gt;Point&lt;/t0&gt; 类中的构造函数接受两个整数参数，如代码 &lt;t1&gt;(int a, int b)&lt;/t1&gt; 所声明的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The constructors provide a default value for any member variable whose initial value is not provided by an argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020253Z" creationid="pingfangx" creationdate="20180607T020253Z">
        <seg>构造函数为初始值没有由参数提供的成员变量提供默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The containing annotation type must have a &lt;c0&gt;value&lt;/c0&gt; element with an array type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041242Z" creationid="pingfangx" creationdate="20190102T041242Z">
        <seg>包含注解类型必须具有带有数组类型的 &lt;c0&gt;value&lt;/c0&gt; 元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The convention, however, is to always begin your variable names with a letter, not "&lt;c2&gt;$&lt;/c2&gt;" or "&lt;c3&gt;_&lt;/c3&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074123Z" creationid="pingfangx" creationdate="20180518T074123Z">
        <seg>但是，惯例是始终用字母开头变量名称，而不是 "&lt;c2&gt;$&lt;/c2&gt;" 或 "&lt;c3&gt;_&lt;/c3&gt;"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The converter is a character indicating the type of argument to be formatted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033001Z" creationid="pingfangx" creationdate="20190103T033001Z">
        <seg>转换器是一个字符，指示要格式化的参数类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The core API is very large; to get an overview of what it contains, consult the &lt;a1&gt;Java Platform Standard Edition 8 Documentation&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033650Z" creationid="pingfangx" creationdate="20180518T033650Z">
        <seg>核心 API 非常大;了解它包含的内容，请参阅 &lt;a1&gt;Java Platform Standard Edition 8 Documentation&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The data is converted to a string before the append operation takes place.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082033Z" creationid="pingfangx" creationdate="20190103T082033Z">
        <seg>在追加操作发生之前，数据将转换为字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The data is converted to a string before the insert operation takes place.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082146Z" creationid="pingfangx" creationdate="20190103T082146Z">
        <seg>在插入操作发生之前，数据将转换为字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The data type of the return value must match the method's declared return type; you can't return an integer value from a method declared to return a boolean.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091411Z" creationid="pingfangx" creationdate="20180601T091411Z">
        <seg>返回值的数据类型必须与方法的声明返回类型相匹配;你不能从声明返回布尔值的方法返回一个整数值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The data type of the returned value must match the type of the method's declared return value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090726Z" creationid="pingfangx" creationdate="20180521T090726Z">
        <seg>返回值的数据类型必须与方法声明的返回值的类型匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The data type of the value returned by an expression depends on the elements used in the expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074101Z" creationid="pingfangx" creationdate="20180521T074101Z">
        <seg>表达式返回的值的数据类型取决于表达式中使用的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The data type that these methods expect is called the &lt;e4&gt;target type&lt;/e4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081541Z" creationid="pingfangx" creationdate="20181228T081541Z">
        <seg>这些方法所期望的数据类型称为 &lt;e4&gt;目标类型（target type）&lt;/e4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The declaration for a method or a constructor declares the number and the type of the arguments for that method or constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032005Z" creationid="pingfangx" creationdate="20180601T032005Z">
        <seg>方法或构造函数的声明声明了该方法或构造函数的参数的数量和类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The declaration for the &lt;c1&gt;Schedules&lt;/c1&gt; containing annotation type is the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041252Z" creationid="pingfangx" creationdate="20190102T041252Z">
        <seg>包含注解类型的 &lt;c1&gt;Schedules&lt;/c1&gt; 的声明如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dictionary definition of &lt;e0&gt;polymorphism&lt;/e0&gt; refers to a principle in biology in which an organism or species can have many different forms or stages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092842Z" creationid="pingfangx" creationdate="20190102T092842Z">
        <seg>&lt;e0&gt;polymorphism&lt;/e0&gt; 的字典定义是指生物学中的原理，其中生物或物种可以具有许多不同的形式或阶段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The difference between &lt;c0&gt;do-while&lt;/c0&gt; and &lt;c1&gt;while&lt;/c1&gt; is that &lt;c2&gt;do-while&lt;/c2&gt; evaluates its expression at the bottom of the loop instead of the top.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090942Z" creationid="pingfangx" creationdate="20180521T083036Z">
        <seg>&lt;c0&gt;do-while&lt;/c0&gt; 和 &lt;c1&gt;while&lt;/c1&gt; 之间的区别在于 &lt;c2&gt;do-while&lt;/c2&gt; 在循环底部而不是顶部计算其表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The difference between &lt;c11&gt;do-while&lt;/c11&gt; and &lt;c12&gt;while&lt;/c12&gt; is that &lt;c13&gt;do-while&lt;/c13&gt; evaluates its expression at the bottom of the loop instead of the top.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090920Z" creationid="pingfangx" creationdate="20180521T090920Z">
        <seg>&lt;c11&gt;do-while&lt;/c11&gt; 和 &lt;c12&gt;while&lt;/c12&gt; 之间的区别在于 &lt;c13&gt;do-while&lt;/c13&gt; 在循环底部而不是顶部计算其表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The difference is that using the &lt;c6&gt;copyOfRange&lt;/c6&gt; method does not require you to create the destination array before calling the method, because the destination array is returned by the method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043351Z" creationid="pingfangx" creationdate="20180521T043351Z">
        <seg>区别在于使用 &lt;c6&gt;copyOfRange&lt;/c6&gt; 方法不需要您在调用方法之前创建目标数组，因为目标数组是由方法返回的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The distinction between hiding a static method and overriding an instance method has important implications:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090452Z" creationid="pingfangx" creationdate="20190102T090452Z">
        <seg>隐藏静态方法和覆盖实例方法之间的区别具有重要意义：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The eight primitive data types are: byte, short, int, long, float, double, boolean, and char.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061558Z" creationid="pingfangx" creationdate="20180521T061558Z">
        <seg>八种基本数据类型是：byte，short，int，long，float，double，boolean 和 char。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The eight primitive data types supported by the Java programming language are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080156Z" creationid="pingfangx" creationdate="20180518T080156Z">
        <seg>Java 编程语言支持的八种基本数据类型是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The enum class body can include methods and other fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015449Z" creationid="pingfangx" creationdate="20190102T015449Z">
        <seg>枚举类主体可以包括方法和其他字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The equality and relational operators determine if one operand is greater than, less than, equal to, or not equal to another operand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065906Z" creationid="pingfangx" creationdate="20180521T065906Z">
        <seg>相等性和关系运算符确定一个操作数是否大于，小于，等于或不等于另一个操作数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The equals() Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101849Z" creationid="pingfangx" creationdate="20190102T101849Z">
        <seg>equals() 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The equivalent lambda expression for the method reference &lt;c0&gt;String::compareToIgnoreCase&lt;/c0&gt; would have the formal parameter list &lt;c1&gt;(String a, String b)&lt;/c1&gt;, where &lt;c2&gt;a&lt;/c2&gt; and &lt;c3&gt;b&lt;/c3&gt; are arbitrary names used to better describe this example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084848Z" creationid="pingfangx" creationdate="20181228T084848Z">
        <seg>方法引用 &lt;c0&gt;String::compareToIgnoreCase&lt;/c0&gt; 的等效 lambda 表达式将具有形式参数列表 &lt;c1&gt;(String a, String b)&lt;/c1&gt;，其中 &lt;c2&gt;a&lt;/c2&gt; 和 &lt;c3&gt;b&lt;/c3&gt; 是用于更好地描述此示例的任意名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example &lt;a3&gt;&lt;c4&gt;SortByRankThenSuit&lt;/c4&gt;&lt;/a3&gt; does this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071026Z" creationid="pingfangx" creationdate="20190102T071026Z">
        <seg>示例 &lt;a3&gt;&lt;c4&gt;SortByRankThenSuit&lt;/c4&gt;&lt;/a3&gt; 执行此操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example defines two operations with lambda expressions, &lt;c2&gt;addition&lt;/c2&gt; and &lt;c3&gt;subtraction&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075657Z" creationid="pingfangx" creationdate="20181228T075657Z">
        <seg>该示例使用 lambda 表达式定义两个操作，&lt;c2&gt;addition&lt;/c2&gt; 和 &lt;c3&gt;subtraction&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example prints the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075700Z" creationid="pingfangx" creationdate="20181228T075700Z">
        <seg>示例打印以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example that follows creates a &lt;c0&gt;DecimalFormat&lt;/c0&gt; object, &lt;c1&gt;myFormatter&lt;/c1&gt;, by passing a pattern string to the &lt;c2&gt;DecimalFormat&lt;/c2&gt; constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033935Z" creationid="pingfangx" creationdate="20190103T033935Z">
        <seg>下面的示例通过将模式字符串传递给 &lt;c2&gt;DecimalFormat&lt;/c2&gt; 构造函数来创建 &lt;c0&gt;DecimalFormat&lt;/c0&gt; 对象 &lt;c1&gt;myFormatter&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example validates a phone number by first removing all characters from the phone number except the digits 0 through 9.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122602Z" creationid="pingfangx" creationdate="20180705T122602Z">
        <seg>该示例通过首先删除电话号码中除数字 0 到 9 之外的所有字符来验证电话号码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The expression &lt;c0&gt;cadence = 0&lt;/c0&gt; returns an &lt;c1&gt;int&lt;/c1&gt; because the assignment operator returns a value of the same data type as its left-hand operand; in this case, &lt;c2&gt;cadence&lt;/c2&gt; is an &lt;c3&gt;int&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074124Z" creationid="pingfangx" creationdate="20180521T074124Z">
        <seg>表达式 &lt;c0&gt;cadence = 0&lt;/c0&gt; 返回一个 &lt;c1&gt;int&lt;/c1&gt;，因为赋值运算符返回与其左手操作数相同数据类型的值;在这种情况下，&lt;c2&gt;cadence&lt;/c2&gt; 是 &lt;c3&gt;int&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The expression &lt;t0&gt;new Rectangle(100, 50)&lt;/t0&gt; returns an object reference that refers to a &lt;t1&gt;Rectangle&lt;/t1&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085114Z" creationid="pingfangx" creationdate="20180601T085114Z">
        <seg>表达式 &lt;t0&gt;new Rectangle(100, 50)&lt;/t0&gt; 返回引用 &lt;t1&gt;Rectangle&lt;/t1&gt; 对象的对象引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The familiar &lt;c6&gt;System.out&lt;/c6&gt; that you have been using happens to be a &lt;c7&gt;PrintStream&lt;/c7&gt; object, so you can invoke &lt;c8&gt;PrintStream&lt;/c8&gt; methods on &lt;c9&gt;System.out&lt;/c9&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032738Z" creationid="pingfangx" creationdate="20190103T032302Z">
        <seg>您一直使用的熟悉的 &lt;c6&gt;System.out&lt;/c6&gt; 恰好是 &lt;c7&gt;PrintStream&lt;/c7&gt; 对象，因此您可以在 &lt;c9&gt;System.out&lt;/c9&gt; 上执行 &lt;c8&gt;PrintStream&lt;/c8&gt; 的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The field's name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063302Z" creationid="pingfangx" creationdate="20180525T063302Z">
        <seg>该字段的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The field's type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063259Z" creationid="pingfangx" creationdate="20180525T063259Z">
        <seg>该字段的类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The fields &lt;c0&gt;cadence&lt;/c0&gt;, &lt;c1&gt;speed&lt;/c1&gt;, and &lt;c2&gt;gear&lt;/c2&gt; represent the object's state, and the methods (&lt;c3&gt;changeCadence&lt;/c3&gt;, &lt;c4&gt;changeGear&lt;/c4&gt;, &lt;c5&gt;speedUp&lt;/c5&gt; etc.) define its interaction with the outside world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062615Z" creationid="pingfangx" creationdate="20180518T062615Z">
        <seg>&lt;c0&gt;cadence&lt;/c0&gt;，&lt;c1&gt;speed&lt;/c1&gt; 和 &lt;c2&gt;gear&lt;/c2&gt; 代表对象的状态，方法(&lt;c3&gt;changeCadence&lt;/c3&gt;，&lt;c4&gt;changeGear&lt;/c4&gt;，&lt;c5&gt;speedUp&lt;/c5&gt; 等)定义其与外界的交互。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The fields of &lt;c0&gt;Bicycle&lt;/c0&gt; are named &lt;c1&gt;cadence&lt;/c1&gt;, &lt;c2&gt;gear&lt;/c2&gt;, and &lt;c3&gt;speed&lt;/c3&gt; and are all of data type integer (&lt;c4&gt;int&lt;/c4&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063323Z" creationid="pingfangx" creationdate="20180525T063323Z">
        <seg>&lt;c0&gt;Bicycle&lt;/c0&gt; 的字段被命名为 &lt;c1&gt;cadence&lt;/c1&gt;，&lt;c2&gt;gear&lt;/c2&gt; 和 &lt;c3&gt;speed&lt;/c3&gt;，并且数据类型都是 integer(&lt;c4&gt;int&lt;/c4&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The final &lt;c5&gt;println&lt;/c5&gt; is completely outside of any &lt;c6&gt;if&lt;/c6&gt; statement, so it always gets executed, and thus &lt;c7&gt;third string&lt;/c7&gt; is always displayed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091630Z" creationid="pingfangx" creationdate="20180521T091630Z">
        <seg>最后的 &lt;c5&gt;println&lt;/c5&gt; 完全在 &lt;c6&gt;if&lt;/c6&gt; 语句之外，所以它总是被执行，因此总是显示 &lt;c7&gt;third string&lt;/c7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The finalize() Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102946Z" creationid="pingfangx" creationdate="20190102T102946Z">
        <seg>finalize() 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first (left-most) modifier used lets you control what other classes have access to a member field.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063635Z" creationid="pingfangx" creationdate="20180525T063635Z">
        <seg>第一个(最左侧)修饰符用于控制可以访问成员字段的其他类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first character in the &lt;c0&gt;pattern&lt;/c0&gt; is the dollar sign ($).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034310Z" creationid="pingfangx" creationdate="20190103T034310Z">
        <seg>&lt;c0&gt;pattern&lt;/c0&gt; 中的第一个字符是美元符号($)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first data column indicates whether the class itself has access to the member defined by the access level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041255Z" creationid="pingfangx" creationdate="20180607T041150Z">
        <seg>第一个数据列表示类本身是否有权访问成员，由访问级别定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first integer argument indicates the index before which the data is to be inserted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082141Z" creationid="pingfangx" creationdate="20190103T082141Z">
        <seg>第一个整数参数表示要在其之前插入数据的索引。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first is &lt;c0&gt;Animal&lt;/c0&gt;, which contains one instance method and one static method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090634Z" creationid="pingfangx" creationdate="20190102T090634Z">
        <seg>第一个是 &lt;c0&gt;Animal&lt;/c0&gt;，它包含一个实例方法和一个静态方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first line creates an object of the &lt;a0&gt;&lt;c1&gt;Point&lt;/c1&gt;&lt;/a0&gt; class, and the second and third lines each create an object of the &lt;a2&gt;&lt;c3&gt;Rectangle&lt;/c3&gt;&lt;/a2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042204Z" creationid="pingfangx" creationdate="20180601T042152Z">
        <seg>第一行创建 &lt;a0&gt;&lt;c1&gt;Point&lt;/c1&gt;&lt;/a0&gt; 类的对象，第二行和第三行每个都创建一个 &lt;a2&gt;&lt;c3&gt;Rectangle&lt;/c3&gt;&lt;/a2&gt; 类的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first method deletes the subsequence from start to end-1 (inclusive) in the &lt;c0&gt;StringBuilder&lt;/c0&gt;'s char sequence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082049Z" creationid="pingfangx" creationdate="20190103T082049Z">
        <seg>第一种方法在 &lt;c0&gt;StringBuilder&lt;/c0&gt; 的 char 序列中删除从 start 到 end-1(包括)的子序列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first parameter, &lt;c0&gt;format&lt;/c0&gt;, is a format string specifying how the objects in the second parameter, &lt;c1&gt;args&lt;/c1&gt;, are to be formatted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032824Z" creationid="pingfangx" creationdate="20190103T032824Z">
        <seg>第一个参数 &lt;c0&gt;format&lt;/c0&gt; 是一个格式字符串，指定如何格式化第二个参数 &lt;c1&gt;args&lt;/c1&gt; 中的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first section provides information on getting started with the NetBeans IDE, an integrated development environment that greatly simplifies the software development process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034101Z" creationid="pingfangx" creationdate="20180518T034101Z">
        <seg>第一部分提供了有关 NetBeans IDE 入门的信息，NetBeans IDE 是一个大大简化了软件开发过程的集成开发环境。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first statement invokes &lt;t0&gt;rectOne&lt;/t0&gt;'s &lt;c1&gt;getArea()&lt;/c1&gt; method and displays the results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T084901Z" creationid="pingfangx" creationdate="20180601T084856Z">
        <seg>第一条语句调用 &lt;t0&gt;rectOne&lt;/t0&gt; 的 &lt;c1&gt;getArea()&lt;/c1&gt; 方法并显示结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first three are double-precision floating point numbers, and the fourth is an integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032217Z" creationid="pingfangx" creationdate="20180601T032217Z">
        <seg>前三个是双精度浮点数，第四个是整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first use specifies the last day of the month and the second specifies Friday at 11p.m., as shown in the following code example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041100Z" creationid="pingfangx" creationdate="20190102T041100Z">
        <seg>第一次使用指定月份的最后一天，第二次使用指定星期五晚上 11 点，如下面的代码示例所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The floating point types (&lt;c0&gt;float&lt;/c0&gt; and &lt;c1&gt;double&lt;/c1&gt;) can also be expressed using E or e (for scientific notation), F or f (32-bit float literal) and D or d (64-bit double literal; this is the default and by convention is omitted).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T083130Z" creationid="pingfangx" creationdate="20180518T083130Z">
        <seg>浮点类型(&lt;c0&gt;float&lt;/c0&gt; 和 &lt;c1&gt;double&lt;/c1&gt;)也可以用 E 或 e(科学记数法)，F 或 f(32 位 float 字面量)和 D 或 d(64 位double 字面量;这是默认值，按照惯例被省略)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following &lt;a0&gt;&lt;c1&gt;Bicycle&lt;/c1&gt;&lt;/a0&gt; class is one possible implementation of a bicycle:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062511Z" creationid="pingfangx" creationdate="20180518T062511Z">
        <seg>下面的 &lt;a0&gt;&lt;c1&gt;Bicycle&lt;/c1&gt;&lt;/a0&gt; 类是自行车的一种可能的实现方式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following JavaFX example is from the section &lt;a0&gt; Customization of UI Controls&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065754Z" creationid="pingfangx" creationdate="20180706T065754Z">
        <seg>以下 JavaFX 示例来自 &lt;a0&gt; Customization of UI Controls&lt;/a0&gt; 部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following approach suggests other ways to use lambda expressions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093744Z" creationid="pingfangx" creationdate="20180706T093744Z">
        <seg>以下方法提出了使用 lambda 表达式的其他方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following bold text begins the class definition block for the "Hello World!" application:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035548Z" creationid="pingfangx" creationdate="20180518T035548Z">
        <seg>以下粗体文本开始 "Hello World！" 应用的类定义块：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following bold text begins the definition of the &lt;c0&gt;main&lt;/c0&gt; method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035625Z" creationid="pingfangx" creationdate="20180518T035625Z">
        <seg>以下粗体文本开始定义 &lt;c0&gt;main&lt;/c0&gt; 方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following bold text defines the &lt;i0&gt;comments&lt;/i0&gt; of the "Hello World!" application:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035431Z" creationid="pingfangx" creationdate="20180518T035431Z">
        <seg>以下粗体文本定义了 "Hello World！" 应用的 &lt;i0&gt;注释&lt;/i0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following chart summarizes the default values for the above data types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082146Z" creationid="pingfangx" creationdate="20180518T082146Z">
        <seg>以下图表总结了上述数据类型的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following class implements the &lt;c0&gt;CheckPerson&lt;/c0&gt; interface by specifying an implementation for the method &lt;c1&gt;test&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090159Z" creationid="pingfangx" creationdate="20180706T090159Z">
        <seg>以下类通过指定方法 &lt;c1&gt;test&lt;/c1&gt; 的实现来实现 &lt;c0&gt;CheckPerson&lt;/c0&gt; 接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following class, &lt;a0&gt;&lt;c1&gt;Filename&lt;/c1&gt;&lt;/a0&gt;, illustrates the use of &lt;c2&gt;lastIndexOf()&lt;/c2&gt; and &lt;c3&gt;substring()&lt;/c3&gt; to isolate different parts of a file name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074906Z" creationid="pingfangx" creationdate="20190103T074906Z">
        <seg>以下类 &lt;a0&gt;&lt;c1&gt;Filename&lt;/c1&gt;&lt;/a0&gt; 说明了使用 &lt;c2&gt;lastIndexOf()&lt;/c2&gt; 和 &lt;c3&gt;substring()&lt;/c3&gt; 来隔离不同部分的文件名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following class, &lt;a0&gt;&lt;c1&gt;SimpleTimeClient&lt;/c1&gt;&lt;/a0&gt;, implements &lt;c2&gt;TimeClient&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061150Z" creationid="pingfangx" creationdate="20190102T061150Z">
        <seg>以下类 &lt;a0&gt;&lt;c1&gt;SimpleTimeClient&lt;/c1&gt;&lt;/a0&gt;，实现 &lt;c2&gt;TimeClient&lt;/c2&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code creates one array and one string object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083222Z" creationid="pingfangx" creationdate="20180705T083222Z">
        <seg>以下代码创建一个数组和一个字符串对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code example, &lt;a0&gt;&lt;c1&gt;SwitchDemo2&lt;/c1&gt;&lt;/a0&gt;, shows how a statement can have multiple &lt;c2&gt;case&lt;/c2&gt; labels.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082450Z" creationid="pingfangx" creationdate="20180521T082450Z">
        <seg>以下代码示例 &lt;a0&gt;&lt;c1&gt;SwitchDemo2&lt;/c1&gt;&lt;/a0&gt; 显示了语句如何具有多个 &lt;c2&gt;case&lt;/c2&gt; 标签。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code example, &lt;a0&gt;&lt;c1&gt;SwitchDemo&lt;/c1&gt;&lt;/a0&gt;, declares an &lt;c2&gt;int&lt;/c2&gt; named &lt;c3&gt;month&lt;/c3&gt; whose value represents a month.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082007Z" creationid="pingfangx" creationdate="20180521T082007Z">
        <seg>以下代码示例 &lt;a0&gt;&lt;c1&gt;SwitchDemo&lt;/c1&gt;&lt;/a0&gt; 声明了一个名为 &lt;c3&gt;month&lt;/c3&gt; 的 &lt;c2&gt;int&lt;/c2&gt;，其值代表一个月份。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code example, &lt;a2&gt;&lt;c3&gt;StringSwitchDemo&lt;/c3&gt;&lt;/a2&gt;, displays the number of the month based on the value of the &lt;c4&gt;String&lt;/c4&gt; named &lt;c5&gt;month&lt;/c5&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082550Z" creationid="pingfangx" creationdate="20180521T082550Z">
        <seg>以下代码示例 &lt;a2&gt;&lt;c3&gt;StringSwitchDemo&lt;/c3&gt;&lt;/a2&gt; 显示基于名为 &lt;c5&gt;month&lt;/c5&gt; 的 &lt;c4&gt;String&lt;/c4&gt; 的月份数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code excerpt does not compile because the method &lt;c0&gt;EnglishGoodbye.sayGoodbye&lt;/c0&gt; is declared &lt;c1&gt;static&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144514Z" creationid="pingfangx" creationdate="20180705T144459Z">
        <seg>以下代码片断无法编译，因为方法 &lt;c0&gt;EnglishGoodbye.sayGoodbye&lt;/c0&gt; 声明为 &lt;c1&gt;static&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code gets from the Niagara palindrome the substring that extends from index 11 up to, but not including, index 15, which is the word "roar":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072952Z" creationid="pingfangx" creationdate="20190103T072857Z">
        <seg>以下代码从 Niagara 回文中获取从索引 11 延伸到但不包括索引 15 的子字符串，这是 "roar" 一词：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code prints the array's size to standard output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042347Z" creationid="pingfangx" creationdate="20180521T042347Z">
        <seg>以下代码将数组的大小打印到标准输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code snippet is an example of a &lt;s0&gt;compound&lt;/s0&gt; expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075608Z" creationid="pingfangx" creationdate="20180521T075608Z">
        <seg>以下代码片段是 &lt;s0&gt;compound&lt;/s0&gt; 表达式的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code snippet is an example of a ___ expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075452Z" creationid="pingfangx" creationdate="20180521T075452Z">
        <seg>以下代码片段是___表达式的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example defines a custom &lt;c1&gt;@Schedule&lt;/c1&gt; repeatable annotation type:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041155Z" creationid="pingfangx" creationdate="20190102T041155Z">
        <seg>以下示例定义自定义 &lt;c1&gt;@Schedule&lt;/c1&gt; 可重复注解类型：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example defines a default method named &lt;c1&gt;didItWork&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063124Z" creationid="pingfangx" creationdate="20190102T063124Z">
        <seg>以下示例定义名为 &lt;c1&gt;didItWork&lt;/c1&gt; 的默认方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example defines a static method that retrieves a &lt;a1&gt;&lt;c2&gt;ZoneId&lt;/c2&gt;&lt;/a1&gt; object corresponding to a time zone identifier; it uses the system default time zone if there is no &lt;c3&gt;ZoneId&lt;/c3&gt; object corresponding to the given identifier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064901Z" creationid="pingfangx" creationdate="20190102T064901Z">
        <seg>以下示例定义一个静态方法，该方法获取与时区标识符对应的 &lt;a1&gt;&lt;c2&gt;ZoneId&lt;/c2&gt;&lt;/a1&gt; 对象;如果没有与给定标识符对应的 &lt;c3&gt;ZoneId&lt;/c3&gt; 对象，它将使用系统默认时区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example illustrates how to use the &lt;c0&gt;super&lt;/c0&gt; keyword to invoke a superclass's constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095455Z" creationid="pingfangx" creationdate="20190102T095455Z">
        <seg>以下示例说明如何使用 &lt;c0&gt;super&lt;/c0&gt; 关键字来调用超类的构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example program, &lt;c1&gt;ContinueWithLabelDemo&lt;/c1&gt;, uses nested loops to search for a substring within another string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090614Z" creationid="pingfangx" creationdate="20180521T090614Z">
        <seg>以下示例程序 &lt;c1&gt;ContinueWithLabelDemo&lt;/c1&gt; 使用嵌套循环搜索另一个字符串中的子字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example shows other ways you can use the underscore in numeric literals:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084523Z" creationid="pingfangx" creationdate="20180518T084523Z">
        <seg>以下示例显示了可以在数字字面量中使用下划线的其他方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example uses aggregate operations to print the e-mail addresses of those members contained in the collection &lt;c0&gt;roster&lt;/c0&gt; who are eligible for Selective Service:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074338Z" creationid="pingfangx" creationdate="20181228T074338Z">
        <seg>以下示例使用聚合操作来打印集合 &lt;c0&gt;roster&lt;/c0&gt; 中包含的符合美国兵役登记制度的成员的电子邮件地址：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example, &lt;a0&gt;&lt;c1&gt;Calculator&lt;/c1&gt;&lt;/a0&gt;, is an example of lambda expressions that take more than one formal parameter:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075614Z" creationid="pingfangx" creationdate="20181228T075614Z">
        <seg>以下示例 &lt;a0&gt;&lt;c1&gt;Calculator&lt;/c1&gt;&lt;/a0&gt; 是一个 lambda 表达式的示例，它采用多个形式参数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example, &lt;a0&gt;&lt;c1&gt;HelloWorldAnonymousClasses&lt;/c1&gt;&lt;/a0&gt;, uses anonymous classes in the initialization statements of the local variables &lt;c2&gt;frenchGreeting&lt;/c2&gt; and &lt;c3&gt;spanishGreeting&lt;/c3&gt;, but uses a local class for the initialization of the variable &lt;c4&gt;englishGreeting&lt;/c4&gt;&lt;c5&gt;:&lt;/c5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061123Z" creationid="pingfangx" creationdate="20180706T061123Z">
        <seg>以下示例 &lt;a0&gt;&lt;c1&gt;HelloWorldAnonymousClasses&lt;/c1&gt;&lt;/a0&gt; 在局部变量 &lt;c2&gt;frenchGreeting&lt;/c2&gt; 和 &lt;c3&gt;spanishGreeting&lt;/c3&gt; 的初始化语句中使用匿名类，但是使用局部类初始化变量 &lt;c4&gt;englishGreeting&lt;/c4&gt; &lt;c5&gt;:&lt;/c5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example, &lt;a0&gt;&lt;c1&gt;LocalClassExample&lt;/c1&gt;&lt;/a0&gt;, validates two phone numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122431Z" creationid="pingfangx" creationdate="20180705T122431Z">
        <seg>以下示例 &lt;a0&gt;&lt;c1&gt;LocalClassExample&lt;/c1&gt;&lt;/a0&gt; 验证两个电话号码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example, &lt;a1&gt;&lt;c2&gt;BlockDemo&lt;/c2&gt;&lt;/a1&gt;, illustrates the use of blocks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075349Z" creationid="pingfangx" creationdate="20180521T075349Z">
        <seg>以下示例 &lt;a1&gt;&lt;c2&gt;BlockDemo&lt;/c2&gt;&lt;/a1&gt; 演示了如何使用块：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example, &lt;a1&gt;&lt;c2&gt;ShadowTest&lt;/c2&gt;&lt;/a1&gt;, demonstrates this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091528Z" creationid="pingfangx" creationdate="20180705T091528Z">
        <seg>以下示例 &lt;a1&gt;&lt;c2&gt;ShadowTest&lt;/c2&gt;&lt;/a1&gt; 演示了这一点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example, &lt;a2&gt;&lt;c3&gt;LambdaScopeTest&lt;/c3&gt;&lt;/a2&gt;, demonstrates this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075930Z" creationid="pingfangx" creationdate="20181228T075930Z">
        <seg>以下示例 &lt;a2&gt;&lt;c3&gt;LambdaScopeTest&lt;/c3&gt;&lt;/a2&gt; 演示了这一点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example, &lt;a3&gt;&lt;c4&gt;TestSimpleTimeClient&lt;/c4&gt;&lt;/a3&gt;, invokes the method &lt;c5&gt;getZonedDateTime&lt;/c5&gt; from an instance of &lt;c6&gt;SimpleTimeClient&lt;/c6&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063340Z" creationid="pingfangx" creationdate="20190102T063340Z">
        <seg>以下示例 &lt;a3&gt;&lt;c4&gt;TestSimpleTimeClient&lt;/c4&gt;&lt;/a3&gt; 从 &lt;c6&gt;SimpleTimeClient&lt;/c6&gt; 的实例调用方法 &lt;c5&gt;getZonedDateTime&lt;/c5&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following examples demonstrate valid and invalid underscore placements (which are highlighted) in numeric literals:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084719Z" creationid="pingfangx" creationdate="20180518T084719Z">
        <seg>以下示例演示了数字字面量中的有效和无效(高亮显示)的下划线布局：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following exercises involve modifying the class &lt;a0&gt;&lt;c1&gt;DataStructure.java&lt;/c1&gt;&lt;/a0&gt;, which the section &lt;a2&gt;Inner Class Example&lt;/a2&gt; discusses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014026Z" creationid="pingfangx" creationdate="20190102T014026Z">
        <seg>以下练习涉及修改类 &lt;a0&gt;&lt;c1&gt;DataStructure.java&lt;/c1&gt;&lt;/a0&gt;，是 &lt;a2&gt;Inner Class Example&lt;/a2&gt; 部分讨论的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following explanation will provide you with a basic understanding of the code, but the deeper implications will only become apparent after you've finished reading the rest of the tutorial.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035358Z" creationid="pingfangx" creationdate="20180518T035358Z">
        <seg>以下说明将为您提供对代码的基本理解，但深层含义只有在完成本教程的其余部分的阅读后才会显现出来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following instructions are for users of Windows Vista, Windows 7, and Windows 8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034301Z" creationid="pingfangx" creationdate="20180518T034301Z">
        <seg>以下说明适用于 Windows Vista，Windows 7 和 Windows 8 的用户。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following invocation sorts the deck of playing cards first by rank, then by suit:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071102Z" creationid="pingfangx" creationdate="20190102T071102Z">
        <seg>以下调用首先按点数对扑克牌进行排序，然后按照花色进行排序：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following is a generic version of it that accepts, as a parameter, a collection that contains elements of any data type:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100543Z" creationid="pingfangx" creationdate="20180706T100543Z">
        <seg>以下是它的泛型版本，它接受包含任何数据类型元素的集合作为参数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following is an example of a reference to an instance method of a particular object:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084715Z" creationid="pingfangx" creationdate="20181228T084715Z">
        <seg>以下是对特定对象的实例方法的引用示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following is an example of a reference to an instance method of an arbitrary object of a particular type:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084751Z" creationid="pingfangx" creationdate="20181228T084751Z">
        <seg>以下是对特定类型的任意对象的实例方法的引用示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following is the output from the program when you use &lt;c0&gt;4.5&lt;/c0&gt; and &lt;c1&gt;87.2&lt;/c1&gt; for the command-line arguments:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065216Z" creationid="pingfangx" creationdate="20190103T065210Z">
        <seg>当您使用 &lt;c0&gt;4.5&lt;/c0&gt; 和 &lt;c1&gt;87.2&lt;/c1&gt; 作为命令行参数时，以下是程序的输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following is the output from the test program:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094045Z" creationid="pingfangx" creationdate="20190102T094045Z">
        <seg>以下是测试程序的输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following is the output of this example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091539Z" creationid="pingfangx" creationdate="20180705T091539Z">
        <seg>以下是此示例的输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following line of code calls the &lt;c0&gt;Rectangle&lt;/c0&gt; constructor that requires two integer arguments, which provide the initial values for &lt;t1&gt;width&lt;/t1&gt; and &lt;t2&gt;height&lt;/t2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071459Z" creationid="pingfangx" creationdate="20180601T071459Z">
        <seg>以下代码行调用需要两个整数参数的 &lt;c0&gt;Rectangle&lt;/c0&gt; 构造函数，它们提供了 &lt;t1&gt;width&lt;/t1&gt; 和 &lt;t2&gt;height&lt;/t2&gt; 的初始值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following method copies elements from one collection to another:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084927Z" creationid="pingfangx" creationdate="20181228T084927Z">
        <seg>以下方法将元素从一个集合复制到另一个集合：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following method is more generic than &lt;c0&gt;printPersonsOlderThan&lt;/c0&gt;; it prints members within a specified range of ages:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085839Z" creationid="pingfangx" creationdate="20180706T085839Z">
        <seg>以下方法比 &lt;c0&gt;printPersonsOlderThan&lt;/c0&gt; 更通用;它会在指定的年龄范围内打印成员：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following method prints members that are older than a specified age:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085628Z" creationid="pingfangx" creationdate="20180706T085628Z">
        <seg>以下方法打印超过指定年龄的成员：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following method prints members that match search criteria that you specify:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085930Z" creationid="pingfangx" creationdate="20180706T085930Z">
        <seg>以下方法打印与您指定的搜索条件匹配的成员：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following method replaces the invocation &lt;c8&gt;p.printPerson()&lt;/c8&gt; with an instance of &lt;c9&gt;Consumer&lt;Person&gt;&lt;/c9&gt; that invokes the method &lt;c10&gt;accept&lt;/c10&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094103Z" creationid="pingfangx" creationdate="20180706T094103Z">
        <seg>以下方法将调用 &lt;c8&gt;p.printPerson()&lt;/c8&gt; 替换为调用方法 &lt;c10&gt;accept&lt;/c10&gt; 的 &lt;c9&gt;Consumer&lt;Person&gt;&lt;/c9&gt; 实例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following method retrieves the data specified by the parameter &lt;c2&gt;mapper&lt;/c2&gt;, and then performs an action on it specified by the parameter &lt;c3&gt;block&lt;/c3&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094308Z" creationid="pingfangx" creationdate="20180706T094308Z">
        <seg>以下方法检索由参数 &lt;c2&gt;mapper&lt;/c2&gt; 指定的数据，然后对参数 &lt;c3&gt;block&lt;/c3&gt; 指定的操作执行操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following method retrieves the email address from each member contained in &lt;c0&gt;roster&lt;/c0&gt; who is eligible for Selective Service and then prints it:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100103Z" creationid="pingfangx" creationdate="20180706T100103Z">
        <seg>以下方法从 &lt;c0&gt;roster&lt;/c0&gt; 中包含的每个符合美国兵役登记制度的成员检索电子邮件地址，然后将其打印出来：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program shows some of the formatting that you can do with &lt;c0&gt;format&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033606Z" creationid="pingfangx" creationdate="20190103T033606Z">
        <seg>以下程序显示了您可以使用 &lt;c0&gt;format&lt;/c0&gt; 执行的一些格式设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;ArithmeticDemo&lt;/c1&gt;&lt;/a0&gt;, tests the arithmetic operators.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064516Z" creationid="pingfangx" creationdate="20180521T064516Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;ArithmeticDemo&lt;/c1&gt;&lt;/a0&gt; 测试算术运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;ArrayCopyDemo&lt;/c1&gt;&lt;/a0&gt;, declares an array of &lt;c2&gt;char&lt;/c2&gt; elements, spelling the word "decaffeinated." It uses the &lt;c3&gt;System.arraycopy&lt;/c3&gt; method to copy a subsequence of array components into a second array:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042955Z" creationid="pingfangx" creationdate="20180521T042955Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;ArrayCopyDemo&lt;/c1&gt;&lt;/a0&gt; 声明了一组 &lt;c2&gt;char&lt;/c2&gt; 元素，拼写单词 "decaffeinated"。它使用 &lt;c3&gt;System.arraycopy&lt;/c3&gt; 方法将数组组件的子序列复制到第二个数组中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;ArrayDemo&lt;/c1&gt;&lt;/a0&gt;, creates an array of integers, puts some values in the array, and prints each value to standard output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021638Z" creationid="pingfangx" creationdate="20180521T021638Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;ArrayDemo&lt;/c1&gt;&lt;/a0&gt; 创建一个整数数组，将一些值放入数组中，并将每个值打印到标准输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;BasicMathDemo&lt;/c1&gt;&lt;/a0&gt; , illustrates how to use some of these methods:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035751Z" creationid="pingfangx" creationdate="20190103T035751Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;BasicMathDemo&lt;/c1&gt;&lt;/a0&gt; 说明了如何使用以下某些方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;BitDemo&lt;/c1&gt;&lt;/a0&gt;, uses the bitwise AND operator to print the number "2" to standard output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070948Z" creationid="pingfangx" creationdate="20180521T070948Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;BitDemo&lt;/c1&gt;&lt;/a0&gt; 使用按位与运算符将数字 "2" 输出到标准输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;ComparisonDemo&lt;/c1&gt;&lt;/a0&gt;, tests the comparison operators:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070025Z" creationid="pingfangx" creationdate="20180521T070025Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;ComparisonDemo&lt;/c1&gt;&lt;/a0&gt; 测试比较运算符：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;ConditionalDemo1&lt;/c1&gt;&lt;/a0&gt;, tests these operators:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070213Z" creationid="pingfangx" creationdate="20180521T070213Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;ConditionalDemo1&lt;/c1&gt;&lt;/a0&gt; 测试这些运算符：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;ConditionalDemo2&lt;/c1&gt;&lt;/a0&gt;, tests the &lt;c2&gt;?:&lt;/c2&gt; operator:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070334Z" creationid="pingfangx" creationdate="20180521T070334Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;ConditionalDemo2&lt;/c1&gt;&lt;/a0&gt; 测试 &lt;c2&gt;?:&lt;/c2&gt; 运算符：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;EnhancedForDemo&lt;/c1&gt;&lt;/a0&gt;, uses the enhanced &lt;c2&gt;for&lt;/c2&gt; to loop through the array:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085622Z" creationid="pingfangx" creationdate="20180521T085622Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;EnhancedForDemo&lt;/c1&gt;&lt;/a0&gt; 使用增强的 &lt;c2&gt;for&lt;/c2&gt; 来遍历数组：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;ExponentialDemo&lt;/c1&gt;&lt;/a0&gt;, displays the value of &lt;c2&gt;e&lt;/c2&gt;, then calls each of the methods listed in the previous table on arbitrarily chosen numbers:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040136Z" creationid="pingfangx" creationdate="20190103T040136Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;ExponentialDemo&lt;/c1&gt;&lt;/a0&gt; 显示 &lt;c2&gt;e&lt;/c2&gt; 的值，然后在任意选择的数字上调用上表中列出的每种方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;ForDemo&lt;/c1&gt;&lt;/a0&gt;, uses the general form of the &lt;c2&gt;for&lt;/c2&gt; statement to print the numbers 1 through 10 to standard output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085234Z" creationid="pingfangx" creationdate="20180521T085234Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;ForDemo&lt;/c1&gt;&lt;/a0&gt; 使用 &lt;c2&gt;for&lt;/c2&gt; 语句的一般形式将数字 1 至 10 打印到标准输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;IfElseDemo&lt;/c1&gt;&lt;/a0&gt;, assigns a grade based on the value of a test score: an A for a score of 90% or above, a B for a score of 80% or above, and so on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081142Z" creationid="pingfangx" creationdate="20180521T081142Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;IfElseDemo&lt;/c1&gt;&lt;/a0&gt; 根据考试分数的值分配等级：A 分数为 90％或以上，B 分数为 80 分％或以上，等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;InstanceofDemo&lt;/c1&gt;&lt;/a0&gt;, defines a parent class (named &lt;c2&gt;Parent&lt;/c2&gt;), a simple interface (named &lt;c3&gt;MyInterface&lt;/c3&gt;), and a child class (named &lt;c4&gt;Child&lt;/c4&gt;) that inherits from the parent and implements the interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070500Z" creationid="pingfangx" creationdate="20180521T070500Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;InstanceofDemo&lt;/c1&gt;&lt;/a0&gt; 定义了一个父类(名为 &lt;c2&gt;Parent&lt;/c2&gt;)，一个简单的接口(名为 &lt;c3&gt;MyInterface&lt;/c3&gt;) ，以及从父类继承并实现接口的子类(名为 &lt;c4&gt;Child&lt;/c4&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;PrePostDemo&lt;/c1&gt;&lt;/a0&gt;, illustrates the prefix/postfix unary increment operator:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065513Z" creationid="pingfangx" creationdate="20180521T065513Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;PrePostDemo&lt;/c1&gt;&lt;/a0&gt; 演示了前缀/后缀一元递增运算符：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a0&gt;&lt;c1&gt;UnaryDemo&lt;/c1&gt;&lt;/a0&gt;, tests the unary operators:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065212Z" creationid="pingfangx" creationdate="20180521T065212Z">
        <seg>以下程序 &lt;a0&gt;&lt;c1&gt;UnaryDemo&lt;/c1&gt;&lt;/a0&gt; 测试一元运算符：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a2&gt;&lt;c3&gt;ContinueWithLabelDemo&lt;/c3&gt;&lt;/a2&gt;, uses the labeled form of continue to skip an iteration in the outer loop.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090634Z" creationid="pingfangx" creationdate="20180521T090634Z">
        <seg>以下程序 &lt;a2&gt;&lt;c3&gt;ContinueWithLabelDemo&lt;/c3&gt;&lt;/a2&gt; 使用标记形式继续跳过外循环中的迭代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a5&gt;&lt;c6&gt;ContinueDemo&lt;/c6&gt;&lt;/a5&gt; , steps through a &lt;c7&gt;String&lt;/c7&gt;, counting the occurences of the letter "p".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090436Z" creationid="pingfangx" creationdate="20180521T090436Z">
        <seg>下面的程序 &lt;a5&gt;&lt;c6&gt;ContinueDemo&lt;/c6&gt;&lt;/a5&gt;，浏览 &lt;c7&gt;String&lt;/c7&gt; ，计算字母 "p" 的出现次数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;a6&gt;&lt;c7&gt;BreakWithLabelDemo&lt;/c7&gt;&lt;/a6&gt;, is similar to the previous program, but uses nested &lt;c8&gt;for&lt;/c8&gt; loops to search for a value in a two-dimensional array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090048Z" creationid="pingfangx" creationdate="20180521T090048Z">
        <seg>以下程序 &lt;a6&gt;&lt;c7&gt;BreakWithLabelDemo&lt;/c7&gt;&lt;/a6&gt; 与前一个程序类似，但使用嵌套的 &lt;c8&gt;for&lt;/c8&gt; 循环来搜索二维数组中的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following program, &lt;c0&gt;RegionMatchesDemo&lt;/c0&gt;, uses the &lt;c1&gt;regionMatches&lt;/c1&gt; method to search for a string within another string:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075854Z" creationid="pingfangx" creationdate="20190103T075854Z">
        <seg>以下程序 &lt;c0&gt;RegionMatchesDemo&lt;/c0&gt; 使用 &lt;c1&gt;regionMatches&lt;/c1&gt; 方法在另一个字符串中搜索字符串：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following quick reference summarizes the operators supported by the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071107Z" creationid="pingfangx" creationdate="20180521T071107Z">
        <seg>以下快速参考汇总了 Java 编程语言支持的运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following sections explain how Java technology is both a programming language and a platform, and provide an overview of what this technology can do for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032727Z" creationid="pingfangx" creationdate="20180518T032727Z">
        <seg>以下各节介绍了 Java 技术既是一种编程语言又是一种平台，并概述了该技术可为您做些什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following sections in this lesson will expand on these topics.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082914Z" creationid="pingfangx" creationdate="20190102T082914Z">
        <seg>本课程的以下部分将扩展这些主题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following statement provides 23 and 94 as values for those arguments:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062536Z" creationid="pingfangx" creationdate="20180601T062536Z">
        <seg>以下语句提供了 23 和 94 作为这些参数的值：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table describes the various string search methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073403Z" creationid="pingfangx" creationdate="20190103T073403Z">
        <seg>下表描述了各种字符串搜索方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table describes this use case in detail:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085027Z" creationid="pingfangx" creationdate="20180706T085027Z">
        <seg>下表详细描述了此用例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table explains each line of output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034104Z" creationid="pingfangx" creationdate="20190103T034104Z">
        <seg>下表说明了每行输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists a number of the basic methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035517Z" creationid="pingfangx" creationdate="20190103T035517Z">
        <seg>下表列出了许多基本方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists some of the converters and flags that are used in the sample program, &lt;c0&gt;TestFormat.java&lt;/c0&gt;, that follows the table.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033159Z" creationid="pingfangx" creationdate="20190103T033159Z">
        <seg>下表列出了表格后面的示例程序 &lt;c0&gt;TestFormat.java&lt;/c0&gt; 中使用的一些转换器和标志。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists some of the most useful methods in the &lt;c0&gt;Character&lt;/c0&gt; class, but is not exhaustive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062150Z" creationid="pingfangx" creationdate="20190103T062150Z">
        <seg>下表列出了 &lt;c0&gt;Character&lt;/c0&gt; 类中一些最有用的方法，但并非详尽无遗。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists the instance methods that all the subclasses of the &lt;c0&gt;Number&lt;/c0&gt; class implement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030544Z" creationid="pingfangx" creationdate="20190103T030544Z">
        <seg>下表列出了 &lt;c0&gt;Number&lt;/c0&gt; 类的所有子类实现的实例方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists the primitive types and their corresponding wrapper classes, which are used by the Java compiler for autoboxing and unboxing:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084649Z" creationid="pingfangx" creationdate="20190103T084649Z">
        <seg>下表列出了基本类型及其相应的包装类，Java 编译器使用这些类进行自动装箱和拆箱：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists these methods in the &lt;c1&gt;Integer&lt;/c1&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030824Z" creationid="pingfangx" creationdate="20190103T030824Z">
        <seg>下表列出了 &lt;c1&gt;Integer&lt;/c1&gt; 类中的这些方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists these methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075436Z" creationid="pingfangx" creationdate="20190103T075436Z">
        <seg>下表列出了这些方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table maps each of the operations the method &lt;c0&gt;processElements&lt;/c0&gt; performs with the corresponding aggregate operation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074429Z" creationid="pingfangx" creationdate="20181228T074429Z">
        <seg>下表将方法 &lt;c0&gt;processElements&lt;/c0&gt; 执行的每个操作映射到相应的聚合操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table shows the Java escape sequences:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062342Z" creationid="pingfangx" creationdate="20190103T062342Z">
        <seg>下表显示了 Java 转义序列：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table shows the access to members permitted by each modifier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040113Z" creationid="pingfangx" creationdate="20180607T040113Z">
        <seg>下表显示了每个修饰符允许的成员访问权限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following three sections use the above example to describe the life cycle of an object within a program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040133Z" creationid="pingfangx" creationdate="20180601T040133Z">
        <seg>以下三节使用上述示例来描述程序中对象的生命周期。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following types of expressions can be made into a statement by terminating the expression with a semicolon (&lt;c1&gt;;&lt;/c1&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074830Z" creationid="pingfangx" creationdate="20180521T074830Z">
        <seg>通过用分号(&lt;c1&gt;;&lt;/c1&gt;)终止表达式，可以将以下类型的表达式编入语句中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The for Statement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072446Z" creationid="pingfangx" creationdate="20180518T072446Z">
        <seg>for 语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The for Statement (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083106Z" creationid="pingfangx" creationdate="20180521T083106Z">
        <seg>The for Statement (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The format string contains plain text as well as &lt;e2&gt;format specifiers&lt;/e2&gt;, which are special characters that format the arguments of &lt;c3&gt;Object... args&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032844Z" creationid="pingfangx" creationdate="20190103T032844Z">
        <seg>格式字符串包含纯文本以及 &lt;e2&gt;format specifiers&lt;/e2&gt;，它们是格式化 &lt;c3&gt;Object... args&lt;/c3&gt; 参数的特殊字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The fourth column indicates whether all classes have access to the member.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041252Z" creationid="pingfangx" creationdate="20180607T041252Z">
        <seg>第四列表示是否所有的类都有权访问该类成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The functional interface &lt;c0&gt;Supplier&lt;/c0&gt; contains one method &lt;c1&gt;get&lt;/c1&gt; that takes no arguments and returns an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084942Z" creationid="pingfangx" creationdate="20181228T084942Z">
        <seg>函数式接口 &lt;c0&gt;Supplier&lt;/c0&gt; 包含一个不带参数的方法 &lt;c1&gt;get&lt;/c1&gt; 并返回一个对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The garbage collector automatically cleans up unused objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082332Z" creationid="pingfangx" creationdate="20180705T082332Z">
        <seg>垃圾收集器自动清理未使用的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The garbage collector does its job automatically when it determines that the time is right.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085914Z" creationid="pingfangx" creationdate="20180601T085914Z">
        <seg>垃圾回收器在确定时间正确时自动执行其作业。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The general form of the &lt;c1&gt;for&lt;/c1&gt; statement can be expressed as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090635Z" creationid="pingfangx" creationdate="20180521T084414Z">
        <seg>&lt;c1&gt;for&lt;/c1&gt; 语句的一般形式可表示如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The general-purpose, high-level Java programming language is a powerful software platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033607Z" creationid="pingfangx" creationdate="20180518T033607Z">
        <seg>通用的高级 Java 编程语言是一个功能强大的软件平台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The getClass() Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103452Z" creationid="pingfangx" creationdate="20190102T103452Z">
        <seg>getClass() 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The graphics company then invokes the image processing methods using the signatures and return types defined in the interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055801Z" creationid="pingfangx" creationdate="20190102T055801Z">
        <seg>然后，图形公司使用接口中定义的签名和返回类型调用图像处理方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The guidance manufacturers can then write software that invokes the methods described in the interface to command the car.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T053841Z" creationid="pingfangx" creationdate="20190102T053841Z">
        <seg>然后，指导制造商可以编写调用接口中描述的方法的软件来命令汽车。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The guidance manufacturers, who are the clients of the interface, will build systems that use GPS data on a car's location, digital street maps, and traffic data to drive the car.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054438Z" creationid="pingfangx" creationdate="20190102T054438Z">
        <seg>作为接口客户的指导制造商将构建在汽车位置使用 GPS 数据的系统，数字街道地图和交通数据来驱动汽车。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The hashCode() Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103655Z" creationid="pingfangx" creationdate="20190102T103655Z">
        <seg>hashCode() 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The highlighted code creates a text field that only accepts numeric values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065802Z" creationid="pingfangx" creationdate="20180706T065802Z">
        <seg>高亮的代码创建一个只接受数值的文本字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The idea of inheritance is simple but powerful: When you want to create a new class and there is already a class that includes some of the code that you want, you can derive your new class from the existing class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081713Z" creationid="pingfangx" creationdate="20190102T081713Z">
        <seg>继承的想法很简单但很强大：当你想创建一个新类并且已经有一个包含你想要的代码的类时，你可以从现有的类派生你的新类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The if-then and if-then-else Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072439Z" creationid="pingfangx" creationdate="20180518T072439Z">
        <seg>if-then 和 if-then-else 语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The if-then and if-then-else Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080807Z" creationid="pingfangx" creationdate="20180521T080807Z">
        <seg>The if-then and if-then-else Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The image processing company writes its classes to implement an interface, which it makes public to its customers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055751Z" creationid="pingfangx" creationdate="20190102T055751Z">
        <seg>图像处理公司编写其类以实现接口，该接口向其客户公开。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The important thing to remember is that parameters are always classified as "variables" not "fields".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073741Z" creationid="pingfangx" creationdate="20180518T073741Z">
        <seg>重要的是要记住参数总是被分类为 "变量" 而不是 "字段"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The increment/decrement operators can be applied before (prefix) or after (postfix) the operand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065251Z" creationid="pingfangx" creationdate="20180521T065251Z">
        <seg>递增/递减运算符可以在操作数之前(前缀)或之后(后缀)应用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The index of the first character is 0, while the index of the last character is &lt;c1&gt;length()-1&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072550Z" creationid="pingfangx" creationdate="20190103T072550Z">
        <seg>第一个字符的索引是 0，而最后一个字符的索引是 &lt;c1&gt;length()-1&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The inherited fields can be used directly, just like any other fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082705Z" creationid="pingfangx" creationdate="20190102T082705Z">
        <seg>继承的字段可以直接使用，就像任何其他字段一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The inherited methods can be used directly as they are.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082751Z" creationid="pingfangx" creationdate="20190102T082751Z">
        <seg>继承的方法可以直接使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The instructions contained within this file are known as &lt;i2&gt;bytecodes&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034503Z" creationid="pingfangx" creationdate="20180518T034503Z">
        <seg>该文件中包含的指令称为 &lt;i2&gt;bytecodes&lt;/i2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The integer argument specifies the index of the first character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072710Z" creationid="pingfangx" creationdate="20190103T072710Z">
        <seg>integer 参数指定第一个字符的索引。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The interface &lt;c0&gt;Predicate&lt;T&gt;&lt;/c0&gt; is an example of a generic interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093226Z" creationid="pingfangx" creationdate="20180706T093059Z">
        <seg>接口 &lt;c0&gt;Predicate&lt;T&gt;&lt;/c0&gt; 是泛型接口的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The interface body can contain &lt;a0&gt;abstract methods&lt;/a0&gt;, &lt;a1&gt;default methods&lt;/a1&gt;, and &lt;a2&gt;static methods&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061658Z" creationid="pingfangx" creationdate="20190102T061658Z">
        <seg>接口主体可以包含 &lt;a0&gt;abstract methods&lt;/a0&gt;，&lt;a1&gt;default methods&lt;/a1&gt; 和 &lt;a2&gt;static methods&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The interface declaration includes a comma-separated list of all the interfaces that it extends.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061634Z" creationid="pingfangx" creationdate="20190102T061634Z">
        <seg>接口声明包括它继承的所有接口的逗号分隔列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The introduction to object-oriented concepts in the lesson titled &lt;a0&gt;Object-oriented Programming Concepts &lt;/a0&gt;used a bicycle class as an example, with racing bikes, mountain bikes, and tandem bikes as subclasses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023444Z" creationid="pingfangx" creationdate="20180525T023444Z">
        <seg>在题为 &lt;a0&gt;Object-oriented Programming Concepts &lt;/a0&gt; 的课程中，面向对象概念的介绍以自行车课为例，以自行车，山地自行车和串联自行车作为子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The keyword &lt;c0&gt;class&lt;/c0&gt; begins the class definition for a class named &lt;c1&gt;name&lt;/c1&gt;, and the code for each class appears between the opening and closing curly braces marked in bold above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035608Z" creationid="pingfangx" creationdate="20180518T035608Z">
        <seg>关键字 &lt;c0&gt;class&lt;/c0&gt; 开始名为 &lt;c1&gt;name&lt;/c1&gt; 的类的类定义，并且每个类的代码出现在上面用粗体标记的开头和结尾大括号之间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The keywords &lt;c0&gt;const&lt;/c0&gt; and &lt;c1&gt;goto&lt;/c1&gt; are reserved, even though they are not currently used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075256Z" creationid="pingfangx" creationdate="20180518T075256Z">
        <seg>关键字 &lt;c0&gt;const&lt;/c0&gt; 和 &lt;c1&gt;goto&lt;/c1&gt; 是保留的，即使它们当前未被使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The lambda expression used to print members is highlighted:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094224Z" creationid="pingfangx" creationdate="20180706T094224Z">
        <seg>The lambda expression used to print members is highlighted:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last line of this code snippet displays &lt;c0&gt;hello&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063509Z" creationid="pingfangx" creationdate="20190103T063509Z">
        <seg>此代码段的最后一行显示 &lt;c0&gt;hello&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last of the branching statements is the &lt;c0&gt;return&lt;/c0&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090658Z" creationid="pingfangx" creationdate="20180521T090658Z">
        <seg>最后一个分支语句是 &lt;c0&gt;return&lt;/c0&gt; 语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The latter method is indispensable in converting user input strings to numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083358Z" creationid="pingfangx" creationdate="20190103T083358Z">
        <seg>后一种方法在将用户输入字符串转换为数字时是必不可少的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The length of an array is established when the array is created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021341Z" creationid="pingfangx" creationdate="20180521T021341Z">
        <seg>数组的长度是在创建数组时建立的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The lesson on interfaces and inheritance will explain how and why you would use the &lt;i5&gt;extends&lt;/i5&gt; and &lt;i6&gt;implements&lt;/i6&gt; keywords in a class declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030427Z" creationid="pingfangx" creationdate="20180525T030427Z">
        <seg>接口和继承课程将解释在类声明中如何以及为什么要使用 &lt;i5&gt;extends&lt;/i5&gt; 和 &lt;i6&gt;implements&lt;/i6&gt; 关键字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The line of code, shown in bold in the previous example, casts &lt;c4&gt;other&lt;/c4&gt; to a &lt;c5&gt;RectanglePlus&lt;/c5&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062234Z" creationid="pingfangx" creationdate="20190102T062234Z">
        <seg>代码行（在前面的示例中以粗体显示）将 &lt;c4&gt;other&lt;/c4&gt; 转换为 &lt;c5&gt;RectanglePlus&lt;/c5&gt; 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The majority of these operators will probably look familiar to you as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065918Z" creationid="pingfangx" creationdate="20180521T065918Z">
        <seg>大多数这些运算符也可能看起来很熟悉。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The member &lt;c4&gt;entireDeck&lt;/c4&gt; is an instance of &lt;c5&gt;List&lt;/c5&gt; whose elements are of the type &lt;c6&gt;Card&lt;/c6&gt;, which extends &lt;c7&gt;Comparable&lt;/c7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065456Z" creationid="pingfangx" creationdate="20190102T065456Z">
        <seg>成员 &lt;c4&gt;entireDeck&lt;/c4&gt; 是 &lt;c5&gt;List&lt;/c5&gt; 的一个实例，其元素的类型为 &lt;c6&gt;Card&lt;/c6&gt;，它继承了 &lt;c7&gt;Comparable&lt;/c7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method &lt;c0&gt;Collections.sort&lt;/c0&gt; sorts an instance of &lt;c1&gt;List&lt;/c1&gt; whose element type implements the interface &lt;a2&gt;&lt;c3&gt;Comparable&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065438Z" creationid="pingfangx" creationdate="20190102T065438Z">
        <seg>方法 &lt;c0&gt;Collections.sort&lt;/c0&gt; 对 &lt;c1&gt;List&lt;/c1&gt; 的实例进行排序，其元素类型实现接口 &lt;a2&gt;&lt;c3&gt;Comparable&lt;/c3&gt;&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method &lt;c0&gt;Dragon.identifyMyself&lt;/c0&gt; returns the string &lt;c1&gt;I am able to lay eggs.&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091707Z" creationid="pingfangx" creationdate="20190102T091707Z">
        <seg>方法 &lt;c0&gt;Dragon.identifyMyself&lt;/c0&gt; 返回字符串 &lt;c1&gt;I am able to lay eggs.&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method &lt;c0&gt;Mustang.identifyMyself&lt;/c0&gt; returns the string &lt;c1&gt;I am a horse.&lt;/c1&gt; The class &lt;c2&gt;Mustang&lt;/c2&gt; inherits the method &lt;c3&gt;identifyMyself&lt;/c3&gt; from the class &lt;c4&gt;Horse&lt;/c4&gt;, which overrides the abstract method of the same name in the interface &lt;c5&gt;Mammal&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092210Z" creationid="pingfangx" creationdate="20190102T092210Z">
        <seg>方法 &lt;c0&gt;Mustang.identifyMyself&lt;/c0&gt; 返回字符串 &lt;c1&gt;I am a horse.&lt;/c1&gt; 类 &lt;c2&gt;Mustang&lt;/c2&gt; 继承了方法 &lt;c3&gt;identifyMyself&lt;/c3&gt; 从 &lt;c4&gt;Horse&lt;/c4&gt; 类，它会覆盖接口 &lt;c5&gt;Mammal&lt;/c5&gt; 中的同名抽象方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method &lt;c0&gt;Pegasus.identifyMyself&lt;/c0&gt; returns the string &lt;c1&gt;I am a horse.&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091521Z" creationid="pingfangx" creationdate="20190102T091521Z">
        <seg>方法 &lt;c0&gt;Pegasus.identifyMyself&lt;/c0&gt; 返回字符串 &lt;c1&gt;I am a horse.&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method &lt;c0&gt;Runnable.run&lt;/c0&gt; does not return a value, whereas &lt;c1&gt;Callable&lt;V&gt;.call&lt;/c1&gt; does.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082134Z" creationid="pingfangx" creationdate="20181228T082134Z">
        <seg>方法 &lt;c0&gt;Runnable.run&lt;/c0&gt; 不返回值，而 &lt;c1&gt;Callable&lt;V&gt;.call&lt;/c1&gt; 则返回值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method &lt;c0&gt;compareTo&lt;/c0&gt; causes the method &lt;c1&gt;StandardDeck.sort()&lt;/c1&gt; to sort the deck of cards first by suit, and then by rank.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T070810Z" creationid="pingfangx" creationdate="20190102T065627Z">
        <seg>方法 &lt;c0&gt;compareTo&lt;/c0&gt; 使方法 &lt;c1&gt;StandardDeck.sort()&lt;/c1&gt; 首先按花色对牌进行排序，然后按点数排序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method &lt;c0&gt;invoke(Callable&lt;T&gt;)&lt;/c0&gt; will be invoked because that method returns a value; the method &lt;c1&gt;invoke(Runnable)&lt;/c1&gt; does not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082227Z" creationid="pingfangx" creationdate="20181228T082227Z">
        <seg>将调用方法 &lt;c0&gt;invoke(Callable&lt;T&gt;)&lt;/c0&gt;，因为该方法返回一个值;方法 &lt;c1&gt;invoke(Runnable)&lt;/c1&gt; 则没有。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method &lt;c0&gt;operateBinary&lt;/c0&gt; performs a mathematical operation on two integer operands.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075642Z" creationid="pingfangx" creationdate="20181228T075642Z">
        <seg>方法 &lt;c0&gt;operateBinary&lt;/c0&gt; 对两个整型操作数执行数学运算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method &lt;c0&gt;printOriginalNumbers&lt;/c0&gt; accesses the parameters &lt;c1&gt;phoneNumber1&lt;/c1&gt; and &lt;c2&gt;phoneNumber2&lt;/c2&gt; of the method &lt;c3&gt;validatePhoneNumber&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123239Z" creationid="pingfangx" creationdate="20180705T123229Z">
        <seg>方法 &lt;c0&gt;printOriginalNumbers&lt;/c0&gt; 访问方法 &lt;c3&gt;validatePhoneNumber&lt;/c3&gt; 的参数 &lt;c1&gt;phoneNumber1&lt;/c1&gt; 和 &lt;c2&gt;phoneNumber2&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method body, enclosed between bracesthe method's code, including the declaration of local variables, goes here.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065002Z" creationid="pingfangx" creationdate="20180525T065002Z">
        <seg>方法体，包含在括号之间的方法的代码，包括局部变量的声明，都在这里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method can be called either with an array or with a sequence of arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033110Z" creationid="pingfangx" creationdate="20180601T033110Z">
        <seg>该方法可以通过一个数组或一系列参数来调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method can then be called with any number of that parameter, including none.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033044Z" creationid="pingfangx" creationdate="20180601T033044Z">
        <seg>然后可以用任意数量的该参数调用该方法，包括无。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method changes the x and y coordinates of the object that &lt;c2&gt;circle&lt;/c2&gt; references (i.e., &lt;c3&gt;myCircle&lt;/c3&gt;) by 23 and 56, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034411Z" creationid="pingfangx" creationdate="20180601T034411Z">
        <seg>该方法将 &lt;c2&gt;circle&lt;/c2&gt; 引用的对象(即 &lt;c3&gt;myCircle&lt;/c3&gt;)的 x 和 y 坐标分别改为 23 和 56。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method invocation &lt;c0&gt;btn.setOnAction&lt;/c0&gt; specifies what happens when you select the button represented by the &lt;c1&gt;btn&lt;/c1&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075312Z" creationid="pingfangx" creationdate="20181228T075312Z">
        <seg>方法调用 &lt;c0&gt;btn.setOnAction&lt;/c0&gt; 指定当您选择 &lt;c1&gt;btn&lt;/c1&gt; 对象表示的按钮时会发生什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method is final because calling non-final methods during instance initialization can cause problems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070919Z" creationid="pingfangx" creationdate="20180705T070919Z">
        <seg>该方法是 final 的，因为在实例初始化期间调用非 final 方法可能会导致问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method is so simple that it might not be worth it to define one in your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092822Z" creationid="pingfangx" creationdate="20180706T092822Z">
        <seg>该方法非常简单，在您的应用程序中定义一个方法可能不值得。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method namethe rules for field names apply to method names as well, but the convention is a little different.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064836Z" creationid="pingfangx" creationdate="20180525T064836Z">
        <seg>方法名称字段名称的规则也适用于方法名称，但约定有点不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method reference &lt;c0&gt;Person::compareByAge&lt;/c0&gt; is a reference to a static method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084658Z" creationid="pingfangx" creationdate="20181228T084658Z">
        <seg>方法引用 &lt;c0&gt;Person::compareByAge&lt;/c0&gt; 是对静态方法的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method reference &lt;c0&gt;Person::compareByAge&lt;/c0&gt; is semantically the same as the lambda expression &lt;c1&gt;(a, b) -&gt; Person.compareByAge(a, b)&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084231Z" creationid="pingfangx" creationdate="20181228T084231Z">
        <seg>方法引用 &lt;c0&gt;Person::compareByAge&lt;/c0&gt; 在语义上与 lambda 表达式 &lt;c1&gt;(a, b) -&gt; Person.compareByAge(a, b)&lt;/c1&gt; 相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method reference &lt;c0&gt;myComparisonProvider::compareByName&lt;/c0&gt; invokes the method &lt;c1&gt;compareByName&lt;/c1&gt; that is part of the object &lt;c2&gt;myComparisonProvider&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084731Z" creationid="pingfangx" creationdate="20181228T084731Z">
        <seg>方法引用 &lt;c0&gt;myComparisonProvider::compareByName&lt;/c0&gt; 调用方法 &lt;c1&gt;compareByName&lt;/c1&gt;，它是对象 &lt;c2&gt;myComparisonProvider&lt;/c2&gt; 的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method reference would invoke the method &lt;c4&gt;a.compareToIgnoreCase(b)&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084853Z" creationid="pingfangx" creationdate="20181228T084853Z">
        <seg>方法引用将调用方法 &lt;c4&gt;a.compareToIgnoreCase(b)&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method signature of this invocation of &lt;c0&gt;sort&lt;/c0&gt; is the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084059Z" creationid="pingfangx" creationdate="20181228T084059Z">
        <seg>此调用 &lt;c0&gt;sort&lt;/c0&gt; 的方法签名如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The methods in the &lt;c0&gt;Math&lt;/c0&gt; class are all static, so you call them directly from the class, like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035249Z" creationid="pingfangx" creationdate="20190103T035249Z">
        <seg>&lt;c0&gt;Math&lt;/c0&gt; 类中的方法都是静态的，因此您可以直接从类中调用它们，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The methods inherited from &lt;c5&gt;Object&lt;/c5&gt; that are discussed in this section are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100610Z" creationid="pingfangx" creationdate="20190102T100610Z">
        <seg>本节中讨论的继承自 &lt;c5&gt;Object&lt;/c5&gt; 的方法是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The methods return &lt;c1&gt;true&lt;/c1&gt; if the argument is not &lt;c2&gt;null&lt;/c2&gt; and is an object of the same type and with the same numeric value.&lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030746Z" creationid="pingfangx" creationdate="20190103T030746Z">
        <seg>如果参数不是 &lt;c2&gt;null&lt;/c2&gt;，并且是相同类型且具有相同数值的对象，则方法返回 &lt;c1&gt;true&lt;/c1&gt;。&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The modifiers &lt;c0&gt;public&lt;/c0&gt; and &lt;c1&gt;static&lt;/c1&gt; can be written in either order (&lt;c2&gt;public static&lt;/c2&gt; or &lt;c3&gt;static public&lt;/c3&gt;), but the convention is to use &lt;c4&gt;public static&lt;/c4&gt; as shown above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035645Z" creationid="pingfangx" creationdate="20180518T035645Z">
        <seg>可以按任意顺序(&lt;c2&gt;public static&lt;/c2&gt; 或 &lt;c3&gt;static public&lt;/c3&gt;)编写修饰符 &lt;c0&gt;public&lt;/c0&gt; 和 &lt;c1&gt;static&lt;/c1&gt;，但约定就是使用 &lt;c4&gt;public static&lt;/c4&gt;，如上所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The modifiers &lt;i2&gt;public&lt;/i2&gt; and &lt;i3&gt;private&lt;/i3&gt;, which determine what other classes can access &lt;c4&gt;MyClass&lt;/c4&gt;, are discussed later in this lesson.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030410Z" creationid="pingfangx" creationdate="20180525T030410Z">
        <seg>确定其他类可以访问 &lt;c4&gt;MyClass&lt;/c4&gt; 的修饰符 &lt;i2&gt;public&lt;/i2&gt; 和 &lt;i3&gt;private&lt;/i3&gt; 将在本课稍后部分讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most basic control flow statement supported by the Java programming language is the &lt;s0&gt;if-then&lt;/s0&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091306Z" creationid="pingfangx" creationdate="20180521T091306Z">
        <seg>Java 编程语言支持的最基本的控制流语句是 &lt;s0&gt;if-then&lt;/s0&gt; 语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most basic control flow statement supported by the Java programming language is the ___ statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091027Z" creationid="pingfangx" creationdate="20180521T091027Z">
        <seg>Java 编程语言支持的最基本的控制流语句是___语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most common reason for using the &lt;c0&gt;this&lt;/c0&gt; keyword is because a field is shadowed by a method or constructor parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092750Z" creationid="pingfangx" creationdate="20180601T092750Z">
        <seg>使用 &lt;c0&gt;this&lt;/c0&gt; 关键字的最常见原因是因为字段被方法或构造函数参数遮蔽。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most direct way to create a string is to write:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062857Z" creationid="pingfangx" creationdate="20190103T062857Z">
        <seg>创建字符串的最直接方法是编写：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of a parameter must be unique in its scope.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033436Z" creationid="pingfangx" creationdate="20180601T033436Z">
        <seg>参数的名称在其范围内必须是唯一的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of an interface to implement or a class to extend.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061530Z" creationid="pingfangx" creationdate="20180706T061530Z">
        <seg>要实现的接口的名称或要继承的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the class's parent (superclass), if any, preceded by the keyword &lt;i0&gt;extends&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030901Z" creationid="pingfangx" creationdate="20180525T030901Z">
        <seg>该类的父类（超类）的名称（如果有的话）以关键字 &lt;i0&gt;extends&lt;/i0&gt; 开头。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the constructor provides the name of the class to instantiate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T043009Z" creationid="pingfangx" creationdate="20180601T043009Z">
        <seg>构造函数的名称提供了要实例化的类的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name preceding &lt;c0&gt;super&lt;/c0&gt; (in this example, &lt;c1&gt;FlyCar&lt;/c1&gt; or &lt;c2&gt;OperateCar&lt;/c2&gt;) must refer to a direct superinterface that defines or inherits a default for the invoked method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092030Z" creationid="pingfangx" creationdate="20190102T092030Z">
        <seg>&lt;c0&gt;super&lt;/c0&gt; 之前的名称(在此示例中，&lt;c1&gt;FlyCar&lt;/c1&gt; 或 &lt;c2&gt;OperateCar&lt;/c2&gt;)必须引用直接超接口，该接口用于定义或继承调用方法的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The names &lt;c0&gt;gearRatio&lt;/c0&gt; and &lt;c1&gt;currentGear&lt;/c1&gt; are prime examples of this convention.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074538Z" creationid="pingfangx" creationdate="20180518T074538Z">
        <seg>名称 &lt;c0&gt;gearRatio&lt;/c0&gt; 和 &lt;c1&gt;currentGear&lt;/c1&gt; 是这个约定的主要例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The names &lt;c2&gt;i&lt;/c2&gt;, &lt;c3&gt;j&lt;/c3&gt;, and &lt;c4&gt;k&lt;/c4&gt; are often used to control &lt;c5&gt;for&lt;/c5&gt; loops; declaring them within the initialization expression limits their life span and reduces errors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085457Z" creationid="pingfangx" creationdate="20180521T085457Z">
        <seg>名称 &lt;c2&gt;i&lt;/c2&gt;，&lt;c3&gt;j&lt;/c3&gt; 和 &lt;c4&gt;k&lt;/c4&gt; 通常用于控制 &lt;c5&gt;for&lt;/c5&gt; 循环;在初始化表达式中声明它们会限制它们的使用寿命并减少错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The new operator returns a reference to the object that was created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082202Z" creationid="pingfangx" creationdate="20180705T082202Z">
        <seg>new 运算符返回对已创建对象的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next few lines assign values to each element of the array:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041816Z" creationid="pingfangx" creationdate="20180521T041816Z">
        <seg>接下来的几行为数组的每个元素赋值：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next line, &lt;c2&gt;System.out.println(i++);&lt;/c2&gt; evaluates to the current value (6), then increments by one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073409Z" creationid="pingfangx" creationdate="20180521T073409Z">
        <seg>下一行，&lt;c2&gt;System.out.println(i++);&lt;/c2&gt; 计算当前值(6)，然后递增 1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next section, &lt;a1&gt;What Can Java Technology Do?&lt;/a1&gt; highlights some of the functionality provided by the API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033411Z" creationid="pingfangx" creationdate="20180518T033411Z">
        <seg>下一节 &lt;a1&gt;What Can Java Technology Do?&lt;/a1&gt; 强调了 API 提供的一些功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next statement in the &lt;c1&gt;ArrayDemo&lt;/c1&gt; program allocates an array with enough memory for 10 integer elements and assigns the array to the &lt;c2&gt;anArray&lt;/c2&gt; variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041158Z" creationid="pingfangx" creationdate="20180521T041158Z">
        <seg>&lt;c1&gt;ArrayDemo&lt;/c1&gt; 程序中的下一个语句为 10 个整型元素分配一个具有足够内存的数组，并将该数组赋值给 &lt;c2&gt;anArray&lt;/c2&gt; 变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next table lists exponential and logarithmic methods of the &lt;c0&gt;Math&lt;/c0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035925Z" creationid="pingfangx" creationdate="20190103T035925Z">
        <seg>下表列出了 &lt;c0&gt;Math&lt;/c0&gt; 类的指数和对数方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The object &lt;c6&gt;studentName&lt;/c6&gt; is not eligible either because &lt;c7&gt;students[0]&lt;/c7&gt; still refers to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083611Z" creationid="pingfangx" creationdate="20180705T083611Z">
        <seg>对象 &lt;c6&gt;studentName&lt;/c6&gt; 不符合条件，因为 &lt;c7&gt;students[0]&lt;/c7&gt; 仍然引用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The object is unreferenced, and its resources are free to be recycled by the Java Virtual Machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T082704Z" creationid="pingfangx" creationdate="20180601T082704Z">
        <seg>该对象未被引用，其资源可以被 Java 虚拟机自由回收。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only difference is that the prefix version (&lt;c3&gt;++result&lt;/c3&gt;) evaluates to the incremented value, whereas the postfix version (&lt;c4&gt;result++&lt;/c4&gt;) evaluates to the original value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065347Z" creationid="pingfangx" creationdate="20180521T065347Z">
        <seg>唯一的区别是前缀版本(&lt;c3&gt;++result&lt;/c3&gt;)计算为递增值，而后缀版本(&lt;c4&gt;result++&lt;/c4&gt;)计算为原始值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only methods that have implementations are default and static methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074425Z" creationid="pingfangx" creationdate="20190102T074425Z">
        <seg>具有实现的唯一方法是默认和静态方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only required elements of a method declaration are the method's return type, name, a pair of parentheses, &lt;c0&gt;()&lt;/c0&gt;, and a body between braces, &lt;c1&gt;{}&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064751Z" creationid="pingfangx" creationdate="20180525T064751Z">
        <seg>方法声明的唯一必需元素是方法的返回类型，名称，一对括号，&lt;c0&gt;()&lt;/c0&gt; 以及大括号 &lt;c1&gt;{}&lt;/c1&gt; 之间的主体。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only symbol that might look new to you is "&lt;c0&gt;%&lt;/c0&gt;", which divides one operand by another and returns the remainder as its result.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064358Z" creationid="pingfangx" creationdate="20180521T064358Z">
        <seg>唯一可能看起来很新的符号是 "&lt;c0&gt;%&lt;/c0&gt;"，它将一个操作数除以另一个操作数，并返回余数作为结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only users of this nested class will be instances of</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021001Z" creationid="pingfangx" creationdate="20190102T020947Z">
        <seg>The only users of this nested class will be instances of</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The operation itself is specified by an instance of &lt;c1&gt;IntegerMath&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075650Z" creationid="pingfangx" creationdate="20181228T075650Z">
        <seg>操作本身由 &lt;c1&gt;IntegerMath&lt;/c1&gt; 的实例指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The operations &lt;c0&gt;filter&lt;/c0&gt;, &lt;c1&gt;map&lt;/c1&gt;, and &lt;c2&gt;forEach&lt;/c2&gt; are &lt;e3&gt;aggregate operations&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074835Z" creationid="pingfangx" creationdate="20181228T074805Z">
        <seg>操作 &lt;c0&gt;filter&lt;/c0&gt;，&lt;c1&gt;map&lt;/c1&gt; 和 &lt;c2&gt;forEach&lt;/c2&gt; 是 &lt;e3&gt;聚合操作（aggregate operations）&lt;/e3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The operators discussed in this section are less commonly used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070651Z" creationid="pingfangx" creationdate="20180521T070651Z">
        <seg>本节讨论的运算符不太常用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The operators in the following table are listed according to precedence order.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062341Z" creationid="pingfangx" creationdate="20180521T062341Z">
        <seg>下表中的运算符按优先顺序列出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The optional integer argument specifies the maximum size of the returned array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073050Z" creationid="pingfangx" creationdate="20190103T073050Z">
        <seg>可选的整数参数指定返回数组的最大大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output from the program is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081155Z" creationid="pingfangx" creationdate="20180521T081155Z">
        <seg>程序的输出是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output from this code is &lt;c0&gt;8&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082622Z" creationid="pingfangx" creationdate="20180521T082622Z">
        <seg>该代码的输出是 &lt;c0&gt;8&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output from this program is &lt;c0&gt;Eggs&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075902Z" creationid="pingfangx" creationdate="20190103T075902Z">
        <seg>该程序的输出是 &lt;c0&gt;Eggs&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output from this program is as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090821Z" creationid="pingfangx" creationdate="20190102T090821Z">
        <seg>该程序的输出如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output from this program is the same as before:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085634Z" creationid="pingfangx" creationdate="20180521T085634Z">
        <seg>该程序的输出与以前相同：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output from this program is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021725Z" creationid="pingfangx" creationdate="20180521T021725Z">
        <seg>这个程序的输出是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output is shown within double quotes in the embedded comment:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033614Z" creationid="pingfangx" creationdate="20190103T033614Z">
        <seg>输出显示在嵌入注释中的双引号内：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101133Z" creationid="pingfangx" creationdate="20180705T101133Z">
        <seg>输出是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output of this program is as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040451Z" creationid="pingfangx" creationdate="20190103T040431Z">
        <seg>该程序的输出如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output of this program is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085239Z" creationid="pingfangx" creationdate="20180521T085239Z">
        <seg>这个程序的输出是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output of this test prints the ending pedal cadence, speed, and gear for the two bicycles:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062728Z" creationid="pingfangx" creationdate="20180518T062728Z">
        <seg>该测试的输出结果为两辆自行车打印结束踏板节奏，速度和齿轮：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The overriding method has the same name, number and type of parameters, and return type as the method that it overrides.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085906Z" creationid="pingfangx" creationdate="20190102T085906Z">
        <seg>覆盖方法与它覆盖的方法具有相同的名称，参数的数量和类型，和返回类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The parameter list in parenthesisa comma-delimited list of input parameters, preceded by their data types, enclosed by parentheses, &lt;c0&gt;()&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064931Z" creationid="pingfangx" creationdate="20180525T064931Z">
        <seg>括号中的参数列表输入参数的逗号分隔列表，以它们的数据类型开头，由括号括起来 &lt;c0&gt;()&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The parameters are used in the method body and at runtime will take on the values of the arguments that are passed in.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032238Z" creationid="pingfangx" creationdate="20180601T032238Z">
        <seg>这些参数在方法主体中使用，并且在运行时将采用传入的参数的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The pound sign (#) denotes a digit, the comma is a placeholder for the grouping separator, and the period is a placeholder for the decimal separator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034201Z" creationid="pingfangx" creationdate="20190103T034201Z">
        <seg>井号(#)表示一个数字，逗号是分组分隔符的占位符，句点是小数分隔符的占位符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The preceding class declaration is a minimal one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030305Z" creationid="pingfangx" creationdate="20180525T030305Z">
        <seg>前面的类声明是最小的一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The preceding program declares an array (named &lt;c0&gt;anArray&lt;/c0&gt;) with the following line of code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T033213Z" creationid="pingfangx" creationdate="20180521T033213Z">
        <seg>上述程序使用以下代码行来声明一个数组(名为 &lt;c0&gt;anArray&lt;/c0&gt;)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The predefined annotation types defined in &lt;c0&gt;java.lang&lt;/c0&gt; are &lt;c1&gt;@Deprecated&lt;/c1&gt;, &lt;c2&gt;@Override&lt;/c2&gt;, and &lt;c3&gt;@SuppressWarnings&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033301Z" creationid="pingfangx" creationdate="20190102T033301Z">
        <seg>&lt;c0&gt;java.lang&lt;/c0&gt; 中定义的预定义注解类型是 &lt;c1&gt;@Deprecated&lt;/c1&gt;，&lt;c2&gt;@Override&lt;/c2&gt; 和 &lt;c3&gt;@SuppressWarnings&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The prefix &lt;c0&gt;0x&lt;/c0&gt; indicates hexadecimal and &lt;c1&gt;0b&lt;/c1&gt; indicates binary:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082901Z" creationid="pingfangx" creationdate="20180518T082901Z">
        <seg>前缀 &lt;c0&gt;0x&lt;/c0&gt; 表示十六进制，&lt;c1&gt;0b&lt;/c1&gt; 表示二进制：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The previous example applies an annotation to a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041108Z" creationid="pingfangx" creationdate="20190102T041108Z">
        <seg>前面的示例将注解应用于方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The previous section, &lt;a0&gt;Anonymous Classes&lt;/a0&gt;, shows you how to implement a base class without giving it a name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T083642Z" creationid="pingfangx" creationdate="20180706T083642Z">
        <seg>上一节 &lt;a0&gt;匿名类&lt;/a0&gt;，向您展示了如何在不给它命名的情况下实现某个基类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The principal operations on a &lt;c0&gt;StringBuilder&lt;/c0&gt; that are not available in &lt;c1&gt;String&lt;/c1&gt; are the &lt;c2&gt;append()&lt;/c2&gt; and &lt;c3&gt;insert()&lt;/c3&gt; methods, which are overloaded so as to accept data of any type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081837Z" creationid="pingfangx" creationdate="20190103T081837Z">
        <seg> &lt;c0&gt;StringBuilder&lt;/c0&gt; 中有而 &lt;c1&gt;String&lt;/c1&gt; 中没有的主要操作是 &lt;c2&gt;append()&lt;/c2&gt; 和 &lt;c3&gt;insert()&lt;/c3&gt; 方法，它们被重载以便接受任何类型的数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The printf and format Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032125Z" creationid="pingfangx" creationdate="20190103T032125Z">
        <seg>printf 和格式方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program &lt;a0&gt;&lt;c1&gt;Problem.java&lt;/c1&gt;&lt;/a0&gt; doesn't compile.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013854Z" creationid="pingfangx" creationdate="20190102T013854Z">
        <seg>程序 &lt;a0&gt;&lt;c1&gt;Problem.java&lt;/c1&gt;&lt;/a0&gt; 无法编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program &lt;a10&gt;&lt;c11&gt;SwitchDemoFallThrough&lt;/c11&gt;&lt;/a10&gt; shows statements in a &lt;c12&gt;switch&lt;/c12&gt; block that fall through.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082342Z" creationid="pingfangx" creationdate="20180521T082342Z">
        <seg>程序 &lt;a10&gt;&lt;c11&gt;SwitchDemoFallThrough&lt;/c11&gt;&lt;/a10&gt; 显示了 &lt;c12&gt;switch&lt;/c12&gt; 块中的语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program Problem.java doesn't compile.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020647Z" creationid="pingfangx" creationdate="20190102T020647Z">
        <seg>程序 Problem.java 无法编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program can be as simple as creating a deck of cards and displaying its cards.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082709Z" creationid="pingfangx" creationdate="20180705T082709Z">
        <seg>该程序可以像创建一副牌并显示其卡一样简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program displays the month corresponding to the integer &lt;c13&gt;month&lt;/c13&gt; and the months that follow in the year:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082350Z" creationid="pingfangx" creationdate="20180521T082350Z">
        <seg>该程序显示与整数 &lt;c13&gt;month&lt;/c13&gt; 对应的月份以及该年份后的月份：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program has an error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040155Z" creationid="pingfangx" creationdate="20180518T040155Z">
        <seg>该程序有错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program prints the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084619Z" creationid="pingfangx" creationdate="20190103T084619Z">
        <seg>该程序打印以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program should display &lt;c0&gt;16&lt;/c0&gt; and then exit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041549Z" creationid="pingfangx" creationdate="20190103T041542Z">
        <seg>程序应显示 &lt;c0&gt;16&lt;/c0&gt; 然后退出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program should display an error message if the user enters only one argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041557Z" creationid="pingfangx" creationdate="20190103T041557Z">
        <seg>如果用户只输入一个参数，程序应显示错误消息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program should ignore white space and punctuation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085551Z" creationid="pingfangx" creationdate="20190103T085551Z">
        <seg>该程序应忽略空格和标点符号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program steps through the string referred to by &lt;c0&gt;searchMe&lt;/c0&gt; one character at a time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080119Z" creationid="pingfangx" creationdate="20190103T075958Z">
        <seg>程序遍历 &lt;c0&gt;searchMe&lt;/c0&gt; 引用字符串的一个字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program then uses some string methods to compute the number of digits before and after the decimal point:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065435Z" creationid="pingfangx" creationdate="20190103T065435Z">
        <seg>然后程序使用一些字符串方法来计算小数点前后的位数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program uses two of these names to display the &lt;t11&gt;width&lt;/t11&gt; and the &lt;t12&gt;height&lt;/t12&gt; of &lt;t13&gt;rectOne&lt;/t13&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T074107Z" creationid="pingfangx" creationdate="20180601T074107Z">
        <seg>该程序使用其中的两个名称来显示 &lt;t13&gt;rectOne&lt;/t13&gt; 的 &lt;t11&gt;width&lt;/t11&gt; 和 &lt;t12&gt;height&lt;/t12&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program would display &lt;c0&gt;108.75&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041648Z" creationid="pingfangx" creationdate="20190103T041648Z">
        <seg>程序将显示 &lt;c0&gt;108.75&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The prompt shows your &lt;i0&gt;current directory&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034747Z" creationid="pingfangx" creationdate="20180518T034747Z">
        <seg>提示符显示您的 &lt;i0&gt;current directory&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The qualified name of a method looks like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082325Z" creationid="pingfangx" creationdate="20180705T082325Z">
        <seg>方法的限定名称如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The qualified name of an instance variable looks like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082320Z" creationid="pingfangx" creationdate="20180705T082320Z">
        <seg>实例变量的限定名称如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The range includes 0.0 but not 1.0.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040521Z" creationid="pingfangx" creationdate="20190103T040521Z">
        <seg>范围包括 0.0 但不包括 1.0。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The reference returned by the &lt;t0&gt;new&lt;/t0&gt; operator does not have to be assigned to a variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062301Z" creationid="pingfangx" creationdate="20180601T062301Z">
        <seg>由 &lt;t0&gt;new&lt;/t0&gt; 运算符返回的引用不必分配给一个变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The remaining sections provide platform-specific instructions for getting started without an integrated development environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034109Z" creationid="pingfangx" creationdate="20180518T034109Z">
        <seg>其余部分提供特定于平台的说明，以便在没有集成开发环境的情况下入门。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The responsibility of creating and using new &lt;c3&gt;Bicycle&lt;/c3&gt; objects belongs to some other class in your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062653Z" creationid="pingfangx" creationdate="20180518T062653Z">
        <seg>创建和使用新的 &lt;c3&gt;Bicycle&lt;/c3&gt; 对象的责任属于您应用程序中的某个其他类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The rest of the examples in this section use generics.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083922Z" creationid="pingfangx" creationdate="20190103T083922Z">
        <seg>本节中的其余示例使用泛型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The result of executing this statement can be illustrated in the next figure:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062543Z" creationid="pingfangx" creationdate="20180601T062543Z">
        <seg>执行此语句的结果可以在下图中说明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The return typethe data type of the value returned by the method, or &lt;c0&gt;void&lt;/c0&gt; if the method does not return a value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064822Z" creationid="pingfangx" creationdate="20180525T064822Z">
        <seg>返回类型方法返回的值的数据类型，如果该方法没有返回值，则返回 &lt;c0&gt;void&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The reverse is not necessarily true: a &lt;c0&gt;Bicycle&lt;/c0&gt; &lt;i1&gt;may be&lt;/i1&gt; a &lt;c2&gt;MountainBike&lt;/c2&gt;, but it isn't necessarily.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083339Z" creationid="pingfangx" creationdate="20190102T083239Z">
        <seg>反过来不一定正确：&lt;c0&gt;Bicycle&lt;/c0&gt; &lt;i1&gt;可能是&lt;/i1&gt; 一个 &lt;c2&gt;MountainBike&lt;/c2&gt;，但不一定如此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The robotic car example shows an interface being used as an industry standard &lt;i0&gt;Application Programming Interface (API)&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055704Z" creationid="pingfangx" creationdate="20190102T055704Z">
        <seg>机器人车辆示例显示了用作行业标准 &lt;i0&gt;应用程序编程接口(API)&lt;/i0&gt; 的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The rules and conventions for naming your variables can be summarized as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074028Z" creationid="pingfangx" creationdate="20180518T074028Z">
        <seg>命名变量的规则和约定可以总结如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The runtime system guarantees that static initialization blocks are called in the order that they appear in the source code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070445Z" creationid="pingfangx" creationdate="20180705T070445Z">
        <seg>运行时系统保证按照它们在源代码中出现的顺序调用静态初始化块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The scope of this variable extends from its declaration to the end of the block governed by the &lt;c0&gt;for&lt;/c0&gt; statement, so it can be used in the termination and increment expressions as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085320Z" creationid="pingfangx" creationdate="20180521T085320Z">
        <seg>该变量的范围从其声明扩展到由 &lt;c0&gt;for&lt;/c0&gt; 语句控制的块的末尾，因此它也可用于终止和增量表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second &lt;c1&gt;if&lt;/c1&gt; statement's test fails because 3 is not equal to 0.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091602Z" creationid="pingfangx" creationdate="20180521T091602Z">
        <seg>第二个 &lt;c1&gt;if&lt;/c1&gt; 语句的测试失败，因为 3 不等于 0。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second class, a subclass of &lt;c0&gt;Animal&lt;/c0&gt;, is called &lt;c1&gt;Cat&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090647Z" creationid="pingfangx" creationdate="20190102T090642Z">
        <seg>第二个类是 &lt;c0&gt;Animal&lt;/c0&gt; 的子类，称为 &lt;c1&gt;Cat&lt;/c1&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second column indicates whether classes in the same package as the class (regardless of their parentage) have access to the member.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041300Z" creationid="pingfangx" creationdate="20180607T041221Z">
        <seg>第二列表出与该类相同的包中的类(不管他们的亲子关系)是否有权访问该类成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second line moves &lt;t2&gt;rectTwo&lt;/t2&gt; because the &lt;t3&gt;move()&lt;/t3&gt; method assigns new values to the object's &lt;t4&gt;origin.x&lt;/t4&gt; and &lt;t5&gt;origin.y&lt;/t5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085004Z" creationid="pingfangx" creationdate="20180601T085004Z">
        <seg>第二行移动 &lt;t2&gt;rectTwo&lt;/t2&gt;，因为 &lt;t3&gt;move()&lt;/t3&gt; 方法为对象的 &lt;t4&gt;origin.x&lt;/t4&gt; 和 &lt;t5&gt; origin.y &lt;/t5&gt; 赋新的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second method deletes the character located at &lt;c1&gt;index&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082055Z" creationid="pingfangx" creationdate="20190103T082055Z">
        <seg>第二种方法删除位于 &lt;c1&gt;index&lt;/c1&gt; 的字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The section &lt;a0&gt;Interfaces&lt;/a0&gt; describes an example that involves manufacturers of computer-controlled cars who publish industry-standard interfaces that describe which methods can be invoked to operate their cars.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060447Z" creationid="pingfangx" creationdate="20190102T060447Z">
        <seg>&lt;a0&gt;Interfaces&lt;/a0&gt; 部分描述了一个涉及计算机控制汽车制造商的例子，他们发布了行业标准接口，描述了可以调用哪些方法来操作他们的汽车。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The sections listed below provide detailed instructions for compiling and running a simple "Hello World!" application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034054Z" creationid="pingfangx" creationdate="20180518T034054Z">
        <seg>下面列出的部分提供了编译和运行一个简单的 "Hello World！" 应用的详细说明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The shell window should look similar to &lt;s3&gt;the following figure&lt;/s3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034735Z" creationid="pingfangx" creationdate="20180518T034735Z">
        <seg>shell 窗口应该类似于 &lt;s3&gt;the following figure&lt;/s3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The signature of the method declared above is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065056Z" creationid="pingfangx" creationdate="20180525T065056Z">
        <seg>上面声明的方法的签名是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The signed left shift operator "&lt;c0&gt;&lt;&lt;&lt;/c0&gt;" shifts a bit pattern to the left, and the signed right shift operator "&lt;c1&gt;&gt;&gt;&lt;/c1&gt;" shifts a bit pattern to the right.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070813Z" creationid="pingfangx" creationdate="20180521T070813Z">
        <seg>带符号的左移运算符 "&lt;c0&gt;&lt;&lt;&lt;/c0&gt;" 将位模式向左移位，并且带符号的右移运算符 "&lt;c1&gt;&gt;&gt;&lt;/c1&gt;" 将位模式向右移位。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The signed long has a minimum value of -2&lt;s2&gt;63&lt;/s2&gt; and a maximum value of 2&lt;s3&gt;63&lt;/s3&gt;-1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084937Z" creationid="pingfangx" creationdate="20180518T081345Z">
        <seg>带符号的 long 的最小值为 -2&lt;s2&gt;6&lt;/s2&gt;，最大值为 2&lt;s3&gt;63&lt;/s3&gt;-1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The simplest way to make your class cloneable is to add &lt;c0&gt;implements Cloneable&lt;/c0&gt; to your class's declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101658Z" creationid="pingfangx" creationdate="20190102T101658Z">
        <seg>使类可克隆的最简单方法是将 &lt;c0&gt;implements Cloneable&lt;/c0&gt; 添加到类的声明中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The size of the array is not part of its type (which is why the brackets are empty).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T033612Z" creationid="pingfangx" creationdate="20180521T033612Z">
        <seg>数组的大小不是其类型的一部分(这就是括号为空的原因)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The smallest byte value is -128
The smallest short value is -32768
The smallest integer value is -2147483648
The smallest long value is -9223372036854775808
The smallest float value is 1.4E-45
The smallest double value is 4.9E-324</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041827Z" creationid="pingfangx" creationdate="20190103T041827Z">
        <seg>The smallest byte value is -128
The smallest short value is -32768
The smallest integer value is -2147483648
The smallest long value is -9223372036854775808
The smallest float value is 1.4E-45
The smallest double value is 4.9E-324</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The statements inside your source files are generally executed from top to bottom, in the order that they appear.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080547Z" creationid="pingfangx" creationdate="20180521T080547Z">
        <seg>源文件中的语句通常按照它们出现的顺序从上到下执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The static method in Animal
The instance method in Cat</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090822Z" creationid="pingfangx" creationdate="20190102T090822Z">
        <seg>The static method in Animal
The instance method in Cat</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The substring begins at the specified &lt;c0&gt;beginIndex&lt;/c0&gt; and extends to the character at index &lt;c1&gt;endIndex - 1&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072702Z" creationid="pingfangx" creationdate="20190103T072702Z">
        <seg>子字符串从指定的 &lt;c0&gt;beginIndex&lt;/c0&gt; 开始，并扩展到索引 &lt;c1&gt;endIndex - 1&lt;/c1&gt; 处的字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The switch Statement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072442Z" creationid="pingfangx" creationdate="20180518T072442Z">
        <seg>switch 语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The switch Statement (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081451Z" creationid="pingfangx" creationdate="20180521T081451Z">
        <seg>The switch Statement (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The syntax for calling a superclass constructor is</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095523Z" creationid="pingfangx" creationdate="20190102T095523Z">
        <seg>调用超类构造函数的语法是</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The syntax for creating a subclass is simple.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063508Z" creationid="pingfangx" creationdate="20180518T063508Z">
        <seg>创建子类的语法很简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The syntax for declaring a local variable is similar to declaring a field (for example, &lt;c2&gt;int count = 0;&lt;/c2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073554Z" creationid="pingfangx" creationdate="20180518T073554Z">
        <seg>声明局部变量的语法类似于声明一个字段(例如，&lt;c2&gt;int count = 0;&lt;/c2&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The syntax for doing this is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024840Z" creationid="pingfangx" creationdate="20190102T024840Z">
        <seg>这样做的语法是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The syntax for these two &lt;a0&gt;&lt;c1&gt;java.io.PrintStream&lt;/c1&gt; &lt;/a0&gt; methods is the same:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032441Z" creationid="pingfangx" creationdate="20190103T032441Z">
        <seg>这两个 &lt;a0&gt;&lt;c1&gt;java.io.PrintStream&lt;/c1&gt; &lt;/a0&gt; 方法的语法是相同的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The syntax of an anonymous class expression is like the invocation of a constructor, except that there is a class definition contained in a block of code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061948Z" creationid="pingfangx" creationdate="20180706T061204Z">
        <seg>匿名类表达式的语法类似于构造函数的调用，只是在代码块中包含类定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The syntax of the Java programming language will look new to you, but the design of this class is based on the previous discussion of bicycle objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062558Z" creationid="pingfangx" creationdate="20180518T062558Z">
        <seg>Java 编程语言的语法对你来说看起来很新，但这个类的设计是基于前面对自行车对象的讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The system finds all members that match the specified criteria.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085253Z" creationid="pingfangx" creationdate="20180706T085253Z">
        <seg>系统查找符合指定条件的所有成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The system performs the specified action on all matching members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085257Z" creationid="pingfangx" creationdate="20180706T085257Z">
        <seg>系统对所有匹配成员执行指定的操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The table in &lt;a0&gt;Overriding and Hiding Methods&lt;/a0&gt; section shows the effect of declaring a method with the same signature as a method in the superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023255Z" creationid="pingfangx" creationdate="20190103T023255Z">
        <seg>&lt;a0&gt;Overriding and Hiding Methods&lt;/a0&gt; 部分中的表显示了使用与超类中的方法相同的签名声明方法的效果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The term "class variable" is another name for &lt;s0&gt;static field&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061954Z" creationid="pingfangx" creationdate="20180521T061954Z">
        <seg>术语 "类变量" 是 &lt;s0&gt;static field&lt;/s0&gt; 的另一个名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The term "class variable" is another name for ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061814Z" creationid="pingfangx" creationdate="20180521T061814Z">
        <seg>术语 "类变量" 是___的另一个名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The term "instance variable" is another name for &lt;s0&gt;non-static field&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061950Z" creationid="pingfangx" creationdate="20180521T061950Z">
        <seg>术语 "实例变量" 是 &lt;s0&gt;non-static field&lt;/s0&gt; 的另一个名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The term "instance variable" is another name for ___.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061805Z" creationid="pingfangx" creationdate="20180521T061805Z">
        <seg>术语 "实例变量" 是___的另一个名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The term API stands for &lt;s0&gt;Application Programming Interface&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064930Z" creationid="pingfangx" creationdate="20180518T064930Z">
        <seg>术语 API 代表 &lt;s0&gt;Application Programming Interface&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The term API stands for ___?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064748Z" creationid="pingfangx" creationdate="20180518T064748Z">
        <seg>术语 API 代表___？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The terms"Java Virtual Machine" and "JVM" mean a Virtual Machine for the Java platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033439Z" creationid="pingfangx" creationdate="20180518T033439Z">
        <seg>术语 "Java虚拟机" 和 "JVM" 是指用于 Java 平台的虚拟机。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The third column indicates whether subclasses of the class declared outside this package have access to the member.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041237Z" creationid="pingfangx" creationdate="20180607T041237Z">
        <seg>第三列表示在此包外部声明的类的子类是否有权访问该类成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The three &lt;c3&gt;int&lt;/c3&gt; arguments specify the starting position in the source array, the starting position in the destination array, and the number of array elements to copy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042659Z" creationid="pingfangx" creationdate="20180521T042659Z">
        <seg>三个 &lt;c3&gt;int&lt;/c3&gt; 参数指定源数组中的起始位置，目标数组中的起始位置以及要复制的数组元素的数量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The three expressions of the &lt;c0&gt;for&lt;/c0&gt; loop are optional; an infinite loop can be created as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085521Z" creationid="pingfangx" creationdate="20180521T085521Z">
        <seg>&lt;c0&gt;for&lt;/c0&gt; 循环的三个表达式是可选的;可以创建一个无限循环如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The toString() Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104006Z" creationid="pingfangx" creationdate="20190102T104006Z">
        <seg>toString() 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The two &lt;c0&gt;Object&lt;/c0&gt; arguments specify the array to copy &lt;i1&gt;from&lt;/i1&gt; and the array to copy &lt;i2&gt;to&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042639Z" creationid="pingfangx" creationdate="20180521T042639Z">
        <seg>两个 &lt;c0&gt;Object&lt;/c0&gt; 参数指定要 &lt;i1&gt;from&lt;/i1&gt; 的数组以及将 &lt;i2&gt;to&lt;/i2&gt; 的数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The two objects (the &lt;c1&gt;Integer&lt;/c1&gt; and the &lt;c2&gt;Long&lt;/c2&gt;) have different types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041810Z" creationid="pingfangx" creationdate="20190103T041805Z">
        <seg>两个对象(&lt;c1&gt;Integer&lt;/c1&gt; 和 &lt;c2&gt;Long&lt;/c2&gt;)具有不同的类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The two objects &lt;t5&gt;rectOne&lt;/t5&gt; and &lt;t6&gt;rectTwo&lt;/t6&gt; in the &lt;t7&gt;CreateObjectDemo&lt;/t7&gt; program have different &lt;t8&gt;origin&lt;/t8&gt;, &lt;t9&gt;width&lt;/t9&gt;, and &lt;t10&gt;height&lt;/t10&gt; fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T075922Z" creationid="pingfangx" creationdate="20180601T075922Z">
        <seg>&lt;t7&gt;CreateObjectDemo&lt;/t7&gt; 程序中的两个对象 &lt;t5&gt;rectOne&lt;/t5&gt; 和 &lt;t6&gt;rectTwo&lt;/t6&gt; 具有不同的&lt;t8&gt;origin&lt;/t8&gt;，&lt;t9&gt;width&lt;/t9&gt; ，和 &lt;t10&gt;height&lt;/t10&gt; 字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The two subclasses override the &lt;c3&gt;printDescription&lt;/c3&gt; method and print unique information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094025Z" creationid="pingfangx" creationdate="20190102T094025Z">
        <seg>这两个子类覆盖 &lt;c3&gt;printDescription&lt;/c3&gt; 方法并打印唯一信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The two-argument constructor calls the four-argument constructor, passing in the width and height but always using the 0,0 coordinates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020358Z" creationid="pingfangx" creationdate="20180607T020358Z">
        <seg>双参数构造函数调用四参数构造函数，传入宽度和高度，但始终使用 0,0 坐标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The unary bitwise complement operator "&lt;c0&gt;~&lt;/c0&gt;" inverts a bit pattern; it can be applied to any of the integral types, making every "0" a "1" and every "1" a "0".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070733Z" creationid="pingfangx" creationdate="20180521T070733Z">
        <seg>一元位运算符 "&lt;c0&gt;~&lt;/c0&gt;" 将位模式反转;它可以应用于任何整型，使得每个 "0" 为 "1"，每个 "1" 为 "0"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The unary operators require only one operand; they perform various operations such as incrementing/decrementing a value by one, negating an expression, or inverting the value of a boolean.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064902Z" creationid="pingfangx" creationdate="20180521T064902Z">
        <seg>一元运算符只需要一个操作数;它们执行各种操作，例如将值递增/递减 1，否定表达式或反转布尔值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The unlabeled form skips to the end of the innermost loop's body and evaluates the &lt;c4&gt;boolean&lt;/c4&gt; expression that controls the loop.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090404Z" creationid="pingfangx" creationdate="20180521T090404Z">
        <seg>无标签形式跳到最内层循环体的末尾，并计算控制循环的 &lt;c4&gt;boolean&lt;/c4&gt; 表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The unsigned right shift operator "&lt;c2&gt;&gt;&gt;&gt;&lt;/c2&gt;" shifts a zero into the leftmost position, while the leftmost position after &lt;c3&gt;"&gt;&gt;"&lt;/c3&gt; depends on sign extension.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070917Z" creationid="pingfangx" creationdate="20180521T070917Z">
        <seg>无符号右移运算符 "&lt;c2&gt;&gt;&gt;&gt;&lt;/c2&gt;" 将零移动到最左边的位置，而 &lt;c3&gt;"&gt;&gt;"&lt;/c3&gt; 之后的最左边位置取决于符号扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The use of lastIndexOf and substring in the extension method in the Filename class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075100Z" creationid="pingfangx" creationdate="20190103T075100Z">
        <seg>在 Filename 类的扩展方法中使用 lastIndexOf 和 substring。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The use of the at sign (&lt;c6&gt;@&lt;/c6&gt;) in both Javadoc comments and in annotations is not coincidental: they are related conceptually.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033355Z" creationid="pingfangx" creationdate="20190102T033355Z">
        <seg>在 Javadoc 注解和注释中使用 at 符号(&lt;c6&gt;@&lt;/c6&gt;)并非巧合：它们在概念上是相关的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value of e is 2.7183
exp(11.635) is 112983.831
log(11.635) is 2.454
pow(11.635, 2.760) is 874.008
sqrt(11.635) is 3.411</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040147Z" creationid="pingfangx" creationdate="20190103T040147Z">
        <seg>The value of e is 2.7183
exp(11.635) is 112983.831
log(11.635) is 2.454
pow(11.635, 2.760) is 874.008
sqrt(11.635) is 3.411</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value of i is: 461012</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033051Z" creationid="pingfangx" creationdate="20190103T033051Z">
        <seg>The value of i is: 461012</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value of pi is 3.1416
The sine of 45.0 degrees is 0.7071
The cosine of 45.0 degrees is 0.7071
The tangent of 45.0 degrees is 1.0000
The arcsine of 0.7071 is 45.0000 degrees
The arccosine of 0.7071 is 45.0000 degrees
The arctangent of 1.0000 is 45.0000 degrees</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040451Z" creationid="pingfangx" creationdate="20190103T040451Z">
        <seg>The value of pi is 3.1416
The sine of 45.0 degrees is 0.7071
The cosine of 45.0 degrees is 0.7071
The tangent of 45.0 degrees is 1.0000
The arcsine of 0.7071 is 45.0000 degrees
The arccosine of 0.7071 is 45.0000 degrees
The arctangent of 1.0000 is 45.0000 degrees</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value of the &lt;c0&gt;@Repeatable&lt;/c0&gt; meta-annotation, in parentheses, is the type of the container annotation that the Java compiler generates to store repeating annotations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041206Z" creationid="pingfangx" creationdate="20190102T041206Z">
        <seg>括号中的 &lt;c0&gt;@Repeatable&lt;/c0&gt; 元注解的值是 Java 编译器为存储重复注解而生成的容器注解的类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value passed into each of these methods is an angle expressed in radians.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040244Z" creationid="pingfangx" creationdate="20190103T040244Z">
        <seg>传递给每个方法的值是以弧度表示的角度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value returned by &lt;c0&gt;hashCode()&lt;/c0&gt; is the object's hash code, which is the object's memory address in hexadecimal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103902Z" creationid="pingfangx" creationdate="20190102T103902Z">
        <seg>&lt;c0&gt;hashCode()&lt;/c0&gt; 返回的值是对象的哈希码，它是十六进制的对象的内存地址。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The variable &lt;c4&gt;x&lt;/c4&gt; defined as a parameter of the method &lt;c5&gt;methodInFirstLevel&lt;/c5&gt; shadows the variable of the inner class &lt;c6&gt;FirstLevel&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091633Z" creationid="pingfangx" creationdate="20180705T091633Z">
        <seg>定义为方法 &lt;c5&gt;methodInFirstLevel&lt;/c5&gt; 的参数的变量 &lt;c4&gt;x&lt;/c4&gt; 会遮蔽内部类 &lt;c6&gt;FirstLevel&lt;/c6&gt; 的变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The variable declaration might look like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T035425Z" creationid="pingfangx" creationdate="20190102T035425Z">
        <seg>变量声明可能如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The variable must be equal to one of the values that have been predefined for it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015240Z" creationid="pingfangx" creationdate="20190102T015240Z">
        <seg>变量必须等于为其预定义的值之一。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The version of the hidden static method that gets invoked depends on whether it is invoked from the superclass or the subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090621Z" creationid="pingfangx" creationdate="20190102T090621Z">
        <seg>被调用的隐藏静态方法的版本取决于它是从超类还是从子类调用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The version of the overridden instance method that gets invoked is the one in the subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090556Z" creationid="pingfangx" creationdate="20190102T090556Z">
        <seg>被调用的重写实例方法的版本是子类中的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The while and do-while Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072444Z" creationid="pingfangx" creationdate="20180518T072444Z">
        <seg>while 和 do-while 语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The while and do-while Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082821Z" creationid="pingfangx" creationdate="20180521T082821Z">
        <seg>The while and do-while Statements (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then &lt;c2&gt;substring&lt;/c2&gt; uses the return value of &lt;c3&gt;lastIndexOf&lt;/c3&gt; to extract the file name extension  that is, the substring from the period to the end of the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075043Z" creationid="pingfangx" creationdate="20190103T075043Z">
        <seg>然后 &lt;c2&gt;substring&lt;/c2&gt; 使用 &lt;c3&gt;lastIndexOf&lt;/c3&gt; 的返回值来提取文件扩展名也就是说，从字符串的句点到结尾的子字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then &lt;c4&gt;circle&lt;/c4&gt; is assigned a reference to a new &lt;c5&gt;Circle&lt;/c5&gt; object with &lt;c6&gt;x = y = 0&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034432Z" creationid="pingfangx" creationdate="20180601T034432Z">
        <seg>然后 &lt;c4&gt;circle&lt;/c4&gt; 被赋予一个 &lt;c6&gt;x = y = 0&lt;/c6&gt; 的新 &lt;c5&gt;Circle&lt;/c5&gt; 对象的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then convert the string back into a string builder using the &lt;c5&gt;StringBuilder(String str)&lt;/c5&gt; constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082551Z" creationid="pingfangx" creationdate="20190103T082551Z">
        <seg>然后使用 &lt;c5&gt;StringBuilder(String str)&lt;/c5&gt; 构造函数将 string 转换回 string builder。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then the original object references &lt;c8&gt;ObjExternal&lt;/c8&gt; and the clone references a clone of &lt;c9&gt;ObjExternal&lt;/c9&gt;, so that the object and its clone are truly independent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101847Z" creationid="pingfangx" creationdate="20190102T101847Z">
        <seg>然后原始对象引用 &lt;c8&gt;ObjExternal&lt;/c8&gt;，并且克隆引用 &lt;c9&gt;ObjExternal&lt;/c9&gt; 的克隆，以便对象及其克隆真正独立。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, create the inner object within the outer object with this syntax:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091324Z" creationid="pingfangx" creationdate="20180705T091324Z">
        <seg>然后，使用以下语法在外部对象中创建内部对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, in the &lt;b2&gt; Save As&lt;/b2&gt; dialog box:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034637Z" creationid="pingfangx" creationdate="20180518T034637Z">
        <seg>然后，在 &lt;b2&gt; Save As&lt;/b2&gt; 对话框中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, you can go straight to &lt;a3&gt;Compile the Source File into a &lt;c4&gt;.class&lt;/c4&gt; File&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034521Z" creationid="pingfangx" creationdate="20180518T034521Z">
        <seg>然后，您可以直接转到 &lt;a3&gt;Compile the Source File into a &lt;c4&gt;.class&lt;/c4&gt; File&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a number of situations in software engineering when it is important for disparate groups of programmers to agree to a "contract" that spells out how their software interacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T043333Z" creationid="pingfangx" creationdate="20190102T043333Z">
        <seg>在软件工程中，有很多情况下，对于不同的程序员群体来说，同意一个 "合同" 是很重要的，它可以解释他们的软件是如何交互的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are five of these methods:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101054Z" creationid="pingfangx" creationdate="20190102T101054Z">
        <seg>这些方法有五种：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are four kinds of method references:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084322Z" creationid="pingfangx" creationdate="20181228T084322Z">
        <seg>有四种方法引用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are literally thousands of classes to choose from.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064523Z" creationid="pingfangx" creationdate="20180518T064523Z">
        <seg>有几千个类可供选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many converters, flags, and specifiers, which are documented in &lt;a1&gt;&lt;c2&gt;java.util.Formatter&lt;/c2&gt; &lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033034Z" creationid="pingfangx" creationdate="20190103T033034Z">
        <seg>有许多转换器，标志和说明符，它们记录在 &lt;a1&gt;&lt;c2&gt;java.util.Formatter&lt;/c2&gt; &lt;/a1&gt; 中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several easy ways to convert a number to a string:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065332Z" creationid="pingfangx" creationdate="20190103T065332Z">
        <seg>有几种简单的方法可以将数字转换为字符串：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several kinds of variables:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T062847Z" creationid="pingfangx" creationdate="20180525T062847Z">
        <seg>有几种变量：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several meta-annotation types defined in &lt;c1&gt;java.lang.annotation&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033837Z" creationid="pingfangx" creationdate="20190102T033837Z">
        <seg>在 &lt;c1&gt;java.lang.annotation&lt;/c1&gt; 中定义了几种元注解类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several methods available in the Reflection API that can be used to retrieve annotations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041308Z" creationid="pingfangx" creationdate="20190102T041308Z">
        <seg>Reflection API 中有几种可用于获取注解的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are some extra requirements for &lt;c4&gt;Double&lt;/c4&gt; and &lt;c5&gt;Float&lt;/c5&gt; objects that are described in the Java API documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030756Z" creationid="pingfangx" creationdate="20190103T030756Z">
        <seg>Java API 文档中描述了 &lt;c4&gt;Double&lt;/c4&gt; 和 &lt;c5&gt;Float&lt;/c5&gt; 对象的一些额外要求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are some situations where you want to apply the same annotation to a declaration or type use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041002Z" creationid="pingfangx" creationdate="20190102T041002Z">
        <seg>在某些情况下，您希望将相同的注解应用于声明或类型用途。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are third parties who have done the work for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040917Z" creationid="pingfangx" creationdate="20190102T040917Z">
        <seg>有第三方为你完成了这项工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three reasons that you might use a &lt;c0&gt;Number&lt;/c0&gt; object rather than a primitive:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030252Z" creationid="pingfangx" creationdate="20190103T030252Z">
        <seg>有三个原因应该使用 &lt;c0&gt;Number&lt;/c0&gt; 对象而不是基本类型：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are times, however, when you need to use a char as an objectfor example, as a method argument where an object is expected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T043003Z" creationid="pingfangx" creationdate="20190103T043003Z">
        <seg>但是，有时候需要使用 char 作为对象 - 例如，作为期望对象的方法参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two additional types of inner classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101332Z" creationid="pingfangx" creationdate="20180705T101332Z">
        <seg>还有两种类型的内部类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two alternatives to using a constructor to initialize instance variables: initializer blocks and final methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070640Z" creationid="pingfangx" creationdate="20180705T070640Z">
        <seg>使用构造函数初始化实例变量有两种选择：初始化块和 final 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two levels of access control:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020515Z" creationid="pingfangx" creationdate="20180607T020515Z">
        <seg>有两个级别的访问控制：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two special kinds of inner classes: &lt;a0&gt;local classes&lt;/a0&gt; and &lt;a1&gt;anonymous classes&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091356Z" creationid="pingfangx" creationdate="20180705T091356Z">
        <seg>有两种特殊的内部类：&lt;a0&gt;local classes（局部类）&lt;/a0&gt; 和 &lt;a1&gt;anonymous classes（匿名类）&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are, however, reasons to use objects in place of primitives, and the Java platform provides &lt;i0&gt;wrapper&lt;/i0&gt; classes for each of the primitive data types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025925Z" creationid="pingfangx" creationdate="20190103T025200Z">
        <seg>但是，有时候需要使用对象代替基本类型，Java 平台为每个基本数据类型提供 &lt;i0&gt;包装（wrapper）&lt;/i0&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is also a discussion on when to use which approach.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023149Z" creationid="pingfangx" creationdate="20180525T023149Z">
        <seg>还有关于何时使用哪种方法的讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is an alternative to static blocks  you can write a private static method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070539Z" creationid="pingfangx" creationdate="20180705T070539Z">
        <seg>还有静态块的替代方案  你可以编写一个私有静态方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is no single correct answer here.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062015Z" creationid="pingfangx" creationdate="20180521T062015Z">
        <seg>这里没有单一的正确答案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is no special keyword designating a variable as local; that determination comes entirely from the location in which the variable is declared  which is between the opening and closing braces of a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073637Z" creationid="pingfangx" creationdate="20180518T073637Z">
        <seg>没有特殊的关键字将变量指定为局部变量;该决定完全来自变量声明的位置？它位于一个方法的开始和结束括号之间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There may be thousands of other bicycles in existence, all of the same make and model.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062227Z" creationid="pingfangx" creationdate="20180518T062227Z">
        <seg>可能有成千上万的其他自行车存在，但有所有相同的品牌和型号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There's a good chance you'll recognize them by their counterparts in basic mathematics.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064315Z" creationid="pingfangx" creationdate="20180521T064315Z">
        <seg>很有可能你会在基础数学中认识他们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There's also a special &lt;c0&gt;null&lt;/c0&gt; literal that can be used as a value for any reference type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084043Z" creationid="pingfangx" creationdate="20180518T084043Z">
        <seg>还有一个特殊的 &lt;c0&gt;null&lt;/c0&gt; 字面量，可以用作任何引用类型的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There's little you can do with a &lt;c2&gt;null&lt;/c2&gt; value beyond testing for its presence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084104Z" creationid="pingfangx" creationdate="20180518T084104Z">
        <seg>对于 &lt;c2&gt;null&lt;/c2&gt; 值，除了测试它的存在之外，您无能为力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, &lt;c3&gt;null&lt;/c3&gt; is often used in programs as a marker to indicate that some object is unavailable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084111Z" creationid="pingfangx" creationdate="20180518T084111Z">
        <seg>因此，&lt;c3&gt;null&lt;/c3&gt; 通常在程序中用作标记来指示某个对象不可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, a &lt;c3&gt;MountainBike&lt;/c3&gt; is a &lt;c4&gt;Bicycle&lt;/c4&gt; and is also an &lt;c5&gt;Object&lt;/c5&gt;, and it can be used wherever &lt;c6&gt;Bicycle&lt;/c6&gt; or &lt;c7&gt;Object&lt;/c7&gt; objects are called for.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083211Z" creationid="pingfangx" creationdate="20190102T083211Z">
        <seg>因此，&lt;c3&gt;MountainBike&lt;/c3&gt; 是 &lt;c4&gt;Bicycle&lt;/c4&gt; 并且也是 &lt;c5&gt;Object&lt;/c5&gt;，它可以在任何调用 &lt;c6&gt;Bicycle&lt;/c6&gt; 或&lt;c7&gt; Object &lt;/c7&gt; 的地方使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, a public or protected nested class inherited by a subclass has indirect access to all of the private members of the superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083021Z" creationid="pingfangx" creationdate="20190102T083021Z">
        <seg>因此，子类继承的公共或受保护嵌套类可以间接访问超类的所有私有成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, if you override the &lt;c4&gt;equals()&lt;/c4&gt; method, you must also override the &lt;c5&gt;hashCode()&lt;/c5&gt; method as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104004Z" creationid="pingfangx" creationdate="20190102T104004Z">
        <seg>因此，如果覆盖 &lt;c4&gt;equals()&lt;/c4&gt; 方法，则还必须覆盖 &lt;c5&gt;hashCode()&lt;/c5&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, the following two statements are equivalent:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074717Z" creationid="pingfangx" creationdate="20180521T074717Z">
        <seg>因此，以下两个语句是等同的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, the statements within the &lt;c14&gt;do&lt;/c14&gt; block are always executed at least once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090924Z" creationid="pingfangx" creationdate="20180521T090924Z">
        <seg>因此，&lt;c14&gt;do&lt;/c14&gt; 块中的语句总是至少执行一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, the statements within the &lt;c3&gt;do&lt;/c3&gt; block are always executed at least once, as shown in the following &lt;a4&gt;&lt;c5&gt;DoWhileDemo&lt;/c5&gt;&lt;/a4&gt; program:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083043Z" creationid="pingfangx" creationdate="20180521T083043Z">
        <seg>因此，&lt;c3&gt;do&lt;/c3&gt; 块中的语句总是至少执行一次，如以下 &lt;a4&gt;&lt;c5&gt;DoWhileDemo&lt;/c5&gt;&lt;/a4&gt; 程序所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, their coverage is brief; the intent is to simply make you aware that these operators exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070710Z" creationid="pingfangx" creationdate="20180521T070710Z">
        <seg>因此，他们的报道很简短;目的只是让你意识到这些运算符的存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, this approach can be used to share a block of code between multiple constructors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070719Z" creationid="pingfangx" creationdate="20180705T070719Z">
        <seg>因此，该方法可用于在多个构造函数之间共享代码块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, you can use a string as an argument for the &lt;c3&gt;contains()&lt;/c3&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073522Z" creationid="pingfangx" creationdate="20190103T073522Z">
        <seg>因此，您可以使用字符串作为 &lt;c3&gt;contains()&lt;/c3&gt; 方法的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, you could use a lambda expression instead of defining and then creating a new instance of a class that implements &lt;c1&gt;Comparator&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084139Z" creationid="pingfangx" creationdate="20181228T084139Z">
        <seg>因此，您可以使用 lambda 表达式而不是定义然后创建实现 &lt;c1&gt;Comparator&lt;/c1&gt; 的类的新实例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, you should not rely on this method to do your cleanup for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103238Z" creationid="pingfangx" creationdate="20190102T103238Z">
        <seg>因此，您不应该依赖此方法为您进行清理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These changes will persist when the method returns.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034414Z" creationid="pingfangx" creationdate="20180601T034414Z">
        <seg>方法返回时，这些更改将持续。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These classes "wrap" the primitive in an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025232Z" creationid="pingfangx" creationdate="20190103T025232Z">
        <seg>这些类将基本类型 "包装" 在对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These classes are known as &lt;a0&gt;local classes&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101344Z" creationid="pingfangx" creationdate="20180705T101344Z">
        <seg>这些类称为 &lt;a0&gt;local classes（局部类）&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These classes are known as &lt;a1&gt;anonymous classes&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101356Z" creationid="pingfangx" creationdate="20180705T101356Z">
        <seg>这些类称为 &lt;a1&gt;anonymous classes（匿名类）&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These manufacturers would need to specify new methods to enable other companies (such as electronic guidance instrument manufacturers) to adapt their software to flying cars.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060512Z" creationid="pingfangx" creationdate="20190102T060512Z">
        <seg>这些制造商需要指定新的方法，以使其他公司(如电子制导仪器制造商)能够使其软件适应飞行汽车。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These methods work for any "relatable" objects, no matter what their class inheritance is.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062724Z" creationid="pingfangx" creationdate="20190102T062724Z">
        <seg>这些方法适用于任何 "relatable" 对象，无论它们的类继承是什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These methods, &lt;c4&gt;format&lt;/c4&gt; and &lt;c5&gt;printf&lt;/c5&gt;, are equivalent to one another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032157Z" creationid="pingfangx" creationdate="20190103T032157Z">
        <seg>这些方法 &lt;c4&gt;format&lt;/c4&gt; 和 &lt;c5&gt;printf&lt;/c5&gt; 彼此相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These objects all have certain states (for example: position, orientation, line color, fill color) and behaviors (for example: moveTo, rotate, resize, draw) in common.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022134Z" creationid="pingfangx" creationdate="20190103T022134Z">
        <seg>这些对象都具有某些状态(例如：位置，方向，线条颜色，填充颜色)和行为(例如：moveTo，rotate，resize，draw)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These operating systems include Microsoft Windows, Solaris OS, Linux, and Mac OS X. We recommend using the NetBeans IDE instead of the command line whenever possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034128Z" creationid="pingfangx" creationdate="20180518T034128Z">
        <seg>这些操作系统包括 Microsoft Windows，Solaris OS，Linux 和 Mac OS X.我们建议尽可能使用 NetBeans IDE 而不是命令行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These operators exhibit "short-circuiting" behavior, which means that the second operand is evaluated only if needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070151Z" creationid="pingfangx" creationdate="20180521T070151Z">
        <seg>这些运算符表现出 "短路" 行为，这意味着第二个操作数仅在需要时才被计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These real-world observations all translate into the world of object-oriented programming.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061318Z" creationid="pingfangx" creationdate="20180518T061318Z">
        <seg>这些真实世界的观察都转化为面向对象编程的世界。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These rules are driven by the following two principles:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091446Z" creationid="pingfangx" creationdate="20190102T091446Z">
        <seg>这些规则由以下两个原则驱动：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These trails and lessons are only available as web pages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031459Z" creationid="pingfangx" creationdate="20180518T031459Z">
        <seg>这些路径和课程仅作为网页提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These trails are available in book form as &lt;i0&gt;The Java Tutorial, Sixth Edition&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030942Z" creationid="pingfangx" creationdate="20180518T030942Z">
        <seg>这些路径可以作为 &lt;i0&gt;The Java Tutorial, Sixth Edition&lt;/i0&gt; 的书籍形式提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These two items are all you'll need to write your first application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034442Z" creationid="pingfangx" creationdate="20180518T034442Z">
        <seg>这两项是您编写第一个应用程序所需的全部内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These values are passed to the constructor when the constant is created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015804Z" creationid="pingfangx" creationdate="20190102T015804Z">
        <seg>创建常量时，这些值将传递给构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are associated with the class, rather than with any object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042640Z" creationid="pingfangx" creationdate="20180607T042640Z">
        <seg>他们与类相关联，而不是与任何对象相关联。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are considered equal because the objects compared contain the same ISBN number.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102834Z" creationid="pingfangx" creationdate="20190102T102834Z">
        <seg>它们被认为是相同的，因为比较的对象包含相同的 ISBN 号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are defined with constant mass and radius properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015710Z" creationid="pingfangx" creationdate="20190102T015710Z">
        <seg>它们具有恒定的质量和半径属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are like local classes except that they do not have a name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060337Z" creationid="pingfangx" creationdate="20180706T060337Z">
        <seg>它们就像局部类，除了它们没有名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074006Z" creationid="pingfangx" creationdate="20190103T074006Z">
        <seg>他们是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They can also be used in place of &lt;c4&gt;int&lt;/c4&gt; where their limits help to clarify your code; the fact that a variable's range is limited can serve as a form of documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080348Z" creationid="pingfangx" creationdate="20180518T080348Z">
        <seg>它们也可以用来代替 &lt;c4&gt;int&lt;/c4&gt;，它们的限制有助于澄清代码;变量范围有限这一事实可以用作文档的一种形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They enable you to declare and instantiate a class at the same time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060316Z" creationid="pingfangx" creationdate="20180706T060316Z">
        <seg>它们使您能够同时声明和实例化一个类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They improve the type safety of your code, making more of your bugs detectable at compile time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042611Z" creationid="pingfangx" creationdate="20180518T042611Z">
        <seg>它们提高了代码的类型安全性，在编译时可以检测到更多的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They include hundreds of complete, working examples, and dozens of lessons.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030835Z" creationid="pingfangx" creationdate="20180518T030835Z">
        <seg>它们包括数百个完整的工作示例和数十个课程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This &lt;a5&gt;Character&lt;/a5&gt; class also offers a number of useful class (i.e., static) methods for manipulating characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T061738Z" creationid="pingfangx" creationdate="20190103T061738Z">
        <seg>这个 &lt;a5&gt;Character&lt;/a5&gt; 类还提供了许多用于操作字符的有用类(即静态)方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This &lt;a6&gt;&lt;c7&gt;Character&lt;/c7&gt;&lt;/a6&gt; class also offers a number of useful class (i.e., static) methods for manipulating characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083246Z" creationid="pingfangx" creationdate="20190103T083246Z">
        <seg>这个 &lt;a6&gt;&lt;c7&gt;Character&lt;/c7&gt;&lt;/a6&gt; 类还提供了许多用于操纵字符的有用的类(即静态)方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This ID number is unique to each object and is therefore an instance variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042839Z" creationid="pingfangx" creationdate="20180607T042839Z">
        <seg>此 ID 号对每个对象都是唯一的，因此是一个实例变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This allows specialists to implement/test/debug complex, task-specific objects, which you can then trust to run in your own code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062021Z" creationid="pingfangx" creationdate="20180518T062021Z">
        <seg>这允许专家实现/测试/调试复杂的，特定于任务的对象，然后您可以信任它们在自己的代码中运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This allows you to invoke the &lt;c0&gt;Math&lt;/c0&gt; class methods by their simple names.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035329Z" creationid="pingfangx" creationdate="20190103T035329Z">
        <seg>这允许您通过简单名称调用 &lt;c0&gt;Math&lt;/c0&gt; 类方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This allows you, the programmer, to focus on the design of your particular application, rather than the infrastructure required to make it work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064531Z" creationid="pingfangx" creationdate="20180518T064531Z">
        <seg>这使得程序员可以专注于特定应用程序的设计，而不是使其工作所需的基础架构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This annotation applies only to class declarations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034037Z" creationid="pingfangx" creationdate="20190102T034037Z">
        <seg>此注解仅适用于类声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This applies to other parameter-accepting constructs as well (such as constructors and exception handlers) that you'll learn about later in the tutorial.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073824Z" creationid="pingfangx" creationdate="20180518T073824Z">
        <seg>这也适用于其他参数接受构造(例如构造函数和异常处理程序)，您将在本教程后面了解这些构造函数和异常处理程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This approach can potentially make your application &lt;e0&gt;brittle&lt;/e0&gt;, which is the likelihood of an application not working because of the introduction of updates (such as newer data types).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085757Z" creationid="pingfangx" creationdate="20180706T085757Z">
        <seg>这种方法可能会使您的应用程序 &lt;e0&gt;brittle（脆弱）&lt;/e0&gt;，这是由于引入了更新(例如更新的数据类型)而导致应用程序无法工作的可能性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This approach reduces the amount of code required because you don't have to create a new class for each search that you want to perform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091532Z" creationid="pingfangx" creationdate="20180706T091532Z">
        <seg>此方法减少了所需的代码量，因为您不必为要执行的每个搜索创建新类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This array is the mechanism through which the runtime system passes information to your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035729Z" creationid="pingfangx" creationdate="20180518T035729Z">
        <seg>该数组是运行时系统将信息传递给应用程序的机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This beginner Java tutorial describes fundamentals of programming in the Java programming language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042019Z" creationid="pingfangx" creationdate="20180518T042019Z">
        <seg>This beginner Java tutorial describes fundamentals of programming in the Java programming language</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This beginner Java tutorial describes getting started with Java and setting up your Netbeans IDE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032040Z" creationid="pingfangx" creationdate="20180518T032025Z">
        <seg>This beginner Java tutorial describes getting started with Java and setting up your Netbeans IDE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This behavior is referred to as &lt;e0&gt;virtual method invocation&lt;/e0&gt; and demonstrates an aspect of the important polymorphism features in the Java language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094130Z" creationid="pingfangx" creationdate="20190102T094130Z">
        <seg>此行为称为 &lt;e0&gt;虚拟方法调用（virtual method invocation）&lt;/e0&gt;，并演示了 Java 语言中重要多态性功能的一个方面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This calls one of &lt;c0&gt;Rectangle&lt;/c0&gt;'s constructors that initializes &lt;c1&gt;origin&lt;/c1&gt; to &lt;c2&gt;originOne&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071340Z" creationid="pingfangx" creationdate="20180601T071301Z">
        <seg>这会调用将 &lt;c1&gt;origin&lt;/c1&gt; 初始化为 &lt;c2&gt;originOne&lt;/c2&gt; 的 &lt;c0&gt;Rectangle&lt;/c0&gt; 构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be done &lt;i1&gt;indirectly&lt;/i1&gt; by adding public methods that obtain the field values for us:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090547Z" creationid="pingfangx" creationdate="20180525T064206Z">
        <seg>这可以通过添加获取我们字段值的公共方法 &lt;i1&gt;间接（indirectly）&lt;/i1&gt; 完成：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be done either sequentially, using the &lt;c0&gt;sort&lt;/c0&gt; method, or concurrently, using the &lt;c1&gt;parallelSort&lt;/c1&gt; method introduced in Java SE 8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T054846Z" creationid="pingfangx" creationdate="20180521T054734Z">
        <seg>这可以使用 &lt;c0&gt;sort&lt;/c0&gt; 方法顺序排序，或使用 Java SE 8 中引入的 &lt;c1&gt;parallelSort&lt;/c1&gt; 方法并行排序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can save you from a runtime error owing to an improper cast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083909Z" creationid="pingfangx" creationdate="20190102T083909Z">
        <seg>这可以避免由于不正确的强制转换而出现运行时错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This cast inserts a runtime check that &lt;c0&gt;obj&lt;/c0&gt; is assigned a &lt;c1&gt;MountainBike&lt;/c1&gt; so that the compiler can safely assume that &lt;c2&gt;obj&lt;/c2&gt; is a &lt;c3&gt;MountainBike&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083734Z" creationid="pingfangx" creationdate="20190102T083734Z">
        <seg>此强制转换插入运行时检查 &lt;c0&gt;obj&lt;/c0&gt; 被分配 &lt;c1&gt;MountainBike&lt;/c1&gt;，以便编译器可以安全地假设 &lt;c2&gt;obj&lt;/c2&gt; 是 &lt;c3&gt;MountainBike&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This circumstance can arise when supertypes share a common ancestor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091643Z" creationid="pingfangx" creationdate="20190102T091643Z">
        <seg>当超类型共享共同的祖先时，可能会出现这种情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class contains a set of constructors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020215Z" creationid="pingfangx" creationdate="20180607T020215Z">
        <seg>这个类包含一组构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class contains a single constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062452Z" creationid="pingfangx" creationdate="20180601T062452Z">
        <seg>这个类包含一个构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class has methods for the trigonometric functions, exponential functions, and so forth.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025006Z" creationid="pingfangx" creationdate="20190103T025006Z">
        <seg>该类具有三角函数，指数函数等方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This code assigns the value returned by &lt;t1&gt;getArea()&lt;/t1&gt; to the variable &lt;c2&gt;areaOfRectangle&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085219Z" creationid="pingfangx" creationdate="20180601T085219Z">
        <seg>此代码将由 &lt;t1&gt;getArea()&lt;/t1&gt; 返回的值分配给变量 &lt;c2&gt;areaOfRectangle&lt;/c2&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This code assumes that the file name has a period in it; if the file name does not have a period, &lt;c4&gt;lastIndexOf&lt;/c4&gt; returns -1, and the substring method throws a &lt;c5&gt;StringIndexOutOfBoundsException&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075054Z" creationid="pingfangx" creationdate="20190103T075054Z">
        <seg>此代码假定文件名中包含句点;如果文件名没有句点，则 &lt;c4&gt;lastIndexOf&lt;/c4&gt; 返回-1，并且 substring 方法抛出 &lt;c5&gt;StringIndexOutOfBoundsException&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This data type represents one bit of information, but its "size" isn't something that's precisely defined.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081911Z" creationid="pingfangx" creationdate="20180518T081911Z">
        <seg>这种数据类型代表了一点信息，但其 '大小' 不是精确定义的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This data type should never be used for precise values, such as currency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081722Z" creationid="pingfangx" creationdate="20180518T081722Z">
        <seg>此数据类型不应用于精确值，例如货币。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This default constructor calls the class parent's no-argument constructor, or the &lt;c1&gt;Object&lt;/c1&gt; constructor if the class has no other parent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071802Z" creationid="pingfangx" creationdate="20180601T071802Z">
        <seg>此默认构造函数调用父类的无参数构造函数，或者如果该类没有父类，则调用 &lt;c1&gt;Object&lt;/c1&gt; 构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This default constructor will call the no-argument constructor of the superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T035332Z" creationid="pingfangx" creationdate="20180528T035332Z">
        <seg>这个默认构造函数将调用超类的无参构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This enables you to define methods that can access and modify the state of the object to which they belong.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021348Z" creationid="pingfangx" creationdate="20190103T021348Z">
        <seg>这使您可以定义可以访问和修改它们所属对象的状态的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example defines three variables named &lt;c0&gt;x&lt;/c0&gt;: the member variable of the class &lt;c1&gt;ShadowTest&lt;/c1&gt;, the member variable of the inner class &lt;c2&gt;FirstLevel&lt;/c2&gt;, and the parameter in the method &lt;c3&gt;methodInFirstLevel&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091624Z" creationid="pingfangx" creationdate="20180705T091554Z">
        <seg>此示例定义了三个名为 &lt;c0&gt;x&lt;/c0&gt; 的变量：类 &lt;c1&gt;ShadowTest&lt;/c1&gt; 的成员变量，内部类 &lt;c2&gt;FirstLevel&lt;/c2&gt; 的成员变量，以及参数在方法 &lt;c3&gt;methodInFirstLevel&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example demonstrates how the &lt;c0&gt;Comparator&lt;/c0&gt; interface has been enhanced with default methods, static methods, lambda expressions, and method references to create more expressive library methods whose functionality programmers can quickly deduce by looking at how they are invoked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072214Z" creationid="pingfangx" creationdate="20190102T072214Z">
        <seg>此示例演示如何使用默认方法，静态方法，lambda 表达式和方法引用增强 &lt;c0&gt;Comparator&lt;/c0&gt; 接口，以创建更具表现力的库方法，其函数式程序员可以通过查看它们的调用方式快速推断出来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example generates the following output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080008Z" creationid="pingfangx" creationdate="20181228T080008Z">
        <seg>此示例生成以下输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example prints the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122614Z" creationid="pingfangx" creationdate="20180705T122614Z">
        <seg>此示例打印以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example rewrites the &lt;a3&gt;&lt;c4&gt;Card&lt;/c4&gt;&lt;/a3&gt; and &lt;a5&gt;&lt;c6&gt;Deck&lt;/c6&gt;&lt;/a5&gt; classes as interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065216Z" creationid="pingfangx" creationdate="20190102T065216Z">
        <seg>此示例将 &lt;a3&gt;&lt;c4&gt;Card&lt;/c4&gt;&lt;/a3&gt; 和 &lt;a5&gt;&lt;c6&gt;Deck&lt;/c6&gt;&lt;/a5&gt; 类重写为接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example uses the following expression:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075502Z" creationid="pingfangx" creationdate="20181228T075502Z">
        <seg>此示例使用以下表达式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This feature enables you, for example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084300Z" creationid="pingfangx" creationdate="20180518T084300Z">
        <seg>例如，此功能支持您。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This feature is called &lt;e4&gt;autoboxing&lt;/e4&gt;or &lt;e5&gt;unboxing&lt;/e5&gt;, if the conversion goes the other way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062026Z" creationid="pingfangx" creationdate="20190103T062026Z">
        <seg>则此功能称为 &lt;e4&gt;自动装箱（autoboxing）&lt;/e4&gt; 或者如果反向转换则称为 &lt;e5&gt;拆箱（unboxing）&lt;/e5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This form of annotation is called a &lt;e0&gt;type annotation&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024220Z" creationid="pingfangx" creationdate="20190102T024220Z">
        <seg>这种形式的注解称为 &lt;e0&gt;type annotation&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This form of annotation is called a &lt;e4&gt;type annotation&lt;/e4&gt; and several examples are provided in &lt;a5&gt;Annotations Basics&lt;/a5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034950Z" creationid="pingfangx" creationdate="20190102T034950Z">
        <seg>这种形式的注解称为 &lt;e4&gt;type annotation&lt;/e4&gt;，并在 &lt;a5&gt;Annotations Basics&lt;/a5&gt; 中提供了几个示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This form of method invocation is not restricted to differentiating between multiple implemented interfaces that contain default methods with the same signature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092058Z" creationid="pingfangx" creationdate="20190102T092058Z">
        <seg>这种形式的方法调用不限于区分包含具有相同签名的默认方法的多个已实现接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This framework includes a &lt;c0&gt;NonNull&lt;/c0&gt; module, as well as a regular expression module, and a mutex lock module.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040933Z" creationid="pingfangx" creationdate="20190102T040933Z">
        <seg>该框架包括 &lt;c0&gt;NonNull&lt;/c0&gt; 模块，以及正则表达式模块和互斥锁模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This gives &lt;c0&gt;MountainBike&lt;/c0&gt; all the same fields and methods as &lt;c1&gt;Bicycle&lt;/c1&gt;, yet allows its code to focus exclusively on the features that make it unique.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063613Z" creationid="pingfangx" creationdate="20180518T063520Z">
        <seg>这给了 &lt;c0&gt;MountainBike&lt;/c0&gt; 与 &lt;c1&gt;Bicycle&lt;/c1&gt; 所有相同的字段和方法，但允许其代码专注于使其独特的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This gives them some of the advantages of multiple inheritance, where they can have behavior from both a superclass and an interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062751Z" creationid="pingfangx" creationdate="20190102T062751Z">
        <seg>这为他们提供了多重继承的一些优点，他们可以从超类和接口获得行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes primitive data types, such as doubles, floats, and integers, as you saw in the &lt;c0&gt;computePayment&lt;/c0&gt; method, and reference data types, such as objects and arrays.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032503Z" creationid="pingfangx" creationdate="20180601T032503Z">
        <seg>这包括像 &lt;c0&gt;computePayment&lt;/c0&gt; 方法中所看到的双精度浮点数和整数等基本数据类型以及对象和数组等引用数据类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes various tasks such as finding performance bottlenecks and recompiling (to native code) frequently used sections of code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033234Z" creationid="pingfangx" creationdate="20180518T033234Z">
        <seg>这包括各种任务，如查找性能瓶颈和重新编译(本地代码)经常使用的代码部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This indicates a documentation comment (&lt;e0&gt;doc comment&lt;/e0&gt;, for short).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035506Z" creationid="pingfangx" creationdate="20180518T035506Z">
        <seg>这表示文档注释(简称 &lt;e0&gt;doc comment&lt;/e0&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface contains only one type parameter, &lt;c3&gt;T&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093340Z" creationid="pingfangx" creationdate="20180706T093340Z">
        <seg>此接口仅包含一个类型参数 &lt;c3&gt;T&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface contains the method &lt;c2&gt;boolean test(T t)&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092917Z" creationid="pingfangx" creationdate="20180706T092917Z">
        <seg>该接口包含方法 &lt;c2&gt;boolean test(T t)&lt;/c2&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface is a functional interface, so you could use the following highlighted lambda expression to replace it:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075328Z" creationid="pingfangx" creationdate="20181228T075328Z">
        <seg>此接口是一个函数式接口，因此您可以使用以下高亮的 lambda 表达式来替换它：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This invocation better demonstrates &lt;e0&gt;what&lt;/e0&gt; to sort rather than &lt;e1&gt;how&lt;/e1&gt; to do it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T073147Z" creationid="pingfangx" creationdate="20190102T071734Z">
        <seg>此调用更好地演示排序 &lt;e0&gt;什么（what）&lt;/e0&gt; 而不是 &lt;e1&gt;如何（how）&lt;/e1&gt; 进行排序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This involves stating the variable's type and name, as you've already seen:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080014Z" creationid="pingfangx" creationdate="20180518T080014Z">
        <seg>这包括说明变量的类型和名称，正如您已经看到的那样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a &lt;i0&gt;class declaration&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025927Z" creationid="pingfangx" creationdate="20180525T025927Z">
        <seg>这是一个 &lt;i0&gt;class declaration&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a legal argument to &lt;c4&gt;substring&lt;/c4&gt; because that method accepts an index equal to, but not greater than, the length of the string and interprets it to mean "the end of the string."</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075228Z" creationid="pingfangx" creationdate="20190103T075228Z">
        <seg>这是 &lt;c4&gt;substring&lt;/c4&gt; 的合法参数，因为该方法接受的索引等于但不大于字符串的长度，并将其解释为 "字符串的结尾"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a perfect situation for an abstract superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022211Z" creationid="pingfangx" creationdate="20190103T022211Z">
        <seg>这是抽象超类的完美情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a very simple interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092723Z" creationid="pingfangx" creationdate="20180706T092723Z">
        <seg>这是一个非常简单的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is accomplished with the &lt;c0&gt;static&lt;/c0&gt; modifier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042551Z" creationid="pingfangx" creationdate="20180607T042551Z">
        <seg>这是通过 &lt;c0&gt;static&lt;/c0&gt; 修饰符完成的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is analogous to fixing mechanical problems in the real world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062046Z" creationid="pingfangx" creationdate="20180518T062046Z">
        <seg>这类似于解决现实世界中的机械问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is called &lt;i6&gt;implicit casting&lt;/i6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083650Z" creationid="pingfangx" creationdate="20190102T083507Z">
        <seg>这称为 &lt;i6&gt;隐式转换（implicit casting）&lt;/i6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is called a &lt;i1&gt;compile-time constant&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065519Z" creationid="pingfangx" creationdate="20180705T065519Z">
        <seg>这称为 &lt;i1&gt;编译时常量&lt;/i1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is covered in the Class Variables section of &lt;a0&gt;Understanding Instance and Class Members&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082953Z" creationid="pingfangx" creationdate="20180705T082953Z">
        <seg>这包含在 &lt;a0&gt;Understanding Instance and Class Members&lt;/a0&gt; 的类变量部分中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is discussed in the lesson on interfaces and inheritance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070738Z" creationid="pingfangx" creationdate="20180705T070738Z">
        <seg>这在接口和继承的课程中讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is discussed in the section &lt;a1&gt;Using an Interface as a Type&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085038Z" creationid="pingfangx" creationdate="20190102T085038Z">
        <seg>这在 &lt;a1&gt;Using an Interface as a Type&lt;/a1&gt; 一节中讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is especially useful if subclasses might want to reuse the initialization method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070801Z" creationid="pingfangx" creationdate="20180705T070801Z">
        <seg>如果子类可能想要重用初始化方法，这尤其有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is not the only possible place in this method to use a lambda expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093738Z" creationid="pingfangx" creationdate="20180706T093738Z">
        <seg>这不是此方法中使用 lambda 表达式的唯一可能位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is particularly useful, for example, when creating an immutable class like the &lt;c0&gt;String&lt;/c0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104759Z" creationid="pingfangx" creationdate="20190102T104759Z">
        <seg>这特别有用，例如，在创建像 &lt;c0&gt;String&lt;/c0&gt; 类这样的不可变类时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is performed behind the scenes, enabling the developer to use just one line of code to call the method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043219Z" creationid="pingfangx" creationdate="20180521T043219Z">
        <seg>这是在幕后执行的，使开发人员只需使用一行代码即可调用该方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the output from the code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082418Z" creationid="pingfangx" creationdate="20180521T082418Z">
        <seg>这是代码的输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the output of the program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090142Z" creationid="pingfangx" creationdate="20180521T090142Z">
        <seg>这是该程序的输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is unlike arrays in C or Fortran.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042252Z" creationid="pingfangx" creationdate="20180521T042252Z">
        <seg>这与 C 或 Fortran 中的数组不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lambda expression takes one &lt;c2&gt;Integer&lt;/c2&gt; argument (the index) and returns a &lt;c3&gt;Boolean&lt;/c3&gt; value (&lt;c4&gt;Boolean.TRUE&lt;/c4&gt; if the index value is even, &lt;c5&gt;Boolean.FALSE&lt;/c5&gt; otherwise).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015108Z" creationid="pingfangx" creationdate="20190102T015108Z">
        <seg>此 lambda 表达式采用一个 &lt;c2&gt;Integer&lt;/c2&gt; 参数(索引)并返回 &lt;c3&gt;Boolean&lt;/c3&gt; 值(如果索引值为偶数返回 &lt;c4&gt;Boolean.TRUE&lt;/c4&gt;，否则 &lt;c5&gt;Boolean.FALSE&lt;/c5&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lambda expression was used in the following two methods:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081437Z" creationid="pingfangx" creationdate="20181228T081437Z">
        <seg>这个 lambda 表达式用于以下两种方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson also covers nesting classes within other classes, and enumerations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023008Z" creationid="pingfangx" creationdate="20180525T023008Z">
        <seg>本课还介绍其他类中的嵌套类和枚举</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson describes where and how to use annotations in a program effectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042319Z" creationid="pingfangx" creationdate="20180518T042319Z">
        <seg>本课将介绍如何在程序中有效地使用注释。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson ends by showing you how these concepts translate into code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042209Z" creationid="pingfangx" creationdate="20180518T042209Z">
        <seg>本课结束时向您展示了这些概念如何转化为代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson explains how state and behavior are represented within an object, introduces the concept of data encapsulation, and explains the benefits of designing your software in this manner.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042909Z" creationid="pingfangx" creationdate="20180518T042909Z">
        <seg>本课介绍了状态和行为在对象中的表现方式，介绍了数据封装的概念，并解释了以这种方式设计软件的好处。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson explains where annotations can be used, how to apply annotations, what predefined annotation types are available in the Java Platform, Standard Edition (Java SE API), how type annnotations can be used in conjunction with pluggable type systems to write code with stronger type checking, and how to implement repeating annotations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023742Z" creationid="pingfangx" creationdate="20190102T023742Z">
        <seg>本课程介绍了可以使用注解的位置，如何应用注解，Java 平台，标准版(Java SE API)中可用的预定义注解类型，类型注解如何与可插入类型系统结合使用以更强大地编写代码类型检查，以及如何实现重复注解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson will introduce you to objects, classes, inheritance, interfaces, and packages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042820Z" creationid="pingfangx" creationdate="20180518T042820Z">
        <seg>本课将向您介绍对象，类，继承，接口和包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This library is known as the "Application Programming Interface", or "API" for short.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064432Z" creationid="pingfangx" creationdate="20180518T064432Z">
        <seg>该库被称为 "应用程序编程接口"，简称 "API"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This makes code for your subclasses easy to read.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063616Z" creationid="pingfangx" creationdate="20180518T063616Z">
        <seg>这使得您的子类的代码易于阅读。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This makes it clear that they are class variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043112Z" creationid="pingfangx" creationdate="20180607T043112Z">
        <seg>这表明它们是类变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may help to illustrate some points concisely, but is not recommended for production code.) Public fields tend to link you to a particular implementation and limit your flexibility in changing your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041955Z" creationid="pingfangx" creationdate="20180607T041955Z">
        <seg>这可能有助于简洁地说明一些观点，但不建议用于生产代码。）公共字段倾向于将您链接到特定的实现，并限制您更改代码的灵活性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that annotations can be used anywhere you use a type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034901Z" creationid="pingfangx" creationdate="20190102T034901Z">
        <seg>这意味着可以在任何使用类型的地方使用注解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that any changes to the values of the parameters exist only within the scope of the method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033900Z" creationid="pingfangx" creationdate="20180601T033900Z">
        <seg>这意味着对参数值的任何更改仅存在于该方法的范围内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that if a variable is declared to be the type of an interface, then its value can reference any object that is instantiated from any class that implements the interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T085034Z" creationid="pingfangx" creationdate="20190102T085034Z">
        <seg>这意味着如果将变量声明为接口的类型，则其值可以引用从实现接口的任何类实例化的任何对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that methods within a class can have the same name if they have different parameter lists (there are some qualifications to this that will be discussed in the lesson titled "Interfaces and Inheritance").</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065308Z" creationid="pingfangx" creationdate="20180525T065308Z">
        <seg>这意味着如果一个类中的方法具有不同的参数列表，那么类中的方法可以具有相同的名称(这有一些限制，将在标题为 "接口和继承" 的课程中讨论)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that the methods take one &lt;c5&gt;Integer&lt;/c5&gt; argument (the index) and return a &lt;c6&gt;Boolean&lt;/c6&gt; value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015144Z" creationid="pingfangx" creationdate="20190102T015144Z">
        <seg>这意味着这些方法采用一个 &lt;c5&gt;Integer&lt;/c5&gt; 参数(索引)并返回 &lt;c6&gt;Boolean&lt;/c6&gt; 值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that the original object and its clone are not independentto decouple them, you must override &lt;c5&gt;clone()&lt;/c5&gt; so that it clones the object &lt;i6&gt;and&lt;/i6&gt; &lt;c7&gt;ObjExternal&lt;/c7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101834Z" creationid="pingfangx" creationdate="20190102T101834Z">
        <seg>这意味着原始对象及其克隆不是独立的 - 要解耦它们，必须覆盖 &lt;c5&gt;clone()&lt;/c5&gt; 以便克隆对象 &lt;i6&gt;和&lt;/i6&gt; &lt;c7&gt;ObjExternal&lt;/c7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that they can only be &lt;i0&gt;directly&lt;/i0&gt; accessed from the Bicycle class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090532Z" creationid="pingfangx" creationdate="20180525T064124Z">
        <seg>这意味着它们只能从 Bicycle 类中&lt;i0&gt;直接（directly）&lt;/i0&gt;访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that they do not inherit any names from a supertype or introduce a new level of scoping.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075916Z" creationid="pingfangx" creationdate="20181228T075916Z">
        <seg>这意味着它们不会从超类型继承任何名称或引入新级别的范围。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that when the method returns, the passed-in reference still references the same object as before.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034152Z" creationid="pingfangx" creationdate="20180601T034152Z">
        <seg>这意味着当方法返回时，传入的引用仍然引用与之前相同的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that you can create an instance of &lt;c2&gt;EvenIterator&lt;/c2&gt; only inside an instance of the outer class, &lt;c3&gt;DataStructure&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014910Z" creationid="pingfangx" creationdate="20190102T014910Z">
        <seg>这意味着您只能在外部类的实例 &lt;c3&gt;DataStructure&lt;/c3&gt; 中创建 &lt;c2&gt;EvenIterator&lt;/c2&gt; 的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method checks each &lt;c0&gt;Person&lt;/c0&gt; instance contained in the &lt;c1&gt;List&lt;/c1&gt; parameter &lt;c2&gt;roster&lt;/c2&gt; whether it satisfies the criteria specified in the &lt;c3&gt;Predicate&lt;/c3&gt; parameter &lt;c4&gt;tester&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093838Z" creationid="pingfangx" creationdate="20180706T093838Z">
        <seg>此方法检查 &lt;c1&gt;List&lt;/c1&gt; 参数 &lt;c2&gt;roster&lt;/c2&gt; 中包含的每个 &lt;c0&gt;Person&lt;/c0&gt; 实例是否满足 &lt;c3&gt;Predicate&lt;/c3&gt; 参数 &lt;c4&gt;tester&lt;/c4&gt; 中指定的条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method checks each &lt;c0&gt;Person&lt;/c0&gt; instance contained in the &lt;c1&gt;List&lt;/c1&gt; parameter &lt;c2&gt;roster&lt;/c2&gt; whether it satisfies the search criteria specified in the &lt;c3&gt;CheckPerson&lt;/c3&gt; parameter &lt;c4&gt;tester&lt;/c4&gt; by invoking the method &lt;c5&gt;tester.test&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090816Z" creationid="pingfangx" creationdate="20180706T090054Z">
        <seg>此方法检查 &lt;c1&gt;List&lt;/c1&gt; 参数 &lt;c2&gt;roster&lt;/c2&gt; 中包含的每个 &lt;c0&gt;Person&lt;/c0&gt; 实例是否满足由 &lt;c3&gt;CheckPerson&lt;/c3&gt; 类的参数 &lt;c4&gt;tester&lt;/c4&gt; 指定的搜索条件，通过调用方法 &lt;c5&gt;tester.test&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method filters members that are eligible for Selective Service in the United States: it returns a &lt;c2&gt;true&lt;/c2&gt; value if its &lt;c3&gt;Person&lt;/c3&gt; parameter is male and between the ages of 18 and 25:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090341Z" creationid="pingfangx" creationdate="20180706T090341Z">
        <seg>此方法筛选符合美国兵役登记制度（Selective Service）的成员：如果 &lt;c3&gt;Person&lt;/c3&gt; 参数为男性且年龄介于 18 和 25 之间，则返回 &lt;c2&gt;true&lt;/c2&gt; 值：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method has four parameters: the loan amount, the interest rate, the future value and the number of periods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032208Z" creationid="pingfangx" creationdate="20180601T032106Z">
        <seg>该方法有四个参数：贷款金额，利率，未来价值和期数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method invocation performs the following actions:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100728Z" creationid="pingfangx" creationdate="20180706T100728Z">
        <seg>此方法调用执行以下操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method is commonly used in combination with the for-each construct to iterate over the values of an enum type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015523Z" creationid="pingfangx" creationdate="20190102T015523Z">
        <seg>此方法通常与 for-each 构造结合使用，以迭代枚举类型的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method requires an object of type &lt;c2&gt;EventHandler&lt;ActionEvent&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065710Z" creationid="pingfangx" creationdate="20180706T065710Z">
        <seg>此方法需要类型为 &lt;c2&gt;EventHandler&lt;ActionEvent&gt;&lt;/c2&gt; 的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method returns the integer that the expression &lt;c0&gt;width*height&lt;/c0&gt; evaluates to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091616Z" creationid="pingfangx" creationdate="20180601T091616Z">
        <seg>此方法返回表达式 &lt;c0&gt;width*height&lt;/c0&gt; 所求值的整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method takes one parameter and returns a &lt;c0&gt;boolean&lt;/c0&gt; value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092814Z" creationid="pingfangx" creationdate="20180706T092814Z">
        <seg>此方法接受一个参数并返回 &lt;c0&gt;boolean&lt;/c0&gt; 值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This name is used within the method body to refer to the passed-in argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033431Z" creationid="pingfangx" creationdate="20180601T033431Z">
        <seg>该名称在方法体内用于引用传入的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This nested class has information about its enclosing class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021016Z" creationid="pingfangx" creationdate="20190102T021016Z">
        <seg>This nested class has information about its enclosing class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This notifies the compiler that you will use &lt;e0&gt;name&lt;/e0&gt; to refer to data whose type is &lt;e1&gt;type&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042542Z" creationid="pingfangx" creationdate="20180601T042542Z">
        <seg>这会通知编译器您将使用 &lt;e0&gt;name&lt;/e0&gt; 来引用类型为 &lt;e1&gt;type&lt;/e1&gt; 的数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This operator can also be used on objects to assign &lt;i0&gt;object references&lt;/i0&gt;, as discussed in &lt;a1&gt;Creating Objects&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064204Z" creationid="pingfangx" creationdate="20180521T064204Z">
        <seg>如 &lt;a1&gt;Creating Objects&lt;/a1&gt; 中所述，此运算符也可用于对象以分配 &lt;i0&gt;object references&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This operator is also known as the &lt;i3&gt;ternary operator&lt;/i3&gt; because it uses three operands.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070301Z" creationid="pingfangx" creationdate="20180521T070301Z">
        <seg>该运算符也被称为 &lt;i3&gt;ternary operator（三元运算符）&lt;/i3&gt;，因为它使用三个操作数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This parameterized type contains a method that has the same return type and parameters as &lt;c0&gt;CheckPerson.boolean test(Person p)&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093421Z" creationid="pingfangx" creationdate="20180706T093421Z">
        <seg>此参数化类型包含与 &lt;c0&gt;CheckPerson.boolean test(Person p)&lt;/c0&gt; 具有相同返回类型和参数的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This practice makes code easier to read and to maintain.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074758Z" creationid="pingfangx" creationdate="20180521T074758Z">
        <seg>这种做法使代码更易于阅读和维护。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This principle can also be applied to object-oriented programming and languages like the Java language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092859Z" creationid="pingfangx" creationdate="20190102T092859Z">
        <seg>这个原则也可以应用于面向对象的编程像 Java 语言之类的语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This process is called &lt;e0&gt;garbage collection&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085458Z" creationid="pingfangx" creationdate="20180601T085423Z">
        <seg>这个过程被称为 &lt;e0&gt;garbage collection（垃圾回收）&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This program creates, manipulates, and displays information about various objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040057Z" creationid="pingfangx" creationdate="20180601T040057Z">
        <seg>该程序创建，操作并显示有关各种对象的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This program displays &lt;c0&gt;objects are equal&lt;/c0&gt; even though &lt;c1&gt;firstBook&lt;/c1&gt; and &lt;c2&gt;secondBook&lt;/c2&gt; reference two distinct objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102651Z" creationid="pingfangx" creationdate="20190102T102651Z">
        <seg>即使 &lt;c1&gt;firstBook&lt;/c1&gt; 和 &lt;c2&gt;secondBook&lt;/c2&gt; 引用两个不同的对象，此程序仍显示 &lt;c0&gt;objects are equal&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This program prints the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064548Z" creationid="pingfangx" creationdate="20180521T064548Z">
        <seg>该程序打印以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This program searches for the number 12 in an array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085855Z" creationid="pingfangx" creationdate="20180521T085850Z">
        <seg>该程序在数组中搜索数字 12。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This program's output is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085925Z" creationid="pingfangx" creationdate="20180521T085925Z">
        <seg>这个程序的输出是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This reassignment has no permanence, however, because the reference was passed in by value and cannot change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034500Z" creationid="pingfangx" creationdate="20180601T034500Z">
        <seg>然而，这种重新分配没有永久性，因为引用是通过值传递的，并且不能更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This reference is usually assigned to a variable of the appropriate type, like:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062252Z" creationid="pingfangx" creationdate="20180601T062252Z">
        <seg>通常将该引用分配给适当类型的变量，如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This refers to the object (of type &lt;c3&gt;Class&lt;/c3&gt;) that represents the type itself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084153Z" creationid="pingfangx" creationdate="20180518T084153Z">
        <seg>这指的是表示类型本身的对象(类型 &lt;c3&gt;Class&lt;/c3&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This returns a new string that is string1 with string2 added to it at the end.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064359Z" creationid="pingfangx" creationdate="20190103T064359Z">
        <seg>这将返回一个新的字符串，该字符串为 string1，并在结尾处添加了 string2。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This sample creates a frame that contains a &lt;s4&gt;Say 'Hello World'&lt;/s4&gt; button.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065631Z" creationid="pingfangx" creationdate="20180706T065631Z">
        <seg>此示例创建一个包含 &lt;s4&gt;Say 'Hello World'&lt;/s4&gt; 按钮的框架。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section also covers interface-like &lt;i3&gt;abstract classes&lt;/i3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T043104Z" creationid="pingfangx" creationdate="20190102T043104Z">
        <seg>本节还介绍了类似接口的 &lt;i3&gt;abstract classes&lt;/i3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section also describes the way in which you can derive one class from another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042351Z" creationid="pingfangx" creationdate="20180518T042351Z">
        <seg>本节还介绍了如何从另一个类派生一个类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section also presents the &lt;a0&gt;&lt;c1&gt;PrintStream&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;DecimalFormat&lt;/c3&gt;&lt;/a2&gt; classes, which provide methods for writing formatted numerical output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024941Z" creationid="pingfangx" creationdate="20190103T024941Z">
        <seg>本节还介绍了 &lt;a0&gt;&lt;c1&gt;PrintStream&lt;/c1&gt;&lt;/a0&gt; 和 &lt;a2&gt;&lt;c3&gt;DecimalFormat&lt;/c3&gt;&lt;/a2&gt; 类，它们提供了编写格式化数字输出的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section begins with a discussion of the &lt;a0&gt;&lt;c1&gt;Number&lt;/c1&gt;&lt;/a0&gt; class in the &lt;c2&gt;java.lang&lt;/c2&gt; package, its subclasses, and the situations where you would use instantiations of these classes rather than the primitive number types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024928Z" creationid="pingfangx" creationdate="20190103T024928Z">
        <seg>本节首先讨论 &lt;c2&gt;java.lang&lt;/c2&gt; 包中的 &lt;a0&gt;&lt;c1&gt;Number&lt;/c1&gt;&lt;/a0&gt; 类，其子类，以及使用这些类的实例化而不是基本数字类型的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section begins with a discussion of the &lt;c0&gt;Number&lt;/c0&gt; class (in the &lt;c1&gt;java.lang&lt;/c1&gt; package) and its subclasses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024622Z" creationid="pingfangx" creationdate="20190103T024622Z">
        <seg>本节首先讨论 &lt;c0&gt;Number&lt;/c0&gt; 类(在 &lt;c1&gt;java.lang&lt;/c1&gt; 包中)及其子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section begins with a naive approach to this use case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085517Z" creationid="pingfangx" creationdate="20180706T085517Z">
        <seg>本节首先介绍这种用例的简单方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section covers creating and using objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023032Z" creationid="pingfangx" creationdate="20180525T023032Z">
        <seg>本节介绍创建和使用对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section covers enumerations, specialized classes that allow you to define and use sets of constants.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023158Z" creationid="pingfangx" creationdate="20180525T023158Z">
        <seg>本节讨论枚举，这些专用类允许您定义和使用常量集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section covers more aspects of classes that depend on using object references and the &lt;c0&gt;dot&lt;/c0&gt; operator that you learned about in the preceding section: returning values from methods, the &lt;c1&gt;this&lt;/c1&gt; keyword, class vs. instance members, and access control.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023129Z" creationid="pingfangx" creationdate="20180525T023129Z">
        <seg>本节涵盖依赖于使用对象引用的类的更多方面以及您在上一节中了解到的 &lt;c0&gt;dot&lt;/c0&gt; 运算符：从方法返回值，&lt;c1&gt;this&lt;/c1&gt; 关键字，class 与实例成员以及访问控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section covers more aspects of classes that depend on using object references and the &lt;c0&gt;dot&lt;/c0&gt; operator that you learned about in the preceding sections on objects:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T090156Z" creationid="pingfangx" creationdate="20180601T090156Z">
        <seg>本节涵盖了关于类的更多方面，类依赖于使用对象引用的以及您在对象的前面部分中了解到的 &lt;c0&gt;dot&lt;/c0&gt; 运算符：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section covers the following topics:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121217Z" creationid="pingfangx" creationdate="20180705T121217Z">
        <seg>本节包括以下主题：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section defines a class that models the state and behavior of a real-world object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042926Z" creationid="pingfangx" creationdate="20180518T042926Z">
        <seg>本节定义了一个模拟真实世界对象的状态和行为的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section defines a simple interface and explains the necessary changes for any class that implements it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T043042Z" creationid="pingfangx" creationdate="20180518T043042Z">
        <seg>本节定义了一个简单的接口，并解释了实现它的任何类的必要更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section demonstrates how the &lt;a0&gt;&lt;c1&gt;Comparator&lt;/c1&gt;&lt;/a0&gt; interface has been enhanced with default and static methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065158Z" creationid="pingfangx" creationdate="20190102T065158Z">
        <seg>本节演示如何使用默认和静态方法增强 &lt;a0&gt;&lt;c1&gt;Comparator&lt;/c1&gt;&lt;/a0&gt; 接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section describes the control flow statements supported by the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072748Z" creationid="pingfangx" creationdate="20180518T072748Z">
        <seg>本节介绍 Java 编程语言支持的控制流语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section describes the decision-making statements (&lt;c2&gt;if-then&lt;/c2&gt;, &lt;c3&gt;if-then-else&lt;/c3&gt;, &lt;c4&gt;switch&lt;/c4&gt;), the looping statements (&lt;c5&gt;for&lt;/c5&gt;, &lt;c6&gt;while&lt;/c6&gt;, &lt;c7&gt;do-while&lt;/c7&gt;), and the branching statements (&lt;c8&gt;break&lt;/c8&gt;, &lt;c9&gt;continue&lt;/c9&gt;, &lt;c10&gt;return&lt;/c10&gt;) supported by the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080755Z" creationid="pingfangx" creationdate="20180521T080755Z">
        <seg>本节介绍由 Java 编程语言支持的决策制定语句(&lt;c2&gt;if-then&lt;/c2&gt;，&lt;c3&gt;if-then-else&lt;/c3&gt;，&lt;c4&gt;switch&lt;/c4&gt;)，循环语句(&lt;c5&gt;for&lt;/c5&gt;，&lt;c6&gt;while&lt;/c6&gt;，&lt;c7&gt;do-while&lt;/c7&gt;)和分支语句(&lt;c8&gt;break&lt;/c8&gt;，&lt;c9&gt;continue&lt;/c9&gt; &lt;c10&gt;return&lt;/c10&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section describes the operators of the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072608Z" creationid="pingfangx" creationdate="20180518T072608Z">
        <seg>本节介绍 Java 编程语言的运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section describes the way in which you can derive one class from another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042747Z" creationid="pingfangx" creationdate="20190102T042747Z">
        <seg>本节介绍了从另一个类派生一个类的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section describes using the &lt;c0&gt;String&lt;/c0&gt; class to create and manipulate strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024748Z" creationid="pingfangx" creationdate="20190103T024748Z">
        <seg>本节介绍如何使用 &lt;c0&gt;String&lt;/c0&gt; 类来创建和操作字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section discusses arrays in greater detail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021522Z" creationid="pingfangx" creationdate="20180521T021522Z">
        <seg>本节更详细地讨论数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section discusses expressions, statements, and blocks using example code that you've already seen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072741Z" creationid="pingfangx" creationdate="20180518T072741Z">
        <seg>本节讨论使用您已经见过的示例代码的表达式，语句和块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section discusses this relationship, plus variable naming rules and conventions, basic data types (primitive types, character strings, and arrays), default values, and literals.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072603Z" creationid="pingfangx" creationdate="20180518T072603Z">
        <seg>本节讨论这种关系，加上变量命名规则和约定，基本数据类型(基本类型，字符串和数组)，默认值和文字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section explains how classes inherit state and behavior from their superclasses, and explains how to derive one class from another using the simple syntax provided by the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T043000Z" creationid="pingfangx" creationdate="20180518T043000Z">
        <seg>本节介绍了类如何继承其超类的状态和行为，并解释了如何使用 Java 编程语言提供的简单语法从另一个类派生另一个类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section explains why this is useful, and introduces you to the Application Programming Interface (API) provided by the Java platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T043101Z" creationid="pingfangx" creationdate="20180518T043101Z">
        <seg>本节解释了为什么这很有用，并向您介绍了 Java 平台提供的应用程序编程接口(API)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section shows you the anatomy of a class, and how to declare fields, methods, and constructors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023024Z" creationid="pingfangx" creationdate="20180525T023024Z">
        <seg>本节将向您展示一个类的解剖结构，以及如何声明字段，方法和构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This statement creates a new &lt;t0&gt;Rectangle&lt;/t0&gt; object and immediately gets its height.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T080017Z" creationid="pingfangx" creationdate="20180601T080017Z">
        <seg>该语句创建一个新的 &lt;t0&gt;Rectangle&lt;/t0&gt; 对象并立即获取其高度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This statement will be discussed in the next section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062413Z" creationid="pingfangx" creationdate="20180601T062413Z">
        <seg>该语句将在下一节讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This subtype is called a &lt;i0&gt;covariant return type&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090029Z" creationid="pingfangx" creationdate="20190102T090029Z">
        <seg>此子类型称为 &lt;i0&gt;协变返回类型（covariant return type）&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table defines levels of access conferred by a modifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040134Z" creationid="pingfangx" creationdate="20180607T040134Z">
        <seg>该表定义了一个修饰符赋予的访问级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists Character methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062203Z" creationid="pingfangx" creationdate="20190103T062203Z">
        <seg>此表列出了 Character 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists String methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072622Z" creationid="pingfangx" creationdate="20190103T072622Z">
        <seg>该表列出了 String 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists String methods for manipulating strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074010Z" creationid="pingfangx" creationdate="20190103T074010Z">
        <seg>此表列出了用于操作字符串的 String 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists character sequences used for formatting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062345Z" creationid="pingfangx" creationdate="20190103T062345Z">
        <seg>该表列出了用于格式化的字符序列</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists conversion methods for the Integer class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030832Z" creationid="pingfangx" creationdate="20190103T030832Z">
        <seg>此表列出了 Integer 类的转换方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists length and capacity methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081358Z" creationid="pingfangx" creationdate="20190103T081358Z">
        <seg>此表列出了长度和容量方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists methods for comparing strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075439Z" creationid="pingfangx" creationdate="20190103T075439Z">
        <seg>此表列出了比较字符串的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists methods implemented by all subclasses of Number</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030548Z" creationid="pingfangx" creationdate="20190103T030548Z">
        <seg>此表列出了 Number 的所有子类实现的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists miscellaneous StringBuilder methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081938Z" creationid="pingfangx" creationdate="20190103T081938Z">
        <seg>此表列出了各种 StringBuilder 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists operators according to precedence order</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062918Z" creationid="pingfangx" creationdate="20180521T062742Z">
        <seg>此表根据优先顺序列出运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists other methods in the String class for manipulating strings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073018Z" creationid="pingfangx" creationdate="20190103T073018Z">
        <seg>此表列出了 String 类中用于操作字符串的其他方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists the basic math methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035520Z" creationid="pingfangx" creationdate="20190103T035520Z">
        <seg>此表列出了基本的数学方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists the constructors for the StringBuilder class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081029Z" creationid="pingfangx" creationdate="20190103T081029Z">
        <seg>此表列出了 StringBuilder 类的构造函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists the exponential and logarithmic math methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035929Z" creationid="pingfangx" creationdate="20190103T035929Z">
        <seg>下表列出了指数和对数的数学方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists the search methods in the String class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073405Z" creationid="pingfangx" creationdate="20190103T073405Z">
        <seg>此表列出了 String 类中的搜索方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table lists trigonometric math methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040301Z" creationid="pingfangx" creationdate="20190103T040301Z">
        <seg>该表列出了三角函数方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table shows the visibility levels for each of the access modifiers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041507Z" creationid="pingfangx" creationdate="20180607T041507Z">
        <seg>此表显示每个访问修饰符的可见性级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This table summarizes what happens when you define a method with the same signature as a method in a superclass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092637Z" creationid="pingfangx" creationdate="20190102T092637Z">
        <seg>此表总结了在定义具有与超类中的方法相同的签名的方法时发生的情况</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This technique, called &lt;e0&gt;covariant return type&lt;/e0&gt;, means that the return type is allowed to vary in the same direction as the subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092144Z" creationid="pingfangx" creationdate="20180601T092144Z">
        <seg>这种称为 &lt;e0&gt;covariant return type（协变返回类型）&lt;/e0&gt; 的技术意味着返回类型可以在与子类相同的方向上变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This time, information about the tire width is displayed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094015Z" creationid="pingfangx" creationdate="20190102T094015Z">
        <seg>这次，显示有关轮胎宽度的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tiny nested class is used just once, to create an</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021013Z" creationid="pingfangx" creationdate="20190102T021013Z">
        <seg>This tiny nested class is used just once, to create an</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This trail covers the fundamentals of programming in the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042128Z" creationid="pingfangx" creationdate="20180518T042128Z">
        <seg>此路径涵盖了 Java 编程语言编程的基础。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This trail provides everything you'll need to know about getting started with the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032140Z" creationid="pingfangx" creationdate="20180518T032140Z">
        <seg>该路径提供了有关 Java 编程语言入门所需的一切。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will be discussed later in this lesson in the section titled "Using the &lt;c8&gt;this&lt;/c8&gt; Keyword."</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033802Z" creationid="pingfangx" creationdate="20180601T033802Z">
        <seg>这将在本课稍后的标题为 "使用 &lt;c8&gt;this&lt;/c8&gt; 关键字" 部分进行讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will be discussed later, in the lesson on interfaces and inheritance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180529T065417Z" creationid="pingfangx" creationdate="20180529T065417Z">
        <seg>这将在稍后的接口和继承课程中讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This works well when the initialization value is available and the initialization can be put on one line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065734Z" creationid="pingfangx" creationdate="20180705T065734Z">
        <seg>当初始化值可用并且初始化可以放在一行上时，这很有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This would be especially valuable if the methods in the &lt;c4&gt;Bicycle&lt;/c4&gt; class were complex and had taken substantial time to debug.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082609Z" creationid="pingfangx" creationdate="20190102T082609Z">
        <seg>如果 &lt;c4&gt;Bicycle&lt;/c4&gt; 类中的方法很复杂并且需要花费大量时间来调试，这将特别有价值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those source files are then compiled into &lt;c1&gt;.class&lt;/c1&gt; files by the &lt;c2&gt;javac&lt;/c2&gt; compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033121Z" creationid="pingfangx" creationdate="20180518T033121Z">
        <seg>然后这些源文件被 &lt;c2&gt;javac&lt;/c2&gt; 编译器编译到 &lt;c1&gt;.class&lt;/c1&gt; 文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Threads will be discussed in the lesson on concurrency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083121Z" creationid="pingfangx" creationdate="20190103T083121Z">
        <seg>线程将在关于并发的课程中讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Three places after decimal point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033552Z" creationid="pingfangx" creationdate="20190103T033552Z">
        <seg>小数点后三位。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Through the Java VM, the same application is capable of running on multiple platforms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033244Z" creationid="pingfangx" creationdate="20180518T033244Z">
        <seg>通过 Java VM，相同的应用程序能够在多个平台上运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Through these object interactions, a program can carry out various tasks, such as implementing a GUI, running an animation, or sending and receiving information over a network.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T035926Z" creationid="pingfangx" creationdate="20180601T035926Z">
        <seg>通过这些对象交互，程序可以执行各种任务，例如实现 GUI，运行动画或通过网络发送和接收信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown exception declaration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024210Z" creationid="pingfangx" creationdate="20190102T024210Z">
        <seg>抛出异常声明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus, &lt;c4&gt;second string&lt;/c4&gt; is displayed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091619Z" creationid="pingfangx" creationdate="20180521T091619Z">
        <seg>因此，显示 &lt;c4&gt;second string&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus, each &lt;t1&gt;Rectangle&lt;/t1&gt; object has fields named &lt;t2&gt;origin&lt;/t2&gt;, &lt;t3&gt;width&lt;/t3&gt;, and &lt;t4&gt;height&lt;/t4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T074241Z" creationid="pingfangx" creationdate="20180601T074241Z">
        <seg>因此，每个 &lt;t1&gt;Rectangle&lt;/t1&gt; 对象都具有名为 &lt;t2&gt;origin&lt;/t2&gt;，&lt;t3&gt;width&lt;/t3&gt; 和 &lt;t4&gt;height&lt;/t4&gt; 的字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus, the &lt;c2&gt;else&lt;/c2&gt; clause executes (since it's attached to the second &lt;c3&gt;if&lt;/c3&gt; statement).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091616Z" creationid="pingfangx" creationdate="20180521T091616Z">
        <seg>因此，执行 &lt;c2&gt;else&lt;/c2&gt; 子句(因为它连接到第二个 &lt;c3&gt;if&lt;/c3&gt; 语句)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus, the compiler converts the previous code to the following at runtime:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084216Z" creationid="pingfangx" creationdate="20190103T084216Z">
        <seg>因此，编译器在运行时将之前的代码转换为以下代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus, the data drawing class might declare four methods named &lt;c3&gt;draw&lt;/c3&gt;, each of which has a different parameter list.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065416Z" creationid="pingfangx" creationdate="20180525T065416Z">
        <seg>因此，数据绘图类可能会声明四个名为 &lt;c3&gt;draw&lt;/c3&gt; 的方法，每个方法都有不同的参数列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus, you can use &lt;c10&gt;format&lt;/c10&gt; or &lt;c11&gt;printf&lt;/c11&gt; anywhere in your code where you have previously been using &lt;c12&gt;print&lt;/c12&gt; or &lt;c13&gt;println&lt;/c13&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032432Z" creationid="pingfangx" creationdate="20190103T032402Z">
        <seg>因此，您可以在代码中之前使用 &lt;c12&gt;print&lt;/c12&gt; 或 &lt;c13&gt;println&lt;/c13&gt; 的任何位置使用 &lt;c10&gt;format&lt;/c10&gt; 或 &lt;c11&gt;printf&lt;/c11&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TimeClient myTimeClient = new SimpleTimeClient();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061206Z" creationid="pingfangx" creationdate="20190102T061206Z">
        <seg>TimeClient myTimeClient = new SimpleTimeClient();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To access a field, you can use a named reference to an object, as in the previous examples, or you can use any expression that returns an object reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T075936Z" creationid="pingfangx" creationdate="20180601T075936Z">
        <seg>要访问一个字段，可以像前面的例子那样使用对象的命名引用，或者使用任何返回对象引用的表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To access the field, you must use a qualified name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033757Z" creationid="pingfangx" creationdate="20180601T033757Z">
        <seg>要访问该字段，您必须使用限定名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To access variables in the enclosing class, use the keyword &lt;c2&gt;this&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080751Z" creationid="pingfangx" creationdate="20181228T080751Z">
        <seg>要访问封闭类中的变量，请使用关键字 &lt;c2&gt;this&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To accomplish the string reversal, the program converts the string to an array of characters (first &lt;c0&gt;for&lt;/c0&gt; loop), reverses the array into a second array (second &lt;c1&gt;for&lt;/c1&gt; loop), and then converts back to a string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082740Z" creationid="pingfangx" creationdate="20190103T082740Z">
        <seg>要完成字符串反转，程序会将字符串转换为字符数组(第一个 &lt;c0&gt;for&lt;/c0&gt; 循环)，将数组反转为第二个数组(第二个 &lt;c1&gt;for&lt;/c1&gt; 循环)，然后转换回字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To accomplish the string reversal, the program had to convert the string to an array of characters (first &lt;c0&gt;for&lt;/c0&gt; loop), reverse the array into a second array (second &lt;c1&gt;for&lt;/c1&gt; loop), and then convert back to a string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064129Z" creationid="pingfangx" creationdate="20190103T064129Z">
        <seg>要完成字符串反转，程序必须将字符串转换为字符数组(第一个 &lt;c0&gt;for&lt;/c0&gt; 循环)，将数组反转为第二个数组(第二个 &lt;c1&gt;for&lt;/c1&gt; 循环) ，然后转换回字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add this same metadata with an annotation, you must first define the &lt;i0&gt;annotation type&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024838Z" creationid="pingfangx" creationdate="20190102T024838Z">
        <seg>要使用注解添加此相同元数据，必须先定义 &lt;i0&gt;annotation type&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To buy this book, refer to the box to the right.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030947Z" creationid="pingfangx" creationdate="20180518T030947Z">
        <seg>要购买此书，请参阅右侧的框。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To change to a directory on a different drive, you must type an extra command: the name of the drive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034810Z" creationid="pingfangx" creationdate="20180518T034810Z">
        <seg>要切换到其他驱动器上的目录，必须输入一个额外的命令：驱动器的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To compile your source file, change your current directory to the directory where your file is located.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034751Z" creationid="pingfangx" creationdate="20180518T034751Z">
        <seg>要编译源文件，请将当前目录更改为文件所在的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a clone, you write:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101524Z" creationid="pingfangx" creationdate="20190102T101524Z">
        <seg>要创建克隆，请编写：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a new &lt;c0&gt;Bicycle&lt;/c0&gt; object called &lt;c1&gt;myBike&lt;/c1&gt;, a constructor is called by the &lt;c2&gt;new&lt;/c2&gt; operator:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034655Z" creationid="pingfangx" creationdate="20180528T034655Z">
        <seg>要创建名为 &lt;c1&gt;myBike&lt;/c1&gt; 的新 &lt;c0&gt;Bicycle&lt;/c0&gt; 对象，&lt;c2&gt;new&lt;/c2&gt; 运算符会调用构造函数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a source file, you have two options:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034510Z" creationid="pingfangx" creationdate="20180518T034510Z">
        <seg>要创建源文件，您有两个选择：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create this program, you will:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034446Z" creationid="pingfangx" creationdate="20180518T034446Z">
        <seg>要创建此程序，您将：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To declare a class that implements an interface, you include an &lt;c0&gt;implements&lt;/c0&gt; clause in the class declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061831Z" creationid="pingfangx" creationdate="20190102T061831Z">
        <seg>要声明实现接口的类，请在类声明中包含 &lt;c0&gt;implements&lt;/c0&gt; 子句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To demonstrate polymorphic features in the Java language, extend the &lt;c0&gt;Bicycle&lt;/c0&gt; class with a &lt;c1&gt;MountainBike&lt;/c1&gt; and a &lt;c2&gt;RoadBike&lt;/c2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093739Z" creationid="pingfangx" creationdate="20190102T093739Z">
        <seg>要演示 Java 语言中的多态特性，请使用 &lt;c1&gt;MountainBike&lt;/c1&gt; 和 &lt;c2&gt;RoadBike&lt;/c2&gt; 类继承 &lt;c0&gt;Bicycle&lt;/c0&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To demonstrate, consider the following array, which holds the numbers 1 through 10:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085613Z" creationid="pingfangx" creationdate="20180521T085613Z">
        <seg>为了演示，考虑下面的数组，它包含数字 1 到 10：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To determine the type of a lambda expression, the Java compiler uses the target type of the context or situation in which the lambda expression was found.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081847Z" creationid="pingfangx" creationdate="20181228T081847Z">
        <seg>要确定 lambda 表达式的类型，Java 编译器将使用发现 lambda 表达式的上下文或情境的目标类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do this in Notepad, first choose the &lt;b1&gt; File &gt; Save As&lt;/b1&gt; menu item.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034635Z" creationid="pingfangx" creationdate="20180518T034635Z">
        <seg>要在记事本中执行此操作，请先选择 &lt;b1&gt; File &gt; Save As&lt;/b1&gt; 菜单项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do this, instead of using an anonymous class expression, you use a &lt;i5&gt;lambda expression&lt;/i5&gt;, which is highlighted in the following method invocation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092037Z" creationid="pingfangx" creationdate="20180706T092037Z">
        <seg>要执行此操作，请使用 &lt;i5&gt;lambda 表达式&lt;/i5&gt;，而不是使用匿名类表达式，该表达式在以下方法调用中高亮：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To fix this mistake, you need to close the quotation marks around the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040349Z" creationid="pingfangx" creationdate="20180518T040349Z">
        <seg>为了解决这个错误，你需要关闭字符串周围的引号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To format a string containing numbers for output, you can use the &lt;c0&gt;printf()&lt;/c0&gt; or &lt;c1&gt;format()&lt;/c1&gt; methods in the &lt;c2&gt;PrintStream&lt;/c2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041234Z" creationid="pingfangx" creationdate="20190103T041234Z">
        <seg>要格式化包含输出数字的字符串，可以使用 &lt;c2&gt;PrintStream&lt;/c2&gt; 类中的 &lt;c0&gt;printf()&lt;/c0&gt; 或 &lt;c1&gt;format()&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get a number in a different range, you can perform arithmetic on the value returned by the random method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040549Z" creationid="pingfangx" creationdate="20190103T040549Z">
        <seg>要获取不同范围内的数字，可以对随机方法返回的值执行算术运算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To handle user interface events, you must know how to use inner classes, because the event-handling mechanism makes extensive use of them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101221Z" creationid="pingfangx" creationdate="20180705T101221Z">
        <seg>要处理用户界面事件，您必须知道如何使用内部类，因为事件处理机制会广泛使用它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To implement this interface, the name of your class would change (to a particular brand of bicycle, for example, such as &lt;c0&gt;ACMEBicycle&lt;/c0&gt;), and you'd use the &lt;c1&gt;implements&lt;/c1&gt; keyword in the class declaration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063915Z" creationid="pingfangx" creationdate="20180518T063915Z">
        <seg>为了实现这个接口，你的类的名字会改变(例如，一个特定品牌的自行车，例如，&lt;c0&gt;ACMEBicycle&lt;/c0&gt;)，并且你会使用 &lt;c1&gt;implements&lt;/c1&gt; 关键字在类声明中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To instantiate an inner class, you must first instantiate the outer class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091317Z" creationid="pingfangx" creationdate="20180705T091317Z">
        <seg>要实例化内部类，必须首先实例化外部类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To invert the value of a &lt;c0&gt;boolean&lt;/c0&gt;, which operator would you use?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072547Z" creationid="pingfangx" creationdate="20180521T072547Z">
        <seg>要反转 &lt;c0&gt;boolean&lt;/c0&gt; 的值，您将使用哪个运算符？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To invoke this &lt;c0&gt;print&lt;/c0&gt; method to print elements that have an even index value, you can specify a lambda expression that implements the method &lt;c1&gt;Boolean Function.apply(Integer t)&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015022Z" creationid="pingfangx" creationdate="20190102T015022Z">
        <seg>要调用此 &lt;c0&gt;print&lt;/c0&gt; 方法来打印具有偶数索引值的元素，可以指定实现方法 &lt;c1&gt;Boolean Function.apply(Integer t)&lt;/c1&gt; 的 lambda 表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To print numbers in the French system (where a comma is used in place of the decimal place in the English representation of floating point numbers), for example, you would use:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033136Z" creationid="pingfangx" creationdate="20190103T033136Z">
        <seg>例如，要在法语系统中打印数字(使用逗号代替浮点数的英文表示中的小数位)，您将使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To print the e-mail address of members who are eligible for Selective Service, invoke the &lt;c0&gt;processElements&lt;/c0&gt; method as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100653Z" creationid="pingfangx" creationdate="20180706T100653Z">
        <seg>要打印符合美国兵役登记制度的成员的电子邮件地址，请按如下方式调用 &lt;c0&gt;processElements&lt;/c0&gt; 方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To print the sentence</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062603Z" creationid="pingfangx" creationdate="20190103T062603Z">
        <seg>要打印句子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To process events in a graphical user interface (GUI) application, such as keyboard actions, mouse actions, and scroll actions, you typically create event handlers, which usually involves implementing a particular interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075219Z" creationid="pingfangx" creationdate="20181228T075219Z">
        <seg>要处理图形用户接口(GUI)应用程序中的事件，例如键盘操作，鼠标操作和滚动操作，通常会创建事件处理程序，这通常涉及实现特定的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To provide the same capability for class variables, the Java programming language includes &lt;i1&gt;static initialization blocks&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065841Z" creationid="pingfangx" creationdate="20180705T065841Z">
        <seg>为了为类变量提供相同的功能，Java 编程语言包括 &lt;i1&gt;static initialization blocks（静态初始化块）&lt;/i1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To refer to the &lt;c2&gt;Point&lt;/c2&gt; field &lt;b3&gt;&lt;c4&gt;x&lt;/c4&gt;&lt;/b3&gt;, the constructor must use &lt;c5&gt;this.x&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092855Z" creationid="pingfangx" creationdate="20180601T092855Z">
        <seg>要引用 &lt;c2&gt;Point&lt;/c2&gt; 的字段 &lt;b3&gt;&lt;c4&gt;x&lt;/c4&gt;&lt;/b3&gt;，构造函数必须使用 &lt;c5&gt;this.x&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To refer to the member variable of the inner class &lt;c9&gt;FirstLevel&lt;/c9&gt;, use the keyword &lt;c10&gt;this&lt;/c10&gt; to represent the enclosing scope:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091648Z" creationid="pingfangx" creationdate="20180705T091648Z">
        <seg>要引用内部类 &lt;c9&gt;FirstLevel&lt;/c9&gt; 的成员变量，请使用关键字 &lt;c10&gt;this&lt;/c10&gt; 来表示封闭范围：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To return a value, simply put the value (or an expression that calculates the value) after the &lt;c3&gt;return&lt;/c3&gt; keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090716Z" creationid="pingfangx" creationdate="20180521T090716Z">
        <seg>要返回值，只需在 &lt;c3&gt;return&lt;/c3&gt; 关键字后面放置值(或计算值的表达式)即可。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To see an inner class in use, first consider an array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100530Z" creationid="pingfangx" creationdate="20180705T100530Z">
        <seg>要查看正在使用的内部类，首先要考虑一个数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To see this effect more clearly, try removing the &lt;c0&gt;continue&lt;/c0&gt; statement and recompiling.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090541Z" creationid="pingfangx" creationdate="20180521T090541Z">
        <seg>要更清楚地看到此效果，请尝试删除 &lt;c0&gt;continue&lt;/c0&gt; 语句并重新编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To set the timer to run, create an &lt;c2&gt;@Schedule&lt;/c2&gt; annotation and apply it twice to the &lt;t3&gt;doPeriodicCleanup&lt;/t3&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041054Z" creationid="pingfangx" creationdate="20190102T041054Z">
        <seg>要将计时器设置为运行，请创建 &lt;c2&gt;@Schedule&lt;/c2&gt; 注解并将其应用于 &lt;t3&gt;doPeriodicCleanup&lt;/t3&gt; 方法两次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To specify the search criteria, you implement the &lt;c0&gt;CheckPerson&lt;/c0&gt; interface:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090144Z" creationid="pingfangx" creationdate="20180706T090144Z">
        <seg>要指定搜索条件，请实现 &lt;c0&gt;CheckPerson&lt;/c0&gt; 接口：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To start, suppose that you want to sort the deck of playing cards by rank, regardless of suit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072421Z" creationid="pingfangx" creationdate="20190102T071256Z">
        <seg>首先，假设您想按点数对扑克牌进行排序，而不考虑花色。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To summarize, there are three classes: &lt;c0&gt;Bicycle&lt;/c0&gt;, &lt;c1&gt;MountainBike&lt;/c1&gt;, and &lt;c2&gt;RoadBike&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094020Z" creationid="pingfangx" creationdate="20190102T094020Z">
        <seg>总而言之，有三个类：&lt;c0&gt;Bicycle&lt;/c0&gt;，&lt;c1&gt;MountainBike&lt;/c1&gt; 和 &lt;c2&gt;RoadBike&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To suppress multiple categories of warnings, use the following syntax:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033700Z" creationid="pingfangx" creationdate="20190102T033700Z">
        <seg>要禁止多种类别的警告，请使用以下语法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To test whether two objects are equal in the sense of &lt;i0&gt;equivalency&lt;/i0&gt; (containing the same information), you must override the &lt;c1&gt;equals()&lt;/c1&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102547Z" creationid="pingfangx" creationdate="20190102T102547Z">
        <seg>要测试两个对象在 &lt;i0&gt;等价（equivalency）&lt;/i0&gt;(包含相同信息)的意义上是否相等，必须覆盖 &lt;c1&gt;equals()&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use an interface, you write a class that &lt;i0&gt;implements&lt;/i0&gt; the interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054152Z" creationid="pingfangx" creationdate="20190102T054152Z">
        <seg>要使用接口，可以编写一个 &lt;i0&gt;implements&lt;/i0&gt; 接口的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use class methods for converting values to and from other primitive types, for converting to and from strings, and for converting between number systems (decimal, octal, hexadecimal, binary).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030535Z" creationid="pingfangx" creationdate="20190103T030535Z">
        <seg>使用类方法将值转换为其他基本类型和从其他基本类型转换，转换为字符串和从字符串转换，以及在数字系统之间进行转换(十进制，八进制，十六进制，二进制)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use constants defined by the class, such as &lt;c0&gt;MIN_VALUE&lt;/c0&gt; and &lt;c1&gt;MAX_VALUE&lt;/c1&gt;, that provide the upper and lower bounds of the data type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030332Z" creationid="pingfangx" creationdate="20190103T030332Z">
        <seg>使用由类定义的常量，例如 &lt;c0&gt;MIN_VALUE&lt;/c0&gt; 和 &lt;c1&gt;MAX_VALUE&lt;/c1&gt;，它们提供数据类型的上限和下限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use this class, you create a new instance of it and invoke the &lt;c0&gt;printPersons&lt;/c0&gt; method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090352Z" creationid="pingfangx" creationdate="20180706T090352Z">
        <seg>要使用此类，请创建它的新实例并调用 &lt;c0&gt;printPersons&lt;/c0&gt; 方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use varargs, you follow the type of the last parameter by an ellipsis (three dots, ...), then a space, and the parameter name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032956Z" creationid="pingfangx" creationdate="20180601T032956Z">
        <seg>要使用可变参数，在最后一个参数的类型后面加上省略号(三个点，...)，空格和参数名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To write your first program, you'll need:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034404Z" creationid="pingfangx" creationdate="20180518T034404Z">
        <seg>要编写第一个程序，您需要：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trail icon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032142Z" creationid="pingfangx" creationdate="20180518T032142Z">
        <seg>Trail icon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trail: Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032127Z" creationid="pingfangx" creationdate="20180518T032127Z">
        <seg>Trail: Getting Started</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trail: Getting Started (The Java™ Tutorials)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032013Z" creationid="pingfangx" creationdate="20180518T032013Z">
        <seg>Trail: Getting Started (The Java™ Tutorials)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trail: Getting Started: Table of Contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040714Z" creationid="pingfangx" creationdate="20180518T040714Z">
        <seg>Trail: Getting Started: Table of Contents</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trail: Getting Started: Table of Contents (The Java™ Tutorials)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040702Z" creationid="pingfangx" creationdate="20180518T040702Z">
        <seg>Trail: Getting Started: Table of Contents (The Java™ Tutorials)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trail: Learning the Java Language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042112Z" creationid="pingfangx" creationdate="20180518T042112Z">
        <seg>路径：学习 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trail: Learning the Java Language (The Java™ Tutorials)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042016Z" creationid="pingfangx" creationdate="20180518T042016Z">
        <seg>Trail: Learning the Java Language (The Java™ Tutorials)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trail: Learning the Java Language: Table of Contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091925Z" creationid="pingfangx" creationdate="20180521T091925Z">
        <seg>路径：学习 Java 语言：目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trail: Learning the Java Language: Table of Contents (The Java™ Tutorials)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093133Z" creationid="pingfangx" creationdate="20180521T093133Z">
        <seg>Trail: Learning the Java Language: Table of Contents (The Java™ Tutorials)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trails Covering the Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030920Z" creationid="pingfangx" creationdate="20180518T030920Z">
        <seg>涵盖基础的路径</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Trigonometric Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040156Z" creationid="pingfangx" creationdate="20190103T040156Z">
        <seg>三角函数方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>True or false: an &lt;t0&gt;Enum&lt;/t0&gt; type can be a subclass of &lt;t1&gt;java.lang.String&lt;/t1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020151Z" creationid="pingfangx" creationdate="20190102T020151Z">
        <seg>对或错：&lt;t0&gt;Enum&lt;/t0&gt; 类型可以是 &lt;t1&gt;java.lang.String&lt;/t1&gt; 的子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Try creating some illegal field names and see what kind of error the compiler produces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061852Z" creationid="pingfangx" creationdate="20180521T061852Z">
        <seg>尝试创建一些非法的字段名称，并查看编译器生成的错误类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Try the same with a local variable and see what kind of compiler errors you can produce.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061909Z" creationid="pingfangx" creationdate="20180521T061909Z">
        <seg>尝试使用本地变量，并查看可以产生哪种编译器错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Try to anticipate all uses for your interface and specify it completely from the beginning.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063054Z" creationid="pingfangx" creationdate="20190102T063054Z">
        <seg>尝试预测接口的所有用途，并从头开始完全指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tutorial Contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030510Z" creationid="pingfangx" creationdate="20180518T030510Z">
        <seg>教程内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tutorial Resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030534Z" creationid="pingfangx" creationdate="20180518T030534Z">
        <seg>教程资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tutorials and reference guides for the Java Programming Language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030232Z" creationid="pingfangx" creationdate="20180518T030232Z">
        <seg>Java 编程语言的教程和参考指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Two nested loops are required: one to iterate over the substring and one to iterate over the string being searched.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090625Z" creationid="pingfangx" creationdate="20180521T090625Z">
        <seg>需要两个嵌套循环：一个循环遍历子字符串，一个迭代要搜索的字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type Annotations and Pluggable Type Systems</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092408Z" creationid="pingfangx" creationdate="20180521T092408Z">
        <seg>类型注解和可插入类系统</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type Annotations and Pluggable Type Systems (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034408Z" creationid="pingfangx" creationdate="20190102T034408Z">
        <seg>Type Annotations and Pluggable Type Systems (The Java™ Tutorials &gt; Learning the Java Language &gt; Annotations)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type Comparison Operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071730Z" creationid="pingfangx" creationdate="20180521T071730Z">
        <seg>类型比较运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type Erasure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092936Z" creationid="pingfangx" creationdate="20180521T092936Z">
        <seg>类型擦除</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type Inference</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092912Z" creationid="pingfangx" creationdate="20180521T092907Z">
        <seg>类型推断</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type annotations were created to support improved analysis of Java programs way of ensuring stronger type checking.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T035020Z" creationid="pingfangx" creationdate="20190102T035020Z">
        <seg>创建类型注解是为了支持改进的 Java 程序分析，以确保更强的类型检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type cast:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024201Z" creationid="pingfangx" creationdate="20190102T024201Z">
        <seg>类型转换：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type casting tells the compiler what the object really is.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062238Z" creationid="pingfangx" creationdate="20190102T062238Z">
        <seg>类型转换告诉编译器对象到底是什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064216Z" creationid="pingfangx" creationdate="20180525T064216Z">
        <seg>类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically, a company sells a software package that contains complex methods that another company wants to use in its own software product.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055724Z" creationid="pingfangx" creationdate="20190102T055724Z">
        <seg>通常，公司销售的软件包包含另一家公司希望在其自己的软件产品中使用的复杂方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically, a method has a unique name within its class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065159Z" creationid="pingfangx" creationdate="20180525T065159Z">
        <seg>通常，方法在其类中具有唯一的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>URANUS  (8.686e+25, 2.5559e7),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020020Z" creationid="pingfangx" creationdate="20190102T020020Z">
        <seg>URANUS  (8.686e+25, 2.5559e7),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unary Operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071241Z" creationid="pingfangx" creationdate="20180521T071241Z">
        <seg>一元运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unary minus operator; negates an expression</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065200Z" creationid="pingfangx" creationdate="20180521T065051Z">
        <seg>一元减运算符；否定一个表达</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unary operators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064907Z" creationid="pingfangx" creationdate="20180521T064907Z">
        <seg>一元运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unary plus operator; indicates positive value (numbers are positive without this, however)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065158Z" creationid="pingfangx" creationdate="20180521T065018Z">
        <seg>一元加运算符；表示正值(但没有这个数字是正数)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unbounded Wildcards</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092921Z" creationid="pingfangx" creationdate="20180521T092921Z">
        <seg>无界通配符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unboxing through assignment</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084905Z" creationid="pingfangx" creationdate="20190103T084612Z">
        <seg>通过赋值拆箱</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unboxing through method invocation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084849Z" creationid="pingfangx" creationdate="20190103T084607Z">
        <seg>通过方法调用拆箱</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Understanding Class Members</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092135Z" creationid="pingfangx" creationdate="20180521T092135Z">
        <seg>了解类成员</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Understanding Class Members (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042143Z" creationid="pingfangx" creationdate="20180607T042143Z">
        <seg>Understanding Class Members (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unicode escape sequences may be used elsewhere in a program (such as in field names, for example), not just in &lt;c6&gt;char&lt;/c6&gt; or &lt;c7&gt;String&lt;/c7&gt; literals.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T083503Z" creationid="pingfangx" creationdate="20180518T083503Z">
        <seg>Unicode 转义序列可以在程序中的其他地方使用(例如在字段名称中)，而不仅仅在 &lt;c6&gt;char&lt;/c6&gt; 或 &lt;c7&gt;String&lt;/c7&gt; 字面量中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike &lt;c0&gt;if-then&lt;/c0&gt; and &lt;c1&gt;if-then-else&lt;/c1&gt; statements, the &lt;c2&gt;switch&lt;/c2&gt; statement can have a number of possible execution paths.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081506Z" creationid="pingfangx" creationdate="20180521T081506Z">
        <seg>与 &lt;c0&gt;if-then&lt;/c0&gt; 和 &lt;c1&gt;if-then-else&lt;/c1&gt; 语句不同，&lt;c2&gt;switch&lt;/c2&gt; 语句可以具有许多可能的执行路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike &lt;c5&gt;if-then&lt;/c5&gt; and &lt;c6&gt;if-then-else&lt;/c6&gt;, the &lt;c7&gt;switch&lt;/c7&gt; statement allows for any number of possible execution paths.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090904Z" creationid="pingfangx" creationdate="20180521T090904Z">
        <seg>与 &lt;c5&gt;if-then&lt;/c5&gt; 和 &lt;c6&gt;if-then-else&lt;/c6&gt; 不同，&lt;c7&gt;switch&lt;/c7&gt; 语句允许任意数量的可能执行路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike a collection, it is not a data structure that stores elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074900Z" creationid="pingfangx" creationdate="20181228T074900Z">
        <seg>与集合不同，它不是存储元素的数据结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike strings, every string builder also has a &lt;i0&gt;capacity&lt;/i0&gt;, the number of character spaces that have been allocated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080945Z" creationid="pingfangx" creationdate="20190103T080945Z">
        <seg>与 string 不同，每个 string builder 还具有 &lt;i0&gt;capacity&lt;/i0&gt;，即已分配的字符空间数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Upper Bounded Wildcards</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092917Z" creationid="pingfangx" creationdate="20180521T092917Z">
        <seg>上限通配符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use &lt;c0&gt;private&lt;/c0&gt; unless you have a good reason not to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042037Z" creationid="pingfangx" creationdate="20180607T041903Z">
        <seg>除非你有充分的理由不使用，否则使用 &lt;c0&gt;private&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use a non-static nested class (or inner class) if you require access to an enclosing instance's non-public fields and methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013656Z" creationid="pingfangx" creationdate="20190102T013656Z">
        <seg>如果需要访问封闭实例的非公共字段和方法，请使用非静态嵌套类(或内部类)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use a static nested class if you don't require this access.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013703Z" creationid="pingfangx" creationdate="20190102T013703Z">
        <seg>如果不需要此访问权限，请使用静态嵌套类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use an anonymous class as the method's argument instead of an instance of the interface &lt;c1&gt;DataStructureIterator&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014056Z" creationid="pingfangx" creationdate="20190102T014056Z">
        <seg>使用匿名类作为方法的参数，而不是接口 &lt;c1&gt;DataStructureIterator&lt;/c1&gt; 的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use braces, { and }, to further clarify the code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091217Z" creationid="pingfangx" creationdate="20180521T091217Z">
        <seg>使用大括号{和}来进一步阐明代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use case for social networking application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085032Z" creationid="pingfangx" creationdate="20180706T085032Z">
        <seg>用于社交网络应用程序的用例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use it if you are encapsulating a single unit of behavior that you want to pass to other code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013414Z" creationid="pingfangx" creationdate="20190102T013414Z">
        <seg>如果要封装要传递给其他代码的单个行为单元，请使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use it if you need a simple instance of a functional interface and none of the preceding criteria apply (for example, you do not need a constructor, a named type, fields, or additional methods).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013609Z" creationid="pingfangx" creationdate="20190102T013609Z">
        <seg>如果您需要函数式接口的简单实例并且不应用前述条件(例如，您不需要构造函数，命名类型，字段或其他方法)，请使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the 1.3 API documentation for the Box class (in the</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020820Z" creationid="pingfangx" creationdate="20190102T020820Z">
        <seg>使用 Box 类的 1.3 API 文档（在</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the &lt;c1&gt;?:&lt;/c1&gt; operator instead of an &lt;c2&gt;if-then-else&lt;/c2&gt; statement if it makes your code more readable; for example, when the expressions are compact and without side-effects (such as assignments).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070404Z" creationid="pingfangx" creationdate="20180521T070404Z">
        <seg>使用 &lt;c1&gt;?:&lt;/c1&gt; 运算符而不是 &lt;c2&gt;if-then-else&lt;/c2&gt; 语句，以使代码更具可读性;例如，当表达式紧凑且没有副作用(例如分配)时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the API documentation to find the answers to the following questions:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041406Z" creationid="pingfangx" creationdate="20190103T041406Z">
        <seg>使用 API 文档查找以下问题的答案：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the Integer class to use &lt;c6&gt;int&lt;/c6&gt; data type as an unsigned integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080710Z" creationid="pingfangx" creationdate="20180518T080710Z">
        <seg>使用 Integer 类将 &lt;c6&gt;int&lt;/c6&gt; 数据类型用作无符号整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the Java API documentation for the &lt;a0&gt;&lt;c1&gt;Box&lt;/c1&gt;&lt;/a0&gt; class (in the &lt;c2&gt;javax.swing&lt;/c2&gt; package) to help you answer the following questions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013918Z" creationid="pingfangx" creationdate="20190102T013918Z">
        <seg>使用 &lt;a0&gt;&lt;c1&gt;Box&lt;/c1&gt;&lt;/a0&gt; 类的 Java API 文档(在 &lt;c2&gt;javax.swing&lt;/c2&gt; 包中)可帮助您回答以下问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the charAt method to get a character at a particular index.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072609Z" creationid="pingfangx" creationdate="20190103T072609Z">
        <seg>使用 charAt 方法获取特定索引处的字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the most restrictive access level that makes sense for a particular member.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041757Z" creationid="pingfangx" creationdate="20180607T041757Z">
        <seg>使用对特定成员有意义的限制性最强的访问级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the naming rules and conventions as a guide.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061855Z" creationid="pingfangx" creationdate="20180521T061855Z">
        <seg>使用命名规则和约定作为指导。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the questions and exercises presented in this section to test your understanding of objects, classes, inheritance, interfaces, and packages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T043114Z" creationid="pingfangx" creationdate="20180518T043114Z">
        <seg>使用本节介绍的问题和练习来测试你对对象，类，继承，接口和包的理解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the substring method to get part of a string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072956Z" creationid="pingfangx" creationdate="20190103T072956Z">
        <seg>使用 substring 方法获取字符串的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use them if you need to use a local class only once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T060343Z" creationid="pingfangx" creationdate="20180706T060343Z">
        <seg>如果您只需要使用局部类一次，请使用它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use these constructs to enhance the interfaces in your libraries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072220Z" creationid="pingfangx" creationdate="20190102T072215Z">
        <seg>使用这些构造来增强库中的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use this data type for simple flags that track true/false conditions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081838Z" creationid="pingfangx" creationdate="20180518T081838Z">
        <seg>将此数据类型用于跟踪真/假条件的简单标志。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use this data type when you need a range of values wider than those provided by &lt;c6&gt;int&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081426Z" creationid="pingfangx" creationdate="20180518T081426Z">
        <seg>当您需要的范围值比 &lt;c6&gt;int&lt;/c6&gt; 提供的范围宽时，使用此数据类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use this method when you only need to know that the string contains a character sequence, but the precise location isn't important.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073355Z" creationid="pingfangx" creationdate="20190103T073355Z">
        <seg>当您只需知道字符串是否包含字符序列，但精确位置并不重要时，请使用此方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Useful Methods in the &lt;c0&gt;Character&lt;/c0&gt; Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062208Z" creationid="pingfangx" creationdate="20190103T062208Z">
        <seg>&lt;c0&gt;Character&lt;/c0&gt; 类中的有用方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Useful methods inherited from &lt;c1&gt;Object&lt;/c1&gt; include &lt;c2&gt;toString()&lt;/c2&gt;, &lt;c3&gt;equals()&lt;/c3&gt;, &lt;c4&gt;clone()&lt;/c4&gt;, and &lt;c5&gt;getClass()&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023312Z" creationid="pingfangx" creationdate="20190103T023312Z">
        <seg>从 &lt;c1&gt;Object&lt;/c1&gt; 继承的有用方法包括 &lt;c2&gt;toString()&lt;/c2&gt;，&lt;c3&gt;equals()&lt;/c3&gt;，&lt;c4&gt;clone()&lt;/c4&gt; 和 &lt;c5&gt;getClass()&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Users who have classes that implement interfaces enhanced with new default or static methods do not have to modify or recompile them to accommodate the additional methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063151Z" creationid="pingfangx" creationdate="20190102T063151Z">
        <seg>具有实现使用新的默认或静态方法增强的接口的类的用户不必修改或重新编译它们以适应其他方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using &lt;c0&gt;Math.random&lt;/c0&gt; works well when you need to generate a single random number.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040641Z" creationid="pingfangx" creationdate="20190103T040641Z">
        <seg>当您需要生成单个随机数时，使用 &lt;c0&gt;Math.random&lt;/c0&gt; 可以正常工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using &lt;c0&gt;String's&lt;/c0&gt; static &lt;c1&gt;format()&lt;/c1&gt; method allows you to create a formatted string that you can reuse, as opposed to a one-time print statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064811Z" creationid="pingfangx" creationdate="20190103T064811Z">
        <seg>使用 &lt;c0&gt;String&lt;/c0&gt; 的静态 &lt;c1&gt;format()&lt;/c1&gt; 方法可以创建可以重复使用的格式化字符串，而不是一次性打印语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using &lt;c0&gt;this&lt;/c0&gt; with a Constructor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092911Z" creationid="pingfangx" creationdate="20180601T092911Z">
        <seg>与构造函数一起使用 &lt;c0&gt;this&lt;/c0&gt; </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using &lt;c0&gt;this&lt;/c0&gt; with a Field</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092724Z" creationid="pingfangx" creationdate="20180601T092709Z">
        <seg>与字段一起使用 &lt;c0&gt;this&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using &lt;c6&gt;String.format&lt;/c6&gt; to create strings is covered in &lt;a7&gt;Strings&lt;/a7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033652Z" creationid="pingfangx" creationdate="20190103T033652Z">
        <seg>使用 &lt;c6&gt;String.format&lt;/c6&gt; 创建字符串包含在 &lt;a7&gt;Strings&lt;/a7&gt; 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092106Z" creationid="pingfangx" creationdate="20180521T092106Z">
        <seg>使用对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073215Z" creationid="pingfangx" creationdate="20180601T073215Z">
        <seg>Using Objects (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Package Members</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093019Z" creationid="pingfangx" creationdate="20180521T093019Z">
        <seg>使用包成员</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Strings in switch Statements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082536Z" creationid="pingfangx" creationdate="20180521T082536Z">
        <seg>在 switch 语句中使用字符串</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Underscore Characters in Numeric Literals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084210Z" creationid="pingfangx" creationdate="20180518T084210Z">
        <seg>在数字字面量中使用下划线字符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using a &lt;c2&gt;break&lt;/c2&gt; is recommended so that modifying the code is easier and less error prone.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082436Z" creationid="pingfangx" creationdate="20180521T082436Z">
        <seg>建议使用 &lt;c2&gt;break&lt;/c2&gt;，以便修改代码更容易，更不容易出错。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using an Interface as a Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092449Z" creationid="pingfangx" creationdate="20180521T092449Z">
        <seg>使用接口作为类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using an Interface as a Type (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062313Z" creationid="pingfangx" creationdate="20190102T062313Z">
        <seg>Using an Interface as a Type (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using only spaces and line breaks, reformat the code snippet to make the control flow easier to understand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091211Z" creationid="pingfangx" creationdate="20180521T091211Z">
        <seg>只使用空格和换行符，重新设置代码片段的格式，使控制流程更易于理解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the &lt;b0&gt; Save in&lt;/b0&gt; combo box, specify the folder (directory) where you'll save your file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034641Z" creationid="pingfangx" creationdate="20180518T034641Z">
        <seg>使用 &lt;b0&gt; Save in&lt;/b0&gt; 组合框中，指定要保存文件的文件夹(目录)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the &lt;c9&gt;while&lt;/c9&gt; statement to print the values from 1 through 10 can be accomplished as in the following &lt;a10&gt;&lt;c11&gt;WhileDemo&lt;/c11&gt;&lt;/a10&gt; program:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082959Z" creationid="pingfangx" creationdate="20180521T082959Z">
        <seg>使用 &lt;c9&gt;while&lt;/c9&gt; 语句打印 1 到 10 的值可以按照以下 &lt;a10&gt;&lt;c11&gt;WhileDemo&lt;/c11&gt;&lt;/a10&gt; 程序完成：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the Keyword super</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092639Z" creationid="pingfangx" creationdate="20180521T092639Z">
        <seg>使用 super 关键字</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the Keyword super (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094406Z" creationid="pingfangx" creationdate="20190102T094406Z">
        <seg>Using the Keyword super (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the this Keyword</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092121Z" creationid="pingfangx" creationdate="20180521T092121Z">
        <seg>使用 this 关键字</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the this Keyword (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092224Z" creationid="pingfangx" creationdate="20180601T092224Z">
        <seg>Using the this Keyword (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>V call();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082128Z" creationid="pingfangx" creationdate="20181228T082128Z">
        <seg>V call();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>VENUS   (4.869e+24, 6.0518e6),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020018Z" creationid="pingfangx" creationdate="20190102T020018Z">
        <seg>VENUS   (4.869e+24, 6.0518e6),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Value</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034133Z" creationid="pingfangx" creationdate="20190103T034133Z">
        <seg>值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Values of the integral types &lt;c0&gt;byte&lt;/c0&gt;, &lt;c1&gt;short&lt;/c1&gt;, &lt;c2&gt;int&lt;/c2&gt;, and &lt;c3&gt;long&lt;/c3&gt; can be created from &lt;c4&gt;int&lt;/c4&gt; literals.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082715Z" creationid="pingfangx" creationdate="20180518T082715Z">
        <seg>整型 &lt;c0&gt;byte&lt;/c0&gt;，&lt;c1&gt;short&lt;/c1&gt;，&lt;c2&gt;int&lt;/c2&gt; 和 &lt;c3&gt;long&lt;/c3&gt; 的值可以从 &lt;c4&gt;int&lt;/c4&gt; 字面量创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Values of type &lt;c5&gt;long&lt;/c5&gt; that exceed the range of &lt;c6&gt;int&lt;/c6&gt; can be created from &lt;c7&gt;long&lt;/c7&gt; literals.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082740Z" creationid="pingfangx" creationdate="20180518T082740Z">
        <seg>超过 &lt;c6&gt;int&lt;/c6&gt; 范围的 &lt;c5&gt;long&lt;/c5&gt; 类型的值可以由 &lt;c7&gt;long&lt;/c7&gt; 字面量创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Variable Names</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064307Z" creationid="pingfangx" creationdate="20180525T064307Z">
        <seg>变量名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Variable declarations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081902Z" creationid="pingfangx" creationdate="20181228T081858Z">
        <seg>变量声明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Variable names are case-sensitive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074032Z" creationid="pingfangx" creationdate="20180518T074032Z">
        <seg>变量名称区分大小写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T071949Z" creationid="pingfangx" creationdate="20180518T071949Z">
        <seg>变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Variables (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073021Z" creationid="pingfangx" creationdate="20180518T073021Z">
        <seg>Variables (The Java™ Tutorials &gt; Learning the Java Language &gt; Language Basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Variables in a method or block of codethese are called &lt;i0&gt;local variables&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063047Z" creationid="pingfangx" creationdate="20180525T063047Z">
        <seg>方法或代码块中的变量这些被称为 &lt;i0&gt;local variables（局部变量）&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Variables in method declarationsthese are called &lt;i0&gt;parameters&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063136Z" creationid="pingfangx" creationdate="20180525T063136Z">
        <seg>方法声明中的变量这些被称为 &lt;i0&gt;parameters（参数）&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Various &lt;c0&gt;StringBuilder&lt;/c0&gt; Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081942Z" creationid="pingfangx" creationdate="20190103T081942Z">
        <seg>各种 &lt;c0&gt;StringBuilder&lt;/c0&gt; 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Visibility</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T041551Z" creationid="pingfangx" creationdate="20180607T041513Z">
        <seg>可见性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Volume Serial Number is F2E8-C8CC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034852Z" creationid="pingfangx" creationdate="20180518T034832Z">
        <seg>Volume Serial Number is F2E8-C8CC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Volume in drive C is System</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034852Z" creationid="pingfangx" creationdate="20180518T034830Z">
        <seg>Volume in drive C is System</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We believe that Java technology will help you do the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033755Z" creationid="pingfangx" creationdate="20180518T033755Z">
        <seg>我们相信，java 技术将帮助你做到以下几点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can't promise you fame, fortune, or even a job if you learn the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033748Z" creationid="pingfangx" creationdate="20180518T033748Z">
        <seg>如果你学习 Java 编程语言，我们不能保证你的名声，财富，甚至是工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have seen that an object is of the data type of the class from which it was instantiated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083057Z" creationid="pingfangx" creationdate="20190102T083057Z">
        <seg>我们已经看到一个对象是实例化它的类的数据类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We recommend using this form of the &lt;c0&gt;for&lt;/c0&gt; statement instead of the general form whenever possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085640Z" creationid="pingfangx" creationdate="20180521T085640Z">
        <seg>我们建议尽可能使用 &lt;c0&gt;for&lt;/c0&gt; 语句，而不是一般形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We still need access to these values, however.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064139Z" creationid="pingfangx" creationdate="20180525T064139Z">
        <seg>但是，我们仍然需要访问这些值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We'll explore the answers to such questions in this lesson, but before we do, there are a few technical distinctions you must first become aware of.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073148Z" creationid="pingfangx" creationdate="20180518T073148Z">
        <seg>我们将在本课中探讨这些问题的答案，但在此之前，您必须首先意识到一些技术上的区别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We've already mentioned some of the most popular platforms like Microsoft Windows, Linux, Solaris OS, and Mac OS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033255Z" creationid="pingfangx" creationdate="20180518T033255Z">
        <seg>我们已经提到了一些最流行的平台，如 Microsoft Windows，Linux，Solaris OS 和 Mac OS。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Weekends are best.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015358Z" creationid="pingfangx" creationdate="20190102T015358Z">
        <seg>Weekends are best.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What &lt;c0&gt;Integer&lt;/c0&gt; method can you use to convert an &lt;c1&gt;int&lt;/c1&gt; into a string that expresses the number in hexadecimal?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041422Z" creationid="pingfangx" creationdate="20190103T041422Z">
        <seg>您可以使用什么 &lt;c0&gt;Integer&lt;/c0&gt; 方法将 &lt;c1&gt;int&lt;/c1&gt; 转换为表示十六进制数字的字符串？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What &lt;c0&gt;Integer&lt;/c0&gt; method would you use to convert a string expressed in base 5 into the equivalent &lt;c1&gt;int&lt;/c1&gt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041437Z" creationid="pingfangx" creationdate="20190103T041437Z">
        <seg>您将使用什么 &lt;c0&gt;Integer&lt;/c0&gt; 方法将基数为 5 的字符串转换为等效的 &lt;c1&gt;int&lt;/c1&gt;？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What &lt;c11&gt;Object&lt;/c11&gt; methods should each of these classes override?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023600Z" creationid="pingfangx" creationdate="20190103T023600Z">
        <seg>这些类中的每一个应该覆盖 &lt;c11&gt;Object&lt;/c11&gt; 中的什么方法？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What &lt;c6&gt;Object&lt;/c6&gt; methods should each of these classes override?&lt;br7/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023821Z" creationid="pingfangx" creationdate="20190103T023809Z">
        <seg>这些类中的每一个应该覆盖 &lt;c6&gt;Object&lt;/c6&gt; 中的什么方法？&lt;br7/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What Can Java Technology Do?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032702Z" creationid="pingfangx" creationdate="20180518T032702Z">
        <seg>Java 技术可以做什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What Double method can you use to detect whether a floating-point number has the special value Not a Number (&lt;c0&gt;NaN&lt;/c0&gt;)?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041501Z" creationid="pingfangx" creationdate="20190103T041501Z">
        <seg>您可以使用什么 Double 方法来检测浮点数是否具有特殊值 Not a Number(&lt;c0&gt;NaN&lt;/c0&gt;)？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What Is Inheritance?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042732Z" creationid="pingfangx" creationdate="20180518T042732Z">
        <seg>什么是继承？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What Is a Class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042727Z" creationid="pingfangx" creationdate="20180518T042727Z">
        <seg>什么是类？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What Is a Package?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042747Z" creationid="pingfangx" creationdate="20180518T042747Z">
        <seg>什么是包？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What Is an Interface?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042736Z" creationid="pingfangx" creationdate="20180518T042734Z">
        <seg>什么是接口？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What Is an Object?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042725Z" creationid="pingfangx" creationdate="20180518T042725Z">
        <seg>什么是对象？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What You Can Do in a Subclass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082613Z" creationid="pingfangx" creationdate="20190102T082613Z">
        <seg>您可以在子类中执行的操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What are the class variables?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082509Z" creationid="pingfangx" creationdate="20180705T082503Z">
        <seg>什么是类变量？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What are the eight primitive data types supported by the Java programming language?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061834Z" creationid="pingfangx" creationdate="20180521T061834Z">
        <seg>Java 编程语言支持的八种基本数据类型是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What are the final values of &lt;c0&gt;i&lt;/c0&gt; and &lt;c1&gt;n&lt;/c1&gt; if instead of using the postfix increment operator (&lt;c2&gt;i++&lt;/c2&gt;), you use the prefix version (&lt;c3&gt;++i)&lt;/c3&gt;)?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072538Z" creationid="pingfangx" creationdate="20180521T072443Z">
        <seg>如果不是使用后缀递增运算符（&lt;c2&gt;i++&lt;/c2&gt;），而是使用前缀版本（&lt;c3&gt;++i&lt;/c3&gt;），&lt;c0&gt;i&lt;/c0&gt; 和 &lt;c1&gt;n&lt;/c1&gt; 的最终值是多少？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What are the instance variables?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082510Z" creationid="pingfangx" creationdate="20180705T082510Z">
        <seg>什么是实例变量？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What are the values of &lt;c0&gt;i&lt;/c0&gt; and &lt;c1&gt;n&lt;/c1&gt; after the code is executed?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072355Z" creationid="pingfangx" creationdate="20180521T072355Z">
        <seg>代码执行后，&lt;c0&gt;i&lt;/c0&gt; 和 &lt;c1&gt;n&lt;/c1&gt; 的值是多少？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What can you do to get rid of that warning?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041611Z" creationid="pingfangx" creationdate="20190102T041611Z">
        <seg>你能做些什么来摆脱那个警告？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What default or static methods could you add to the &lt;c3&gt;Comparator&lt;/c3&gt; interface to enable other developers to more easily specify sort criteria?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071235Z" creationid="pingfangx" creationdate="20190102T071235Z">
        <seg>您可以将哪些默认或静态方法添加到 &lt;c3&gt;Comparator&lt;/c3&gt; 接口，以使其他开发人员能够更轻松地指定排序条件？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What do the other methods do?&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023504Z" creationid="pingfangx" creationdate="20190103T023504Z">
        <seg>其他方法有什么作用？&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What do you need to do</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020649Z" creationid="pingfangx" creationdate="20190102T020649Z">
        <seg>你需要做什么</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What do you need to do to make it compile?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013858Z" creationid="pingfangx" creationdate="20190102T013858Z">
        <seg>你需要做什么才能编译？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What does the error look like?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064824Z" creationid="pingfangx" creationdate="20180518T064824Z">
        <seg>这个错误是什么样的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What if methods or constructors from different superclasses instantiate the same field?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084745Z" creationid="pingfangx" creationdate="20190102T084745Z">
        <seg>如果来自不同超类的方法或构造函数实例化相同的字段会怎样？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What if those computer-controlled car manufacturers add new functionality, such as flight, to their cars?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060456Z" creationid="pingfangx" creationdate="20190102T060456Z">
        <seg>如果那些计算机控制的汽车制造商为他们的汽车添加新的函数式，例如飞行，该怎么办？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What if you decide to change the &lt;c0&gt;Person&lt;/c0&gt; class and add other attributes such as relationship status or geographical location?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085856Z" creationid="pingfangx" creationdate="20180706T085856Z">
        <seg>如果您决定更改 &lt;c0&gt;Person&lt;/c0&gt; 类并添加其他属性（如关系状态或地理位置），该怎么办？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What if you want to do more with your members' profiles than printing them out.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094234Z" creationid="pingfangx" creationdate="20180706T094234Z">
        <seg>如果您想对会员的个人资料进行更多操作而不是打印出来，该怎么办？。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What if you want to print members of a specified sex, or a combination of a specified gender and age range?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085848Z" creationid="pingfangx" creationdate="20180706T085848Z">
        <seg>如果您想要打印指定性别的成员，或指定性别和年龄范围的组合，该怎么办？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What if you want to sort the deck first by rank, then by suit?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T070821Z" creationid="pingfangx" creationdate="20190102T065821Z">
        <seg>如果你想先按点数排序，然后按花色排序怎么办？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What inner class does &lt;c0&gt;Box&lt;/c0&gt; define?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013925Z" creationid="pingfangx" creationdate="20190102T013925Z">
        <seg>&lt;c0&gt;Box&lt;/c0&gt; 定义的内部类是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What inner class does Box define?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020900Z" creationid="pingfangx" creationdate="20190102T020900Z">
        <seg>Box 定义了什么内部类？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the difference in</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021142Z" creationid="pingfangx" creationdate="20190102T021142Z">
        <seg>What is the difference in</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the initial capacity of the following string builder?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085139Z" creationid="pingfangx" creationdate="20190103T085139Z">
        <seg>以下 string builder 的初始容量是多少？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the output from the following code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082513Z" creationid="pingfangx" creationdate="20180705T082513Z">
        <seg>以下代码的输出是什么：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the output of the program?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091155Z" creationid="pingfangx" creationdate="20180521T091155Z">
        <seg>该程序的输出是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the output when you run Class2?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021208Z" creationid="pingfangx" creationdate="20190102T021208Z">
        <seg>What is the output when you run Class2?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the output?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013953Z" creationid="pingfangx" creationdate="20190102T013953Z">
        <seg>输出是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the string?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085229Z" creationid="pingfangx" creationdate="20190103T085229Z">
        <seg>什么是 string？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the superclass of &lt;c0&gt;Box&lt;/c0&gt;'s inner class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013929Z" creationid="pingfangx" creationdate="20190102T013929Z">
        <seg>什么是 &lt;c0&gt;Box&lt;/c0&gt; 的内部类的超类？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the superclass of Box's inner class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020908Z" creationid="pingfangx" creationdate="20190102T020908Z">
        <seg>Box 的内部类的超类是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the value displayed by the expression &lt;c0&gt;hannah.length()&lt;/c0&gt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085153Z" creationid="pingfangx" creationdate="20190103T085153Z">
        <seg>表达式 &lt;c0&gt;hannah.length()&lt;/c0&gt; 显示的值是多少？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the value of the following expression, and why?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041507Z" creationid="pingfangx" creationdate="20190103T041507Z">
        <seg>以下表达式的值是什么，为什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the value returned by the method call &lt;c0&gt;hannah.charAt(12)&lt;/c0&gt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085157Z" creationid="pingfangx" creationdate="20190103T085157Z">
        <seg>方法调用 &lt;c0&gt;hannah.charAt(12)&lt;/c0&gt; 返回的值是多少？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is this platform-independent code called?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040007Z" creationid="pingfangx" creationdate="20180518T040007Z">
        <seg>这个独立于平台的代码是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is wrong with the following interface?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041549Z" creationid="pingfangx" creationdate="20190102T041549Z">
        <seg>以下接口有什么问题？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What kind of nested class is most appropriate for each of the following</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020952Z" creationid="pingfangx" creationdate="20190102T020934Z">
        <seg>What kind of nested class is most appropriate for each of the following</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What methods would a class that implements the &lt;c0&gt;java.lang.CharSequence&lt;/c0&gt; interface have to implement?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074529Z" creationid="pingfangx" creationdate="20190102T074529Z">
        <seg>实现 &lt;c0&gt;java.lang.CharSequence&lt;/c0&gt; 接口的类必须实现哪些方法？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What output do you think the code will produce if &lt;c0&gt;aNumber&lt;/c0&gt; is 3?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091141Z" creationid="pingfangx" creationdate="20180521T091141Z">
        <seg>如果 &lt;c0&gt;aNumber&lt;/c0&gt; 是 3，您认为代码将产生什么输出？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What static nested class does &lt;c0&gt;Box&lt;/c0&gt; define?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013922Z" creationid="pingfangx" creationdate="20190102T013922Z">
        <seg>&lt;c0&gt;Box&lt;/c0&gt; 定义了什么静态嵌套类？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What static nested class does Box define?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020826Z" creationid="pingfangx" creationdate="20190102T020826Z">
        <seg>Box 定义了什么静态嵌套类？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What was the error?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040159Z" creationid="pingfangx" creationdate="20180518T040159Z">
        <seg>错误是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What's wrong with the following program?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083215Z" creationid="pingfangx" creationdate="20180705T083215Z">
        <seg>以下程序有什么问题？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a class implements an interface, it promises to provide the behavior published by that interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T043030Z" creationid="pingfangx" creationdate="20180518T043030Z">
        <seg>当一个类实现一个接口时，它承诺提供该接口发布的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a local class accesses a local variable or parameter of the enclosing block, it &lt;e0&gt;captures&lt;/e0&gt; that variable or parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122720Z" creationid="pingfangx" creationdate="20180705T122720Z">
        <seg>当局部类访问封闭块的局部变量或参数时，它 &lt;e0&gt;captures（捕获）&lt;/e0&gt; 该变量或参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a method is declared &lt;c0&gt;void&lt;/c0&gt;, use the form of &lt;c1&gt;return&lt;/c1&gt; that doesn't return a value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090733Z" creationid="pingfangx" creationdate="20180521T090733Z">
        <seg>当方法被声明为 &lt;c0&gt;void&lt;/c0&gt; 时，使用 &lt;c1&gt;return&lt;/c1&gt; 的形式不返回值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a method uses a class name as its return type, such as &lt;c0&gt;whosFastest&lt;/c0&gt; does, the class of the type of the returned object must be either a subclass of, or the exact class of, the return type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091822Z" creationid="pingfangx" creationdate="20180601T091822Z">
        <seg>当一个方法使用类名称作为它的返回类型时，例如 &lt;c0&gt;whosFastest&lt;/c0&gt; 所做的，返回对象类型的类必须是返回类型的子类或确切类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a number of objects are created from the same class blueprint, they each have their own distinct copies of &lt;i0&gt;instance variables&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T042238Z" creationid="pingfangx" creationdate="20180607T042238Z">
        <seg>当多个对象是从同一个类蓝图创建的时候，它们都有自己独立的 &lt;i0&gt;instance variables（实例变量）&lt;/i0&gt; 副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When an Abstract Class Implements an Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022325Z" creationid="pingfangx" creationdate="20190103T022325Z">
        <seg>当抽象类实现接口时</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When an abstract class is subclassed, the subclass usually provides implementations for all of the abstract methods in its parent class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T020008Z" creationid="pingfangx" creationdate="20190103T020008Z">
        <seg>当抽象类被子类化时，子类通常为其父类中的所有抽象方法提供实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When an element is deprecated, it should also be documented using the Javadoc &lt;c5&gt;@deprecated&lt;/c5&gt; tag, as shown in the following example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033334Z" creationid="pingfangx" creationdate="20190102T033334Z">
        <seg>不推荐使用元素时，还应使用 Javadoc &lt;c5&gt;@deprecated&lt;/c5&gt; 标记对其进行记录，如以下示例所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When an escape sequence is encountered in a print statement, the compiler interprets it accordingly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062525Z" creationid="pingfangx" creationdate="20190103T062525Z">
        <seg>在 print 语句中遇到转义序列时，编译器会相应地解释它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When an instantiable class implements an interface, it provides a method body for each of the methods declared in the interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054204Z" creationid="pingfangx" creationdate="20190102T054204Z">
        <seg>当可实例化的类实现接口时，它为接口中声明的每个方法提供方法体。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When choosing a name for your variables, use full words instead of cryptic abbreviations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074358Z" creationid="pingfangx" creationdate="20180518T074358Z">
        <seg>为变量选择名称时，请使用完整的单词而不是隐含的缩写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When compilers of programming languages that support this type of multiple inheritance encounter superclasses that contain methods with the same name, they sometimes cannot determine which member or method to access or invoke.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084907Z" creationid="pingfangx" creationdate="20190102T084907Z">
        <seg>当支持这种类型的多重继承的编程语言的编译器遇到包含具有相同名称的方法的超类时，它们有时无法确定要访问或调用的成员或方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When designing an annotation type, you must consider the &lt;e0&gt;cardinality&lt;/e0&gt; of annotations of that type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041417Z" creationid="pingfangx" creationdate="20190102T041417Z">
        <seg>设计注解类型时，必须考虑该类型注解的 &lt;e0&gt;cardinality&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When naming your fields or variables, there are rules and conventions that you should (or must) follow.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061549Z" creationid="pingfangx" creationdate="20180521T061549Z">
        <seg>命名字段或变量时，应该(或必须)遵循规则和约定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When operators of equal precedence appear in the same expression, a rule must govern which is evaluated first.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062509Z" creationid="pingfangx" creationdate="20180521T062509Z">
        <seg>当相同优先级的运算符出现在同一表达式中时，必须遵守一条决定谁先计算的规则。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When overriding a method, you might want to use the &lt;c0&gt;@Override&lt;/c0&gt; annotation that instructs the compiler that you intend to override a method in the superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090113Z" creationid="pingfangx" creationdate="20190102T090113Z">
        <seg>覆盖方法时，您可能希望使用 &lt;c0&gt;@Override&lt;/c0&gt; 注解来指示编译器您要覆盖超类中的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the &lt;e0&gt;termination&lt;/e0&gt; expression evaluates to &lt;c1&gt;false&lt;/c1&gt;, the loop terminates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085200Z" creationid="pingfangx" creationdate="20180521T085200Z">
        <seg>当 &lt;e0&gt;termination&lt;/e0&gt; 表达式计算为 &lt;c1&gt;false&lt;/c1&gt; 时，循环终止。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the Java compiler compiles certain constructs, such as inner classes, it creates &lt;e3&gt;synthetic constructs&lt;/e3&gt;; these are classes, methods, fields, and other constructs that do not have a corresponding construct in the source code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091835Z" creationid="pingfangx" creationdate="20180705T091835Z">
        <seg>当 Java 编译器编译某些构造（如内部类）时，它会创建 &lt;e3&gt;synthetic constructs&lt;/e3&gt;;这些是类，方法，字段和其他在源代码中没有相应构造的构造。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the Java compiler encounters the following code, it knows to call the constructor in the &lt;t0&gt;Rectangle&lt;/t0&gt; class that requires a &lt;t1&gt;Point&lt;/t1&gt; argument followed by two integer arguments:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T071231Z" creationid="pingfangx" creationdate="20180601T071231Z">
        <seg>当 Java 编译器遇到以下代码时，它知道要在 &lt;t0&gt;Rectangle&lt;/t0&gt; 类中调用构造函数，其需要一个 &lt;t1&gt;Point&lt;/t1&gt; 参数，后跟两个整数参数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the Java runtime invokes the method &lt;c0&gt;printPersons&lt;/c0&gt;, it's expecting a data type of &lt;c1&gt;CheckPerson&lt;/c1&gt;, so the lambda expression is of this type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T081513Z" creationid="pingfangx" creationdate="20181228T081513Z">
        <seg>当 Java 运行时调用方法 &lt;c0&gt;printPersons&lt;/c0&gt; 时，它期望数据类型为 &lt;c1&gt;CheckPerson&lt;/c1&gt;，因此 lambda 表达式属于此类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the method returns, the parameters are gone and any changes to them are lost.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033908Z" creationid="pingfangx" creationdate="20180601T033908Z">
        <seg>当该方法返回时，参数将消失，对其进行的任何更改都将丢失。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the value is found, a labeled &lt;c9&gt;break&lt;/c9&gt; terminates the outer &lt;c10&gt;for&lt;/c10&gt; loop (labeled "search"):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090127Z" creationid="pingfangx" creationdate="20180521T090127Z">
        <seg>当找到该值时，带标签的 &lt;c9&gt;break&lt;/c9&gt; 终止外部的 &lt;c10&gt;for&lt;/c10&gt; 循环(标记为 "search")：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When they implement &lt;c0&gt;Relatable&lt;/c0&gt;, they can be of both their own class (or superclass) type and a &lt;c1&gt;Relatable&lt;/c1&gt; type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062738Z" creationid="pingfangx" creationdate="20190102T062738Z">
        <seg>当它们实现 &lt;c0&gt;Relatable&lt;/c0&gt; 时，它们可以是它们自己的类(或超类)类型和 &lt;c1&gt;Relatable&lt;/c1&gt; 类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When this annotation type is used, unchecked warnings relating to &lt;c4&gt;varargs&lt;/c4&gt; usage are suppressed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033753Z" creationid="pingfangx" creationdate="20190102T033753Z">
        <seg>使用此注解类型时，将禁止与 &lt;c4&gt;varargs&lt;/c4&gt; 用法相关的未经检查的警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When this happens, the capacity is automatically increased.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081625Z" creationid="pingfangx" creationdate="20190103T081625Z">
        <seg>发生这种情况时，容量会自动增加。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When to Use Nested Classes, Local Classes, Anonymous Classes, and Lambda Expressions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092302Z" creationid="pingfangx" creationdate="20180521T092302Z">
        <seg>何时使用嵌套类，本地类，匿名类和 Lambda 表达式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When to Use Nested Classes, Local Classes, Anonymous Classes, and Lambda Expressions (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013205Z" creationid="pingfangx" creationdate="20190102T013205Z">
        <seg>When to Use Nested Classes, Local Classes, Anonymous Classes, and Lambda Expressions (The Java™ Tutorials &gt; Learning the Java Language &gt; Classes and Objects)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When used on a declaration, each annotation often appears, by convention, on its own line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024119Z" creationid="pingfangx" creationdate="20190102T024119Z">
        <seg>当在声明中使用时，每个注解通常按照惯例出现在它自己的行上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using the &lt;c0&gt;instanceof&lt;/c0&gt; operator, keep in mind that &lt;c1&gt;null&lt;/c1&gt; is not an instance of anything.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070522Z" creationid="pingfangx" creationdate="20180521T070522Z">
        <seg>在使用 &lt;c0&gt;instanceof&lt;/c0&gt; 运算符时，请记住 &lt;c1&gt;null&lt;/c1&gt; 不是任何事物的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using this version of the &lt;c0&gt;for&lt;/c0&gt; statement, keep in mind that:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T090705Z" creationid="pingfangx" creationdate="20180521T085145Z">
        <seg>使用此版本的 &lt;c0&gt;for&lt;/c0&gt; 语句时，请记住：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When working with numbers, most of the time you use the primitive types in your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025041Z" creationid="pingfangx" creationdate="20190103T025041Z">
        <seg>处理数字时，大多数时候在代码中使用基本类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When writing compound expressions, be explicit and indicate with parentheses which operators should be evaluated first.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074753Z" creationid="pingfangx" creationdate="20180521T074753Z">
        <seg>在编写复合表达式时，应明确指出，并用括号表示首先应计算哪些运算符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you access an instance field through an object reference, you reference that particular object's field.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T074250Z" creationid="pingfangx" creationdate="20180601T074250Z">
        <seg>当您通过对象引用访问实例字段时，您引用该特定对象的字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you bring up the prompt, your current directory is usually your home directory for Windows XP (as shown in the preceding figure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034749Z" creationid="pingfangx" creationdate="20180518T034749Z">
        <seg>当出现提示时，当前目录通常是 Windows XP 的主目录（如上图所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you compile the code, including the &lt;c0&gt;NonNull&lt;/c0&gt; module at the command line, the compiler prints a warning if it detects a potential problem, allowing you to modify the code to avoid the error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040821Z" creationid="pingfangx" creationdate="20190102T040821Z">
        <seg>当您在命令行编译代码（包括 &lt;c0&gt;NonNull&lt;/c0&gt; 模块）时，编译器会在检测到潜在问题时输出警告，允许您修改代码以避免错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you create an object by instantiating that class, that object will inherit fields from all of the class's superclasses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084731Z" creationid="pingfangx" creationdate="20190102T084731Z">
        <seg>通过实例化该类来创建对象时，该对象将继承所有类的超类中的字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you declare a parameter to a method or a constructor, you provide a name for that parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033423Z" creationid="pingfangx" creationdate="20180601T033423Z">
        <seg>向方法或构造函数声明参数时，要为该参数提供一个名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you declare or instantiate a generic type with actual type arguments, you have a parameterized type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093356Z" creationid="pingfangx" creationdate="20180706T093356Z">
        <seg>当您使用实际类型参数声明或实例化泛型类型时，您具有参数化类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you define a new interface, you are defining a new reference data type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062324Z" creationid="pingfangx" creationdate="20190102T062324Z">
        <seg>定义新接口时，您将定义新的参考数据类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you extend an interface that contains a default method, you can do the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063357Z" creationid="pingfangx" creationdate="20190102T063357Z">
        <seg>继承包含默认方法的接口时，可以执行以下操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you invoke a method, the arguments used must match the declaration's parameters in type and order.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032415Z" creationid="pingfangx" creationdate="20180601T032415Z">
        <seg>当你调用一个方法时，使用的实参必须与形参的类型和顺序相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you run the program again, the count will be wrong, saying that it found 35 p's instead of 9.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090549Z" creationid="pingfangx" creationdate="20180521T090549Z">
        <seg>当你再次运行程序时，计数将是错误的，说它发现了 35 p 而不是 9。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you run this program, the output is:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034032Z" creationid="pingfangx" creationdate="20180601T034032Z">
        <seg>当你运行这个程序时，输出是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you're finished, the dialog box should look like &lt;s0&gt;this&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034705Z" creationid="pingfangx" creationdate="20180518T034705Z">
        <seg>完成后，对话框应该看起来像 &lt;s0&gt;this&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whenever it encounters a string literal in your code, the compiler creates a &lt;c1&gt;String&lt;/c1&gt; object with its valuein this case, &lt;c2&gt;Hello world!&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063417Z" creationid="pingfangx" creationdate="20190103T063048Z">
        <seg>每当它在代码中遇到 string literal 时，编译器就会创建一个 &lt;c1&gt;String&lt;/c1&gt; 对象包含其值，在这种情况下其值为 &lt;c2&gt;Hello world!&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Where Annotations Can Be Used</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024102Z" creationid="pingfangx" creationdate="20190102T024102Z">
        <seg>可以使用注解的位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Where would these car manufacturers declare these new flight-related methods?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060705Z" creationid="pingfangx" creationdate="20190102T060705Z">
        <seg>这些汽车制造商将在哪里宣布这些与航班有关的新方法？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which method hides a method in the superclass?&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023502Z" creationid="pingfangx" creationdate="20190103T023502Z">
        <seg>哪种方法隐藏了超类中的方法？&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which method or constructor will take precedence?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T084750Z" creationid="pingfangx" creationdate="20190102T084750Z">
        <seg>哪个方法或构造函数优先？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which method overrides a method in the superclass?&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023459Z" creationid="pingfangx" creationdate="20190103T023459Z">
        <seg>哪个方法覆盖了超类中的方法？&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which method will be invoked in the following statement?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082214Z" creationid="pingfangx" creationdate="20181228T082214Z">
        <seg>将在以下语句中调用哪个方法？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which of &lt;c0&gt;Box&lt;/c0&gt;'s nested classes can you use from any class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013936Z" creationid="pingfangx" creationdate="20190102T013936Z">
        <seg>您可以在任何类中使用哪个 &lt;c0&gt;Box&lt;/c0&gt; 的嵌套类？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which of Box's nested classes can you use from any class?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020921Z" creationid="pingfangx" creationdate="20190102T020921Z">
        <seg>您可以在任何类中使用 Box 的嵌套类中的哪一个？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which operator is used to compare two values, &lt;c0&gt;=&lt;/c0&gt; or &lt;c1&gt;==&lt;/c1&gt; ?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072559Z" creationid="pingfangx" creationdate="20180521T072559Z">
        <seg>使用哪个运算符来比较两个值 &lt;c0&gt;=&lt;/c0&gt; 或 &lt;c1&gt;==&lt;/c1&gt;？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which operators does the code contain?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072331Z" creationid="pingfangx" creationdate="20180521T072331Z">
        <seg>代码包含哪些运算符？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which should you use, abstract classes or interfaces?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021126Z" creationid="pingfangx" creationdate="20190103T021126Z">
        <seg>你应该使用抽象类还是接口？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While it is not required to use this annotation when overriding a method, it helps to prevent errors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033442Z" creationid="pingfangx" creationdate="20190102T033442Z">
        <seg>虽然在重写方法时不需要使用此批注，但它有助于防止出错。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While local classes are class declarations, anonymous classes are expressions, which means that you define the class in another expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061059Z" creationid="pingfangx" creationdate="20180706T061059Z">
        <seg>虽然局部类是类声明，但匿名类是表达式，这意味着您在另一个表达式中定义该类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While the image processing company's API is made public (to its customers), its implementation of the API is kept as a closely guarded secretin fact, it may revise the implementation at a later date as long as it continues to implement the original interface that its customers have relied on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T055825Z" creationid="pingfangx" creationdate="20190102T055825Z">
        <seg>虽然图像处理公司的 API 是公开的(对其客户)，但它的 API 实现仍然是一个严密保密的秘密 - 实际上，它可能会在以后修改实现，只要它继续实现原始的客户依赖的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>White space is not permitted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074331Z" creationid="pingfangx" creationdate="20180518T074331Z">
        <seg>不允许使用空格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why Use Generics?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092815Z" creationid="pingfangx" creationdate="20180521T092815Z">
        <seg>为什么要使用泛型？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why Use Nested Classes?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090706Z" creationid="pingfangx" creationdate="20180705T090706Z">
        <seg>为什么使用嵌套类？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why or why not?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041618Z" creationid="pingfangx" creationdate="20190102T041618Z">
        <seg>为什么或者为什么不？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013859Z" creationid="pingfangx" creationdate="20190102T013859Z">
        <seg>为什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Width of rectOne: 100
Height of rectOne: 200
Area of rectOne: 20000
X Position of rectTwo: 23
Y Position of rectTwo: 94
X Position of rectTwo: 40
Y Position of rectTwo: 72</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040100Z" creationid="pingfangx" creationdate="20180601T040100Z">
        <seg>Width of rectOne: 100
Height of rectOne: 200
Area of rectOne: 20000
X Position of rectTwo: 23
Y Position of rectTwo: 94
X Position of rectTwo: 40
Y Position of rectTwo: 72</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wildcard Capture and Helper Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092930Z" creationid="pingfangx" creationdate="20180521T092930Z">
        <seg>通配符捕获和辅助方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wildcards</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092914Z" creationid="pingfangx" creationdate="20180521T092914Z">
        <seg>通配符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wildcards and Subtyping</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092926Z" creationid="pingfangx" creationdate="20180521T092926Z">
        <seg>通配符和子类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Will the following code compile without error?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041616Z" creationid="pingfangx" creationdate="20190102T041616Z">
        <seg>以下代码是否会编译而不会出错？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With &lt;c0&gt;super()&lt;/c0&gt;, the superclass no-argument constructor is called.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095532Z" creationid="pingfangx" creationdate="20190102T095532Z">
        <seg>使用 &lt;c0&gt;super()&lt;/c0&gt;，将调用超类无参数构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With &lt;c1&gt;super(parameter list)&lt;/c1&gt;, the superclass constructor with a matching parameter list is called.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095537Z" creationid="pingfangx" creationdate="20190102T095537Z">
        <seg>使用 &lt;c1&gt;super(parameter list)&lt;/c1&gt;，将调用具有匹配参数列表的超类构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With a primitive variable, this declaration also reserves the proper amount of memory for the variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042716Z" creationid="pingfangx" creationdate="20180601T042716Z">
        <seg>使用基本变量时，该声明也为变量保留适当的内存量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With interfaces, all fields are automatically public, static, and final, and all methods that you declare or define (as default methods) are public.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021059Z" creationid="pingfangx" creationdate="20190103T021059Z">
        <seg>使用接口，所有字段都自动为 public，static 和 final，并且您声明或定义的所有方法(作为默认方法)都是 public 的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With that in mind, the following discussion focuses first on the operators that you're most likely to use on a regular basis, and ends focusing on those that are less common.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063318Z" creationid="pingfangx" creationdate="20180521T063318Z">
        <seg>考虑到这一点，下面的讨论首先着眼于最有可能定期使用的运算符，然后最后关注那些不常见的操作上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the judicious use of type annotations and the presence of pluggable type checkers, you can write code that is stronger and less prone to error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T035603Z" creationid="pingfangx" creationdate="20190102T035603Z">
        <seg>通过明智地使用类型注解和可插入类型检查器的存在，您可以编写更强大且更不容易出错的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the knowledge you now have of the basics of the Java programming language, you can learn to write your own classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022928Z" creationid="pingfangx" creationdate="20180525T022928Z">
        <seg>利用现在掌握的 Java 编程语言基础知识，您可以学习编写自己的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With this interface, you do not have to modify the class &lt;c0&gt;SimpleTimeClient&lt;/c0&gt;, and this class (and any class that implements the interface &lt;c1&gt;TimeClient&lt;/c1&gt;), will have the method &lt;c2&gt;getZonedDateTime&lt;/c2&gt; already defined.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064207Z" creationid="pingfangx" creationdate="20190102T063330Z">
        <seg>使用此接口，您不必修改类 &lt;c0&gt;SimpleTimeClient&lt;/c0&gt;，并且此类(以及实现接口 &lt;c1&gt;TimeClient&lt;/c1&gt; 的任何类)将具有已定义的方法 &lt;c2&gt;getZonedDateTime&lt;/c2&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With this method, you can specify how the method &lt;c0&gt;Collections.sort&lt;/c0&gt; sorts instances of the &lt;c1&gt;Card&lt;/c1&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T070932Z" creationid="pingfangx" creationdate="20190102T070932Z">
        <seg>使用此方法，您可以指定方法 &lt;c0&gt;Collections.sort&lt;/c0&gt; 如何对 &lt;c1&gt;Card&lt;/c1&gt; 类的实例进行排序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With this simple program, the compiler generates an error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083457Z" creationid="pingfangx" creationdate="20180705T083457Z">
        <seg>使用这个简单的程序，编译器会生成错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within &lt;c0&gt;Subclass&lt;/c0&gt;, the simple name &lt;c1&gt;printMethod()&lt;/c1&gt; refers to the one declared in &lt;c2&gt;Subclass&lt;/c2&gt;, which overrides the one in &lt;c3&gt;Superclass&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095028Z" creationid="pingfangx" creationdate="20190102T095028Z">
        <seg>在 &lt;c0&gt;Subclass&lt;/c0&gt; 中，简单名称 &lt;c1&gt;printMethod()&lt;/c1&gt; 是指在 &lt;c2&gt;Subclass&lt;/c2&gt; 中声明的名称，它覆盖 &lt;c3&gt;Superclass&lt;/c3&gt; 中的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within a class, a field that has the same name as a field in the superclass hides the superclass's field, even if their types are different.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094325Z" creationid="pingfangx" creationdate="20190102T094325Z">
        <seg>在类中，与超类中的字段具有相同名称的字段会隐藏超类的字段，即使它们的类型不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within an instance method or a constructor, &lt;c0&gt;this&lt;/c0&gt; is a reference to the &lt;i1&gt;current object&lt;/i1&gt;  the object whose method or constructor is being called.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092638Z" creationid="pingfangx" creationdate="20180601T092638Z">
        <seg>在实例方法或构造函数中，&lt;c0&gt;this&lt;/c0&gt; 是对 &lt;i1&gt;当前对象&lt;/i1&gt;  该方法或构造函数被调用的对象的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within the body of the method, you use the &lt;c0&gt;return&lt;/c0&gt; statement to return the value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091243Z" creationid="pingfangx" creationdate="20180601T091243Z">
        <seg>在方法的主体中，使用 &lt;c0&gt;return&lt;/c0&gt; 语句返回值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within the method, the object pointed to by &lt;c7&gt;circle&lt;/c7&gt; has changed, but, when the method returns, &lt;c8&gt;myCircle&lt;/c8&gt; still references the same &lt;c9&gt;Circle&lt;/c9&gt; object as before the method was called.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034955Z" creationid="pingfangx" creationdate="20180601T034513Z">
        <seg>在该方法中，由 &lt;c7&gt;circle&lt;/c7&gt; 指向的对象已经发生了变化，但是当方法返回时，&lt;c8&gt;myCircle&lt;/c8&gt; 仍然像该方法被调用前一样引用相同的 &lt;c9&gt;Circle&lt;/c9&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within the subclass, the field in the superclass cannot be referenced by its simple name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094335Z" creationid="pingfangx" creationdate="20190102T094335Z">
        <seg>在子类中，超类中的字段不能通过其简单名称引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Working with &lt;c3&gt;StringBuilder&lt;/c3&gt; objects can sometimes be more efficient than working with strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083423Z" creationid="pingfangx" creationdate="20190103T083423Z">
        <seg>使用 &lt;c3&gt;StringBuilder&lt;/c3&gt; 对象有时比使用字符串更有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>World</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040214Z" creationid="pingfangx" creationdate="20180607T040214Z">
        <seg>World</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wrapper class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084701Z" creationid="pingfangx" creationdate="20190103T084701Z">
        <seg>包装类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write a class that implements the &lt;c0&gt;CharSequence&lt;/c0&gt; interface found in the &lt;c1&gt;java.lang&lt;/c1&gt; package.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074548Z" creationid="pingfangx" creationdate="20190102T074548Z">
        <seg>编写一个实现 &lt;c1&gt;java.lang&lt;/c1&gt; 包中的 &lt;c0&gt;CharSequence&lt;/c0&gt; 接口的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write a class whose instances represent a &lt;b0&gt;full&lt;/b0&gt; deck of cards.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082646Z" creationid="pingfangx" creationdate="20180705T082646Z">
        <seg>写一个实例代表 &lt;b0&gt;full&lt;/b0&gt; 卡片组的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write a class whose instances represent a single playing card from a deck of cards.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082524Z" creationid="pingfangx" creationdate="20180705T082524Z">
        <seg>写一个类，其实例代表一副牌中的单张扑克牌。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write a program that computes your initials from your full name and displays them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085312Z" creationid="pingfangx" creationdate="20190103T085312Z">
        <seg>编写一个程序，用您的全名计算首字母并显示它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write a small &lt;c2&gt;main&lt;/c2&gt; method to test your class; make sure to call all four methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074619Z" creationid="pingfangx" creationdate="20190102T074619Z">
        <seg>写一个小的 &lt;c2&gt;main&lt;/c2&gt; 方法来测试你的类;确保调用所有四种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write a small &lt;c2&gt;main&lt;/c2&gt; method to test your class; make sure to call all four methods.&lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074821Z" creationid="pingfangx" creationdate="20190102T074821Z">
        <seg>写一个小的 &lt;c2&gt;main&lt;/c2&gt; 方法来测试你的类;确保调用所有四种方法。&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write a small program to test your deck and card classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082701Z" creationid="pingfangx" creationdate="20180705T082701Z">
        <seg>写一个小程序来测试你的套牌和卡类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write a test program containing the previous code snippet; make &lt;c0&gt;aNumber&lt;/c0&gt; 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091146Z" creationid="pingfangx" creationdate="20180521T091146Z">
        <seg>编写一个包含前面的代码片段的测试程序; make &lt;c0&gt;aNumber&lt;/c0&gt; 3。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write an expression that refers to the letter &lt;c0&gt;b&lt;/c0&gt; in the string referred to by &lt;c1&gt;hannah&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085211Z" creationid="pingfangx" creationdate="20190103T085211Z">
        <seg>写一个表达式，引用 &lt;c1&gt;hannah&lt;/c1&gt; 引用的字符串中的字母 &lt;c0&gt;b&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write an interface that the server could use to enforce a particular protocol on its clients.&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074828Z" creationid="pingfangx" creationdate="20190102T074828Z">
        <seg>编写一个接口，服务器可以使用该接口在其客户机上强制执行特定的协议。&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write an interface the server could use to enforce a particular protocol on its clients.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074639Z" creationid="pingfangx" creationdate="20190102T074639Z">
        <seg>编写服务器可用于在其客户端上强制执行特定协议的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write the implementations for the methods that you answered in question 2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023606Z" creationid="pingfangx" creationdate="20190103T023606Z">
        <seg>编写您在问题 2 中回答的方法的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing Final Classes and Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092652Z" creationid="pingfangx" creationdate="20180521T092652Z">
        <seg>编写 final 类和方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing Final Classes and Methods (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104135Z" creationid="pingfangx" creationdate="20190102T104135Z">
        <seg>Writing Final Classes and Methods (The Java™ Tutorials &gt; Learning the Java Language &gt; Interfaces and Inheritance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Y</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040215Z" creationid="pingfangx" creationdate="20180607T040215Z">
        <seg>Y</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Y data = mapper.apply(p);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100550Z" creationid="pingfangx" creationdate="20180706T100550Z">
        <seg>Y data = mapper.apply(p);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Yet each also defines additional features that make them different: tandem bicycles have two seats and two sets of handlebars; road bikes have drop handlebars; some mountain bikes have an additional chain ring, giving them a lower gear ratio.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063010Z" creationid="pingfangx" creationdate="20180518T063010Z">
        <seg>然而每一个也定义了使它们不同的附加特征：双人自行车有两个座位和两组把手;公路自行车有 drop 把手;一些山地自行车有一个额外的链环，给他们一个较低的传动比。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You also use an object reference to invoke an object's method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T083136Z" creationid="pingfangx" creationdate="20180601T083136Z">
        <seg>您还可以使用对象引用来调用对象的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You annotate the class with one &lt;c0&gt;@Alert&lt;/c0&gt; annotation for managers and another for admins:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041122Z" creationid="pingfangx" creationdate="20190102T041122Z">
        <seg>您使用一个 &lt;c0&gt;@Alert&lt;/c0&gt; 注解为管理员注解该类，为管理员注解另一个注解：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You append the method's simple name to the object reference, with an intervening dot operator (.).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T084747Z" creationid="pingfangx" creationdate="20180601T084747Z">
        <seg>您可以将方法的简单名称附加到对象引用后，使用插入的点运算符(.)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can &lt;a0&gt;download the Windows version now&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034415Z" creationid="pingfangx" creationdate="20180518T034415Z">
        <seg>您现在可以 &lt;a0&gt;download the Windows version now&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can &lt;a0&gt;serialize&lt;/a0&gt; a lambda expression if its target type and its captured arguments are serializable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082455Z" creationid="pingfangx" creationdate="20181228T082455Z">
        <seg>如果 lambda 表达式的目标类型及其捕获的参数是可序列化的，则可以 &lt;a0&gt;序列化（serialize）&lt;/a0&gt; 一个表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also add modifiers like &lt;i0&gt;public&lt;/i0&gt; or &lt;i1&gt;private&lt;/i1&gt; at the very beginningso you can see that the opening line of a class declaration can become quite complicated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030358Z" creationid="pingfangx" creationdate="20180525T030358Z">
        <seg>你还可以在最开始添加修饰符，如 &lt;i0&gt;public&lt;/i0&gt; 或 &lt;i1&gt;private&lt;/i1&gt;，这样你可以看到类声明的开始行可能变得非常复杂。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also combine the arithmetic operators with the simple assignment operator to create &lt;i0&gt;compound assignments&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064741Z" creationid="pingfangx" creationdate="20180521T064741Z">
        <seg>您还可以将算术运算符与简单赋值运算符组合以创建 &lt;i0&gt;compound assignments（复合运算符）&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also declare a reference variable on its own line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042721Z" creationid="pingfangx" creationdate="20180601T042721Z">
        <seg>你也可以自己声明一个引用变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also declare an array of arrays (also known as a &lt;e0&gt;multidimensional&lt;/e0&gt; array) by using two or more sets of brackets, such as &lt;c1&gt;String[][] names&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042201Z" creationid="pingfangx" creationdate="20180521T042201Z">
        <seg>您还可以使用两组或更多组括号（如 &lt;c1&gt;String[][] names&lt;/c1&gt;）声明数组的数组（也称为 &lt;e0&gt;multidimensional（多维）&lt;/e0&gt; 数组）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also declare an inner class within the body of a method without naming the class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101348Z" creationid="pingfangx" creationdate="20180705T101348Z">
        <seg>您还可以在方法体内声明内部类，而无需命名该类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also place the brackets after the array's name:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T034855Z" creationid="pingfangx" creationdate="20180521T034855Z">
        <seg>您也可以在数组名称后面加上括号：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use &lt;c1&gt;super&lt;/c1&gt; to refer to a hidden field (although hiding fields is discouraged).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094930Z" creationid="pingfangx" creationdate="20190102T094930Z">
        <seg>您也可以使用 &lt;c1&gt;super&lt;/c1&gt; 来引用隐藏字段(尽管不鼓励隐藏字段)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use an unlabeled &lt;c2&gt;break&lt;/c2&gt; to terminate a &lt;c3&gt;for&lt;/c3&gt;, &lt;c4&gt;while&lt;/c4&gt;, or &lt;c5&gt;do-while&lt;/c5&gt; loop, as shown in the following &lt;a6&gt;&lt;c7&gt;BreakDemo&lt;/c7&gt;&lt;/a6&gt; program:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085842Z" creationid="pingfangx" creationdate="20180521T085842Z">
        <seg>您也可以使用无标签的 &lt;c2&gt;break&lt;/c2&gt; 终止&lt;c3&gt;for&lt;/c3&gt;，&lt;c4&gt;while&lt;/c4&gt; 或 &lt;c5&gt;do-while&lt;/c5&gt; 循环，如在下面的 &lt;a6&gt;&lt;c7&gt;BreakDemo&lt;/c7&gt;&lt;/a6&gt; 程序中所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use the &lt;c0&gt;concat()&lt;/c0&gt; method with string literals, as in:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064408Z" creationid="pingfangx" creationdate="20190103T064408Z">
        <seg>您还可以将 &lt;c0&gt;concat()&lt;/c0&gt; 方法与字符串文字一起使用，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can assign the reference to a variable or use it directly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082241Z" creationid="pingfangx" creationdate="20180705T082241Z">
        <seg>您可以为变量分配引用或直接使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can assign the return value to a variable, use it to make decisions, or control a loop.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085211Z" creationid="pingfangx" creationdate="20180601T085211Z">
        <seg>您可以将返回值分配给一个变量，用它来做出决定或控制一个循环。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can base your program on &lt;a1&gt;&lt;c2&gt;ValueOfDemo&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041602Z" creationid="pingfangx" creationdate="20190103T041602Z">
        <seg>您可以将程序基于 &lt;a1&gt;&lt;c2&gt;ValueOfDemo&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can create a &lt;c0&gt;Character&lt;/c0&gt; object with the &lt;c1&gt;Character&lt;/c1&gt; constructor:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T061744Z" creationid="pingfangx" creationdate="20190103T061744Z">
        <seg>您可以使用 &lt;c1&gt;Character&lt;/c1&gt; 构造函数创建 &lt;c0&gt;Character&lt;/c0&gt; 对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can declare a field in the subclass with the same name as the one in the superclass, thus &lt;i0&gt;hiding&lt;/i0&gt; it (not recommended).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082736Z" creationid="pingfangx" creationdate="20190102T082736Z">
        <seg>您可以在子类中声明一个与超类中的字段同名的字段，从而 &lt;i0&gt;（隐藏）hiding&lt;/i0&gt; 它(不推荐)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can declare an inner class within the body of a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101336Z" creationid="pingfangx" creationdate="20180705T101336Z">
        <seg>您可以在方法体内声明内部类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can declare new fields in the subclass that are not in the superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082747Z" creationid="pingfangx" creationdate="20190102T082747Z">
        <seg>您可以在子类中声明不在超类中的新字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can declare new methods in the subclass that are not in the superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082849Z" creationid="pingfangx" creationdate="20190102T082849Z">
        <seg>您可以在子类中声明不在超类中的新方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can declare some or all of a class's methods &lt;i0&gt;final&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104436Z" creationid="pingfangx" creationdate="20190102T104436Z">
        <seg>您可以声明类的一些或所有方法为 &lt;i0&gt;final&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can define a local class inside any block (see &lt;a0&gt;Expressions, Statements, and Blocks&lt;/a0&gt; for more information).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121633Z" creationid="pingfangx" creationdate="20180705T121633Z">
        <seg>您可以在任何块内定义局部类(有关更多信息，请参阅 &lt;a0&gt;Expressions, Statements, and Blocks&lt;/a0&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can define a method in &lt;c0&gt;DataStructure&lt;/c0&gt; that creates and returns a new instance of &lt;c1&gt;EvenIterator&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014946Z" creationid="pingfangx" creationdate="20190102T014946Z">
        <seg>您可以在 &lt;c0&gt;DataStructure&lt;/c0&gt; 中定义一个方法，该方法创建并返回 &lt;c1&gt;EvenIterator&lt;/c1&gt; 的新实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can define methods that access the private members &lt;c0&gt;SIZE&lt;/c0&gt; and &lt;c1&gt;arrayOfInts&lt;/c1&gt; and then use them in your anonymous class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015000Z" creationid="pingfangx" creationdate="20190102T015000Z">
        <seg>您可以定义访问私有成员 &lt;c0&gt;SIZE&lt;/c0&gt; 和 &lt;c1&gt;arrayOfInts&lt;/c1&gt; 的方法，然后在匿名类中使用它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can define the following method in the class &lt;c6&gt;StandardDeck&lt;/c6&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T070922Z" creationid="pingfangx" creationdate="20190102T070922Z">
        <seg>您可以在类 &lt;c6&gt;StandardDeck&lt;/c6&gt; 中定义以下方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can delete all code related to the variables &lt;c2&gt;aChar&lt;/c2&gt; and &lt;c3&gt;aBoolean&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041524Z" creationid="pingfangx" creationdate="20190103T041524Z">
        <seg>您可以删除与变量 &lt;c2&gt;aChar&lt;/c2&gt; 和 &lt;c3&gt;aBoolean&lt;/c3&gt; 相关的所有代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can delete all code related to the variables &lt;c3&gt;aChar&lt;/c3&gt; and &lt;c4&gt;aBoolean&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041820Z" creationid="pingfangx" creationdate="20190103T041816Z">
        <seg>您可以删除与变量 &lt;c3&gt;aChar&lt;/c3&gt; 和 &lt;c4&gt;aBoolean&lt;/c4&gt; 相关的所有代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can do this from the &lt;b0&gt; Start&lt;/b0&gt; menu by choosing &lt;b1&gt; Run...&lt;/b1&gt; and then entering &lt;c2&gt;cmd&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034731Z" creationid="pingfangx" creationdate="20180518T034731Z">
        <seg>您可以从 &lt;b0&gt; Start&lt;/b0&gt; 菜单中选择 &lt;b1&gt; Run...&lt;/b1&gt;，然后输入 &lt;c2&gt;cmd&lt;/c2&gt; 来完成此操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can easily adapt these instructions if you use a different text editor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034438Z" creationid="pingfangx" creationdate="20180518T034438Z">
        <seg>如果您使用不同的文本编辑器，则可以轻松地修改这些说明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can explicitly drop a reference by setting the variable holding the reference to &lt;c0&gt;null&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082344Z" creationid="pingfangx" creationdate="20180705T082344Z">
        <seg>您可以通过设置包含 &lt;c0&gt;null&lt;/c0&gt; 引用的变量来显式删除引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can get the character at a particular index within a string by invoking the &lt;c0&gt;charAt()&lt;/c0&gt; accessor method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T072543Z" creationid="pingfangx" creationdate="20190103T072543Z">
        <seg>您可以通过调用 &lt;c0&gt;charAt()&lt;/c0&gt; 访问器方法获取字符串中特定索引处的字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can implement an infinite loop using the &lt;c0&gt;while&lt;/c0&gt; statement as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083009Z" creationid="pingfangx" creationdate="20180521T083009Z">
        <seg>您可以使用 &lt;c0&gt;while&lt;/c0&gt; 语句中实现无限循环，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can instead separate the code that specifies the criteria for which you want to search in a different class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085922Z" creationid="pingfangx" creationdate="20180706T085922Z">
        <seg>您可以改为分隔指定要在其他类中搜索的条件的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can invoke the &lt;c0&gt;StandardDeck.sort&lt;/c0&gt; method as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071300Z" creationid="pingfangx" creationdate="20190102T071300Z">
        <seg>您可以按如下方式调用 &lt;c0&gt;StandardDeck.sort&lt;/c0&gt; 方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can invoke this method instead in the body of the lambda expression:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084159Z" creationid="pingfangx" creationdate="20181228T084155Z">
        <seg>您可以在 lambda 表达式的主体中调用此方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can launch the Notepad editor from the &lt;b0&gt; Start&lt;/b0&gt; menu by selecting &lt;b1&gt; Programs &gt; Accessories &gt; Notepad&lt;/b1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034530Z" creationid="pingfangx" creationdate="20180518T034530Z">
        <seg>您可以通过选择 &lt;b1&gt; Programs &gt; Accessories &gt; Notepad&lt;/b1&gt; 从 &lt;b0&gt; Start&lt;/b0&gt; 菜单启动记事本编辑器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can name the argument anything you want, but most programmers choose "args" or "argv".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035652Z" creationid="pingfangx" creationdate="20180518T035652Z">
        <seg>你可以根据需要命名参数，但大多数程序员选择 "args" 或 "argv"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can override a method and define it to return a subclass of the original method, like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092115Z" creationid="pingfangx" creationdate="20180601T092115Z">
        <seg>您可以重写一个方法并将其定义为返回原始方法的子类，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can place underscores only between digits; you cannot place underscores in the following places:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084539Z" creationid="pingfangx" creationdate="20180518T084539Z">
        <seg>您只能在数字之间放置下划线;你不能在下列地方放置下划线：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can prevent a class from being subclassed by using the &lt;c0&gt;final&lt;/c0&gt; keyword in the class's declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023320Z" creationid="pingfangx" creationdate="20190103T023320Z">
        <seg>您可以通过在类的声明中使用 &lt;c0&gt;final&lt;/c0&gt; 关键字来阻止类被子类化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can provide more information about the class, such as the name of its superclass, whether it implements any interfaces, and so on, at the start of the class declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030329Z" creationid="pingfangx" creationdate="20180525T030329Z">
        <seg>您可以在类声明的开始处提供有关该类的更多信息，例如其超类的名称，它是否实现了任何接口等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can read more about interfaces herewhat they are for, why you might want to write one, and how to write one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042734Z" creationid="pingfangx" creationdate="20190102T042734Z">
        <seg>您可以在这里阅读有关接口的更多信息 - 它们的用途，为什么要编写一个，以及如何编写一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can recognize a constructor because its declaration uses the same name as the class and it has no return type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062507Z" creationid="pingfangx" creationdate="20180601T062507Z">
        <seg>您可以识别构造函数，因为它的声明使用与该类相同的名称，并且它没有返回类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can refer to any member of the current object from within an instance method or a constructor by using &lt;c2&gt;this&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092651Z" creationid="pingfangx" creationdate="20180601T092651Z">
        <seg>您可以使用 &lt;c2&gt;this&lt;/c2&gt; 从实例方法或构造函数中引用当前对象的任何成员。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can reference a constructor in the same way as a static method by using the name &lt;c0&gt;new&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084908Z" creationid="pingfangx" creationdate="20181228T084908Z">
        <seg>您可以使用名称 &lt;c0&gt;new&lt;/c0&gt; 以与静态方法相同的方式引用构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can repeat an annotation anywhere that you would use a standard annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041112Z" creationid="pingfangx" creationdate="20190102T041112Z">
        <seg>您可以在使用标准注解的任何位置重复注解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can replace each of these actions with an aggregate operation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074250Z" creationid="pingfangx" creationdate="20181228T073340Z">
        <seg>您可以使用聚合操作替换每个操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can save the file &lt;c0&gt; &lt;a1&gt;&lt;c2&gt;HelloWorldApp.java&lt;/c2&gt;&lt;/a1&gt;&lt;/c0&gt; on your computer and avoid a lot of typing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034516Z" creationid="pingfangx" creationdate="20180518T034516Z">
        <seg>您可以在计算机上保存文件 &lt;c0&gt; &lt;a1&gt;&lt;c2&gt;HelloWorldApp.java&lt;/c2&gt;&lt;/a1&gt;&lt;/c0&gt;，并避免大量输入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can see that, inside the method, &lt;c0&gt;corners&lt;/c0&gt; is treated like an array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033102Z" creationid="pingfangx" creationdate="20180601T033102Z">
        <seg>你可以看到，在该方法中，&lt;c0&gt;corners&lt;/c0&gt; 被视为一个数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can see what the object's fields are (&lt;c6&gt;getFields()&lt;/c6&gt;) or what its methods are (&lt;c7&gt;getMethods()&lt;/c7&gt;), and so on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103653Z" creationid="pingfangx" creationdate="20190102T103653Z">
        <seg>您可以看到对象的字段是什么（&lt;c6&gt;getFields()&lt;/c6&gt;）或其方法是什么（&lt;c7&gt;getMethods()&lt;/c7&gt;）等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify exactly how an expression will be evaluated using balanced parenthesis: ( and ).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074542Z" creationid="pingfangx" creationdate="20180521T074542Z">
        <seg>您可以使用平衡圆括号准确指定如何计算表达式:( 和 )。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify this action with a lambda expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093903Z" creationid="pingfangx" creationdate="20180706T093903Z">
        <seg>您可以使用 lambda 表达式指定此操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can take advantage of the similarities and declare all the graphic objects to inherit from the same abstract parent object (for example, &lt;c1&gt;GraphicObject&lt;/c1&gt;) as shown in &lt;s2&gt;the following figure.&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022227Z" creationid="pingfangx" creationdate="20190103T022227Z">
        <seg>您可以利用相似性并声明所有图形对象都从相同的抽象父对象继承(例如，&lt;c1&gt;GraphicObject&lt;/c1&gt;)，如下图中的 &lt;s2&gt;the following figure.&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use &lt;c0&gt;toString()&lt;/c0&gt; along with &lt;c1&gt;System.out.println()&lt;/c1&gt; to display a text representation of an object, such as an instance of &lt;c2&gt;Book&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104104Z" creationid="pingfangx" creationdate="20190102T104104Z">
        <seg>您可以使用 &lt;c0&gt;toString()&lt;/c0&gt; 以及 &lt;c1&gt;System.out.println()&lt;/c1&gt; 来显示对象的文本表示形式，例如&lt;c2&gt; Book &lt;/c2&gt; 的实例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use a construct called &lt;e0&gt;varargs&lt;/e0&gt; to pass an arbitrary number of values to a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032733Z" creationid="pingfangx" creationdate="20180601T032733Z">
        <seg>您可以使用名为 &lt;e0&gt;varargs&lt;/e0&gt; 的构造将任意数量的值传递给方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use a constructor reference in place of the lambda expression as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T085034Z" creationid="pingfangx" creationdate="20181228T085034Z">
        <seg>您可以使用构造函数引用代替 lambda 表达式，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use a standard functional interface in place of the interface &lt;c0&gt;CheckPerson&lt;/c0&gt;, which reduces even further the amount of code required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092107Z" creationid="pingfangx" creationdate="20180706T092107Z">
        <seg>您可以使用标准函数式接口代替接口 &lt;c0&gt;CheckPerson&lt;/c0&gt;，这可以进一步减少所需的代码量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use a superclass constructor yourself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T040125Z" creationid="pingfangx" creationdate="20180528T040125Z">
        <seg>你可以自己使用一个超类的构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use a variable name, but you also can use any expression that returns an object reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085025Z" creationid="pingfangx" creationdate="20180601T085025Z">
        <seg>您可以使用变量名称，但也可以使用任何返回对象引用的表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use access modifiers in a constructor's declaration to control which other classes can call the constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180529T065429Z" creationid="pingfangx" creationdate="20180529T065429Z">
        <seg>您可以在构造函数的声明中使用访问修饰符来控制哪些其他类可以调用构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use any data type for a parameter of a method or a constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032435Z" creationid="pingfangx" creationdate="20180601T032435Z">
        <seg>您可以将任何数据类型用于方法或构造函数的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use any text editor to create and edit source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034454Z" creationid="pingfangx" creationdate="20180518T034454Z">
        <seg>您可以使用任何文本编辑器来创建和编辑源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use inner classes to implement helper classes such as the one shown in the this example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101152Z" creationid="pingfangx" creationdate="20180705T101152Z">
        <seg>您可以使用内部类来实现帮助程序类，例如本示例中显示的帮助程序类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use interface names anywhere you can use any other data type name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062330Z" creationid="pingfangx" creationdate="20190102T062330Z">
        <seg>您可以在任何可以使用任何其他数据类型名称的地方使用接口名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use it to test if an object is an instance of a class, an instance of a subclass, or an instance of a class that implements a particular interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070427Z" creationid="pingfangx" creationdate="20180521T070427Z">
        <seg>您可以使用它来测试对象是否是类的实例，子类的实例或实现特定接口的类的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use multiple type-checking modules where each module checks for a different kind of error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T035510Z" creationid="pingfangx" creationdate="20190102T035510Z">
        <seg>您可以使用多个类型检查模块，其中每个模块检查不同类型的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use primitive types such as &lt;c0&gt;int&lt;/c0&gt;, &lt;c1&gt;float&lt;/c1&gt;, &lt;c2&gt;boolean&lt;/c2&gt;, etc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064300Z" creationid="pingfangx" creationdate="20180525T064300Z">
        <seg>您可以使用 &lt;c0&gt;int&lt;/c0&gt;，&lt;c1&gt;float&lt;/c1&gt;，&lt;c2&gt;boolean&lt;/c2&gt; 等基本类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;a0&gt;&lt;c1&gt;java.text.DecimalFormat&lt;/c1&gt; &lt;/a0&gt; class to control the display of leading and trailing zeros, prefixes and suffixes, grouping (thousands) separators, and the decimal separator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033908Z" creationid="pingfangx" creationdate="20190103T033908Z">
        <seg>您可以使用 &lt;a0&gt;&lt;c1&gt;java.text.DecimalFormat&lt;/c1&gt; &lt;/a0&gt; 类来控制前导和尾随零，前缀和后缀，分组(千)分隔符和小数分隔符的显示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;c0&gt;Bicycle&lt;/c0&gt; constructor to set the &lt;c1&gt;id&lt;/c1&gt; instance variable and increment the &lt;c2&gt;numberOfBicycles&lt;/c2&gt; class variable:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043204Z" creationid="pingfangx" creationdate="20180607T043204Z">
        <seg>您可以使用 &lt;c0&gt;Bicycle&lt;/c0&gt; 构造函数来设置 &lt;c1&gt;id&lt;/c1&gt; 实例变量并增加 &lt;c2&gt;numberOfBicycles&lt;/c2&gt; 类变量：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;c0&gt;assert&lt;/c0&gt; statement to check your assignments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082607Z" creationid="pingfangx" creationdate="20180705T082607Z">
        <seg>您可以使用 &lt;c0&gt;assert&lt;/c0&gt; 语句检查分配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;c1&gt;toRadians&lt;/c1&gt; method to convert from degrees to radians.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040252Z" creationid="pingfangx" creationdate="20190103T040252Z">
        <seg>您可以使用 &lt;c1&gt;toRadians&lt;/c1&gt; 方法将度数转换为弧度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;c3&gt;super&lt;/c3&gt; keyword to invoke a default method in both classes and interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092105Z" creationid="pingfangx" creationdate="20190102T092105Z">
        <seg>您可以使用 &lt;c3&gt;super&lt;/c3&gt; 关键字在类和接口中调用默认方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the inherited members as is, replace them, hide them, or supplement them with new members:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082659Z" creationid="pingfangx" creationdate="20190102T082659Z">
        <seg>您可以按原样使用继承的成员，替换它们，隐藏它们或用新成员补充它们：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the same modifiers for inner classes that you use for other members of the outer class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101402Z" creationid="pingfangx" creationdate="20180705T101402Z">
        <seg>您可以对用于外部类的其他成员的内部类使用相同的修饰符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use these static members with a class reference (for example, &lt;c2&gt;AbstractClass.staticMethod()&lt;/c2&gt;) as you would with any other class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022728Z" creationid="pingfangx" creationdate="20190103T022728Z">
        <seg>您可以将这些静态成员与类引用一起使用（例如，&lt;c2&gt;AbstractClass.staticMethod()&lt;/c2&gt;），就像使用任何其他类一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can write a custom plug-in to check for this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040752Z" creationid="pingfangx" creationdate="20190102T035038Z">
        <seg>您可以编写自定义插件来检查此问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can write a new &lt;i0&gt;instance&lt;/i0&gt; method in the subclass that has the same signature as the one in the superclass, thus &lt;i1&gt;overriding&lt;/i1&gt; it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082832Z" creationid="pingfangx" creationdate="20190102T082832Z">
        <seg>您可以在子类中编写一个新的 &lt;i0&gt;instance&lt;/i0&gt; 方法，该方法与超类中的签名具有相同的签名，从而 &lt;i1&gt;覆盖（overriding）&lt;/i1&gt; 它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can write a new &lt;i0&gt;static&lt;/i0&gt; method in the subclass that has the same signature as the one in the superclass, thus &lt;i1&gt;hiding&lt;/i1&gt; it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082844Z" creationid="pingfangx" creationdate="20190102T082844Z">
        <seg>您可以在子类中编写一个新的 &lt;i0&gt;static&lt;/i0&gt; 方法，该方法与超类中的签名具有相同的签名，因此 &lt;i1&gt;hiding&lt;/i1&gt; 它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can write a subclass constructor that invokes the constructor of the superclass, either implicitly or by using the keyword &lt;c0&gt;super&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T082904Z" creationid="pingfangx" creationdate="20190102T082904Z">
        <seg>您可以编写一个子类构造函数，它可以隐式地或使用关键字 &lt;c0&gt;super&lt;/c0&gt; 来调用超类的构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot declare an interface inside a block; interfaces are inherently static.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T143006Z" creationid="pingfangx" creationdate="20180705T143006Z">
        <seg>你不能在一个块内声明一个接口;接口本质上是静态的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot declare more than one method with the same name and the same number and type of arguments, because the compiler cannot tell them apart.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065502Z" creationid="pingfangx" creationdate="20180525T065502Z">
        <seg>您不能声明多个具有相同名称和相同数量和类型参数的方法，因为编译器无法区分它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot declare static initializers or member interfaces in a local class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144433Z" creationid="pingfangx" creationdate="20180705T144433Z">
        <seg>您不能在局部类中声明静态初始化程序或成员接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot declare static initializers or member interfaces in an anonymous class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065441Z" creationid="pingfangx" creationdate="20180706T065441Z">
        <seg>您不能在匿名类中声明静态初始化程序或成员接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot instantiate them, and they may contain a mix of methods declared with or without an implementation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T020537Z" creationid="pingfangx" creationdate="20190103T020537Z">
        <seg>您无法实例化它们，并且它们可能声明一些包含或不包含实现的混合方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot invoke an enum constructor yourself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015921Z" creationid="pingfangx" creationdate="20190102T015921Z">
        <seg>您不能自己调用​​枚举构造函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot override &lt;c0&gt;getClass&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103458Z" creationid="pingfangx" creationdate="20190102T103458Z">
        <seg>您无法覆盖 &lt;c0&gt;getClass&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot refer to a shadowed declaration by its name alone.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091525Z" creationid="pingfangx" creationdate="20180705T091525Z">
        <seg>您不能仅通过其名称引用被遮蔽的声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot use any of the following as identifiers in your programs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075249Z" creationid="pingfangx" creationdate="20180518T075249Z">
        <seg>您不能在程序中使用以下任何一个作为标识符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot write two constructors that have the same number and type of arguments for the same class, because the platform would not be able to tell them apart.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034843Z" creationid="pingfangx" creationdate="20180528T034843Z">
        <seg>你不能为同一个类编写两个具有相同数量和类型参数的构造函数，因为平台无法区分它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You control access to classes and members in the same way: by using an access modifier such as &lt;c0&gt;public&lt;/c0&gt; in their declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082104Z" creationid="pingfangx" creationdate="20180705T082104Z">
        <seg>您可以通过相同的方式控制对类和成员的访问：在声明中使用访问修饰符，例如 &lt;c0&gt;public&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could also define new &lt;a0&gt;static methods&lt;/a0&gt; to existing interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063139Z" creationid="pingfangx" creationdate="20190102T063139Z">
        <seg>您还可以为现有接口定义新的 &lt;a0&gt;static methods&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could also display the name of the month with &lt;c0&gt;if-then-else&lt;/c0&gt; statements:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082118Z" creationid="pingfangx" creationdate="20180521T082118Z">
        <seg>您还可以使用 &lt;c0&gt;if-then-else&lt;/c0&gt; 语句显示月份的名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could create a &lt;c0&gt;DoItPlus&lt;/c0&gt; interface that extends &lt;c1&gt;DoIt&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063105Z" creationid="pingfangx" creationdate="20190102T063105Z">
        <seg>您可以创建继承 &lt;c1&gt;DoIt&lt;/c1&gt; 的 &lt;c0&gt;DoItPlus&lt;/c0&gt; 接口：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could invoke any of the of the default implementations with the &lt;c3&gt;super&lt;/c3&gt; keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091816Z" creationid="pingfangx" creationdate="20190102T091816Z">
        <seg>您可以使用 &lt;c3&gt;super&lt;/c3&gt; 关键字调用任何默认实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could use an &lt;c2&gt;if-then-else&lt;/c2&gt; statement in the &lt;c3&gt;applyBrakes&lt;/c3&gt; method to take some action if the brakes are applied when the bicycle is not in motion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081118Z" creationid="pingfangx" creationdate="20180521T081118Z">
        <seg>您可以在 &lt;c3&gt;applyBrakes&lt;/c3&gt; 方法中使用 &lt;c2&gt;if-then-else&lt;/c2&gt; 语句来采取一些行动，如果在自行车未运动时应用刹车。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could use the following code (find the code excerpts described in this section in the example &lt;a0&gt;&lt;c1&gt;MethodReferencesTest&lt;/c1&gt;&lt;/a0&gt;):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084043Z" creationid="pingfangx" creationdate="20181228T084043Z">
        <seg>您可以使用以下代码(在示例 &lt;a0&gt;&lt;c1&gt;MethodReferencesTest&lt;/c1&gt;&lt;/a0&gt; 中查找本节中描述的代码片断)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You create an object from a class by using the &lt;c0&gt;new&lt;/c0&gt; operator and a constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082156Z" creationid="pingfangx" creationdate="20180705T082156Z">
        <seg>您可以使用 &lt;c0&gt;new&lt;/c0&gt; 运算符和构造函数从类创建对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You declare a method's return type in its method declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091237Z" creationid="pingfangx" creationdate="20180601T091237Z">
        <seg>你在方法声明中声明一个方法的返回类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You don't have to provide any constructors for your class, but you must be careful when doing this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T035306Z" creationid="pingfangx" creationdate="20180528T035306Z">
        <seg>你不必为你的类提供任何构造函数，但是在做这件事时你必须小心。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You expect that classes that extend your abstract class have many common methods or fields, or require access modifiers other than public (such as protected and private).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021330Z" creationid="pingfangx" creationdate="20190103T021330Z">
        <seg>您希望继承抽象类的类具有许多常用方法或字段，或者需要除 public 之外的访问修饰符(例如 protected 和 private)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You expect that unrelated classes would implement your interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021446Z" creationid="pingfangx" creationdate="20190103T021446Z">
        <seg>您希望不相关的类将实现您的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have reached the end of the "Getting Started" trail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040546Z" creationid="pingfangx" creationdate="20180518T040546Z">
        <seg>您已到达 "开始使用" 路径的末尾。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have reached the end of the "Learning the Java Language" trail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093054Z" creationid="pingfangx" creationdate="20180521T093054Z">
        <seg>您已到达 "学习Java语言" 路径的末尾。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have seen an example of arrays already, in the &lt;c1&gt;main&lt;/c1&gt; method of the "Hello World!" application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021516Z" creationid="pingfangx" creationdate="20180521T021516Z">
        <seg>您已经在 "Hello World!" 应用的 &lt;c1&gt;main&lt;/c1&gt; 方法中看到过一个数组的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have seen the use of the &lt;c0&gt;printf()&lt;/c0&gt; and &lt;c1&gt;format()&lt;/c1&gt; methods to print output with formatted numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064630Z" creationid="pingfangx" creationdate="20190103T064630Z">
        <seg>您已经看到使用 &lt;c0&gt;printf()&lt;/c0&gt; 和 &lt;c1&gt;format()&lt;/c1&gt; 方法来打印带格式化数字的输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have two interfaces (&lt;c0&gt;OperateCar&lt;/c0&gt; and &lt;c1&gt;FlyCar&lt;/c1&gt;) that provide default implementations for the same method, (&lt;c2&gt;startEngine&lt;/c2&gt;):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091800Z" creationid="pingfangx" creationdate="20190102T091800Z">
        <seg>您有两个接口(&lt;c0&gt;OperateCar&lt;/c0&gt; 和 &lt;c1&gt;FlyCar&lt;/c1&gt;)，它们为同一方法提供默认实现(&lt;c2&gt;startEngine&lt;/c2&gt;)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may also notice that some objects, in turn, will also contain other objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T061304Z" creationid="pingfangx" creationdate="20180518T061304Z">
        <seg>您可能还会注意到，某些对象反过来也会包含其他对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may also occasionally see the term "member" used as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073951Z" creationid="pingfangx" creationdate="20180518T073951Z">
        <seg>您也可能偶尔会看到使用 "member（成员）" 一词。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may find some situations where auto-generated names will contain the dollar sign, but your variable names should always avoid using it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074240Z" creationid="pingfangx" creationdate="20180518T074240Z">
        <seg>您可能会发现某些情况下自动生成的名称将包含美元符号，但您的变量名称应始终避免使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may have noticed that the &lt;c0&gt;Bicycle&lt;/c0&gt; class does not contain a &lt;c1&gt;main&lt;/c1&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062622Z" creationid="pingfangx" creationdate="20180518T062622Z">
        <seg>您可能已经注意到 &lt;c0&gt;Bicycle&lt;/c0&gt; 类不包含 &lt;c1&gt;main&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may have noticed that the &lt;c0&gt;new&lt;/c0&gt; keyword isn't used when initializing a variable of a primitive type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082303Z" creationid="pingfangx" creationdate="20180518T082303Z">
        <seg>您可能已经注意到，在初始化基本类型的变量时，不会使用 &lt;c0&gt;new&lt;/c0&gt; 关键字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may have noticed that the value of &lt;c0&gt;testscore&lt;/c0&gt; can satisfy more than one expression in the compound statement: &lt;c1&gt;76 &gt;= 70&lt;/c1&gt; and &lt;c2&gt;76 &gt;= 60&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081208Z" creationid="pingfangx" creationdate="20180521T081208Z">
        <seg>您可能已经注意到 &lt;c0&gt;testscore&lt;/c0&gt; 的值可以满足复合语句中的多个表达式：&lt;c1&gt;76 &gt;= 70&lt;/c1&gt; 和 &lt;c2&gt;76 &gt;= 60&lt;/c2&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may need to use the value of one of its fields, change one of its fields, or call one of its methods to perform an action.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073352Z" creationid="pingfangx" creationdate="20180601T073352Z">
        <seg>您可能需要使用其中一个字段的值，更改其中一个字段，或者调用其中一个方法来执行操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may use a simple name for a field within its own class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073430Z" creationid="pingfangx" creationdate="20180601T073430Z">
        <seg>你可以在自己的类中为一个字段使用一个简单的名字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might keep HTML pages in one folder, images in another, and scripts or applications in yet another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064340Z" creationid="pingfangx" creationdate="20180518T064340Z">
        <seg>您可以将 HTML 页面保存在一个文件夹中，另一个文件中包含图像，另一个文件夹中包含脚本或应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might wish to make a method final if it has an implementation that should not be changed and it is critical to the consistent state of the object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104558Z" creationid="pingfangx" creationdate="20190102T104558Z">
        <seg>如果方法具有不应更改的实现，并且对于对象的一致状态至关重要，则可能希望将方法设为 final。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You must assign an object to &lt;c2&gt;originOne&lt;/c2&gt; before you use it in your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042757Z" creationid="pingfangx" creationdate="20180601T042757Z">
        <seg>在您的代码中使用它之前，您必须将一个对象分配给 &lt;c2&gt;originOne&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You must explicitly override the supertype methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091733Z" creationid="pingfangx" creationdate="20190102T091733Z">
        <seg>您必须显式覆盖超类型方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You must use a name that is unambiguous.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073423Z" creationid="pingfangx" creationdate="20180601T073423Z">
        <seg>您必须使用明确的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You need not use any of these methods, but, if you choose to do so, you may need to override them with code that is specific to your class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100604Z" creationid="pingfangx" creationdate="20190102T100604Z">
        <seg>您不需要使用任何这些方法，但是，如果您选择这样做，则可能需要使用特定于您的类的代码覆盖它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You press the "power" button to turn the television on and off.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063837Z" creationid="pingfangx" creationdate="20180518T063837Z">
        <seg>您按下 "电源" 按钮打开和关闭电视机。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You saw an example of implementing an interface in the previous lesson.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042720Z" creationid="pingfangx" creationdate="20190102T042720Z">
        <seg>您在上一课中看到了实现接口的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You saw the unlabeled form in the previous discussion of the &lt;c1&gt;switch&lt;/c1&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085751Z" creationid="pingfangx" creationdate="20180521T085751Z">
        <seg>您在前面关于 &lt;c1&gt;switch&lt;/c1&gt; 语句的讨论中看到了无标签的形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You saw this operator in the Bicycle class; it assigns the value on its right to the operand on its left:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063909Z" creationid="pingfangx" creationdate="20180521T063859Z">
        <seg>你在 Bicycle 类中看到了这个运算符;它将右边的值赋给左边的操作数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should also keep this solution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082657Z" creationid="pingfangx" creationdate="20180705T082657Z">
        <seg>您也应该保留此解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should always consider overriding the &lt;c0&gt;toString()&lt;/c0&gt; method in your classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104012Z" creationid="pingfangx" creationdate="20190102T104012Z">
        <seg>您应该始终考虑覆盖类中的 &lt;c0&gt;toString()&lt;/c0&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should always override the &lt;c0&gt;equals()&lt;/c0&gt; method if the identity operator is not appropriate for your class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102940Z" creationid="pingfangx" creationdate="20190102T102855Z">
        <seg>如果相等运算符不适合您的类，则应始终覆盖 &lt;c0&gt;equals()&lt;/c0&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should always use &lt;c0&gt;%n&lt;/c0&gt;, rather than &lt;c1&gt;\n&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033306Z" creationid="pingfangx" creationdate="20190103T033306Z">
        <seg>您应始终使用 &lt;c0&gt;%n&lt;/c0&gt;，而不是 &lt;c1&gt;\n&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should see the following on your screen:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034942Z" creationid="pingfangx" creationdate="20180518T034942Z">
        <seg>您应该在屏幕上看到以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should use enum types any time you need to represent a fixed set of constants.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015314Z" creationid="pingfangx" creationdate="20190102T015314Z">
        <seg>您需要在需要表示一组固定常量时使用枚举类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You specify a class variable or a class method by using the &lt;c0&gt;static&lt;/c0&gt; keyword in the member's declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082115Z" creationid="pingfangx" creationdate="20180705T082115Z">
        <seg>您可以使用成员声明中的 &lt;c0&gt;static&lt;/c0&gt; 关键字指定类变量或类方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You specify that a method definition in an interface is a default method with the &lt;c0&gt;default&lt;/c0&gt; keyword at the beginning of the method signature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064115Z" creationid="pingfangx" creationdate="20190102T063311Z">
        <seg>您指定在接口中定义的方法是默认方法，并在方法签名的开头使用 &lt;c0&gt;default&lt;/c0&gt; 关键字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You typically find local classes defined in the body of a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T121212Z" creationid="pingfangx" creationdate="20180705T121212Z">
        <seg>您通常会在方法体中找到定义的局部类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use &lt;a0&gt;lambda expressions&lt;/a0&gt; to create anonymous methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082643Z" creationid="pingfangx" creationdate="20181228T082643Z">
        <seg>您使用 &lt;a0&gt;lambda expressions&lt;/a0&gt; 来创建匿名方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use one of the wrapper classes – &lt;c0&gt;Byte&lt;/c0&gt;, &lt;c1&gt;Double&lt;/c1&gt;, &lt;c2&gt;Float&lt;/c2&gt;, &lt;c3&gt;Integer&lt;/c3&gt;, &lt;c4&gt;Long&lt;/c4&gt;, or &lt;c5&gt;Short&lt;/c5&gt; – to wrap a number of primitive type in an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041028Z" creationid="pingfangx" creationdate="20190103T041028Z">
        <seg>您使用其中一个包装类 -  &lt;c0&gt;Byte&lt;/c0&gt;，&lt;c1&gt;Double&lt;/c1&gt;，&lt;c2&gt;Float&lt;/c2&gt;，&lt;c3&gt;Integer&lt;/c3&gt;，&lt;c4&gt;Long&lt;/c4&gt;，或 &lt;c5&gt;Short&lt;/c5&gt;  - 来把一个基本类型的值包装到对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use the &lt;c1&gt;final&lt;/c1&gt; keyword in a method declaration to indicate that the method cannot be overridden by subclasses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104500Z" creationid="pingfangx" creationdate="20190102T104500Z">
        <seg>在方法声明中使用 &lt;c1&gt;final&lt;/c1&gt; 关键字表示子类不能覆盖该方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use varargs when you don't know how many of a particular type of argument will be passed to the method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032749Z" creationid="pingfangx" creationdate="20180601T032749Z">
        <seg>当您不知道将有多少特定类型的参数传递给该方法时，您可以使用可变参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You want to create a feature that enables an administrator to perform any kind of action, such as sending a message, on members of the social networking application that satisfy certain criteria.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085023Z" creationid="pingfangx" creationdate="20180706T085023Z">
        <seg>您希望创建一项功能，使管理员能够对满足特定条件的社交网络应用程序成员执行任何类型的操作，例如发送消息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You want to declare non-static or non-final fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021334Z" creationid="pingfangx" creationdate="20190103T021334Z">
        <seg>您想声明非静态或非最终字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You want to share code among several closely related classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021309Z" creationid="pingfangx" creationdate="20190103T021309Z">
        <seg>您希望在几个密切相关的类之间共享代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You want to specify the behavior of a particular data type, but not concerned about who implements its behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021507Z" creationid="pingfangx" creationdate="20190103T021507Z">
        <seg>您希望指定特定数据类型的行为，但不关心谁实现其行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You want to take advantage of multiple inheritance of type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021512Z" creationid="pingfangx" creationdate="20190103T021512Z">
        <seg>您希望利用类型的多重继承。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will also learn how the system cleans up after an object when its life has ended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040148Z" creationid="pingfangx" creationdate="20180601T040148Z">
        <seg>您还将了解系统在生命结束后如何清理对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will get a compile-time error if you attempt to change an instance method in the superclass to a static method in the subclass, and vice versa.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092600Z" creationid="pingfangx" creationdate="20190102T092600Z">
        <seg>如果尝试将超类中的实例方法更改为子类中的静态方法，则会出现编译时错误，反之亦然。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will learn about the various looping constructs (&lt;c1&gt;for&lt;/c1&gt;, &lt;c2&gt;while&lt;/c2&gt;, and &lt;c3&gt;do-while&lt;/c3&gt;) in the &lt;a4&gt;Control Flow&lt;/a4&gt; section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021901Z" creationid="pingfangx" creationdate="20180521T021901Z">
        <seg>您将在 &lt;a4&gt;Control Flow&lt;/a4&gt; 部分中了解各种循环结构(&lt;c1&gt;for&lt;/c1&gt;, &lt;c2&gt;while&lt;/c2&gt;, and &lt;c3&gt;do-while&lt;/c3&gt;) 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will learn how to instantiate an object, and, once instantiated, how to use the &lt;c0&gt;dot&lt;/c0&gt; operator to access the object's instance variables and methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T023055Z" creationid="pingfangx" creationdate="20180525T023055Z">
        <seg>您将学习如何实例化一个对象，并且一旦实例化后，如何使用 &lt;c0&gt;dot&lt;/c0&gt; 运算符来访问该对象的实例变量和方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will learn that all classes are derived from the &lt;c2&gt;Object&lt;/c2&gt; class, and how to modify the methods that a subclass inherits from superclasses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T043056Z" creationid="pingfangx" creationdate="20190102T043056Z">
        <seg>您将了解到所有类都派生自 &lt;c2&gt;Object&lt;/c2&gt; 类，以及如何修改子类从超类继承的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will learn that all classes are derived from the &lt;c5&gt;Object&lt;/c5&gt; class, and how to modify the methods that a subclass inherits from superclasses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042402Z" creationid="pingfangx" creationdate="20180518T042402Z">
        <seg>您将了解到所有类都来自 &lt;c5&gt;Object&lt;/c5&gt; 类，以及如何修改子类从超类继承的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will learn to use your classes to create objects, and how to use the objects you create.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022957Z" creationid="pingfangx" creationdate="20180525T022957Z">
        <seg>您将学习如何使用您的类创建对象，以及如何使用您创建的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will most commonly see varargs with the printing methods; for example, this &lt;c0&gt;printf&lt;/c0&gt; method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033218Z" creationid="pingfangx" creationdate="20180601T033218Z">
        <seg>打印方法的可变参数是你会最常见的;例如，这个 &lt;c0&gt;printf&lt;/c0&gt; 方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will need all three source files to compile this program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040006Z" creationid="pingfangx" creationdate="20180601T040006Z">
        <seg>您将需要全部三个源文件来编译此程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You would have to rewrite a lot of your API to accommodate this change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085815Z" creationid="pingfangx" creationdate="20180706T085815Z">
        <seg>您必须重写大量 API 以适应此更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You would need to implement the &lt;a0&gt;&lt;c1&gt;Comparator&lt;/c1&gt;&lt;/a0&gt; interface to specify new sorting criteria, and use the method &lt;a2&gt;&lt;c3&gt;sort(List&lt;T&gt; list, Comparator&lt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T070850Z" creationid="pingfangx" creationdate="20190102T070850Z">
        <seg>您需要实现 &lt;a0&gt;&lt;c1&gt;Comparator&lt;/c1&gt;&lt;/a0&gt; 接口以指定新的排序条件，并使用方法 &lt;a2&gt;&lt;c3&gt;sort(List&lt;T&gt; list,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You would then modify your code to annotate that particular variable, indicating that it is never assigned to null.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040802Z" creationid="pingfangx" creationdate="20190102T040802Z">
        <seg>然后，您将修改代码以注解该特定变量，表明它从未分配给 null。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You write:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082610Z" creationid="pingfangx" creationdate="20180705T082610Z">
        <seg>你写：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll learn about URLs, sockets, datagrams, and security.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093123Z" creationid="pingfangx" creationdate="20180521T093123Z">
        <seg>您将了解到 URL，套接字，数据报和安全性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll learn about control flow statements in the next section, &lt;a1&gt;Control Flow Statements&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075301Z" creationid="pingfangx" creationdate="20180521T075301Z">
        <seg>您将在下一节 &lt;a1&gt;Control Flow Statements&lt;/a1&gt; 中了解控制流程语句</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll learn more about the &lt;c6&gt;String&lt;/c6&gt; class in &lt;a7&gt;Simple Data Objects&lt;/a7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082055Z" creationid="pingfangx" creationdate="20180518T082055Z">
        <seg>您将在 &lt;a7&gt;Simple Data Objects&lt;/a7&gt; 中了解有关 &lt;c6&gt;String&lt;/c6&gt; 类的更多信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll learn the reasons for this later in the lessons on &lt;a3&gt;Classes and Objects&lt;/a3&gt; and &lt;a4&gt;Interfaces and Inheritance&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064202Z" creationid="pingfangx" creationdate="20180518T064202Z">
        <seg>稍后您将在 &lt;a3&gt;Classes and Objects&lt;/a3&gt; 和 &lt;a4&gt;Interfaces and Inheritance&lt;/a4&gt; 的课程中了解原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You've already been introduced to the Java Virtual Machine; it's the base for the Java platform and is ported onto various hardware-based platforms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033348Z" creationid="pingfangx" creationdate="20180518T033348Z">
        <seg>您已经被介绍了 Java 虚拟机;它是 Java 平台的基础，并被移植到各种基于硬件的平台上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You've already learned that objects store their state in fields.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072514Z" creationid="pingfangx" creationdate="20180518T072514Z">
        <seg>您已经了解到对象将其状态存储在字段中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You've already seen examples of expressions, illustrated in bold below:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074044Z" creationid="pingfangx" creationdate="20180521T074044Z">
        <seg>您已经看过表达式的例子，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You've seen classes defined in the following way:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025859Z" creationid="pingfangx" creationdate="20180525T025859Z">
        <seg>你已经看到以下列方式定义的类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You've seen many examples of declaration statements already:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075205Z" creationid="pingfangx" creationdate="20180521T075205Z">
        <seg>你已经看到很多声明语句的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your answers will vary depending on the real-world objects that you are modeling.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064936Z" creationid="pingfangx" creationdate="20180518T064936Z">
        <seg>您的答案将根据您正在建模的实际对象而有所不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your answers will vary here as well, but the error message will specifically list the required methods that have not been implemented.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064941Z" creationid="pingfangx" creationdate="20180518T064941Z">
        <seg>您的答案也将有所不同，但错误消息将具体列出尚未实现的所需方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your class can implement more than one interface, so the &lt;c1&gt;implements&lt;/c1&gt; keyword is followed by a comma-separated list of the interfaces implemented by the class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061841Z" creationid="pingfangx" creationdate="20190102T061841Z">
        <seg>您的类可以实现多个接口，因此 &lt;c1&gt;implements&lt;/c1&gt; 关键字后跟一个以逗号分隔的类实现的接口列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your class cannot be found.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040252Z" creationid="pingfangx" creationdate="20180518T040252Z">
        <seg>你的类无法找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your first application, &lt;c0&gt;HelloWorldApp&lt;/c0&gt;, will simply display the greeting "Hello world!".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034445Z" creationid="pingfangx" creationdate="20180518T034445Z">
        <seg>您的第一个应用程序 &lt;c0&gt;HelloWorldApp&lt;/c0&gt; 将只显示问候语 "Hello world！"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your implementation should return the string backwards.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074602Z" creationid="pingfangx" creationdate="20190102T074602Z">
        <seg>您的实现应该向后返回字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your program works!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034952Z" creationid="pingfangx" creationdate="20180518T034952Z">
        <seg>你的程序有效！</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your programs will also require fewer lines of code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033813Z" creationid="pingfangx" creationdate="20180518T033813Z">
        <seg>你的程序也需要更少的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your results will vary depending on your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062018Z" creationid="pingfangx" creationdate="20180521T062018Z">
        <seg>您的结果会因您的代码而异。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zero or more modifiers, such as &lt;c0&gt;public&lt;/c0&gt; or &lt;c1&gt;private&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063255Z" creationid="pingfangx" creationdate="20180525T063255Z">
        <seg>零个或多个修饰符，如 &lt;c0&gt;public&lt;/c0&gt; 或 &lt;c1&gt;private&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[.../tutorial/java/javaOO/QandE-1dot1/Class1.java].</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021152Z" creationid="pingfangx" creationdate="20190102T021152Z">
        <seg>[.../tutorial/java/javaOO/QandE-1dot1/Class1.java].</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[.../tutorial/java/javaOO/QandE-1dot1/Class2.java]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021210Z" creationid="pingfangx" creationdate="20190102T021210Z">
        <seg>[.../tutorial/java/javaOO/QandE-1dot1/Class2.java]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[.../tutorial/java/javaOO/QandE-1dot1/Problem.java]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020652Z" creationid="pingfangx" creationdate="20190102T020652Z">
        <seg>[.../tutorial/java/javaOO/QandE-1dot1/Problem.java]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[.../tutorial/java/javaOO/QandE-1dot2/InnerClassDemo.java]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021050Z" creationid="pingfangx" creationdate="20190102T021050Z">
        <seg>[.../tutorial/java/javaOO/QandE-1dot2/InnerClassDemo.java]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[.../tutorial/java/javaOO/QandE-1dot2/InnerClassDemo2.java]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021146Z" creationid="pingfangx" creationdate="20190102T021146Z">
        <seg>[.../tutorial/java/javaOO/QandE-1dot2/InnerClassDemo2.java]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[.../tutorial/java/javaOO/QandE-1dot2/InnerClassDemo3.java]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021150Z" creationid="pingfangx" creationdate="20190102T021150Z">
        <seg>[.../tutorial/java/javaOO/QandE-1dot2/InnerClassDemo3.java]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[PENDING: can we make that clearer?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020955Z" creationid="pingfangx" creationdate="20190102T020940Z">
        <seg>[PENDING: can we make that clearer?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[This step is here just to make sure they can compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021100Z" creationid="pingfangx" creationdate="20190102T021100Z">
        <seg>[这一步只是为了确保它们可以编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[http://docs.oracle.com/javase/javatutorials/tutorialJWS/uiswing/start/swingStart.html].</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021057Z" creationid="pingfangx" creationdate="20190102T021057Z">
        <seg>[http://docs.oracle.com/javase/javatutorials/tutorialJWS/uiswing/start/swingStart.html].</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[http://java.sun.com/products/jdk/1.3/docs/api/java/awt/event/ActionListener.html].</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021122Z" creationid="pingfangx" creationdate="20190102T021122Z">
        <seg>[http://java.sun.com/products/jdk/1.3/docs/api/java/awt/event/ActionListener.html].</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062503Z" creationid="pingfangx" creationdate="20190103T062503Z">
        <seg>\"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062448Z" creationid="pingfangx" creationdate="20190103T062448Z">
        <seg>\'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\\</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062509Z" creationid="pingfangx" creationdate="20190103T062509Z">
        <seg>\\</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\b</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062413Z" creationid="pingfangx" creationdate="20190103T062413Z">
        <seg>\b</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\f</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062438Z" creationid="pingfangx" creationdate="20190103T062438Z">
        <seg>\f</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\n</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062419Z" creationid="pingfangx" creationdate="20190103T062419Z">
        <seg>\n</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\r</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062429Z" creationid="pingfangx" creationdate="20190103T062429Z">
        <seg>\r</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\t</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062350Z" creationid="pingfangx" creationdate="20190103T062350Z">
        <seg>\t</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>^</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063049Z" creationid="pingfangx" creationdate="20180521T063049Z">
        <seg>^</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>^
2 errors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040344Z" creationid="pingfangx" creationdate="20180518T040344Z">
        <seg>^
2 errors</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>^
HelloWorldApp2.java:7: ')' expected</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040341Z" creationid="pingfangx" creationdate="20180518T040341Z">
        <seg>^
HelloWorldApp2.java:7: ')' expected</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_keywords.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T074332Z" creationid="pingfangx" creationdate="20180518T074332Z">
        <seg>_keywords.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a + b = 91.7
a - b = -82.7
a * b = 392.4
a / b = 0.0516055
a % b = 4.5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065216Z" creationid="pingfangx" creationdate="20190103T065216Z">
        <seg>a + b = 91.7
a - b = -82.7
a * b = 392.4
a / b = 0.0516055
a % b = 4.5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a checkmark</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034353Z" creationid="pingfangx" creationdate="20180518T034353Z">
        <seg>a checkmark</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a specified type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071747Z" creationid="pingfangx" creationdate="20180521T071747Z">
        <seg>与指定类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a value by 1
!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072133Z" creationid="pingfangx" creationdate="20180521T071529Z">
        <seg>将值减 1
!       </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a value by 1
--      Decrement operator; decrements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071524Z" creationid="pingfangx" creationdate="20180521T071524Z">
        <seg>将值加 1
--      递减运算符；</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a window where you can enter DOS commands</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034737Z" creationid="pingfangx" creationdate="20180518T034737Z">
        <seg>一个可以输入 DOS 命令的窗口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a, Math.abs(a));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035755Z" creationid="pingfangx" creationdate="20190103T035755Z">
        <seg>a, Math.abs(a));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040036Z" creationid="pingfangx" creationdate="20180518T040036Z">
        <seg>a.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a.x = 2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082841Z" creationid="pingfangx" creationdate="20180705T082841Z">
        <seg>a.x = 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a.y = 5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082840Z" creationid="pingfangx" creationdate="20180705T082840Z">
        <seg>a.y = 5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>aValue = 8933.234;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075528Z" creationid="pingfangx" creationdate="20180521T075528Z">
        <seg>aValue = 8933.234;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>aValue = 8933.234; &lt;s0&gt;// assignment statement&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075626Z" creationid="pingfangx" creationdate="20180521T075626Z">
        <seg>aValue = 8933.234; &lt;s0&gt;// assignment statement&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>aValue++;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075529Z" creationid="pingfangx" creationdate="20180521T075529Z">
        <seg>aValue++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>aValue++; // &lt;s0&gt;increment statement&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075626Z" creationid="pingfangx" creationdate="20180521T075626Z">
        <seg>aValue++; // &lt;s0&gt;increment statement&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>absolute value of -8 = 8
pi = 3.1416</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084620Z" creationid="pingfangx" creationdate="20190103T084620Z">
        <seg>absolute value of -8 = 8
pi = 3.1416</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>abstract</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075730Z" creationid="pingfangx" creationdate="20180518T075730Z">
        <seg>abstract</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>abstract class GraphicObject {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022300Z" creationid="pingfangx" creationdate="20190103T022300Z">
        <seg>abstract class GraphicObject {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>abstract class X implements Y {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022431Z" creationid="pingfangx" creationdate="20190103T022431Z">
        <seg>abstract class X implements Y {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>abstract void draw();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022302Z" creationid="pingfangx" creationdate="20190103T022302Z">
        <seg>abstract void draw();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>abstract void draw();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T015956Z" creationid="pingfangx" creationdate="20190103T015956Z">
        <seg>abstract void draw();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>abstract void moveTo(double deltaX, double deltaY);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T015936Z" creationid="pingfangx" creationdate="20190103T015936Z">
        <seg>abstract void moveTo(double deltaX, double deltaY);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>abstract void resize();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022303Z" creationid="pingfangx" creationdate="20190103T022303Z">
        <seg>abstract void resize();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>abstract.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042707Z" creationid="pingfangx" creationdate="20190102T042707Z">
        <seg>abstract.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>accesscontrol.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022845Z" creationid="pingfangx" creationdate="20180525T022845Z">
        <seg>accesscontrol.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>added in 1.2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075830Z" creationid="pingfangx" creationdate="20180518T075830Z">
        <seg>添加于 1.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>added in 1.4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075833Z" creationid="pingfangx" creationdate="20180518T075833Z">
        <seg>添加于 in 1.4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>added in 5.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075836Z" creationid="pingfangx" creationdate="20180518T075836Z">
        <seg>添加于 5.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>additive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063012Z" creationid="pingfangx" creationdate="20180521T063012Z">
        <seg>加</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allows you to print an arbitrary number of objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033224Z" creationid="pingfangx" creationdate="20180601T033224Z">
        <seg>允许您打印任意数量的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an expression
++      Increment operator; increments</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071501Z" creationid="pingfangx" creationdate="20180521T071441Z">
        <seg>否定一个表达式
++      递增运算符；</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray = new int[10];</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021654Z" creationid="pingfangx" creationdate="20180521T021654Z">
        <seg>anArray = new int[10];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[0] = 100;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021657Z" creationid="pingfangx" creationdate="20180521T021657Z">
        <seg>anArray[0] = 100;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[0] = 100; // initialize first element
anArray[1] = 200; // initialize second element
anArray[2] = 300; // and so forth</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041854Z" creationid="pingfangx" creationdate="20180521T041854Z">
        <seg>anArray[0] = 100; //初始化第一个元素
anArray[1] = 200; //初始化第二个元素
anArray[2] = 300; //等等</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[1] = 200;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021659Z" creationid="pingfangx" creationdate="20180521T021659Z">
        <seg>anArray[1] = 200;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[2] = 300;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021706Z" creationid="pingfangx" creationdate="20180521T021706Z">
        <seg>anArray[2] = 300;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[3] = 400;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021706Z" creationid="pingfangx" creationdate="20180521T021706Z">
        <seg>anArray[3] = 400;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[4] = 500;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021707Z" creationid="pingfangx" creationdate="20180521T021707Z">
        <seg>anArray[4] = 500;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[5] = 600;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021707Z" creationid="pingfangx" creationdate="20180521T021707Z">
        <seg>anArray[5] = 600;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[6] = 700;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021708Z" creationid="pingfangx" creationdate="20180521T021708Z">
        <seg>anArray[6] = 700;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[7] = 800;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021708Z" creationid="pingfangx" creationdate="20180521T021708Z">
        <seg>anArray[7] = 800;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[8] = 900;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021709Z" creationid="pingfangx" creationdate="20180521T021709Z">
        <seg>anArray[8] = 900;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anArray[9] = 1000;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021709Z" creationid="pingfangx" creationdate="20180521T021709Z">
        <seg>anArray[9] = 1000;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>and run Swing programs, before they start trying to change</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021105Z" creationid="pingfangx" creationdate="20190102T021105Z">
        <seg>and run Swing programs, before they start trying to change</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>annotations/QandE/questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092431Z" creationid="pingfangx" creationdate="20180521T092431Z">
        <seg>annotations/QandE/questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>annotations/basics.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092316Z" creationid="pingfangx" creationdate="20180521T092316Z">
        <seg>annotations/basics.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>annotations/declaring.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092322Z" creationid="pingfangx" creationdate="20180521T092322Z">
        <seg>annotations/declaring.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>annotations/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042259Z" creationid="pingfangx" creationdate="20180518T042259Z">
        <seg>annotations/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>annotations/predefined.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092348Z" creationid="pingfangx" creationdate="20180521T092348Z">
        <seg>annotations/predefined.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>annotations/repeating.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092409Z" creationid="pingfangx" creationdate="20180521T092409Z">
        <seg>annotations/repeating.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>annotations/type_annotations.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092353Z" creationid="pingfangx" creationdate="20180521T092353Z">
        <seg>annotations/type_annotations.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anonymous inner class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021022Z" creationid="pingfangx" creationdate="20190102T021022Z">
        <seg>anonymous inner class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anonymousclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022853Z" creationid="pingfangx" creationdate="20180525T022853Z">
        <seg>anonymousclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>answers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040201Z" creationid="pingfangx" creationdate="20180518T040201Z">
        <seg>answers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>answers_expressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075540Z" creationid="pingfangx" creationdate="20180521T075540Z">
        <seg>answers_expressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>answers_flow.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091217Z" creationid="pingfangx" creationdate="20180521T091217Z">
        <seg>answers_flow.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>answers_operators.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072725Z" creationid="pingfangx" creationdate="20180521T072725Z">
        <seg>answers_operators.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>answers_variables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T061917Z" creationid="pingfangx" creationdate="20180521T061917Z">
        <seg>answers_variables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>application/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032429Z" creationid="pingfangx" creationdate="20180518T032429Z">
        <seg>application/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>arguments.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022839Z" creationid="pingfangx" creationdate="20180525T022839Z">
        <seg>arguments.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>arrayOfInts[i] = i;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100906Z" creationid="pingfangx" creationdate="20180705T100906Z">
        <seg>arrayOfInts[i] = i;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>arrayOfInts[j] &gt; arrayOfInts[j+1]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072318Z" creationid="pingfangx" creationdate="20180521T072318Z">
        <seg>arrayOfInts[j] &gt; arrayOfInts[j+1]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>arrays.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072107Z" creationid="pingfangx" creationdate="20180518T072107Z">
        <seg>arrays.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assert (boolean expression to test);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082613Z" creationid="pingfangx" creationdate="20180705T082613Z">
        <seg>assert (boolean expression to test);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assert toString(ACE) == "Ace";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082627Z" creationid="pingfangx" creationdate="20180705T082627Z">
        <seg>assert toString(ACE) == "Ace";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assignment</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063200Z" creationid="pingfangx" creationdate="20180521T063200Z">
        <seg>赋值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>author = "John Doe",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025146Z" creationid="pingfangx" creationdate="20190102T025146Z">
        <seg>author = "John Doe",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>autoboxing.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024420Z" creationid="pingfangx" creationdate="20190103T024420Z">
        <seg>autoboxing.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b, Math.ceil(b));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035756Z" creationid="pingfangx" creationdate="20190103T035756Z">
        <seg>b, Math.ceil(b));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b, Math.floor(b));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035757Z" creationid="pingfangx" creationdate="20190103T035757Z">
        <seg>b, Math.floor(b));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b, Math.rint(b));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035758Z" creationid="pingfangx" creationdate="20190103T035758Z">
        <seg>b, Math.rint(b));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040038Z" creationid="pingfangx" creationdate="20180518T040038Z">
        <seg>b.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b.x = 2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082842Z" creationid="pingfangx" creationdate="20180705T082842Z">
        <seg>b.x = 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b.y = 6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082841Z" creationid="pingfangx" creationdate="20180705T082841Z">
        <seg>b.y = 6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>basics.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023233Z" creationid="pingfangx" creationdate="20190102T023233Z">
        <seg>basics.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>because &lt;c0&gt;sb.toString()&lt;/c0&gt; is called implicitly, as it is with any other object in a &lt;c1&gt;println()&lt;/c1&gt; invocation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082911Z" creationid="pingfangx" creationdate="20190103T082911Z">
        <seg>因为 &lt;c0&gt;sb.toString()&lt;/c0&gt; 是隐式调用的，与 &lt;c1&gt;println()&lt;/c1&gt; 调用中的任何其他对象一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>behavior between this version and the previous version of</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021144Z" creationid="pingfangx" creationdate="20190102T021144Z">
        <seg>behavior between this version and the previous version of</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>beyondmath.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024413Z" creationid="pingfangx" creationdate="20190103T024413Z">
        <seg>beyondmath.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike01 = new Bicycle(20, 10, 1);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094039Z" creationid="pingfangx" creationdate="20190102T094039Z">
        <seg>bike01 = new Bicycle(20, 10, 1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike01.printDescription();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094040Z" creationid="pingfangx" creationdate="20190102T094040Z">
        <seg>bike01.printDescription();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike02 = new MountainBike(20, 10, 5, "Dual");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094039Z" creationid="pingfangx" creationdate="20190102T094039Z">
        <seg>bike02 = new MountainBike(20, 10, 5, "Dual");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike02.printDescription();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094041Z" creationid="pingfangx" creationdate="20190102T094041Z">
        <seg>bike02.printDescription();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike03 = new RoadBike(40, 20, 8, 23);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094040Z" creationid="pingfangx" creationdate="20190102T094040Z">
        <seg>bike03 = new RoadBike(40, 20, 8, 23);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike03.printDescription();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094041Z" creationid="pingfangx" creationdate="20190102T094041Z">
        <seg>bike03.printDescription();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike1.changeCadence(50);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062707Z" creationid="pingfangx" creationdate="20180518T062707Z">
        <seg>bike1.changeCadence(50);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike1.changeGear(2);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062708Z" creationid="pingfangx" creationdate="20180518T062708Z">
        <seg>bike1.changeGear(2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike1.printStates();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062709Z" creationid="pingfangx" creationdate="20180518T062709Z">
        <seg>bike1.printStates();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike1.speedUp(10);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062708Z" creationid="pingfangx" creationdate="20180518T062708Z">
        <seg>bike1.speedUp(10);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike2.changeCadence(40);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062711Z" creationid="pingfangx" creationdate="20180518T062711Z">
        <seg>bike2.changeCadence(40);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike2.changeCadence(50);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062709Z" creationid="pingfangx" creationdate="20180518T062709Z">
        <seg>bike2.changeCadence(50);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike2.changeGear(2);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062710Z" creationid="pingfangx" creationdate="20180518T062710Z">
        <seg>bike2.changeGear(2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike2.changeGear(3);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062712Z" creationid="pingfangx" creationdate="20180518T062712Z">
        <seg>bike2.changeGear(3);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike2.printStates();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062713Z" creationid="pingfangx" creationdate="20180518T062713Z">
        <seg>bike2.printStates();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bike2.speedUp(10);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062710Z" creationid="pingfangx" creationdate="20180518T062710Z">
        <seg>bike2.speedUp(10);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bitwise AND</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063044Z" creationid="pingfangx" creationdate="20180521T063044Z">
        <seg>按位与</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bitwise exclusive OR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063049Z" creationid="pingfangx" creationdate="20180521T063049Z">
        <seg>按位异或</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bitwise inclusive OR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063113Z" creationid="pingfangx" creationdate="20180521T063101Z">
        <seg>按位或</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>block.accept(data);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094311Z" creationid="pingfangx" creationdate="20180706T094311Z">
        <seg>block.accept(data);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075736Z" creationid="pingfangx" creationdate="20180518T075736Z">
        <seg>boolean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean condition = true;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075351Z" creationid="pingfangx" creationdate="20180521T075351Z">
        <seg>boolean condition = true;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean contains(CharSequence s)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073509Z" creationid="pingfangx" creationdate="20190103T073509Z">
        <seg>boolean contains(CharSequence s)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean didItWork(int i, double x, String s);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062910Z" creationid="pingfangx" creationdate="20190102T062910Z">
        <seg>boolean didItWork(int i, double x, String s);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean endsWith(String suffix)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075449Z" creationid="pingfangx" creationdate="20190103T075449Z">
        <seg>boolean endsWith(String suffix)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean equals(Object anObject)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075630Z" creationid="pingfangx" creationdate="20190103T075630Z">
        <seg>boolean equals(Object anObject)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean equals(Object obj)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030709Z" creationid="pingfangx" creationdate="20190103T030709Z">
        <seg>boolean equals(Object obj)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean equalsIgnoreCase(String anotherString)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075658Z" creationid="pingfangx" creationdate="20190103T075658Z">
        <seg>boolean equalsIgnoreCase(String anotherString)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean foundIt = false;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085846Z" creationid="pingfangx" creationdate="20180521T085846Z">
        <seg>boolean foundIt = false;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean isDigit(char ch)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062212Z" creationid="pingfangx" creationdate="20190103T062212Z">
        <seg>boolean isDigit(char ch)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean isLetter(char ch)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062210Z" creationid="pingfangx" creationdate="20190103T062210Z">
        <seg>boolean isLetter(char ch)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean isLowerCase(char ch)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062231Z" creationid="pingfangx" creationdate="20190103T062231Z">
        <seg>boolean isLowerCase(char ch)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean isUpperCase(char ch)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062230Z" creationid="pingfangx" creationdate="20190103T062230Z">
        <seg>boolean isUpperCase(char ch)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean isWhitespace(char ch)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062223Z" creationid="pingfangx" creationdate="20190103T062223Z">
        <seg>boolean isWhitespace(char ch)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean matches(String regex)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075834Z" creationid="pingfangx" creationdate="20190103T075834Z">
        <seg>boolean matches(String regex)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean regionMatches(boolean ignoreCase, int toffset, String other, int ooffset, int len)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075817Z" creationid="pingfangx" creationdate="20190103T075817Z">
        <seg>boolean regionMatches(boolean ignoreCase, int toffset, String other, int ooffset, int len)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean regionMatches(int toffset, String other, int ooffset, int len)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075725Z" creationid="pingfangx" creationdate="20190103T075725Z">
        <seg>boolean regionMatches(int toffset, String other, int ooffset, int len)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean result = true;
char capitalC = 'C';
byte b = 100;
short s = 10000;
int i = 100000;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082449Z" creationid="pingfangx" creationdate="20180518T082449Z">
        <seg>boolean result = true;
char capitalC = 'C';
byte b = 100;
short s = 10000;
int i = 100000;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean signalOn);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054134Z" creationid="pingfangx" creationdate="20190102T054134Z">
        <seg>boolean signalOn);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean someCondition = true;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070337Z" creationid="pingfangx" creationdate="20180521T070337Z">
        <seg>boolean someCondition = true;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean startsWith(String prefix)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075449Z" creationid="pingfangx" creationdate="20190103T075449Z">
        <seg>boolean startsWith(String prefix)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean startsWith(String prefix, int offset)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075525Z" creationid="pingfangx" creationdate="20190103T075525Z">
        <seg>boolean startsWith(String prefix, int offset)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean success = false;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065228Z" creationid="pingfangx" creationdate="20180521T065228Z">
        <seg>boolean success = false;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean test(&lt;c1&gt;Person&lt;/c1&gt; t);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093406Z" creationid="pingfangx" creationdate="20180706T093406Z">
        <seg>boolean test(&lt;c1&gt;Person&lt;/c1&gt; t);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean test(Person p);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090145Z" creationid="pingfangx" creationdate="20180706T090145Z">
        <seg>boolean test(Person p);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>boolean test(T t);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092918Z" creationid="pingfangx" creationdate="20180706T092918Z">
        <seg>boolean test(T t);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>branch.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072446Z" creationid="pingfangx" creationdate="20180518T072446Z">
        <seg>branch.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>break</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075739Z" creationid="pingfangx" creationdate="20180518T075739Z">
        <seg>break</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>break search;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090135Z" creationid="pingfangx" creationdate="20180521T090135Z">
        <seg>break search;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>break test;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090646Z" creationid="pingfangx" creationdate="20180521T090646Z">
        <seg>break test;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>break;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082018Z" creationid="pingfangx" creationdate="20180521T082018Z">
        <seg>break;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>btn.setOnAction(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075329Z" creationid="pingfangx" creationdate="20181228T075329Z">
        <seg>btn.setOnAction(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>btn.setOnAction(&lt;b0&gt;new EventHandler&lt;ActionEvent&gt;() {&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065641Z" creationid="pingfangx" creationdate="20180706T065641Z">
        <seg>btn.setOnAction(&lt;b0&gt;new EventHandler&lt;ActionEvent&gt;() {&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>btn.setText("Say 'Hello World'");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065640Z" creationid="pingfangx" creationdate="20180706T065640Z">
        <seg>btn.setText("Say 'Hello World'");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buffers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024418Z" creationid="pingfangx" creationdate="20190103T024418Z">
        <seg>buffers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>but it could have been written like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092802Z" creationid="pingfangx" creationdate="20180601T092802Z">
        <seg>但它可能是这样写的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>but this is discouraged because it does not make it clear that they are class methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065050Z" creationid="pingfangx" creationdate="20180705T065050Z">
        <seg>但这是不鼓励的，因为它没有表明它们是类方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>but this is discouraged because it does not make it clear that they are class variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043151Z" creationid="pingfangx" creationdate="20180607T043151Z">
        <seg>但是这是不鼓励的，因为它并不能清楚地表明它们是类变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>byte</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075741Z" creationid="pingfangx" creationdate="20180518T075741Z">
        <seg>byte</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>byte byteValue()&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030640Z" creationid="pingfangx" creationdate="20190103T030640Z">
        <seg>byte byteValue()&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>byte[] anArrayOfBytes;
short[] anArrayOfShorts;
long[] anArrayOfLongs;
float[] anArrayOfFloats;
double[] anArrayOfDoubles;
boolean[] anArrayOfBooleans;
char[] anArrayOfChars;
String[] anArrayOfStrings;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T034848Z" creationid="pingfangx" creationdate="20180521T034848Z">
        <seg>byte[] anArrayOfBytes;
short[] anArrayOfShorts;
long[] anArrayOfLongs;
float[] anArrayOfFloats;
double[] anArrayOfDoubles;
boolean[] anArrayOfBooleans;
char[] anArrayOfChars;
String[] anArrayOfStrings;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>c, d, Math.max(c, d));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035800Z" creationid="pingfangx" creationdate="20190103T035800Z">
        <seg>c, d, Math.max(c, d));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>c, d, Math.min(c, d));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035801Z" creationid="pingfangx" creationdate="20190103T035801Z">
        <seg>c, d, Math.min(c, d));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>c.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040040Z" creationid="pingfangx" creationdate="20180518T040040Z">
        <seg>c.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cadence + " speed:" +</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062544Z" creationid="pingfangx" creationdate="20180518T062544Z">
        <seg>cadence + " speed:" +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cadence = 10;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034751Z" creationid="pingfangx" creationdate="20180528T034751Z">
        <seg>cadence = 10;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cadence = newValue;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062536Z" creationid="pingfangx" creationdate="20180518T062536Z">
        <seg>cadence = newValue;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cadence = startCadence;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025655Z" creationid="pingfangx" creationdate="20180525T025655Z">
        <seg>cadence = startCadence;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cadence:50 speed:10 gear:2
cadence:40 speed:20 gear:3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062729Z" creationid="pingfangx" creationdate="20180518T062729Z">
        <seg>cadence:50 speed:10 gear:2
cadence:40 speed:20 gear:3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>caffein</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043002Z" creationid="pingfangx" creationdate="20180521T043002Z">
        <seg>caffein</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>calculateAnswer(double, int, double, double)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065102Z" creationid="pingfangx" creationdate="20180525T065102Z">
        <seg>calculateAnswer(double, int, double, double)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cando.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032700Z" creationid="pingfangx" creationdate="20180518T032700Z">
        <seg>cando.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075744Z" creationid="pingfangx" creationdate="20180518T075744Z">
        <seg>case</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "april":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082559Z" creationid="pingfangx" creationdate="20180521T082559Z">
        <seg>case "april":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "august":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082602Z" creationid="pingfangx" creationdate="20180521T082602Z">
        <seg>case "august":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "december":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082606Z" creationid="pingfangx" creationdate="20180521T082606Z">
        <seg>case "december":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "february":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082557Z" creationid="pingfangx" creationdate="20180521T082557Z">
        <seg>case "february":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "january":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082556Z" creationid="pingfangx" creationdate="20180521T082556Z">
        <seg>case "january":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "july":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082601Z" creationid="pingfangx" creationdate="20180521T082601Z">
        <seg>case "july":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "june":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082600Z" creationid="pingfangx" creationdate="20180521T082600Z">
        <seg>case "june":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "march":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082558Z" creationid="pingfangx" creationdate="20180521T082558Z">
        <seg>case "march":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "may":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082559Z" creationid="pingfangx" creationdate="20180521T082559Z">
        <seg>case "may":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "november":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082605Z" creationid="pingfangx" creationdate="20180521T082605Z">
        <seg>case "november":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "october":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082604Z" creationid="pingfangx" creationdate="20180521T082604Z">
        <seg>case "october":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case "september":</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082603Z" creationid="pingfangx" creationdate="20180521T082603Z">
        <seg>case "september":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 10: futureMonths.add("October");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082403Z" creationid="pingfangx" creationdate="20180521T082403Z">
        <seg>case 10: futureMonths.add("October");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 10: monthString = "October";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082024Z" creationid="pingfangx" creationdate="20180521T082024Z">
        <seg>case 10: monthString = "October";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 11: futureMonths.add("November");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082403Z" creationid="pingfangx" creationdate="20180521T082403Z">
        <seg>case 11: futureMonths.add("November");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 11: monthString = "November";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082024Z" creationid="pingfangx" creationdate="20180521T082024Z">
        <seg>case 11: monthString = "November";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 12:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082511Z" creationid="pingfangx" creationdate="20180521T082511Z">
        <seg>case 12:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 12: futureMonths.add("December");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082404Z" creationid="pingfangx" creationdate="20180521T082404Z">
        <seg>case 12: futureMonths.add("December");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 12: monthString = "December";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082025Z" creationid="pingfangx" creationdate="20180521T082025Z">
        <seg>case 12: monthString = "December";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 1:  futureMonths.add("January");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082356Z" creationid="pingfangx" creationdate="20180521T082356Z">
        <seg>case 1:  futureMonths.add("January");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 1:  monthString = "January";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082017Z" creationid="pingfangx" creationdate="20180521T082017Z">
        <seg>case 1:  monthString = "January";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 1: case 3: case 5:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082505Z" creationid="pingfangx" creationdate="20180521T082505Z">
        <seg>case 1: case 3: case 5:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 2:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082514Z" creationid="pingfangx" creationdate="20180521T082514Z">
        <seg>case 2:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 2:  futureMonths.add("February");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082359Z" creationid="pingfangx" creationdate="20180521T082359Z">
        <seg>case 2:  futureMonths.add("February");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 2:  monthString = "February";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082019Z" creationid="pingfangx" creationdate="20180521T082019Z">
        <seg>case 2:  monthString = "February";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 3:  futureMonths.add("March");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082400Z" creationid="pingfangx" creationdate="20180521T082400Z">
        <seg>case 3:  futureMonths.add("March");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 3:  monthString = "March";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082020Z" creationid="pingfangx" creationdate="20180521T082020Z">
        <seg>case 3:  monthString = "March";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 4:  futureMonths.add("April");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082400Z" creationid="pingfangx" creationdate="20180521T082400Z">
        <seg>case 4:  futureMonths.add("April");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 4:  monthString = "April";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082021Z" creationid="pingfangx" creationdate="20180521T082021Z">
        <seg>case 4:  monthString = "April";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 4: case 6:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082512Z" creationid="pingfangx" creationdate="20180521T082512Z">
        <seg>case 4: case 6:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 5:  futureMonths.add("May");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082401Z" creationid="pingfangx" creationdate="20180521T082401Z">
        <seg>case 5:  futureMonths.add("May");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 5:  monthString = "May";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082021Z" creationid="pingfangx" creationdate="20180521T082021Z">
        <seg>case 5:  monthString = "May";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 6:  futureMonths.add("June");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082401Z" creationid="pingfangx" creationdate="20180521T082401Z">
        <seg>case 6:  futureMonths.add("June");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 6:  monthString = "June";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082022Z" creationid="pingfangx" creationdate="20180521T082022Z">
        <seg>case 6:  monthString = "June";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 7:  futureMonths.add("July");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082402Z" creationid="pingfangx" creationdate="20180521T082402Z">
        <seg>case 7:  futureMonths.add("July");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 7:  monthString = "July";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082022Z" creationid="pingfangx" creationdate="20180521T082022Z">
        <seg>case 7:  monthString = "July";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 7: case 8: case 10:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082510Z" creationid="pingfangx" creationdate="20180521T082510Z">
        <seg>case 7: case 8: case 10:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 8:  futureMonths.add("August");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082402Z" creationid="pingfangx" creationdate="20180521T082402Z">
        <seg>case 8:  futureMonths.add("August");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 8:  monthString = "August";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082023Z" creationid="pingfangx" creationdate="20180521T082023Z">
        <seg>case 8:  monthString = "August";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 9:  futureMonths.add("September");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082402Z" creationid="pingfangx" creationdate="20180521T082402Z">
        <seg>case 9:  futureMonths.add("September");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 9:  monthString = "September";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082023Z" creationid="pingfangx" creationdate="20180521T082023Z">
        <seg>case 9:  monthString = "September";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case 9: case 11:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082512Z" creationid="pingfangx" creationdate="20180521T082512Z">
        <seg>case 9: case 11:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case FRIDAY:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015343Z" creationid="pingfangx" creationdate="20190102T015343Z">
        <seg>case FRIDAY:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case MONDAY:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015342Z" creationid="pingfangx" creationdate="20190102T015342Z">
        <seg>case MONDAY:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>case SATURDAY: case SUNDAY:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015344Z" creationid="pingfangx" creationdate="20190102T015344Z">
        <seg>case SATURDAY: case SUNDAY:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>catch</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075747Z" creationid="pingfangx" creationdate="20180518T075747Z">
        <seg>catch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cd C:\myapplication</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034757Z" creationid="pingfangx" creationdate="20180518T034757Z">
        <seg>cd C:\myapplication</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>changemylife.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032702Z" creationid="pingfangx" creationdate="20180518T032702Z">
        <seg>changemylife.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075753Z" creationid="pingfangx" creationdate="20180518T075753Z">
        <seg>char</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char c;

	    for (i = (len - 1); i &gt;= 0; i--) {
	        c = string.charAt(i);
	        if (Character.isLetter(c)) {
		        dest.append(c);
	        }
	    }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085926Z" creationid="pingfangx" creationdate="20190103T085926Z">
        <seg>char c;

	    for (i = (len - 1); i &gt;= 0; i--) {
	        c = string.charAt(i);
	        if (Character.isLetter(c)) {
		        dest.append(c);
	        }
	    }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char ch = 'a'; 
// Unicode for uppercase Greek omega character
char uniChar = '\u03A9';
// an array of chars
char[] charArray = { 'a', 'b', 'c', 'd', 'e' };</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T042945Z" creationid="pingfangx" creationdate="20190103T042945Z">
        <seg>char ch = 'a'; 
// Unicode for uppercase Greek omega character
char uniChar = '\u03A9';
// an array of chars
char[] charArray = { 'a', 'b', 'c', 'd', 'e' };</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char grade;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081145Z" creationid="pingfangx" creationdate="20180521T081145Z">
        <seg>char grade;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char toLowerCase(char ch)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062237Z" creationid="pingfangx" creationdate="20190103T062237Z">
        <seg>char toLowerCase(char ch)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char toUpperCase(char ch)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062236Z" creationid="pingfangx" creationdate="20190103T062236Z">
        <seg>char toUpperCase(char ch)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>charArray[j] =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064020Z" creationid="pingfangx" creationdate="20190103T064020Z">
        <seg>charArray[j] =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char[] charArray = new char[len];</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064014Z" creationid="pingfangx" creationdate="20190103T064014Z">
        <seg>char[] charArray = new char[len];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char[] copyFrom = { 'd', 'e', 'c', 'a', 'f', 'f', 'e',
			    'i', 'n', 'a', 't', 'e', 'd' };</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042958Z" creationid="pingfangx" creationdate="20180521T042958Z">
        <seg>char[] copyFrom = { 'd', 'e', 'c', 'a', 'f', 'f', 'e',
			    'i', 'n', 'a', 't', 'e', 'd' };</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char[] copyFrom = {'d', 'e', 'c', 'a', 'f', 'f', 'e',</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043353Z" creationid="pingfangx" creationdate="20180521T043353Z">
        <seg>char[] copyFrom = {'d', 'e', 'c', 'a', 'f', 'f', 'e',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char[] copyTo = java.util.Arrays.copyOfRange(copyFrom, 2, 9);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043355Z" creationid="pingfangx" creationdate="20180521T043355Z">
        <seg>char[] copyTo = java.util.Arrays.copyOfRange(copyFrom, 2, 9);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char[] copyTo = new char[7];</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042959Z" creationid="pingfangx" creationdate="20180521T042959Z">
        <seg>char[] copyTo = new char[7];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char[] helloArray = { 'h', 'e', 'l', 'l', 'o', '.' };
String helloString = new String(helloArray);
System.out.println(helloString);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T063503Z" creationid="pingfangx" creationdate="20190103T063503Z">
        <seg>char[] helloArray = { 'h', 'e', 'l', 'l', 'o', '.' };
String helloString = new String(helloArray);
System.out.println(helloString);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char[] tempCharArray = new char[len];</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064014Z" creationid="pingfangx" creationdate="20190103T064014Z">
        <seg>char[] tempCharArray = new char[len];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>characters-answers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085552Z" creationid="pingfangx" creationdate="20190103T085552Z">
        <seg>characters-answers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>characters.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024415Z" creationid="pingfangx" creationdate="20190103T024415Z">
        <seg>characters.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>circle = new Circle(0, 0);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034342Z" creationid="pingfangx" creationdate="20180601T034342Z">
        <seg>circle = new Circle(0, 0);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>circle.setX(circle.getX() + deltaX);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034318Z" creationid="pingfangx" creationdate="20180601T034318Z">
        <seg>circle.setX(circle.getX() + deltaX);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>circle.setY(circle.getY() + deltaY);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034319Z" creationid="pingfangx" creationdate="20180601T034319Z">
        <seg>circle.setY(circle.getY() + deltaY);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075757Z" creationid="pingfangx" creationdate="20180518T075757Z">
        <seg>class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class &lt;e0&gt;name&lt;/e0&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035558Z" creationid="pingfangx" creationdate="20180518T035558Z">
        <seg>class &lt;e0&gt;name&lt;/e0&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class &lt;i0&gt;MyClass extends MySuperClass implements YourInterface&lt;/i0&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030332Z" creationid="pingfangx" creationdate="20180525T030332Z">
        <seg>class &lt;i0&gt;MyClass extends MySuperClass implements YourInterface&lt;/i0&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class &lt;i0&gt;MyClass&lt;/i0&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025900Z" creationid="pingfangx" creationdate="20180525T025900Z">
        <seg>class &lt;i0&gt;MyClass&lt;/i0&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ACMEBicycle &lt;s0&gt;implements&lt;/s0&gt; Bicycle {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063916Z" creationid="pingfangx" creationdate="20180518T063916Z">
        <seg>class ACMEBicycle &lt;s0&gt;implements&lt;/s0&gt; Bicycle {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ArithmeticDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064517Z" creationid="pingfangx" creationdate="20180521T064517Z">
        <seg>class ArithmeticDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ArrayCopyDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042956Z" creationid="pingfangx" creationdate="20180521T042956Z">
        <seg>class ArrayCopyDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ArrayCopyOfDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043351Z" creationid="pingfangx" creationdate="20180521T043351Z">
        <seg>class ArrayCopyOfDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ArrayDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021639Z" creationid="pingfangx" creationdate="20180521T021639Z">
        <seg>class ArrayDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class Bicycle {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062534Z" creationid="pingfangx" creationdate="20180518T062534Z">
        <seg>class Bicycle {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class BicycleDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062702Z" creationid="pingfangx" creationdate="20180518T062702Z">
        <seg>class BicycleDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class BitDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070949Z" creationid="pingfangx" creationdate="20180521T070949Z">
        <seg>class BitDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class BlockDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075350Z" creationid="pingfangx" creationdate="20180521T075350Z">
        <seg>class BlockDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class BreakDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085842Z" creationid="pingfangx" creationdate="20180521T085842Z">
        <seg>class BreakDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class BreakWithLabelDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090127Z" creationid="pingfangx" creationdate="20180521T090127Z">
        <seg>class BreakWithLabelDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class CheckPersonEligibleForSelectiveService implements CheckPerson {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090342Z" creationid="pingfangx" creationdate="20180706T090342Z">
        <seg>class CheckPersonEligibleForSelectiveService implements CheckPerson {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ChessAlgorithm {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104635Z" creationid="pingfangx" creationdate="20190102T104635Z">
        <seg>class ChessAlgorithm {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class Circle extends GraphicObject {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022316Z" creationid="pingfangx" creationdate="20190103T022316Z">
        <seg>class Circle extends GraphicObject {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ComparisonDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070025Z" creationid="pingfangx" creationdate="20180521T070025Z">
        <seg>class ComparisonDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ComparisonProvider {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084715Z" creationid="pingfangx" creationdate="20181228T084715Z">
        <seg>class ComparisonProvider {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ConcatDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064826Z" creationid="pingfangx" creationdate="20180521T064826Z">
        <seg>class ConcatDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ConditionalDemo1 {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070214Z" creationid="pingfangx" creationdate="20180521T070214Z">
        <seg>class ConditionalDemo1 {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ConditionalDemo2 {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070335Z" creationid="pingfangx" creationdate="20180521T070335Z">
        <seg>class ConditionalDemo2 {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ContinueDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090511Z" creationid="pingfangx" creationdate="20180521T090511Z">
        <seg>class ContinueDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ContinueWithLabelDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090634Z" creationid="pingfangx" creationdate="20180521T090634Z">
        <seg>class ContinueWithLabelDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class DoWhileDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083044Z" creationid="pingfangx" creationdate="20180521T083044Z">
        <seg>class DoWhileDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class EnglishGoodbye {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144539Z" creationid="pingfangx" creationdate="20180705T144539Z">
        <seg>class EnglishGoodbye {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class EnglishGreeting implements HelloWorld {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061126Z" creationid="pingfangx" creationdate="20180706T061126Z">
        <seg>class EnglishGreeting implements HelloWorld {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class EnglishHelloThere implements HelloThere {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T143122Z" creationid="pingfangx" creationdate="20180705T143034Z">
        <seg>class EnglishHelloThere implements HelloThere {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class EnhancedForDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085623Z" creationid="pingfangx" creationdate="20180521T085623Z">
        <seg>class EnhancedForDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class FirstLevel {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091529Z" creationid="pingfangx" creationdate="20180705T091529Z">
        <seg>class FirstLevel {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class ForDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085234Z" creationid="pingfangx" creationdate="20180521T085234Z">
        <seg>class ForDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class HelloWorldApp {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035247Z" creationid="pingfangx" creationdate="20180518T035247Z">
        <seg>class HelloWorldApp {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class IfElseDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081143Z" creationid="pingfangx" creationdate="20180521T081143Z">
        <seg>class IfElseDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class InnerClass {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090551Z" creationid="pingfangx" creationdate="20180705T090551Z">
        <seg>class InnerClass {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class InstanceofDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070501Z" creationid="pingfangx" creationdate="20180521T070501Z">
        <seg>class InstanceofDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MountainBike &lt;s0&gt;extends&lt;/s0&gt; Bicycle {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063519Z" creationid="pingfangx" creationdate="20180518T063519Z">
        <seg>class MountainBike &lt;s0&gt;extends&lt;/s0&gt; Bicycle {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MultiDimArrayDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042310Z" creationid="pingfangx" creationdate="20180521T042310Z">
        <seg>class MultiDimArrayDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class NestedClass {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090502Z" creationid="pingfangx" creationdate="20180705T090502Z">
        <seg>class NestedClass {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class OuterClass {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090501Z" creationid="pingfangx" creationdate="20180705T090501Z">
        <seg>class OuterClass {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class PhoneNumber {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122456Z" creationid="pingfangx" creationdate="20180705T122456Z">
        <seg>class PhoneNumber {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class PrePostDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065513Z" creationid="pingfangx" creationdate="20180521T065513Z">
        <seg>class PrePostDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class SwitchDemo2 {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082455Z" creationid="pingfangx" creationdate="20180521T082455Z">
        <seg>class SwitchDemo2 {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class UnaryDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065212Z" creationid="pingfangx" creationdate="20180521T065212Z">
        <seg>class UnaryDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class UnmodifiableList&lt;T&gt; implements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024205Z" creationid="pingfangx" creationdate="20190102T024205Z">
        <seg>class UnmodifiableList&lt;T&gt; implements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class Whatever {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070540Z" creationid="pingfangx" creationdate="20180705T070540Z">
        <seg>class Whatever {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class WhileDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083000Z" creationid="pingfangx" creationdate="20180521T083000Z">
        <seg>class WhileDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class, and a particular instance might use it several times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021011Z" creationid="pingfangx" creationdate="20190102T021011Z">
        <seg>class, and a particular instance might use it several times.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042726Z" creationid="pingfangx" creationdate="20180518T042726Z">
        <seg>class.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classdecl.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022837Z" creationid="pingfangx" creationdate="20180525T022837Z">
        <seg>classdecl.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classes.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022836Z" creationid="pingfangx" creationdate="20180525T022836Z">
        <seg>classes.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classvars.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022845Z" creationid="pingfangx" creationdate="20180525T022845Z">
        <seg>classvars.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>collections/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031226Z" creationid="pingfangx" creationdate="20180518T031226Z">
        <seg>collections/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>comparestrings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024418Z" creationid="pingfangx" creationdate="20190103T024418Z">
        <seg>comparestrings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>completes all the statements in the method,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091149Z" creationid="pingfangx" creationdate="20180601T091149Z">
        <seg>完成该方法中的所有语句，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>concepts/QandE/questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091930Z" creationid="pingfangx" creationdate="20180521T091930Z">
        <seg>concepts/QandE/questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>concepts/class.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091927Z" creationid="pingfangx" creationdate="20180521T091927Z">
        <seg>concepts/class.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>concepts/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042128Z" creationid="pingfangx" creationdate="20180518T042128Z">
        <seg>concepts/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>concepts/inheritance.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091928Z" creationid="pingfangx" creationdate="20180521T091928Z">
        <seg>concepts/inheritance.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>concepts/interface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091928Z" creationid="pingfangx" creationdate="20180521T091928Z">
        <seg>concepts/interface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>concepts/object.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091926Z" creationid="pingfangx" creationdate="20180521T091926Z">
        <seg>concepts/object.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>concepts/package.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091929Z" creationid="pingfangx" creationdate="20180521T091929Z">
        <seg>concepts/package.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>constructors.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022839Z" creationid="pingfangx" creationdate="20180525T022839Z">
        <seg>constructors.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>containingObject::instanceMethodName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084544Z" creationid="pingfangx" creationdate="20181228T084544Z">
        <seg>containingObject::instanceMethodName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>continue</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075731Z" creationid="pingfangx" creationdate="20180518T075731Z">
        <seg>continue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>continue test;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090645Z" creationid="pingfangx" creationdate="20180521T090645Z">
        <seg>continue test;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>continue;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090525Z" creationid="pingfangx" creationdate="20180521T090525Z">
        <seg>continue;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>converting.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024417Z" creationid="pingfangx" creationdate="20190103T024417Z">
        <seg>converting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cos(angle);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035330Z" creationid="pingfangx" creationdate="20190103T035330Z">
        <seg>cos(angle);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>count++;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083004Z" creationid="pingfangx" creationdate="20180521T083004Z">
        <seg>count++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>createinterface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042657Z" creationid="pingfangx" creationdate="20190102T042657Z">
        <seg>createinterface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>creating-answers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082710Z" creationid="pingfangx" creationdate="20180705T082710Z">
        <seg>creating-answers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>creating-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020152Z" creationid="pingfangx" creationdate="20190102T020152Z">
        <seg>creating-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cupojava/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032220Z" creationid="pingfangx" creationdate="20180518T032220Z">
        <seg>cupojava/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cupojava/netbeans.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040718Z" creationid="pingfangx" creationdate="20180518T040718Z">
        <seg>cupojava/netbeans.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cupojava/unix.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040719Z" creationid="pingfangx" creationdate="20180518T040719Z">
        <seg>cupojava/unix.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cupojava/win32.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040718Z" creationid="pingfangx" creationdate="20180518T040718Z">
        <seg>cupojava/win32.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>currentRevision = 6,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025147Z" creationid="pingfangx" creationdate="20190102T025147Z">
        <seg>currentRevision = 6,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>currentSpeed--;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080934Z" creationid="pingfangx" creationdate="20180521T080934Z">
        <seg>currentSpeed--;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>currentSpeed--;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081012Z" creationid="pingfangx" creationdate="20180521T081012Z">
        <seg>currentSpeed--;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>customFormat("###,###.###", 123456.789);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034051Z" creationid="pingfangx" creationdate="20190103T034051Z">
        <seg>customFormat("###,###.###", 123456.789);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>customFormat("###.##", 123456.789);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034052Z" creationid="pingfangx" creationdate="20190103T034052Z">
        <seg>customFormat("###.##", 123456.789);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>customFormat("$###,###.###", 12345.67);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034052Z" creationid="pingfangx" creationdate="20190103T034052Z">
        <seg>customFormat("$###,###.###", 12345.67);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>customFormat("000000.000", 123.78);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034052Z" creationid="pingfangx" creationdate="20190103T034052Z">
        <seg>customFormat("000000.000", 123.78);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>d</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033228Z" creationid="pingfangx" creationdate="20190103T033228Z">
        <seg>d</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>d.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040042Z" creationid="pingfangx" creationdate="20180518T040042Z">
        <seg>d.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/QandE/characters-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092806Z" creationid="pingfangx" creationdate="20180521T092806Z">
        <seg>data/QandE/characters-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/QandE/numbers-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092729Z" creationid="pingfangx" creationdate="20180521T092729Z">
        <seg>data/QandE/numbers-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/autoboxing.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092803Z" creationid="pingfangx" creationdate="20180521T092803Z">
        <seg>data/autoboxing.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/beyondmath.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092715Z" creationid="pingfangx" creationdate="20180521T092715Z">
        <seg>data/beyondmath.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/buffers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092755Z" creationid="pingfangx" creationdate="20180521T092755Z">
        <seg>data/buffers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/characters.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092731Z" creationid="pingfangx" creationdate="20180521T092731Z">
        <seg>data/characters.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/comparestrings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092747Z" creationid="pingfangx" creationdate="20180521T092747Z">
        <seg>data/comparestrings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/converting.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092740Z" creationid="pingfangx" creationdate="20180521T092740Z">
        <seg>data/converting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042403Z" creationid="pingfangx" creationdate="20180518T042403Z">
        <seg>data/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/manipstrings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092743Z" creationid="pingfangx" creationdate="20180521T092743Z">
        <seg>data/manipstrings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/numberclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092709Z" creationid="pingfangx" creationdate="20180521T092709Z">
        <seg>data/numberclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/numberformat.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092712Z" creationid="pingfangx" creationdate="20180521T092712Z">
        <seg>data/numberformat.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/numbers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092706Z" creationid="pingfangx" creationdate="20180521T092706Z">
        <seg>data/numbers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/numbersummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092720Z" creationid="pingfangx" creationdate="20180521T092720Z">
        <seg>data/numbersummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/strings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092737Z" creationid="pingfangx" creationdate="20180521T092737Z">
        <seg>data/strings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data/stringsummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092757Z" creationid="pingfangx" creationdate="20180521T092757Z">
        <seg>data/stringsummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>datatypes.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T071950Z" creationid="pingfangx" creationdate="20180518T071950Z">
        <seg>datatypes.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>date = "3/17/2002",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025146Z" creationid="pingfangx" creationdate="20190102T025146Z">
        <seg>date = "3/17/2002",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>date = "3/27/2003"
)
class MyClass() { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023934Z" creationid="pingfangx" creationdate="20190102T023934Z">
        <seg>date = "3/27/2003"
)
class MyClass() { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dateAndTime = LocalDateTime.now();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061155Z" creationid="pingfangx" creationdate="20190102T061155Z">
        <seg>dateAndTime = LocalDateTime.now();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dateAndTime = LocalDateTime.of(currentDate, timeToSet);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061157Z" creationid="pingfangx" creationdate="20190102T061157Z">
        <seg>dateAndTime = LocalDateTime.of(currentDate, timeToSet);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dateAndTime = LocalDateTime.of(dateToSet, currentTime);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061200Z" creationid="pingfangx" creationdate="20190102T061200Z">
        <seg>dateAndTime = LocalDateTime.of(dateToSet, currentTime);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dateAndTime = LocalDateTime.of(dateToSet, timeToSet);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061202Z" creationid="pingfangx" creationdate="20190102T061202Z">
        <seg>dateAndTime = LocalDateTime.of(dateToSet, timeToSet);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>datetime/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031252Z" creationid="pingfangx" creationdate="20180518T031252Z">
        <seg>datetime/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>declaring.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023234Z" creationid="pingfangx" creationdate="20190102T023234Z">
        <seg>declaring.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075734Z" creationid="pingfangx" creationdate="20180518T075734Z">
        <seg>default</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default ZonedDateTime getZonedDateTime(String zoneString) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061346Z" creationid="pingfangx" creationdate="20190102T061346Z">
        <seg>default ZonedDateTime getZonedDateTime(String zoneString) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default public String identifyMyself() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091504Z" creationid="pingfangx" creationdate="20190102T091504Z">
        <seg>default public String identifyMyself() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default public ZonedDateTime getZonedDateTime(String zoneString) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063522Z" creationid="pingfangx" creationdate="20190102T063522Z">
        <seg>default public ZonedDateTime getZonedDateTime(String zoneString) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default public int startEngine(EncryptedKey key) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091800Z" creationid="pingfangx" creationdate="20190102T091800Z">
        <seg>default public int startEngine(EncryptedKey key) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default void aMethod(int aValue) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074745Z" creationid="pingfangx" creationdate="20190102T074745Z">
        <seg>default void aMethod(int aValue) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082523Z" creationid="pingfangx" creationdate="20180521T082523Z">
        <seg>default:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default: break;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082412Z" creationid="pingfangx" creationdate="20180521T082412Z">
        <seg>default: break;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default: monthString = "Invalid month";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082025Z" creationid="pingfangx" creationdate="20180521T082025Z">
        <seg>default: monthString = "Invalid month";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>defaultmethods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042700Z" creationid="pingfangx" creationdate="20190102T042700Z">
        <seg>defaultmethods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>definition.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032657Z" creationid="pingfangx" creationdate="20180518T032657Z">
        <seg>definition.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>degrees, Math.cos(radians));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040422Z" creationid="pingfangx" creationdate="20190103T040422Z">
        <seg>degrees, Math.cos(radians));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>degrees, Math.sin(radians));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040421Z" creationid="pingfangx" creationdate="20190103T040421Z">
        <seg>degrees, Math.sin(radians));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>degrees, Math.tan(radians));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040423Z" creationid="pingfangx" creationdate="20190103T040423Z">
        <seg>degrees, Math.tan(radians));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>deployment/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031307Z" creationid="pingfangx" creationdate="20180518T031307Z">
        <seg>deployment/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>do</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075737Z" creationid="pingfangx" creationdate="20180518T075737Z">
        <seg>do</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>do {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083022Z" creationid="pingfangx" creationdate="20180521T083022Z">
        <seg>do {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doT saw I was toD</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064031Z" creationid="pingfangx" creationdate="20190103T064031Z">
        <seg>doT saw I was toD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075739Z" creationid="pingfangx" creationdate="20180518T075739Z">
        <seg>double</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double &lt;b0&gt;loanAmt&lt;/b0&gt;,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032059Z" creationid="pingfangx" creationdate="20180601T032059Z">
        <seg>double &lt;b0&gt;loanAmt&lt;/b0&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double &lt;b1&gt;rate&lt;/b1&gt;,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032059Z" creationid="pingfangx" creationdate="20180601T032059Z">
        <seg>double &lt;b1&gt;rate&lt;/b1&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double &lt;b2&gt;futureValue&lt;/b2&gt;,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032100Z" creationid="pingfangx" creationdate="20180601T032100Z">
        <seg>double &lt;b2&gt;futureValue&lt;/b2&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double E = 2.718282;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061523Z" creationid="pingfangx" creationdate="20190102T061523Z">
        <seg>double E = 2.718282;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double a = -191.635;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035752Z" creationid="pingfangx" creationdate="20190103T035752Z">
        <seg>double a = -191.635;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double abs(double d)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035602Z" creationid="pingfangx" creationdate="20190103T035602Z">
        <seg>double abs(double d)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double acos(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040326Z" creationid="pingfangx" creationdate="20190103T040326Z">
        <seg>double acos(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double answer = (-&lt;b6&gt;loanAmt&lt;/b6&gt; / denominator)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032104Z" creationid="pingfangx" creationdate="20180601T032104Z">
        <seg>double answer = (-&lt;b6&gt;loanAmt&lt;/b6&gt; / denominator)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double asin(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040317Z" creationid="pingfangx" creationdate="20190103T040317Z">
        <seg>double asin(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double atan(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040331Z" creationid="pingfangx" creationdate="20190103T040331Z">
        <seg>double atan(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double atan2(double y, double x)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040335Z" creationid="pingfangx" creationdate="20190103T040335Z">
        <seg>double atan2(double y, double x)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double b = 43.74;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035753Z" creationid="pingfangx" creationdate="20190103T035753Z">
        <seg>double b = 43.74;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double ceil(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035609Z" creationid="pingfangx" creationdate="20190103T035609Z">
        <seg>double ceil(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double cos(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040309Z" creationid="pingfangx" creationdate="20190103T040309Z">
        <seg>double cos(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double d = 858.48;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065436Z" creationid="pingfangx" creationdate="20190103T065436Z">
        <seg>double d = 858.48;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double d1 = 123.4;
// same value as d1, but in scientific notation
double d2 = 1.234e2;
float f1  = 123.4f;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T085427Z" creationid="pingfangx" creationdate="20180518T083131Z">
        <seg>double d1 = 123.4;
//与 d1 相同的值，但以科学记数法表示
double d2 = 1.234e2;
float f1  = 123.4f;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double degrees = 45.0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040419Z" creationid="pingfangx" creationdate="20190103T040419Z">
        <seg>double degrees = 45.0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double denominator = (1 - partial1) / interest;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032103Z" creationid="pingfangx" creationdate="20180601T032103Z">
        <seg>double denominator = (1 - partial1) / interest;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double doubleValue()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030642Z" creationid="pingfangx" creationdate="20190103T030642Z">
        <seg>double doubleValue()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double earthWeight = Double.parseDouble(args[0]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020035Z" creationid="pingfangx" creationdate="20190102T020035Z">
        <seg>double earthWeight = Double.parseDouble(args[0]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double endSpeed);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054132Z" creationid="pingfangx" creationdate="20190102T054132Z">
        <seg>double endSpeed);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double exp(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035930Z" creationid="pingfangx" creationdate="20190103T035930Z">
        <seg>double exp(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double floor(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035631Z" creationid="pingfangx" creationdate="20190103T035631Z">
        <seg>double floor(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double interest = &lt;b4&gt;rate&lt;/b4&gt; / 100.0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032101Z" creationid="pingfangx" creationdate="20180601T032101Z">
        <seg>double interest = &lt;b4&gt;rate&lt;/b4&gt; / 100.0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double length, double grossTons) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064733Z" creationid="pingfangx" creationdate="20180525T064733Z">
        <seg>double length, double grossTons) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double log(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040018Z" creationid="pingfangx" creationdate="20190103T040018Z">
        <seg>double log(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double mass = earthWeight/EARTH.surfaceGravity();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020036Z" creationid="pingfangx" creationdate="20190102T020036Z">
        <seg>double mass = earthWeight/EARTH.surfaceGravity();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double max(double arg1, double arg2)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035736Z" creationid="pingfangx" creationdate="20190103T035736Z">
        <seg>double max(double arg1, double arg2)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double min(double arg1, double arg2)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035729Z" creationid="pingfangx" creationdate="20190103T035729Z">
        <seg>double min(double arg1, double arg2)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double partial1 = Math.pow((1 + interest),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032102Z" creationid="pingfangx" creationdate="20180601T032102Z">
        <seg>double partial1 = Math.pow((1 + interest),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double pi = Math.PI;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033619Z" creationid="pingfangx" creationdate="20190103T033619Z">
        <seg>double pi = Math.PI;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double pi = ld.get(0);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084613Z" creationid="pingfangx" creationdate="20190103T084613Z">
        <seg>double pi = ld.get(0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double pow(double base, double exponent)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040038Z" creationid="pingfangx" creationdate="20190103T040038Z">
        <seg>double pow(double base, double exponent)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double radians = Math.toRadians(degrees);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040419Z" creationid="pingfangx" creationdate="20190103T040419Z">
        <seg>double radians = Math.toRadians(degrees);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double radius,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054131Z" creationid="pingfangx" creationdate="20190102T054131Z">
        <seg>double radius,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double rint(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035643Z" creationid="pingfangx" creationdate="20190103T035643Z">
        <seg>double rint(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double sin(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040302Z" creationid="pingfangx" creationdate="20190103T040302Z">
        <seg>double sin(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double speedOfCar);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054134Z" creationid="pingfangx" creationdate="20190102T054134Z">
        <seg>double speedOfCar);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double sqrt(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040120Z" creationid="pingfangx" creationdate="20190103T040120Z">
        <seg>double sqrt(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double squareOfSide1, lengthOfSide1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033047Z" creationid="pingfangx" creationdate="20180601T033047Z">
        <seg>double squareOfSide1, lengthOfSide1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double startSpeed,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054131Z" creationid="pingfangx" creationdate="20190102T054131Z">
        <seg>double startSpeed,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double surfaceGravity() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020030Z" creationid="pingfangx" creationdate="20190102T020030Z">
        <seg>double surfaceGravity() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double surfaceWeight(double otherMass) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020031Z" creationid="pingfangx" creationdate="20190102T020031Z">
        <seg>double surfaceWeight(double otherMass) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double tan(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040312Z" creationid="pingfangx" creationdate="20190103T040312Z">
        <seg>double tan(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double toDegrees(double d)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040401Z" creationid="pingfangx" creationdate="20190103T040401Z">
        <seg>double toDegrees(double d)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double toRadians(double d)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040403Z" creationid="pingfangx" creationdate="20190103T040403Z">
        <seg>double toRadians(double d)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double x = 11.635;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040138Z" creationid="pingfangx" creationdate="20190103T040138Z">
        <seg>double x = 11.635;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>double y = 2.76;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040138Z" creationid="pingfangx" creationdate="20190103T040138Z">
        <seg>double y = 2.76;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ds.printEven();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101130Z" creationid="pingfangx" creationdate="20180705T101130Z">
        <seg>ds.printEven();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>e.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020922Z" creationid="pingfangx" creationdate="20190102T020922Z">
        <seg>e.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>else</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075742Z" creationid="pingfangx" creationdate="20180518T075742Z">
        <seg>else</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>else if (this.getArea() &gt; otherRect.getArea())</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062204Z" creationid="pingfangx" creationdate="20190102T062204Z">
        <seg>else if (this.getArea() &gt; otherRect.getArea())</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>else { &lt;s2&gt;// begin block 2&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075355Z" creationid="pingfangx" creationdate="20180521T075355Z">
        <seg>else { &lt;s2&gt;// begin block 2&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>email -&gt; System.out.println(email)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075545Z" creationid="pingfangx" creationdate="20181228T075545Z">
        <seg>email -&gt; System.out.println(email)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>email -&gt; System.out.println(email)
);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100105Z" creationid="pingfangx" creationdate="20180706T100105Z">
        <seg>email -&gt; System.out.println(email)
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>en-US</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030211Z" creationid="pingfangx" creationdate="20180518T030211Z">
        <seg>en-US</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>englishGreeting.greet();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061136Z" creationid="pingfangx" creationdate="20180706T061136Z">
        <seg>englishGreeting.greet();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>enum ChessPlayer { WHITE, BLACK }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104637Z" creationid="pingfangx" creationdate="20190102T104637Z">
        <seg>enum ChessPlayer { WHITE, BLACK }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>enum-answers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020236Z" creationid="pingfangx" creationdate="20190102T020236Z">
        <seg>enum-answers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>enum-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082516Z" creationid="pingfangx" creationdate="20180705T082516Z">
        <seg>enum-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>enum.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022857Z" creationid="pingfangx" creationdate="20180525T022857Z">
        <seg>enum.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>equality</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063040Z" creationid="pingfangx" creationdate="20180521T063040Z">
        <seg>相等性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>essential/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031207Z" creationid="pingfangx" creationdate="20180518T031207Z">
        <seg>essential/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ArithmeticDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064449Z" creationid="pingfangx" creationdate="20180521T064449Z">
        <seg>examples/ArithmeticDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ArrayCopyDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042700Z" creationid="pingfangx" creationdate="20180521T042700Z">
        <seg>examples/ArrayCopyDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ArrayCopyOfDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043221Z" creationid="pingfangx" creationdate="20180521T043221Z">
        <seg>examples/ArrayCopyOfDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ArrayDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021624Z" creationid="pingfangx" creationdate="20180521T021624Z">
        <seg>examples/ArrayDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/BasicMathDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035743Z" creationid="pingfangx" creationdate="20190103T035743Z">
        <seg>examples/BasicMathDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/Bicycle.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062446Z" creationid="pingfangx" creationdate="20180518T062446Z">
        <seg>examples/Bicycle.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/BicycleDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062654Z" creationid="pingfangx" creationdate="20180518T062654Z">
        <seg>examples/BicycleDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/BitDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070938Z" creationid="pingfangx" creationdate="20180521T070938Z">
        <seg>examples/BitDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/BlockDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075303Z" creationid="pingfangx" creationdate="20180521T075303Z">
        <seg>examples/BlockDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/BreakDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085728Z" creationid="pingfangx" creationdate="20180521T085728Z">
        <seg>examples/BreakDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/BreakWithLabelDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085926Z" creationid="pingfangx" creationdate="20180521T085926Z">
        <seg>examples/BreakWithLabelDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/Calculator.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075602Z" creationid="pingfangx" creationdate="20181228T075602Z">
        <seg>examples/Calculator.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ComparisonDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070019Z" creationid="pingfangx" creationdate="20180521T070019Z">
        <seg>examples/ComparisonDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ConcatDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064749Z" creationid="pingfangx" creationdate="20180521T064749Z">
        <seg>examples/ConcatDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ConditionalDemo1.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070208Z" creationid="pingfangx" creationdate="20180521T070208Z">
        <seg>examples/ConditionalDemo1.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ConditionalDemo2.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070328Z" creationid="pingfangx" creationdate="20180521T070328Z">
        <seg>examples/ConditionalDemo2.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ContinueDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090220Z" creationid="pingfangx" creationdate="20180521T090220Z">
        <seg>examples/ContinueDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ContinueWithLabelDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090550Z" creationid="pingfangx" creationdate="20180521T090550Z">
        <seg>examples/ContinueWithLabelDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/CreateObjectDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T035942Z" creationid="pingfangx" creationdate="20180601T035942Z">
        <seg>examples/CreateObjectDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/DataStructure.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100549Z" creationid="pingfangx" creationdate="20180705T100549Z">
        <seg>examples/DataStructure.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/DoWhileDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083027Z" creationid="pingfangx" creationdate="20180521T083027Z">
        <seg>examples/DoWhileDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/EnhancedForDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085616Z" creationid="pingfangx" creationdate="20180521T085616Z">
        <seg>examples/EnhancedForDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ExponentialDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040124Z" creationid="pingfangx" creationdate="20190103T040124Z">
        <seg>examples/ExponentialDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/Filename.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074849Z" creationid="pingfangx" creationdate="20190103T074849Z">
        <seg>examples/Filename.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/FilenameDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074935Z" creationid="pingfangx" creationdate="20190103T074935Z">
        <seg>examples/FilenameDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ForDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085214Z" creationid="pingfangx" creationdate="20180521T085214Z">
        <seg>examples/ForDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/HelloWorldAnonymousClasses.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061024Z" creationid="pingfangx" creationdate="20180706T061024Z">
        <seg>examples/HelloWorldAnonymousClasses.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/IfElseDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081132Z" creationid="pingfangx" creationdate="20180521T081132Z">
        <seg>examples/IfElseDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/InstanceofDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070428Z" creationid="pingfangx" creationdate="20180521T070428Z">
        <seg>examples/InstanceofDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/LambdaScopeTest.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075704Z" creationid="pingfangx" creationdate="20181228T075704Z">
        <seg>examples/LambdaScopeTest.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/LocalClassExample.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122420Z" creationid="pingfangx" creationdate="20180705T122420Z">
        <seg>examples/LocalClassExample.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/MethodReferencesTest.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082819Z" creationid="pingfangx" creationdate="20181228T082819Z">
        <seg>examples/MethodReferencesTest.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/MultiDimArrayDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042225Z" creationid="pingfangx" creationdate="20180521T042225Z">
        <seg>examples/MultiDimArrayDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/Person.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085413Z" creationid="pingfangx" creationdate="20180706T085413Z">
        <seg>examples/Person.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/Point.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T035942Z" creationid="pingfangx" creationdate="20180601T035942Z">
        <seg>examples/Point.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/PrePostDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065404Z" creationid="pingfangx" creationdate="20180521T065404Z">
        <seg>examples/PrePostDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/Rectangle.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T035942Z" creationid="pingfangx" creationdate="20180601T035942Z">
        <seg>examples/Rectangle.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/RosterTest.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085450Z" creationid="pingfangx" creationdate="20180706T085450Z">
        <seg>examples/RosterTest.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ShadowTest.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091412Z" creationid="pingfangx" creationdate="20180705T091412Z">
        <seg>examples/ShadowTest.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/StringSwitchDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082537Z" creationid="pingfangx" creationdate="20180521T082537Z">
        <seg>examples/StringSwitchDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/SwitchDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081930Z" creationid="pingfangx" creationdate="20180521T081930Z">
        <seg>examples/SwitchDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/SwitchDemo2.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082444Z" creationid="pingfangx" creationdate="20180521T082444Z">
        <seg>examples/SwitchDemo2.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/SwitchDemoFallThrough.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082157Z" creationid="pingfangx" creationdate="20180521T082157Z">
        <seg>examples/SwitchDemoFallThrough.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/TimeClient.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060813Z" creationid="pingfangx" creationdate="20190102T060813Z">
        <seg>examples/TimeClient.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ToStringDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065358Z" creationid="pingfangx" creationdate="20190103T065358Z">
        <seg>examples/ToStringDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/TrigonometricDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040408Z" creationid="pingfangx" creationdate="20190103T040408Z">
        <seg>examples/TrigonometricDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/UnaryDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065208Z" creationid="pingfangx" creationdate="20180521T065208Z">
        <seg>examples/UnaryDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/Unboxing.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084557Z" creationid="pingfangx" creationdate="20190103T084557Z">
        <seg>examples/Unboxing.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/ValueOfDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065105Z" creationid="pingfangx" creationdate="20190103T065105Z">
        <seg>examples/ValueOfDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/WhileDemo.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082837Z" creationid="pingfangx" creationdate="20180521T082837Z">
        <seg>examples/WhileDemo.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/defaultmethods/Card.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065200Z" creationid="pingfangx" creationdate="20190102T065200Z">
        <seg>examples/defaultmethods/Card.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/defaultmethods/Deck.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065200Z" creationid="pingfangx" creationdate="20190102T065200Z">
        <seg>examples/defaultmethods/Deck.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/defaultmethods/PlayingCard.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065313Z" creationid="pingfangx" creationdate="20190102T065313Z">
        <seg>examples/defaultmethods/PlayingCard.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/defaultmethods/SimpleTimeClient.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060827Z" creationid="pingfangx" creationdate="20190102T060827Z">
        <seg>examples/defaultmethods/SimpleTimeClient.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/defaultmethods/SortByRankThenSuit.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T070924Z" creationid="pingfangx" creationdate="20190102T070924Z">
        <seg>examples/defaultmethods/SortByRankThenSuit.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/defaultmethods/StandardDeck.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065315Z" creationid="pingfangx" creationdate="20190102T065315Z">
        <seg>examples/defaultmethods/StandardDeck.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>examples/defaultmethods/TestSimpleTimeClient.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063317Z" creationid="pingfangx" creationdate="20190102T063317Z">
        <seg>examples/defaultmethods/TestSimpleTimeClient.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072419Z" creationid="pingfangx" creationdate="20180518T072419Z">
        <seg>expressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031507Z" creationid="pingfangx" creationdate="20180518T031507Z">
        <seg>ext/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extends</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075748Z" creationid="pingfangx" creationdate="20180518T075748Z">
        <seg>extends</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extends R&gt; mapper)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074633Z" creationid="pingfangx" creationdate="20181228T074633Z">
        <seg>extends R&gt; mapper)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extensionSeparator = ext;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074931Z" creationid="pingfangx" creationdate="20190103T074931Z">
        <seg>extensionSeparator = ext;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extensionSeparator;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074929Z" creationid="pingfangx" creationdate="20190103T074929Z">
        <seg>extensionSeparator;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extra/certification/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031320Z" creationid="pingfangx" creationdate="20180518T031320Z">
        <seg>extra/certification/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extra/fullscreen/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031526Z" creationid="pingfangx" creationdate="20180518T031526Z">
        <seg>extra/fullscreen/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extra/generics/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031534Z" creationid="pingfangx" creationdate="20180518T031534Z">
        <seg>extra/generics/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>f</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033232Z" creationid="pingfangx" creationdate="20190103T033232Z">
        <seg>f</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>f.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021019Z" creationid="pingfangx" creationdate="20190102T021019Z">
        <seg>f.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082217Z" creationid="pingfangx" creationdate="20180518T082217Z">
        <seg>false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fifthDay.tellItLikeItIs();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015351Z" creationid="pingfangx" creationdate="20190102T015351Z">
        <seg>fifthDay.tellItLikeItIs();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>final</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075754Z" creationid="pingfangx" creationdate="20180518T075754Z">
        <seg>final</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>final Label dollar = new Label("$");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065958Z" creationid="pingfangx" creationdate="20180706T065958Z">
        <seg>final Label dollar = new Label("$");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>final String FPATH = "/home/user/index.html";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074943Z" creationid="pingfangx" creationdate="20190103T074943Z">
        <seg>final String FPATH = "/home/user/index.html";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>final TextField sum = &lt;b0&gt;new TextField() {&lt;/b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065959Z" creationid="pingfangx" creationdate="20180706T065959Z">
        <seg>final TextField sum = &lt;b0&gt;new TextField() {&lt;/b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>final int numberLength = 10;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122441Z" creationid="pingfangx" creationdate="20180705T122441Z">
        <seg>final int numberLength = 10;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>final static Label label = new Label();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065950Z" creationid="pingfangx" creationdate="20180706T065950Z">
        <seg>final static Label label = new Label();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>final, local variables in scope."</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020802Z" creationid="pingfangx" creationdate="20190102T020752Z">
        <seg>final, local variables in scope."</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>final.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042706Z" creationid="pingfangx" creationdate="20190102T042706Z">
        <seg>final.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>finally</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075757Z" creationid="pingfangx" creationdate="20180518T075757Z">
        <seg>finally</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>firstCard.getRank().value() - secondCard.getRank().value()
);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071304Z" creationid="pingfangx" creationdate="20190102T071304Z">
        <seg>firstCard.getRank().value() - secondCard.getRank().value()
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>firstCard.getRank().value() - secondCard.getRank().value();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071029Z" creationid="pingfangx" creationdate="20190102T071029Z">
        <seg>firstCard.getRank().value() - secondCard.getRank().value();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>firstDay.tellItLikeItIs();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015349Z" creationid="pingfangx" creationdate="20190102T015349Z">
        <seg>firstDay.tellItLikeItIs();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fl.methodInFirstLevel(23);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091535Z" creationid="pingfangx" creationdate="20180705T091535Z">
        <seg>fl.methodInFirstLevel(23);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>float</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075800Z" creationid="pingfangx" creationdate="20180518T075800Z">
        <seg>float</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>float a = (Float.valueOf(args[0])).floatValue();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065202Z" creationid="pingfangx" creationdate="20190103T065202Z">
        <seg>float a = (Float.valueOf(args[0])).floatValue();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>float a = Float.parseFloat(args[0]);
float b = Float.parseFloat(args[1]);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065304Z" creationid="pingfangx" creationdate="20190103T065304Z">
        <seg>float a = Float.parseFloat(args[0]);
float b = Float.parseFloat(args[1]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>float abs(float f)&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035603Z" creationid="pingfangx" creationdate="20190103T035603Z">
        <seg>float abs(float f)&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>float b = (Float.valueOf(args[1])).floatValue();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065202Z" creationid="pingfangx" creationdate="20190103T065202Z">
        <seg>float b = (Float.valueOf(args[1])).floatValue();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>float floatValue()&lt;br4/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030642Z" creationid="pingfangx" creationdate="20190103T030642Z">
        <seg>float floatValue()&lt;br4/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>float max(float arg1, float arg2)&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035736Z" creationid="pingfangx" creationdate="20190103T035736Z">
        <seg>float max(float arg1, float arg2)&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>float min(float arg1, float arg2)&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035730Z" creationid="pingfangx" creationdate="20190103T035730Z">
        <seg>float min(float arg1, float arg2)&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>floatVar, intVar, stringVar);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033139Z" creationid="pingfangx" creationdate="20190103T033139Z">
        <seg>floatVar, intVar, stringVar);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>floatVar, intVar, stringVar);
System.out.println(fs);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064834Z" creationid="pingfangx" creationdate="20190103T064834Z">
        <seg>floatVar, intVar, stringVar);
System.out.println(fs);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>flow.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072425Z" creationid="pingfangx" creationdate="20180518T072425Z">
        <seg>flow.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>flowsummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072448Z" creationid="pingfangx" creationdate="20180518T072448Z">
        <seg>flowsummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>following code into your implementation of the method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021124Z" creationid="pingfangx" creationdate="20190102T021124Z">
        <seg>following code into your implementation of the method:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075732Z" creationid="pingfangx" creationdate="20180518T075732Z">
        <seg>for</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for ( ; ; ) {

}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091351Z" creationid="pingfangx" creationdate="20180521T091351Z">
        <seg>for ( ; ; ) {

}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (&lt;e0&gt;initialization&lt;/e0&gt;; &lt;e1&gt;termination&lt;/e1&gt;;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T084415Z" creationid="pingfangx" creationdate="20180521T084415Z">
        <seg>for (&lt;e0&gt;initialization&lt;/e0&gt;; &lt;e1&gt;termination&lt;/e1&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (Integer i : li)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084459Z" creationid="pingfangx" creationdate="20190103T084459Z">
        <seg>for (Integer i : li)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (Integer i: li)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084411Z" creationid="pingfangx" creationdate="20190103T084411Z">
        <seg>for (Integer i: li)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (Person p : roster) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085629Z" creationid="pingfangx" creationdate="20180706T085629Z">
        <seg>for (Person p : roster) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (Planet p : Planet.values())</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020036Z" creationid="pingfangx" creationdate="20190102T020036Z">
        <seg>for (Planet p : Planet.values())</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (Planet p : Planet.values()) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015530Z" creationid="pingfangx" creationdate="20190102T015530Z">
        <seg>for (Planet p : Planet.values()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (String monthName : futureMonths) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082414Z" creationid="pingfangx" creationdate="20180521T082414Z">
        <seg>for (String monthName : futureMonths) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (T t : sourceCollection) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084931Z" creationid="pingfangx" creationdate="20181228T084931Z">
        <seg>for (T t : sourceCollection) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (X p : source) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100548Z" creationid="pingfangx" creationdate="20180706T100548Z">
        <seg>for (X p : source) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (i = 0; i &lt; arrayOfInts.length; i++) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085847Z" creationid="pingfangx" creationdate="20180521T085847Z">
        <seg>for (i = 0; i &lt; arrayOfInts.length; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (int i = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075856Z" creationid="pingfangx" creationdate="20190103T075856Z">
        <seg>for (int i = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (int i = 0; i &lt; SIZE; i++) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100905Z" creationid="pingfangx" creationdate="20180705T100905Z">
        <seg>for (int i = 0; i &lt; SIZE; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (int i = 0; i &lt; len; i++) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064016Z" creationid="pingfangx" creationdate="20190103T064016Z">
        <seg>for (int i = 0; i &lt; len; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (int i = 0; i &lt; length; i++) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085905Z" creationid="pingfangx" creationdate="20190103T085905Z">
        <seg>for (int i = 0; i &lt; length; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (int i = 0; i &lt; max; i++) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090514Z" creationid="pingfangx" creationdate="20180521T090514Z">
        <seg>for (int i = 0; i &lt; max; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (int i = 0; i &lt;= max; i++) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090642Z" creationid="pingfangx" creationdate="20180521T090642Z">
        <seg>for (int i = 0; i &lt;= max; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (int item : numbers) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085626Z" creationid="pingfangx" creationdate="20180521T085626Z">
        <seg>for (int item : numbers) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (int j = 0; j &lt; len; j++) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064020Z" creationid="pingfangx" creationdate="20190103T064020Z">
        <seg>for (int j = 0; j &lt; len; j++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for (j = 0; j &lt; arrayOfInts[i].length;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090133Z" creationid="pingfangx" creationdate="20180521T090133Z">
        <seg>for (j = 0; j &lt; arrayOfInts[i].length;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for String concatenation)
-       Subtraction operator
*       Multiplication operator
/       Division operator
%       Remainder operator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071239Z" creationid="pingfangx" creationdate="20180521T071239Z">
        <seg>字符串连接）
-       减法运算符
*       乘法运算符
/       除法运算符
%       求余运算符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for this kind of one-to-one matching question?]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020958Z" creationid="pingfangx" creationdate="20190102T020944Z">
        <seg>for this kind of one-to-one matching question?]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for(int i=1; i&lt;11; i++){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085235Z" creationid="pingfangx" creationdate="20180521T085235Z">
        <seg>for(int i=1; i&lt;11; i++){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072444Z" creationid="pingfangx" creationdate="20180518T072444Z">
        <seg>for.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>formattedPhoneNumber = currentNumber;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122501Z" creationid="pingfangx" creationdate="20180705T122501Z">
        <seg>formattedPhoneNumber = currentNumber;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>formattedPhoneNumber = null;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122502Z" creationid="pingfangx" creationdate="20180705T122502Z">
        <seg>formattedPhoneNumber = null;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>formattedPhoneNumber = null;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123026Z" creationid="pingfangx" creationdate="20180705T123026Z">
        <seg>formattedPhoneNumber = null;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>foundIt = true;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085848Z" creationid="pingfangx" creationdate="20180521T085848Z">
        <seg>foundIt = true;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>frenchGreeting.greetSomeone("Fred");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061137Z" creationid="pingfangx" creationdate="20180706T061137Z">
        <seg>frenchGreeting.greetSomeone("Fred");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fullPath = str;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074930Z" creationid="pingfangx" creationdate="20190103T074930Z">
        <seg>fullPath = str;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gear = 1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034750Z" creationid="pingfangx" creationdate="20180528T034750Z">
        <seg>gear = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gear = newValue;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062538Z" creationid="pingfangx" creationdate="20180518T062538Z">
        <seg>gear = newValue;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gear = startGear;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025654Z" creationid="pingfangx" creationdate="20180525T025654Z">
        <seg>gear = startGear;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/QandE/generics-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093002Z" creationid="pingfangx" creationdate="20180521T093002Z">
        <seg>generics/QandE/generics-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/bounded.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092839Z" creationid="pingfangx" creationdate="20180521T092839Z">
        <seg>generics/bounded.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/boundedTypeParams.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092846Z" creationid="pingfangx" creationdate="20180521T092846Z">
        <seg>generics/boundedTypeParams.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/bridgeMethods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092952Z" creationid="pingfangx" creationdate="20180521T092952Z">
        <seg>generics/bridgeMethods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/capture.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092926Z" creationid="pingfangx" creationdate="20180521T092926Z">
        <seg>generics/capture.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/erasure.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092934Z" creationid="pingfangx" creationdate="20180521T092934Z">
        <seg>generics/erasure.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/genMethods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092943Z" creationid="pingfangx" creationdate="20180521T092943Z">
        <seg>generics/genMethods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/genTypeInference.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092901Z" creationid="pingfangx" creationdate="20180521T092901Z">
        <seg>generics/genTypeInference.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/genTypes.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092936Z" creationid="pingfangx" creationdate="20180521T092936Z">
        <seg>generics/genTypes.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042553Z" creationid="pingfangx" creationdate="20180518T042553Z">
        <seg>generics/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/inheritance.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092854Z" creationid="pingfangx" creationdate="20180521T092854Z">
        <seg>generics/inheritance.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/lowerBounded.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092921Z" creationid="pingfangx" creationdate="20180521T092921Z">
        <seg>generics/lowerBounded.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/methods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092829Z" creationid="pingfangx" creationdate="20180521T092829Z">
        <seg>generics/methods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/nonReifiableVarargsType.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092957Z" creationid="pingfangx" creationdate="20180521T092957Z">
        <seg>generics/nonReifiableVarargsType.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/rawTypes.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092826Z" creationid="pingfangx" creationdate="20180521T092826Z">
        <seg>generics/rawTypes.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/restrictions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093000Z" creationid="pingfangx" creationdate="20180521T093000Z">
        <seg>generics/restrictions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/subtyping.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092923Z" creationid="pingfangx" creationdate="20180521T092923Z">
        <seg>generics/subtyping.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/types.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092819Z" creationid="pingfangx" creationdate="20180521T092819Z">
        <seg>generics/types.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/unboundedWildcards.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092917Z" creationid="pingfangx" creationdate="20180521T092917Z">
        <seg>generics/unboundedWildcards.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/upperBounded.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092915Z" creationid="pingfangx" creationdate="20180521T092915Z">
        <seg>generics/upperBounded.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/why.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092812Z" creationid="pingfangx" creationdate="20180521T092812Z">
        <seg>generics/why.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/wildcardGuidelines.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092930Z" creationid="pingfangx" creationdate="20180521T092930Z">
        <seg>generics/wildcardGuidelines.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generics/wildcards.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092912Z" creationid="pingfangx" creationdate="20180521T092912Z">
        <seg>generics/wildcards.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>getStarted/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030947Z" creationid="pingfangx" creationdate="20180518T030947Z">
        <seg>getStarted/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>getSuspension() + " suspension.");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093818Z" creationid="pingfangx" creationdate="20190102T093818Z">
        <seg>getSuspension() + " suspension.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grade = 'A';</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081146Z" creationid="pingfangx" creationdate="20180521T081146Z">
        <seg>grade = 'A';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grade = 'B';</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081147Z" creationid="pingfangx" creationdate="20180521T081147Z">
        <seg>grade = 'B';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grade = 'C';</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081148Z" creationid="pingfangx" creationdate="20180521T081148Z">
        <seg>grade = 'C';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grade = 'D';</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081149Z" creationid="pingfangx" creationdate="20180521T081149Z">
        <seg>grade = 'D';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grade = 'F';</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081150Z" creationid="pingfangx" creationdate="20180521T081150Z">
        <seg>grade = 'F';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>greetSomeone("mundo");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061135Z" creationid="pingfangx" creationdate="20180706T061135Z">
        <seg>greetSomeone("mundo");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>greetSomeone("tout le monde");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061132Z" creationid="pingfangx" creationdate="20180706T061132Z">
        <seg>greetSomeone("tout le monde");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>greetSomeone("world");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061128Z" creationid="pingfangx" creationdate="20180706T061128Z">
        <seg>greetSomeone("world");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grid.getChildren().add(dollar);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065958Z" creationid="pingfangx" creationdate="20180706T065958Z">
        <seg>grid.getChildren().add(dollar);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grid.getChildren().add(label);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070017Z" creationid="pingfangx" creationdate="20180706T070017Z">
        <seg>grid.getChildren().add(label);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grid.getChildren().add(submit);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070012Z" creationid="pingfangx" creationdate="20180706T070012Z">
        <seg>grid.getChildren().add(submit);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grid.getChildren().add(sum);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070010Z" creationid="pingfangx" creationdate="20180706T070010Z">
        <seg>grid.getChildren().add(sum);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grid.setHgap(5);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065957Z" creationid="pingfangx" creationdate="20180706T065957Z">
        <seg>grid.setHgap(5);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grid.setPadding(new Insets(10, 10, 10, 10));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065956Z" creationid="pingfangx" creationdate="20180706T065956Z">
        <seg>grid.setPadding(new Insets(10, 10, 10, 10));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>grid.setVgap(5);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065956Z" creationid="pingfangx" creationdate="20180706T065956Z">
        <seg>grid.setVgap(5);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>height = h;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062618Z" creationid="pingfangx" creationdate="20180601T062618Z">
        <seg>height = h;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hidevariables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042704Z" creationid="pingfangx" creationdate="20190102T042704Z">
        <seg>hidevariables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030658Z" creationid="pingfangx" creationdate="20180518T030658Z">
        <seg>http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://education.oracle.com/pls/web_prod-plq-dad/ou_product_category.getFamilyPage?p_family_id=48</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030655Z" creationid="pingfangx" creationdate="20180518T030655Z">
        <seg>http://education.oracle.com/pls/web_prod-plq-dad/ou_product_category.getFamilyPage?p_family_id=48</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://types.cs.washington.edu/checker-framework/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T040910Z" creationid="pingfangx" creationdate="20190102T040910Z">
        <seg>http://types.cs.washington.edu/checker-framework/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.amazon.com/The-Java-Tutorial-Course-Edition/dp/0134034082</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030632Z" creationid="pingfangx" creationdate="20180518T030632Z">
        <seg>http://www.amazon.com/The-Java-Tutorial-Course-Edition/dp/0134034082</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.oracle.com/corporate/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031843Z" creationid="pingfangx" creationdate="20180518T031843Z">
        <seg>http://www.oracle.com/corporate/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.oracle.com/pls/topic/lookup?ctx=cpyr&amp;id=en-US</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031853Z" creationid="pingfangx" creationdate="20180518T031853Z">
        <seg>http://www.oracle.com/pls/topic/lookup?ctx=cpyr&amp;id=en-US</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.oracle.com/technetwork/java/javase/downloads/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030702Z" creationid="pingfangx" creationdate="20180518T030702Z">
        <seg>http://www.oracle.com/technetwork/java/javase/downloads/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.oracle.com/technetwork/java/javase/java-tutorial-downloads-2005894.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030549Z" creationid="pingfangx" creationdate="20180518T030549Z">
        <seg>http://www.oracle.com/technetwork/java/javase/java-tutorial-downloads-2005894.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.oracle.com/technetwork/java/javase/tech/index-jsp-136373.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033212Z" creationid="pingfangx" creationdate="20180518T033212Z">
        <seg>http://www.oracle.com/technetwork/java/javase/tech/index-jsp-136373.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.oracle.com/technetwork/java/langenv-140151.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033053Z" creationid="pingfangx" creationdate="20180518T033053Z">
        <seg>http://www.oracle.com/technetwork/java/langenv-140151.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.oracle.com/us/corporate/contact/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031843Z" creationid="pingfangx" creationdate="20180518T031843Z">
        <seg>http://www.oracle.com/us/corporate/contact/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.oracle.com/us/legal/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031844Z" creationid="pingfangx" creationdate="20180518T031844Z">
        <seg>http://www.oracle.com/us/legal/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.oracle.com/us/legal/privacy/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031845Z" creationid="pingfangx" creationdate="20180518T031845Z">
        <seg>http://www.oracle.com/us/legal/privacy/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.oracle.com/us/legal/terms/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031844Z" creationid="pingfangx" creationdate="20180518T031844Z">
        <seg>http://www.oracle.com/us/legal/terms/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://blogs.oracle.com/thejavatutorials/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030539Z" creationid="pingfangx" creationdate="20180518T030539Z">
        <seg>https://blogs.oracle.com/thejavatutorials/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javafx/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031351Z" creationid="pingfangx" creationdate="20180518T031351Z">
        <seg>https://docs.oracle.com/javafx/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030643Z" creationid="pingfangx" creationdate="20180518T030643Z">
        <seg>https://docs.oracle.com/javase/8/docs/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030648Z" creationid="pingfangx" creationdate="20180518T030648Z">
        <seg>https://docs.oracle.com/javase/8/docs/api</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T064532Z" creationid="pingfangx" creationdate="20180518T064532Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024930Z" creationid="pingfangx" creationdate="20190103T024930Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081456Z" creationid="pingfangx" creationdate="20180521T081456Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081456Z" creationid="pingfangx" creationdate="20180521T081456Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103553Z" creationid="pingfangx" creationdate="20190102T103553Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Cloneable.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021431Z" creationid="pingfangx" creationdate="20190103T021431Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Cloneable.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065426Z" creationid="pingfangx" creationdate="20190102T065426Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html#compareTo-T-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065426Z" creationid="pingfangx" creationdate="20190102T065426Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html#compareTo-T-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033301Z" creationid="pingfangx" creationdate="20190102T033301Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065103Z" creationid="pingfangx" creationdate="20190103T065103Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Float.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065103Z" creationid="pingfangx" creationdate="20190103T065103Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Float.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/FunctionalInterface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033753Z" creationid="pingfangx" creationdate="20190102T033753Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/FunctionalInterface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T080520Z" creationid="pingfangx" creationdate="20180518T080520Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081317Z" creationid="pingfangx" creationdate="20180518T081317Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024941Z" creationid="pingfangx" creationdate="20190103T024941Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Number.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024830Z" creationid="pingfangx" creationdate="20190103T024830Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Number.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081806Z" creationid="pingfangx" creationdate="20190102T081806Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Override.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033411Z" creationid="pingfangx" creationdate="20190102T033411Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Override.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082114Z" creationid="pingfangx" creationdate="20181228T082114Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/SafeVarargs.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033701Z" creationid="pingfangx" creationdate="20190102T033701Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/SafeVarargs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Short.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081457Z" creationid="pingfangx" creationdate="20180521T081457Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/Short.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/String.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081928Z" creationid="pingfangx" creationdate="20180518T081928Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/String.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#equals-java.lang.Object-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082623Z" creationid="pingfangx" creationdate="20180521T082623Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#equals-java.lang.Object-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#toLowerCase--</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082624Z" creationid="pingfangx" creationdate="20180521T082624Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#toLowerCase--</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T080155Z" creationid="pingfangx" creationdate="20190103T080155Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/SuppressWarnings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033452Z" creationid="pingfangx" creationdate="20190102T033452Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/SuppressWarnings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Documented.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033911Z" creationid="pingfangx" creationdate="20190102T033911Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Documented.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Inherited.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034011Z" creationid="pingfangx" creationdate="20190102T034011Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Inherited.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Repeatable.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T034038Z" creationid="pingfangx" creationdate="20190102T034038Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Repeatable.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Retention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033838Z" creationid="pingfangx" creationdate="20190102T033838Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Retention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Target.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033930Z" creationid="pingfangx" creationdate="20190102T033930Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Target.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/AnnotatedElement.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041259Z" creationid="pingfangx" creationdate="20190102T041259Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/AnnotatedElement.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/AnnotatedElement.html#getAnnotation-java.lang.Class-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041256Z" creationid="pingfangx" creationdate="20190102T041256Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/AnnotatedElement.html#getAnnotation-java.lang.Class-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/AnnotatedElement.html#getAnnotationsByType-java.lang.Class-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041257Z" creationid="pingfangx" creationdate="20190102T041257Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/AnnotatedElement.html#getAnnotationsByType-java.lang.Class-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081438Z" creationid="pingfangx" creationdate="20180518T081438Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024930Z" creationid="pingfangx" creationdate="20190103T024930Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061208Z" creationid="pingfangx" creationdate="20190102T061208Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064744Z" creationid="pingfangx" creationdate="20190102T064744Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061207Z" creationid="pingfangx" creationdate="20190102T061207Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/AbstractMap.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021513Z" creationid="pingfangx" creationdate="20190103T021513Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/AbstractMap.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T043220Z" creationid="pingfangx" creationdate="20180521T043220Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085632Z" creationid="pingfangx" creationdate="20180706T085632Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#sort-java.util.List-java.util.Comparator-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065628Z" creationid="pingfangx" creationdate="20190102T065628Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#sort-java.util.List-java.util.Comparator-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065038Z" creationid="pingfangx" creationdate="20190102T065038Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.Function-java.util.Comparator-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071323Z" creationid="pingfangx" creationdate="20190102T071323Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.Function-java.util.Comparator-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparingDouble-java.util.function.ToDoubleFunction-java.util.Comparator-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071735Z" creationid="pingfangx" creationdate="20190102T071735Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparingDouble-java.util.function.ToDoubleFunction-java.util.Comparator-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparingLong-java.util.function.ToLongFunction-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071735Z" creationid="pingfangx" creationdate="20190102T071735Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparingLong-java.util.function.ToLongFunction-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#reversed--</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T072008Z" creationid="pingfangx" creationdate="20190102T072008Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#reversed--</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#thenComparing-java.util.Comparator-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071850Z" creationid="pingfangx" creationdate="20190102T071850Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#thenComparing-java.util.Comparator-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#thenComparingDouble-java.util.function.ToDoubleFunction-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071939Z" creationid="pingfangx" creationdate="20190102T071939Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#thenComparingDouble-java.util.function.ToDoubleFunction-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#thenComparingLong-java.util.function.ToLongFunction-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071940Z" creationid="pingfangx" creationdate="20190102T071940Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#thenComparingLong-java.util.function.ToLongFunction-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032905Z" creationid="pingfangx" creationdate="20190103T032905Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T021704Z" creationid="pingfangx" creationdate="20190103T021704Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100700Z" creationid="pingfangx" creationdate="20180705T100700Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/List.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085632Z" creationid="pingfangx" creationdate="20180706T085632Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/List.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082114Z" creationid="pingfangx" creationdate="20181228T082114Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/api/javax/swing/Box.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T013900Z" creationid="pingfangx" creationdate="20190102T013900Z">
        <seg>https://docs.oracle.com/javase/8/docs/api/javax/swing/Box.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033626Z" creationid="pingfangx" creationdate="20180518T033626Z">
        <seg>https://docs.oracle.com/javase/8/docs/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/technotes/guides/install/install_overview.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034412Z" creationid="pingfangx" creationdate="20180518T034412Z">
        <seg>https://docs.oracle.com/javase/8/docs/technotes/guides/install/install_overview.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/docs/technotes/guides/javadoc/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035455Z" creationid="pingfangx" creationdate="20180518T035455Z">
        <seg>https://docs.oracle.com/javase/8/docs/technotes/guides/javadoc/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/javafx/get-started-tutorial/hello_world.htm</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065607Z" creationid="pingfangx" creationdate="20180706T065607Z">
        <seg>https://docs.oracle.com/javase/8/javafx/get-started-tutorial/hello_world.htm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/javafx/get-started-tutorial/javafx_get_started.htm</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065607Z" creationid="pingfangx" creationdate="20180706T065607Z">
        <seg>https://docs.oracle.com/javase/8/javafx/get-started-tutorial/javafx_get_started.htm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/8/javafx/user-interface-tutorial/custom.htm</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065741Z" creationid="pingfangx" creationdate="20180706T065741Z">
        <seg>https://docs.oracle.com/javase/8/javafx/user-interface-tutorial/custom.htm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/feedback.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040547Z" creationid="pingfangx" creationdate="20180518T040547Z">
        <seg>https://docs.oracle.com/javase/feedback.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T081438Z" creationid="pingfangx" creationdate="20180518T081438Z">
        <seg>https://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>i &lt;= (searchMeLength - findMeLength);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075857Z" creationid="pingfangx" creationdate="20190103T075857Z">
        <seg>i &lt;= (searchMeLength - findMeLength);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>i++) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075857Z" creationid="pingfangx" creationdate="20190103T075857Z">
        <seg>i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>i++;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065515Z" creationid="pingfangx" creationdate="20180521T065515Z">
        <seg>i++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>i18n/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031620Z" creationid="pingfangx" creationdate="20180518T031620Z">
        <seg>i18n/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>id = ++numberOfBicycles;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065616Z" creationid="pingfangx" creationdate="20180705T065616Z">
        <seg>id = ++numberOfBicycles;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075737Z" creationid="pingfangx" creationdate="20180518T075737Z">
        <seg>if</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ( (obj1).isLargerThan(obj2) == 0)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062708Z" creationid="pingfangx" creationdate="20190102T062708Z">
        <seg>if ( (obj1).isLargerThan(obj2) == 0)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (!foundIt)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075859Z" creationid="pingfangx" creationdate="20190103T075859Z">
        <seg>if (!foundIt)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (((year % 4 == 0) &amp;&amp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082514Z" creationid="pingfangx" creationdate="20180521T082514Z">
        <seg>if (((year % 4 == 0) &amp;&amp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ((obj1).isLargerThan(obj2) &lt; 0)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062706Z" creationid="pingfangx" creationdate="20190102T062706Z">
        <seg>if ((obj1).isLargerThan(obj2) &lt; 0)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ((obj1).isLargerThan(obj2) &gt; 0)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062629Z" creationid="pingfangx" creationdate="20190102T062629Z">
        <seg>if ((obj1).isLargerThan(obj2) &gt; 0)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (Character.isUpperCase(myName.charAt(i))) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085905Z" creationid="pingfangx" creationdate="20190103T085905Z">
        <seg>if (Character.isUpperCase(myName.charAt(i))) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (aNumber == 0)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091123Z" creationid="pingfangx" creationdate="20180521T091123Z">
        <seg>if (aNumber == 0)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (aNumber == 0) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091644Z" creationid="pingfangx" creationdate="20180521T091644Z">
        <seg>if (aNumber == 0) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (aNumber &gt;= 0)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091122Z" creationid="pingfangx" creationdate="20180521T091122Z">
        <seg>if (aNumber &gt;= 0)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (aNumber &gt;= 0) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091643Z" creationid="pingfangx" creationdate="20180521T091643Z">
        <seg>if (aNumber &gt;= 0) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (areAnagrams(string1, string2)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085932Z" creationid="pingfangx" creationdate="20190103T085932Z">
        <seg>if (areAnagrams(string1, string2)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (args.length != 1) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020032Z" creationid="pingfangx" creationdate="20190102T020032Z">
        <seg>if (args.length != 1) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (args.length == 2) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065201Z" creationid="pingfangx" creationdate="20190103T065201Z">
        <seg>if (args.length == 2) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (arrayOfInts[i] == searchfor) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085847Z" creationid="pingfangx" creationdate="20180521T085847Z">
        <seg>if (arrayOfInts[i] == searchfor) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (arrayOfInts[i][j] == searchfor) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090134Z" creationid="pingfangx" creationdate="20180521T090134Z">
        <seg>if (arrayOfInts[i][j] == searchfor) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (compVal != 0)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071030Z" creationid="pingfangx" creationdate="20190102T071030Z">
        <seg>if (compVal != 0)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (compare != 0)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071847Z" creationid="pingfangx" creationdate="20190102T071847Z">
        <seg>if (compare != 0)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (condition) { &lt;s0&gt;// begin block 1&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075351Z" creationid="pingfangx" creationdate="20180521T075351Z">
        <seg>if (condition) { &lt;s0&gt;// begin block 1&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (currentNumber.length() == numberLength)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122501Z" creationid="pingfangx" creationdate="20180705T122501Z">
        <seg>if (currentNumber.length() == numberLength)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (foundIt) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085848Z" creationid="pingfangx" creationdate="20180521T085848Z">
        <seg>if (foundIt) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (futureMonths.isEmpty()) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082413Z" creationid="pingfangx" creationdate="20180521T082413Z">
        <seg>if (futureMonths.isEmpty()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (i % 2 == 0)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084411Z" creationid="pingfangx" creationdate="20190103T084411Z">
        <seg>if (i % 2 == 0)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (i.intValue() % 2 == 0)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084500Z" creationid="pingfangx" creationdate="20190103T084500Z">
        <seg>if (i.intValue() % 2 == 0)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (isMoving)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081011Z" creationid="pingfangx" creationdate="20180521T081011Z">
        <seg>if (isMoving)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (isMoving) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081129Z" creationid="pingfangx" creationdate="20180521T081129Z">
        <seg>if (isMoving) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (isMoving){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080913Z" creationid="pingfangx" creationdate="20180521T080913Z">
        <seg>if (isMoving){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (low &lt;= p.getAge() &amp;&amp; p.getAge() &lt; high) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085841Z" creationid="pingfangx" creationdate="20180706T085841Z">
        <seg>if (low &lt;= p.getAge() &amp;&amp; p.getAge() &lt; high) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (month == null) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082554Z" creationid="pingfangx" creationdate="20180521T082554Z">
        <seg>if (month == null) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (myNumber1.getNumber() == null)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122522Z" creationid="pingfangx" creationdate="20180705T122522Z">
        <seg>if (myNumber1.getNumber() == null)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (myNumber2.getNumber() == null)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122524Z" creationid="pingfangx" creationdate="20180705T122524Z">
        <seg>if (myNumber2.getNumber() == null)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (obj instanceof Book)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102601Z" creationid="pingfangx" creationdate="20190102T102601Z">
        <seg>if (obj instanceof Book)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (obj instanceof MountainBike) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083910Z" creationid="pingfangx" creationdate="20190102T083910Z">
        <seg>if (obj instanceof MountainBike) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (p.getAge() &gt;= age) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085629Z" creationid="pingfangx" creationdate="20180706T085629Z">
        <seg>if (p.getAge() &gt;= age) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (returnedMonthNumber == 0) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082616Z" creationid="pingfangx" creationdate="20180521T082616Z">
        <seg>if (returnedMonthNumber == 0) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (searchMe.charAt(i) != 'p')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090525Z" creationid="pingfangx" creationdate="20180521T090525Z">
        <seg>if (searchMe.charAt(i) != 'p')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (searchMe.charAt(j++) != substring.charAt(k++)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090645Z" creationid="pingfangx" creationdate="20180521T090645Z">
        <seg>if (searchMe.charAt(j++) != substring.charAt(k++)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (searchMe.regionMatches(i, findMe, 0, findMeLength)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075858Z" creationid="pingfangx" creationdate="20190103T075858Z">
        <seg>if (searchMe.regionMatches(i, findMe, 0, findMeLength)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (tester.test(p)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085932Z" creationid="pingfangx" creationdate="20180706T085932Z">
        <seg>if (tester.test(p)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (testscore &gt;= 90) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081145Z" creationid="pingfangx" creationdate="20180521T081145Z">
        <seg>if (testscore &gt;= 90) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (this.getArea() &lt; otherRect.getArea())</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062203Z" creationid="pingfangx" creationdate="20190102T062203Z">
        <seg>if (this.getArea() &lt; otherRect.getArea())</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if you are going to write a &lt;c0&gt;clone()&lt;/c0&gt; method to override the one in &lt;c1&gt;Object&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101613Z" creationid="pingfangx" creationdate="20190102T101613Z">
        <seg>如果要编写 &lt;c0&gt;clone()&lt;/c0&gt; 方法来覆盖 &lt;c1&gt;Object&lt;/c1&gt; 中的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if((value1 == 1) &amp;&amp; (value2 == 2))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070215Z" creationid="pingfangx" creationdate="20180521T070215Z">
        <seg>if((value1 == 1) &amp;&amp; (value2 == 2))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if((value1 == 1) || (value2 == 1))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070216Z" creationid="pingfangx" creationdate="20180521T070216Z">
        <seg>if((value1 == 1) || (value2 == 1))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if(value1 != value2)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070029Z" creationid="pingfangx" creationdate="20180521T070029Z">
        <seg>if(value1 != value2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if(value1 &lt; value2)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070032Z" creationid="pingfangx" creationdate="20180521T070032Z">
        <seg>if(value1 &lt; value2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if(value1 &lt;= value2)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070033Z" creationid="pingfangx" creationdate="20180521T070033Z">
        <seg>if(value1 &lt;= value2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if(value1 == value2)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070028Z" creationid="pingfangx" creationdate="20180521T070028Z">
        <seg>if(value1 == value2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if(value1 &gt; value2)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070030Z" creationid="pingfangx" creationdate="20180521T070030Z">
        <seg>if(value1 &gt; value2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072434Z" creationid="pingfangx" creationdate="20180518T072434Z">
        <seg>if.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>images/ThinkingDuke.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030455Z" creationid="pingfangx" creationdate="20180518T030455Z">
        <seg>images/ThinkingDuke.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>images/really_big_index_button.gif</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030531Z" creationid="pingfangx" creationdate="20180518T030531Z">
        <seg>images/really_big_index_button.gif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>implements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075740Z" creationid="pingfangx" creationdate="20180518T075740Z">
        <seg>implements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>implements Relatable {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062155Z" creationid="pingfangx" creationdate="20190102T062155Z">
        <seg>implements Relatable {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075743Z" creationid="pingfangx" creationdate="20180518T075743Z">
        <seg>import</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import java.lang.annotation.Repeatable;

&lt;s0&gt;@Repeatable(Schedules.class)&lt;/s0&gt;
public @interface Schedule {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041155Z" creationid="pingfangx" creationdate="20190102T041155Z">
        <seg>import java.lang.annotation.Repeatable;

&lt;s0&gt;@Repeatable(Schedules.class)&lt;/s0&gt;
public @interface Schedule {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import java.text.*;

public class DecimalFormatDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034047Z" creationid="pingfangx" creationdate="20190103T034047Z">
        <seg>import java.text.*;

public class DecimalFormatDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import java.time.*;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060823Z" creationid="pingfangx" creationdate="20190102T060823Z">
        <seg>import java.time.*;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import java.time.*;

public interface TimeClient {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061340Z" creationid="pingfangx" creationdate="20190102T061340Z">
        <seg>import java.time.*;

public interface TimeClient {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import java.time.*;
import java.lang.*;
import java.util.*;

public class TestSimpleTimeClient {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063342Z" creationid="pingfangx" creationdate="20190102T063342Z">
        <seg>import java.time.*;
import java.lang.*;
import java.util.*;

public class TestSimpleTimeClient {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import java.util.*;
import java.util.stream.*;
import java.lang.*;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065303Z" creationid="pingfangx" creationdate="20190102T065303Z">
        <seg>import java.util.*;
import java.util.stream.*;
import java.lang.*;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import java.util.ArrayList;
import java.util.List;

public class Unboxing {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084603Z" creationid="pingfangx" creationdate="20190103T084603Z">
        <seg>import java.util.ArrayList;
import java.util.List;

public class Unboxing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import java.util.Calendar;
import java.util.Locale;

public class TestFormat {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033615Z" creationid="pingfangx" creationdate="20190103T033615Z">
        <seg>import java.util.Calendar;
import java.util.Locale;

public class TestFormat {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import java.util.function.Consumer;

public class LambdaScopeTest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075930Z" creationid="pingfangx" creationdate="20181228T075930Z">
        <seg>import java.util.function.Consumer;

public class LambdaScopeTest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.stage.Stage;

public class CustomTextFieldSample extends Application {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065949Z" creationid="pingfangx" creationdate="20180706T065949Z">
        <seg>import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.stage.Stage;

public class CustomTextFieldSample extends Application {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065635Z" creationid="pingfangx" creationdate="20180706T065635Z">
        <seg>import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import static java.lang.Math.*;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035324Z" creationid="pingfangx" creationdate="20190103T035324Z">
        <seg>import static java.lang.Math.*;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032815Z" creationid="pingfangx" creationdate="20180518T032815Z">
        <seg>index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>information/history.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030534Z" creationid="pingfangx" creationdate="20180518T030534Z">
        <seg>information/history.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>inherit-answers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023607Z" creationid="pingfangx" creationdate="20190103T023607Z">
        <seg>inherit-answers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>inheritance.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042728Z" creationid="pingfangx" creationdate="20180518T042728Z">
        <seg>inheritance.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>initial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022846Z" creationid="pingfangx" creationdate="20180525T022846Z">
        <seg>initial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>innerclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022851Z" creationid="pingfangx" creationdate="20180525T022851Z">
        <seg>innerclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>instance variable to be an instance of InnerClass2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021206Z" creationid="pingfangx" creationdate="20190102T021206Z">
        <seg>instance variable to be an instance of InnerClass2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>instanceName.methodName(args)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065029Z" creationid="pingfangx" creationdate="20180705T065029Z">
        <seg>instanceName.methodName(args)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>instanceof</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075746Z" creationid="pingfangx" creationdate="20180518T075746Z">
        <seg>instanceof</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>instanceof      Compares an object to</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071739Z" creationid="pingfangx" creationdate="20180521T071739Z">
        <seg>instanceof      比较一个对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075749Z" creationid="pingfangx" creationdate="20180518T075749Z">
        <seg>int</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int &lt;b0&gt;cadence&lt;/b0&gt; = 0;
int &lt;b1&gt;speed&lt;/b1&gt; = 0;
int &lt;b2&gt;gear&lt;/b2&gt; = 1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T073040Z" creationid="pingfangx" creationdate="20180518T073040Z">
        <seg>int &lt;b0&gt;cadence&lt;/b0&gt; = 0;
int &lt;b1&gt;speed&lt;/b1&gt; = 0;
int &lt;b2&gt;gear&lt;/b2&gt; = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int &lt;b3&gt;numPeriods&lt;/b3&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032100Z" creationid="pingfangx" creationdate="20180601T032100Z">
        <seg>int &lt;b3&gt;numPeriods&lt;/b3&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int abs(int i)&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035604Z" creationid="pingfangx" creationdate="20190103T035604Z">
        <seg>int abs(int i)&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int absVal = absoluteValue(i);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084608Z" creationid="pingfangx" creationdate="20190103T084608Z">
        <seg>int absVal = absoluteValue(i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int areaOfRectangle = new Rectangle(100, 50).getArea();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085219Z" creationid="pingfangx" creationdate="20180601T085219Z">
        <seg>int areaOfRectangle = new Rectangle(100, 50).getArea();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int bitmask = 0x000F;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070951Z" creationid="pingfangx" creationdate="20180521T070951Z">
        <seg>int bitmask = 0x000F;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int c = 16, d = 45;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035753Z" creationid="pingfangx" creationdate="20190103T035753Z">
        <seg>int c = 16, d = 45;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int cadence = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062534Z" creationid="pingfangx" creationdate="20180518T062534Z">
        <seg>int cadence = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int changeLanes(Direction direction,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054132Z" creationid="pingfangx" creationdate="20190102T054132Z">
        <seg>int changeLanes(Direction direction,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int compVal =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071028Z" creationid="pingfangx" creationdate="20190102T071028Z">
        <seg>int compVal =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int compare =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071847Z" creationid="pingfangx" creationdate="20190102T071847Z">
        <seg>int compare =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int compareTo(Byte anotherByte)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030701Z" creationid="pingfangx" creationdate="20190103T030701Z">
        <seg>int compareTo(Byte anotherByte)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int compareTo(Double anotherDouble)&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030701Z" creationid="pingfangx" creationdate="20190103T030701Z">
        <seg>int compareTo(Double anotherDouble)&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int compareTo(Float anotherFloat)&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030702Z" creationid="pingfangx" creationdate="20190103T030702Z">
        <seg>int compareTo(Float anotherFloat)&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int compareTo(Integer anotherInteger)&lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030702Z" creationid="pingfangx" creationdate="20190103T030702Z">
        <seg>int compareTo(Integer anotherInteger)&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int compareTo(Long anotherLong)&lt;br4/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030703Z" creationid="pingfangx" creationdate="20190103T030703Z">
        <seg>int compareTo(Long anotherLong)&lt;br4/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int compareTo(Short anotherShort)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030703Z" creationid="pingfangx" creationdate="20190103T030703Z">
        <seg>int compareTo(Short anotherShort)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int compareTo(String anotherString)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075550Z" creationid="pingfangx" creationdate="20190103T075550Z">
        <seg>int compareTo(String anotherString)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int compareToIgnoreCase(String str)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075623Z" creationid="pingfangx" creationdate="20190103T075623Z">
        <seg>int compareToIgnoreCase(String str)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int count = 1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083001Z" creationid="pingfangx" creationdate="20180521T083001Z">
        <seg>int count = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int currentRevision() default 1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024842Z" creationid="pingfangx" creationdate="20190102T024842Z">
        <seg>int currentRevision() default 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int doSomethingElse(String s);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062910Z" creationid="pingfangx" creationdate="20190102T062910Z">
        <seg>int doSomethingElse(String s);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int doSomethingElse(String s);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061524Z" creationid="pingfangx" creationdate="20190102T061524Z">
        <seg>int doSomethingElse(String s);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int dot = fullPath.lastIndexOf(extensionSeparator);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074931Z" creationid="pingfangx" creationdate="20190103T074931Z">
        <seg>int dot = fullPath.lastIndexOf(extensionSeparator);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int dot = s.indexOf('.');</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065437Z" creationid="pingfangx" creationdate="20190103T065437Z">
        <seg>int dot = s.indexOf('.');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int findMeLength = findMe.length();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075856Z" creationid="pingfangx" creationdate="20190103T075856Z">
        <seg>int findMeLength = findMe.length();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int gear = 1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062535Z" creationid="pingfangx" creationdate="20180518T062535Z">
        <seg>int gear = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int getRadarFront(double distanceToCar,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054134Z" creationid="pingfangx" creationdate="20190102T054134Z">
        <seg>int getRadarFront(double distanceToCar,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int getRadarRear(double distanceToCar,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054135Z" creationid="pingfangx" creationdate="20190102T054135Z">
        <seg>int getRadarRear(double distanceToCar,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int height = new Rectangle().height;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062310Z" creationid="pingfangx" creationdate="20180601T062310Z">
        <seg>int height = new Rectangle().height;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int hour() default 12;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041159Z" creationid="pingfangx" creationdate="20190102T041159Z">
        <seg>int hour() default 12;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int hour, int minute, int second) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061201Z" creationid="pingfangx" creationdate="20190102T061201Z">
        <seg>int hour, int minute, int second) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int hour, int minute, int second);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060825Z" creationid="pingfangx" creationdate="20190102T060825Z">
        <seg>int hour, int minute, int second);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int i = 10;
int n = i++%5;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072334Z" creationid="pingfangx" creationdate="20180521T072334Z">
        <seg>int i = 10;
int n = i++%5;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int i = 3;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065515Z" creationid="pingfangx" creationdate="20180521T065515Z">
        <seg>int i = 3;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int i = 461012;
System.out.format("The value of i is: %d%n", i);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033036Z" creationid="pingfangx" creationdate="20190103T033036Z">
        <seg>int i = 461012;
System.out.format("The value of i is: %d%n", i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int i = 500;
float gpa = 3.65f;
byte mask = 0xff;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T025041Z" creationid="pingfangx" creationdate="20190103T025041Z">
        <seg>int i = 500;
float gpa = 3.65f;
byte mask = 0xff;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int i, len = string.length();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085925Z" creationid="pingfangx" creationdate="20190103T085925Z">
        <seg>int i, len = string.length();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int i;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085846Z" creationid="pingfangx" creationdate="20180521T085846Z">
        <seg>int i;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int i;
// Concatenate "i" with an empty string; conversion is handled for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065340Z" creationid="pingfangx" creationdate="20190103T065340Z">
        <seg>int i;
// Concatenate "i" with an empty string; conversion is handled for you.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int i;
double d;
String s3 = Integer.toString(i); 
String s4 = Double.toString(d);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065357Z" creationid="pingfangx" creationdate="20190103T065357Z">
        <seg>int i;
double d;
String s3 = Integer.toString(i); 
String s4 = Double.toString(d);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int id();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041814Z" creationid="pingfangx" creationdate="20190102T041814Z">
        <seg>int id();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int index = original.indexOf('a');

/*1*/   result.setCharAt(0, original.charAt(0));
/*2*/   result.setCharAt(1, original.charAt(original.length()-1));
/*3*/   result.insert(1, original.charAt(4));
/*4*/   result.append(original.substring(1,4));
/*5*/   result.insert(3, (original.substring(index, index+2) + " "));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085254Z" creationid="pingfangx" creationdate="20190103T085254Z">
        <seg>int index = original.indexOf('a');

/*1*/   result.setCharAt(0, original.charAt(0));
/*2*/   result.setCharAt(1, original.charAt(original.length()-1));
/*3*/   result.insert(1, original.charAt(4));
/*4*/   result.append(original.substring(1,4));
/*5*/   result.insert(3, (original.substring(index, index+2) + " "));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int indexOf(String str)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073451Z" creationid="pingfangx" creationdate="20190103T073451Z">
        <seg>int indexOf(String str)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int indexOf(String str, int fromIndex)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073500Z" creationid="pingfangx" creationdate="20190103T073500Z">
        <seg>int indexOf(String str, int fromIndex)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int indexOf(int ch)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073408Z" creationid="pingfangx" creationdate="20190103T073408Z">
        <seg>int indexOf(int ch)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int indexOf(int ch, int fromIndex)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073421Z" creationid="pingfangx" creationdate="20190103T073421Z">
        <seg>int indexOf(int ch, int fromIndex)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int intValue()&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030641Z" creationid="pingfangx" creationdate="20190103T030641Z">
        <seg>int intValue()&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int j = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090131Z" creationid="pingfangx" creationdate="20180521T090131Z">
        <seg>int j = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int j = i;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090643Z" creationid="pingfangx" creationdate="20180521T090643Z">
        <seg>int j = i;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int k = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090644Z" creationid="pingfangx" creationdate="20180521T090644Z">
        <seg>int k = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int lastIndexOf(String str)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073452Z" creationid="pingfangx" creationdate="20190103T073452Z">
        <seg>int lastIndexOf(String str)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int lastIndexOf(String str, int fromIndex)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073500Z" creationid="pingfangx" creationdate="20190103T073500Z">
        <seg>int lastIndexOf(String str, int fromIndex)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int lastIndexOf(int ch)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073409Z" creationid="pingfangx" creationdate="20190103T073409Z">
        <seg>int lastIndexOf(int ch)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int lastIndexOf(int ch, int fromIndex)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T073422Z" creationid="pingfangx" creationdate="20190103T073422Z">
        <seg>int lastIndexOf(int ch, int fromIndex)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int len = palindrome.length();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064013Z" creationid="pingfangx" creationdate="20190103T064013Z">
        <seg>int len = palindrome.length();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int length = myName.length();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085904Z" creationid="pingfangx" creationdate="20190103T085904Z">
        <seg>int length = myName.length();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int max = searchMe.length() -</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090640Z" creationid="pingfangx" creationdate="20180521T090640Z">
        <seg>int max = searchMe.length() -</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int max = searchMe.length();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090512Z" creationid="pingfangx" creationdate="20180521T090512Z">
        <seg>int max = searchMe.length();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int max(int arg1, int arg2)&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035737Z" creationid="pingfangx" creationdate="20190103T035737Z">
        <seg>int max(int arg1, int arg2)&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int min(int arg1, int arg2)&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035731Z" creationid="pingfangx" creationdate="20190103T035731Z">
        <seg>int min(int arg1, int arg2)&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int month = 2;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082456Z" creationid="pingfangx" creationdate="20180521T082456Z">
        <seg>int month = 2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int month = 8;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082015Z" creationid="pingfangx" creationdate="20180521T082015Z">
        <seg>int month = 8;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int month = 8;
if (month == 1) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082119Z" creationid="pingfangx" creationdate="20180521T082119Z">
        <seg>int month = 8;
if (month == 1) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int monthNumber = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082553Z" creationid="pingfangx" creationdate="20180521T082553Z">
        <seg>int monthNumber = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int n = substring.length();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090642Z" creationid="pingfangx" creationdate="20180521T090642Z">
        <seg>int n = substring.length();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int newTireWidth){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094002Z" creationid="pingfangx" creationdate="20190102T094002Z">
        <seg>int newTireWidth){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int numDays = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082504Z" creationid="pingfangx" creationdate="20180521T082504Z">
        <seg>int numDays = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int numPs = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090513Z" creationid="pingfangx" creationdate="20180521T090513Z">
        <seg>int numPs = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int number = (int)(Math.random() * 10);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040557Z" creationid="pingfangx" creationdate="20190103T040557Z">
        <seg>int number = (int)(Math.random() * 10);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int numberOfSides = corners.length;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033046Z" creationid="pingfangx" creationdate="20180601T033046Z">
        <seg>int numberOfSides = corners.length;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int operation(int a, int b);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075616Z" creationid="pingfangx" creationdate="20181228T075616Z">
        <seg>int operation(int a, int b);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int original_result = result;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064524Z" creationid="pingfangx" creationdate="20180521T064524Z">
        <seg>int original_result = result;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int overriddenMethod() { }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033433Z" creationid="pingfangx" creationdate="20190102T033433Z">
        <seg>int overriddenMethod() { }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int result = +1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065214Z" creationid="pingfangx" creationdate="20180521T065214Z">
        <seg>int result = +1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int result = 1 + 2;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064518Z" creationid="pingfangx" creationdate="20180521T064518Z">
        <seg>int result = 1 + 2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int result = 1 + 2; // result is now 3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072634Z" creationid="pingfangx" creationdate="20180521T072634Z">
        <seg>int result = 1 + 2; //结果现在是 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int result = 3;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073339Z" creationid="pingfangx" creationdate="20180521T073339Z">
        <seg>int result = 3;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int result;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070336Z" creationid="pingfangx" creationdate="20180521T070336Z">
        <seg>int result;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int returnedMonthNumber =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082611Z" creationid="pingfangx" creationdate="20180521T082611Z">
        <seg>int returnedMonthNumber =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int round(float f)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035650Z" creationid="pingfangx" creationdate="20190103T035650Z">
        <seg>int round(float f)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int searchMeLength = searchMe.length();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075855Z" creationid="pingfangx" creationdate="20190103T075855Z">
        <seg>int searchMeLength = searchMe.length();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int searchfor = 12;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085845Z" creationid="pingfangx" creationdate="20180521T085845Z">
        <seg>int searchfor = 12;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int sep = fullPath.lastIndexOf(pathSeparator);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074933Z" creationid="pingfangx" creationdate="20190103T074933Z">
        <seg>int sep = fullPath.lastIndexOf(pathSeparator);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int signalTurn(Direction direction,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054133Z" creationid="pingfangx" creationdate="20190102T054133Z">
        <seg>int signalTurn(Direction direction,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int signalTurn(Direction direction, boolean signalOn) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054206Z" creationid="pingfangx" creationdate="20190102T054206Z">
        <seg>int signalTurn(Direction direction, boolean signalOn) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int size();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065306Z" creationid="pingfangx" creationdate="20190102T065306Z">
        <seg>int size();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int speed = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062535Z" creationid="pingfangx" creationdate="20180518T062535Z">
        <seg>int speed = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int startCadence,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081939Z" creationid="pingfangx" creationdate="20190102T081939Z">
        <seg>int startCadence,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int startGear) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065615Z" creationid="pingfangx" creationdate="20180705T065615Z">
        <seg>int startGear) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int startGear,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093809Z" creationid="pingfangx" creationdate="20190102T093809Z">
        <seg>int startGear,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int startSpeed,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065615Z" creationid="pingfangx" creationdate="20180705T065615Z">
        <seg>int startSpeed,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int startSpeed, int startGear) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025712Z" creationid="pingfangx" creationdate="20180525T025712Z">
        <seg>int startSpeed, int startGear) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int sum = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084410Z" creationid="pingfangx" creationdate="20190103T084410Z">
        <seg>int sum = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int testscore = 76;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081144Z" creationid="pingfangx" creationdate="20180521T081144Z">
        <seg>int testscore = 76;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int turn(Direction direction,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054130Z" creationid="pingfangx" creationdate="20190102T054130Z">
        <seg>int turn(Direction direction,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int val = 0x2222;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070952Z" creationid="pingfangx" creationdate="20180521T070952Z">
        <seg>int val = 0x2222;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int value1 = 1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070027Z" creationid="pingfangx" creationdate="20180521T070027Z">
        <seg>int value1 = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int value2 = 2;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070028Z" creationid="pingfangx" creationdate="20180521T070028Z">
        <seg>int value2 = 2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int x = 3;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033912Z" creationid="pingfangx" creationdate="20180601T033912Z">
        <seg>int x = 3;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int x, y;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022301Z" creationid="pingfangx" creationdate="20190103T022301Z">
        <seg>int x, y;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int year = 2000;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082503Z" creationid="pingfangx" creationdate="20180521T082503Z">
        <seg>int year = 2000;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int[] anArray = {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T041910Z" creationid="pingfangx" creationdate="20180521T041910Z">
        <seg>int[] anArray = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int[] anArray;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T021649Z" creationid="pingfangx" creationdate="20180521T021649Z">
        <seg>int[] anArray;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int[] arrayOfInts =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085843Z" creationid="pingfangx" creationdate="20180521T085843Z">
        <seg>int[] arrayOfInts =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int[] numbers =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085624Z" creationid="pingfangx" creationdate="20180521T085624Z">
        <seg>int[] numbers =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int[] numbers = {1,2,3,4,5,6,7,8,9,10};</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085615Z" creationid="pingfangx" creationdate="20180521T085615Z">
        <seg>int[] numbers = {1,2,3,4,5,6,7,8,9,10};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int[][] arrayOfInts = {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090128Z" creationid="pingfangx" creationdate="20180521T090128Z">
        <seg>int[][] arrayOfInts = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075755Z" creationid="pingfangx" creationdate="20180518T075755Z">
        <seg>interface</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interface Bicycle {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063854Z" creationid="pingfangx" creationdate="20180518T063854Z">
        <seg>interface Bicycle {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interface CheckPerson {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090145Z" creationid="pingfangx" creationdate="20180706T090145Z">
        <seg>interface CheckPerson {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interface DataStructureIterator extends java.util.Iterator&lt;Integer&gt; { }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100915Z" creationid="pingfangx" creationdate="20180705T100915Z">
        <seg>interface DataStructureIterator extends java.util.Iterator&lt;Integer&gt; { }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interface HelloThere {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T143118Z" creationid="pingfangx" creationdate="20180705T143032Z">
        <seg>interface HelloThere {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interface HelloWorld {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061125Z" creationid="pingfangx" creationdate="20180706T061125Z">
        <seg>interface HelloWorld {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interface IntegerMath {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075615Z" creationid="pingfangx" creationdate="20181228T075615Z">
        <seg>interface IntegerMath {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interface Predicate&lt;&lt;c0&gt;Person&lt;/c0&gt;&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093405Z" creationid="pingfangx" creationdate="20180706T093405Z">
        <seg>interface Predicate&lt;&lt;c0&gt;Person&lt;/c0&gt;&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interface Predicate&lt;T&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T092917Z" creationid="pingfangx" creationdate="20180706T092917Z">
        <seg>interface Predicate&lt;T&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042733Z" creationid="pingfangx" creationdate="20180518T042733Z">
        <seg>interface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interfaceAsType.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042659Z" creationid="pingfangx" creationdate="20190102T042659Z">
        <seg>interfaceAsType.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interfaceDef.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042657Z" creationid="pingfangx" creationdate="20190102T042657Z">
        <seg>interfaceDef.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interfaces-answers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074640Z" creationid="pingfangx" creationdate="20190102T074640Z">
        <seg>interfaces-answers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intro/cando.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040716Z" creationid="pingfangx" creationdate="20180518T040716Z">
        <seg>intro/cando.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intro/changemylife.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040717Z" creationid="pingfangx" creationdate="20180518T040717Z">
        <seg>intro/changemylife.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intro/definition.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040715Z" creationid="pingfangx" creationdate="20180518T040715Z">
        <seg>intro/definition.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intro/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032141Z" creationid="pingfangx" creationdate="20180518T032141Z">
        <seg>intro/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>inverts the value of a boolean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071602Z" creationid="pingfangx" creationdate="20180521T071602Z">
        <seg>反转布尔值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>j++) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090133Z" creationid="pingfangx" creationdate="20180521T090133Z">
        <seg>j++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java -cp .</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034935Z" creationid="pingfangx" creationdate="20180518T034935Z">
        <seg>java -cp .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java -ea YourProgram.class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082639Z" creationid="pingfangx" creationdate="20180705T082639Z">
        <seg>java -ea YourProgram.class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java &lt;e0&gt;MyApp&lt;/e0&gt; &lt;e1&gt;arg1&lt;/e1&gt; &lt;e2&gt;arg2&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035731Z" creationid="pingfangx" creationdate="20180518T035731Z">
        <seg>java &lt;e0&gt;MyApp&lt;/e0&gt; &lt;e1&gt;arg1&lt;/e1&gt; &lt;e2&gt;arg2&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java Adder 1 3 2 10</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041539Z" creationid="pingfangx" creationdate="20190103T041539Z">
        <seg>java Adder 1 3 2 10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java FPAdder 1 1e2 3.0 4.754</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041644Z" creationid="pingfangx" creationdate="20190103T041644Z">
        <seg>java FPAdder 1 1e2 3.0 4.754</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java programming, learn java, java sample code, getting started with java, development environment setup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032041Z" creationid="pingfangx" creationdate="20180518T032041Z">
        <seg>java programming, learn java, java sample code, getting started with java, development environment setup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java programming, learn java, java sample code, java objects, java classes, java inheritance, interfaces, variables, arrays, data types, operators, control flow, number, string</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042022Z" creationid="pingfangx" creationdate="20180518T042022Z">
        <seg>java programming, learn java, java sample code, java objects, java classes, java inheritance, interfaces, variables, arrays, data types, operators, control flow, number, string</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java.util.ArrayList&lt;String&gt; futureMonths =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082352Z" creationid="pingfangx" creationdate="20180521T082352Z">
        <seg>java.util.ArrayList&lt;String&gt; futureMonths =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java/generics/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031536Z" creationid="pingfangx" creationdate="20180518T031536Z">
        <seg>java/generics/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031131Z" creationid="pingfangx" creationdate="20180518T031131Z">
        <seg>java/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/QandE/creating-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092201Z" creationid="pingfangx" creationdate="20180521T092201Z">
        <seg>javaOO/QandE/creating-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/QandE/enum-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092309Z" creationid="pingfangx" creationdate="20180521T092309Z">
        <seg>javaOO/QandE/enum-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/QandE/nested-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092302Z" creationid="pingfangx" creationdate="20180521T092302Z">
        <seg>javaOO/QandE/nested-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/QandE/objects-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092205Z" creationid="pingfangx" creationdate="20180521T092205Z">
        <seg>javaOO/QandE/objects-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/accesscontrol.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092122Z" creationid="pingfangx" creationdate="20180521T092122Z">
        <seg>javaOO/accesscontrol.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/anonymousclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092228Z" creationid="pingfangx" creationdate="20180521T092228Z">
        <seg>javaOO/anonymousclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/arguments.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092045Z" creationid="pingfangx" creationdate="20180521T092045Z">
        <seg>javaOO/arguments.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/classdecl.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091956Z" creationid="pingfangx" creationdate="20180521T091956Z">
        <seg>javaOO/classdecl.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/classes.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091953Z" creationid="pingfangx" creationdate="20180521T091953Z">
        <seg>javaOO/classes.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/classvars.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092127Z" creationid="pingfangx" creationdate="20180521T092127Z">
        <seg>javaOO/classvars.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/constructors.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092006Z" creationid="pingfangx" creationdate="20180521T092006Z">
        <seg>javaOO/constructors.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/enum.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092305Z" creationid="pingfangx" creationdate="20180521T092305Z">
        <seg>javaOO/enum.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042243Z" creationid="pingfangx" creationdate="20180518T042243Z">
        <seg>javaOO/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/initial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092136Z" creationid="pingfangx" creationdate="20180521T092136Z">
        <seg>javaOO/initial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/innerclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092212Z" creationid="pingfangx" creationdate="20180521T092212Z">
        <seg>javaOO/innerclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/lambdaexpressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092230Z" creationid="pingfangx" creationdate="20180521T092230Z">
        <seg>javaOO/lambdaexpressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/localclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092214Z" creationid="pingfangx" creationdate="20180521T092214Z">
        <seg>javaOO/localclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/methodreferences.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092237Z" creationid="pingfangx" creationdate="20180521T092237Z">
        <seg>javaOO/methodreferences.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/methods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092004Z" creationid="pingfangx" creationdate="20180521T092004Z">
        <seg>javaOO/methods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/more.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092106Z" creationid="pingfangx" creationdate="20180521T092106Z">
        <seg>javaOO/more.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/nested.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092209Z" creationid="pingfangx" creationdate="20180521T092209Z">
        <seg>javaOO/nested.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/objectcreation.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092059Z" creationid="pingfangx" creationdate="20180521T092054Z">
        <seg>javaOO/objectcreation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/objects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092052Z" creationid="pingfangx" creationdate="20180521T092052Z">
        <seg>javaOO/objects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/returnvalue.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092110Z" creationid="pingfangx" creationdate="20180521T092110Z">
        <seg>javaOO/returnvalue.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/summaryclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092138Z" creationid="pingfangx" creationdate="20180521T092138Z">
        <seg>javaOO/summaryclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/thiskey.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092115Z" creationid="pingfangx" creationdate="20180521T092115Z">
        <seg>javaOO/thiskey.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/usingobject.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092102Z" creationid="pingfangx" creationdate="20180521T092102Z">
        <seg>javaOO/usingobject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/variables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092000Z" creationid="pingfangx" creationdate="20180521T092000Z">
        <seg>javaOO/variables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaOO/whentouse.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T092244Z" creationid="pingfangx" creationdate="20180521T092244Z">
        <seg>javaOO/whentouse.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javabeans/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031633Z" creationid="pingfangx" creationdate="20180518T031633Z">
        <seg>javabeans/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javac HelloWorldApp.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034900Z" creationid="pingfangx" creationdate="20180518T034900Z">
        <seg>javac HelloWorldApp.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javascript:toggleLeft()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032644Z" creationid="pingfangx" creationdate="20180518T032644Z">
        <seg>javascript:toggleLeft()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javax.swing package) to help you answer the following questions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020824Z" creationid="pingfangx" creationdate="20190102T020824Z">
        <seg>javax.swing 包）帮助您回答以下问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jaxb/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031719Z" creationid="pingfangx" creationdate="20180518T031719Z">
        <seg>jaxb/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jaxp/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031710Z" creationid="pingfangx" creationdate="20180518T031710Z">
        <seg>jaxp/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jdbc/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031637Z" creationid="pingfangx" creationdate="20180518T031637Z">
        <seg>jdbc/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jmx/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031645Z" creationid="pingfangx" creationdate="20180518T031645Z">
        <seg>jmx/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jndi/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031657Z" creationid="pingfangx" creationdate="20180518T031657Z">
        <seg>jndi/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>label.setText(null);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070014Z" creationid="pingfangx" creationdate="20180706T070014Z">
        <seg>label.setText(null);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lambdaexpressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022854Z" creationid="pingfangx" creationdate="20180525T022854Z">
        <seg>lambdaexpressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lastModified = "4/12/2004",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025148Z" creationid="pingfangx" creationdate="20190102T025148Z">
        <seg>lastModified = "4/12/2004",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lastModifiedBy = "Jane Doe",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025148Z" creationid="pingfangx" creationdate="20190102T025148Z">
        <seg>lastModifiedBy = "Jane Doe",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>launch(args);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065638Z" creationid="pingfangx" creationdate="20180706T065638Z">
        <seg>launch(args);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ld.add(3.1416);    // Π is autoboxed through method invocation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084610Z" creationid="pingfangx" creationdate="20190103T084610Z">
        <seg>ld.add(3.1416);    // Π is autoboxed through method invocation.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lengthOfSide1 = Math.sqrt(squareOfSide1);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033053Z" creationid="pingfangx" creationdate="20180601T033053Z">
        <seg>lengthOfSide1 = Math.sqrt(squareOfSide1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>li.add(Integer.valueOf(i));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084217Z" creationid="pingfangx" creationdate="20190103T084217Z">
        <seg>li.add(Integer.valueOf(i));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>li.add(i);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083934Z" creationid="pingfangx" creationdate="20190103T083934Z">
        <seg>li.add(i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>localclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022852Z" creationid="pingfangx" creationdate="20180525T022852Z">
        <seg>localclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>localclasses.html#accessing-members-of-an-enclosing-class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T064807Z" creationid="pingfangx" creationdate="20180706T064807Z">
        <seg>localclasses.html#accessing-members-of-an-enclosing-class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logical AND</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063147Z" creationid="pingfangx" creationdate="20180521T063147Z">
        <seg>逻辑与</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logical OR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063149Z" creationid="pingfangx" creationdate="20180521T063149Z">
        <seg>逻辑或</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>long</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075758Z" creationid="pingfangx" creationdate="20180518T075758Z">
        <seg>long</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>long abs(long lng)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035606Z" creationid="pingfangx" creationdate="20190103T035606Z">
        <seg>long abs(long lng)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>long creditCardNumber = 1234_5678_9012_3456L;
long socialSecurityNumber = 999_99_9999L;
float pi =  3.14_15F;
long hexBytes = 0xFF_EC_DE_5E;
long hexWords = 0xCAFE_BABE;
long maxLong = 0x7fff_ffff_ffff_ffffL;
byte nybbles = 0b0010_0101;
long bytes = 0b11010010_01101001_10010100_10010010;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084524Z" creationid="pingfangx" creationdate="20180518T084524Z">
        <seg>long creditCardNumber = 1234_5678_9012_3456L;
long socialSecurityNumber = 999_99_9999L;
float pi =  3.14_15F;
long hexBytes = 0xFF_EC_DE_5E;
long hexWords = 0xCAFE_BABE;
long maxLong = 0x7fff_ffff_ffff_ffffL;
byte nybbles = 0b0010_0101;
long bytes = 0b11010010_01101001_10010100_10010010;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>long longValue()&lt;br3/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030641Z" creationid="pingfangx" creationdate="20190103T030641Z">
        <seg>long longValue()&lt;br3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>long max(long arg1, long arg2)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035737Z" creationid="pingfangx" creationdate="20190103T035737Z">
        <seg>long max(long arg1, long arg2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>long min(long arg1, long arg2)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035731Z" creationid="pingfangx" creationdate="20190103T035731Z">
        <seg>long min(long arg1, long arg2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>long n = 461012;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033616Z" creationid="pingfangx" creationdate="20190103T033616Z">
        <seg>long n = 461012;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>long round(double d)&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035649Z" creationid="pingfangx" creationdate="20190103T035649Z">
        <seg>long round(double d)&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lowercase letter A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034548Z" creationid="pingfangx" creationdate="20180518T034548Z">
        <seg>lowercase letter A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manipstrings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024417Z" creationid="pingfangx" creationdate="20190103T024417Z">
        <seg>manipstrings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>means that &lt;c0&gt;MyClass&lt;/c0&gt; is a subclass of &lt;c1&gt;MySuperClass&lt;/c1&gt; and that it implements the &lt;c2&gt;YourInterface&lt;/c2&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T030345Z" creationid="pingfangx" creationdate="20180525T030345Z">
        <seg>意味着 &lt;c0&gt;MyClass&lt;/c0&gt; 是 &lt;c1&gt;MySuperClass&lt;/c1&gt; 的子类，并且它实现了 &lt;c2&gt;YourInterface&lt;/c2&gt; 接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>methodreferences.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022854Z" creationid="pingfangx" creationdate="20180525T022854Z">
        <seg>methodreferences.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>methods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022838Z" creationid="pingfangx" creationdate="20180525T022838Z">
        <seg>methods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082607Z" creationid="pingfangx" creationdate="20180521T082607Z">
        <seg>monthNumber = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 10;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082604Z" creationid="pingfangx" creationdate="20180521T082604Z">
        <seg>monthNumber = 10;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 11;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082605Z" creationid="pingfangx" creationdate="20180521T082605Z">
        <seg>monthNumber = 11;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 12;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082606Z" creationid="pingfangx" creationdate="20180521T082606Z">
        <seg>monthNumber = 12;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082556Z" creationid="pingfangx" creationdate="20180521T082556Z">
        <seg>monthNumber = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 2;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082557Z" creationid="pingfangx" creationdate="20180521T082557Z">
        <seg>monthNumber = 2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 3;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082558Z" creationid="pingfangx" creationdate="20180521T082558Z">
        <seg>monthNumber = 3;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 4;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082559Z" creationid="pingfangx" creationdate="20180521T082559Z">
        <seg>monthNumber = 4;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 5;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082600Z" creationid="pingfangx" creationdate="20180521T082600Z">
        <seg>monthNumber = 5;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 6;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082601Z" creationid="pingfangx" creationdate="20180521T082601Z">
        <seg>monthNumber = 6;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 7;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082602Z" creationid="pingfangx" creationdate="20180521T082602Z">
        <seg>monthNumber = 7;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 8;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082602Z" creationid="pingfangx" creationdate="20180521T082602Z">
        <seg>monthNumber = 8;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>monthNumber = 9;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082603Z" creationid="pingfangx" creationdate="20180521T082603Z">
        <seg>monthNumber = 9;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022842Z" creationid="pingfangx" creationdate="20180525T022842Z">
        <seg>more.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>moveCircle(myCircle, 23, 56)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034350Z" creationid="pingfangx" creationdate="20180601T034350Z">
        <seg>moveCircle(myCircle, 23, 56)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multipleinheritance.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042703Z" creationid="pingfangx" creationdate="20190102T042703Z">
        <seg>multipleinheritance.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multiplicative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063006Z" creationid="pingfangx" creationdate="20180521T063006Z">
        <seg>乘</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myAnimal.testInstanceMethod();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090651Z" creationid="pingfangx" creationdate="20190102T090651Z">
        <seg>myAnimal.testInstanceMethod();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myApp.operateBinary(20, 10, subtraction));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075625Z" creationid="pingfangx" creationdate="20181228T075625Z">
        <seg>myApp.operateBinary(20, 10, subtraction));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myApp.operateBinary(40, 2, addition));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075624Z" creationid="pingfangx" creationdate="20181228T075624Z">
        <seg>myApp.operateBinary(40, 2, addition));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myApp.sayHello();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061140Z" creationid="pingfangx" creationdate="20180706T061140Z">
        <seg>myApp.sayHello();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myBike.numberOfBicycles</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043127Z" creationid="pingfangx" creationdate="20180607T043127Z">
        <seg>myBike.numberOfBicycles</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myConsumer.accept(x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080003Z" creationid="pingfangx" creationdate="20181228T080003Z">
        <seg>myConsumer.accept(x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myDeck.sort(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071936Z" creationid="pingfangx" creationdate="20190102T071936Z">
        <seg>myDeck.sort(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myDeck.sort(Comparator.comparing((card) -&gt; card.getRank()));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071716Z" creationid="pingfangx" creationdate="20190102T071716Z">
        <seg>myDeck.sort(Comparator.comparing((card) -&gt; card.getRank()));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myDeck.sort(Comparator.comparing(Card::getRank));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071723Z" creationid="pingfangx" creationdate="20190102T071723Z">
        <seg>myDeck.sort(Comparator.comparing(Card::getRank));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myEnglishGoodbye.sayGoodbye();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T145241Z" creationid="pingfangx" creationdate="20180705T145241Z">
        <seg>myEnglishGoodbye.sayGoodbye();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myGreeting.greet();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144043Z" creationid="pingfangx" creationdate="20180705T144043Z">
        <seg>myGreeting.greet();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myInitials.append(myName.charAt(i));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085905Z" creationid="pingfangx" creationdate="20190103T085905Z">
        <seg>myInitials.append(myName.charAt(i));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myRect.height = 50;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083217Z" creationid="pingfangx" creationdate="20180705T083217Z">
        <seg>myRect.height = 50;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myRect.width = 40;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083217Z" creationid="pingfangx" creationdate="20180705T083217Z">
        <seg>myRect.width = 40;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myString = (@NonNull String) str;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024202Z" creationid="pingfangx" creationdate="20190102T024202Z">
        <seg>myString = (@NonNull String) str;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myTimeClient.getZonedDateTime("Blah blah").toString());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063346Z" creationid="pingfangx" creationdate="20190102T063346Z">
        <seg>myTimeClient.getZonedDateTime("Blah blah").toString());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>n</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033246Z" creationid="pingfangx" creationdate="20190103T033246Z">
        <seg>n</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>name = "Benjamin Franklin",</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023933Z" creationid="pingfangx" creationdate="20190102T023933Z">
        <seg>name = "Benjamin Franklin",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>name = someone;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061129Z" creationid="pingfangx" creationdate="20180706T061129Z">
        <seg>name = someone;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>native</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075801Z" creationid="pingfangx" creationdate="20180518T075801Z">
        <seg>native</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nested-answers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T014208Z" creationid="pingfangx" creationdate="20190102T014208Z">
        <seg>nested-answers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nested.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022850Z" creationid="pingfangx" creationdate="20180525T022850Z">
        <seg>nested.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nested.html#serialization</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082341Z" creationid="pingfangx" creationdate="20181228T082341Z">
        <seg>nested.html#serialization</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>netbeans.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T033956Z" creationid="pingfangx" creationdate="20180518T033956Z">
        <seg>netbeans.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>networking/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031500Z" creationid="pingfangx" creationdate="20180518T031500Z">
        <seg>networking/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>new</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075733Z" creationid="pingfangx" creationdate="20180518T075733Z">
        <seg>new</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>new @Interned MyObject();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024200Z" creationid="pingfangx" creationdate="20190102T024200Z">
        <seg>new @Interned MyObject();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>new Box.Filler(minDimension, prefDimension, maxDimension)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020930Z" creationid="pingfangx" creationdate="20190102T020930Z">
        <seg>new Box.Filler(minDimension, prefDimension, maxDimension)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>new CheckPerson() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091508Z" creationid="pingfangx" creationdate="20180706T091508Z">
        <seg>new CheckPerson() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>new HelloWorldAnonymousClasses();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061139Z" creationid="pingfangx" creationdate="20180706T061139Z">
        <seg>new HelloWorldAnonymousClasses();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>new OuterClass.StaticNestedClass();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091106Z" creationid="pingfangx" creationdate="20180705T091106Z">
        <seg>new OuterClass.StaticNestedClass();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>new Rectangle(100, 50).getArea()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T085049Z" creationid="pingfangx" creationdate="20180601T085049Z">
        <seg>new Rectangle(100, 50).getArea()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>new String(charArray);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064022Z" creationid="pingfangx" creationdate="20190103T064022Z">
        <seg>new String(charArray);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>new java.util.ArrayList&lt;String&gt;();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082353Z" creationid="pingfangx" creationdate="20180521T082353Z">
        <seg>new java.util.ArrayList&lt;String&gt;();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nextIndex += 2;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101111Z" creationid="pingfangx" creationdate="20180705T101111Z">
        <seg>nextIndex += 2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>no modifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T040250Z" creationid="pingfangx" creationdate="20180607T040237Z">
        <seg>no modifier</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nogrow.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042659Z" creationid="pingfangx" creationdate="20190102T042659Z">
        <seg>nogrow.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>not used</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075822Z" creationid="pingfangx" creationdate="20180518T075822Z">
        <seg>未使用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>null</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T082216Z" creationid="pingfangx" creationdate="20180518T082216Z">
        <seg>null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>numDays = 28;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082522Z" creationid="pingfangx" creationdate="20180521T082522Z">
        <seg>numDays = 28;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>numDays = 29;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082518Z" creationid="pingfangx" creationdate="20180521T082518Z">
        <seg>numDays = 29;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>numDays = 30;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082521Z" creationid="pingfangx" creationdate="20180521T082521Z">
        <seg>numDays = 30;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>numDays = 31;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082511Z" creationid="pingfangx" creationdate="20180521T082511Z">
        <seg>numDays = 31;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>numPs++;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090528Z" creationid="pingfangx" creationdate="20180521T090528Z">
        <seg>numPs++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>numberclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024412Z" creationid="pingfangx" creationdate="20190103T024412Z">
        <seg>numberclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>numberformat.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024413Z" creationid="pingfangx" creationdate="20190103T024413Z">
        <seg>numberformat.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>numbers-answers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T041654Z" creationid="pingfangx" creationdate="20190103T041654Z">
        <seg>numbers-answers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>numbers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024412Z" creationid="pingfangx" creationdate="20190103T024412Z">
        <seg>numbers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>numbersummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024414Z" creationid="pingfangx" creationdate="20190103T024414Z">
        <seg>numbersummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/QandE/questions_expressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091942Z" creationid="pingfangx" creationdate="20180521T091942Z">
        <seg>nutsandbolts/QandE/questions_expressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/QandE/questions_flow.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091948Z" creationid="pingfangx" creationdate="20180521T091948Z">
        <seg>nutsandbolts/QandE/questions_flow.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/QandE/questions_operators.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091941Z" creationid="pingfangx" creationdate="20180521T091941Z">
        <seg>nutsandbolts/QandE/questions_operators.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/QandE/questions_variables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091934Z" creationid="pingfangx" creationdate="20180521T091934Z">
        <seg>nutsandbolts/QandE/questions_variables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/arrays.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091933Z" creationid="pingfangx" creationdate="20180521T091933Z">
        <seg>nutsandbolts/arrays.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/branch.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091946Z" creationid="pingfangx" creationdate="20180521T091946Z">
        <seg>nutsandbolts/branch.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/datatypes.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091932Z" creationid="pingfangx" creationdate="20180521T091932Z">
        <seg>nutsandbolts/datatypes.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/expressions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091942Z" creationid="pingfangx" creationdate="20180521T091942Z">
        <seg>nutsandbolts/expressions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/flow.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091943Z" creationid="pingfangx" creationdate="20180521T091943Z">
        <seg>nutsandbolts/flow.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/flowsummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091946Z" creationid="pingfangx" creationdate="20180521T091946Z">
        <seg>nutsandbolts/flowsummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/for.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091945Z" creationid="pingfangx" creationdate="20180521T091945Z">
        <seg>nutsandbolts/for.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/if.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091943Z" creationid="pingfangx" creationdate="20180521T091943Z">
        <seg>nutsandbolts/if.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042215Z" creationid="pingfangx" creationdate="20180518T042215Z">
        <seg>nutsandbolts/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/op1.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091936Z" creationid="pingfangx" creationdate="20180521T091936Z">
        <seg>nutsandbolts/op1.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/op2.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091937Z" creationid="pingfangx" creationdate="20180521T091937Z">
        <seg>nutsandbolts/op2.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/op3.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091937Z" creationid="pingfangx" creationdate="20180521T091937Z">
        <seg>nutsandbolts/op3.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/operators.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091935Z" creationid="pingfangx" creationdate="20180521T091935Z">
        <seg>nutsandbolts/operators.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/opsummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091941Z" creationid="pingfangx" creationdate="20180521T091941Z">
        <seg>nutsandbolts/opsummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/switch.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091944Z" creationid="pingfangx" creationdate="20180521T091944Z">
        <seg>nutsandbolts/switch.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/variables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091931Z" creationid="pingfangx" creationdate="20180521T091931Z">
        <seg>nutsandbolts/variables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/variablesummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091934Z" creationid="pingfangx" creationdate="20180521T091934Z">
        <seg>nutsandbolts/variablesummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nutsandbolts/while.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091945Z" creationid="pingfangx" creationdate="20180521T091945Z">
        <seg>nutsandbolts/while.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>obj.getClass().getSimpleName());
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103553Z" creationid="pingfangx" creationdate="20190102T103553Z">
        <seg>obj.getClass().getSimpleName());
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>obj1 instanceof Parent: true
obj1 instanceof Child: false
obj1 instanceof MyInterface: false
obj2 instanceof Parent: true
obj2 instanceof Child: true
obj2 instanceof MyInterface: true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070513Z" creationid="pingfangx" creationdate="20180521T070513Z">
        <seg>obj1 instanceof Parent: true
obj1 instanceof Child: false
obj1 instanceof MyInterface: false
obj2 instanceof Parent: true
obj2 instanceof Child: true
obj2 instanceof MyInterface: true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>object that implements an interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021014Z" creationid="pingfangx" creationdate="20190102T021014Z">
        <seg>object that implements an interface.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>object.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042723Z" creationid="pingfangx" creationdate="20180518T042723Z">
        <seg>object.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objectOne.deprecatedMethod();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033606Z" creationid="pingfangx" creationdate="20190102T033606Z">
        <seg>objectOne.deprecatedMethod();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objectReference.fieldName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T073605Z" creationid="pingfangx" creationdate="20180601T073605Z">
        <seg>objectReference.fieldName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objectReference.methodName()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082328Z" creationid="pingfangx" creationdate="20180705T082328Z">
        <seg>objectReference.methodName()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objectReference.methodName();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T084840Z" creationid="pingfangx" creationdate="20180601T084840Z">
        <seg>objectReference.methodName();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objectReference.methodName(argumentList)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082326Z" creationid="pingfangx" creationdate="20180705T082326Z">
        <seg>objectReference.methodName(argumentList)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objectReference.methodName(argumentList);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T084832Z" creationid="pingfangx" creationdate="20180601T084832Z">
        <seg>objectReference.methodName(argumentList);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objectReference.variableName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082321Z" creationid="pingfangx" creationdate="20180705T082321Z">
        <seg>objectReference.variableName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objectclass.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042706Z" creationid="pingfangx" creationdate="20190102T042706Z">
        <seg>objectclass.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objectcreation.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022841Z" creationid="pingfangx" creationdate="20180525T022841Z">
        <seg>objectcreation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objects-answers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083305Z" creationid="pingfangx" creationdate="20180705T083305Z">
        <seg>objects-answers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022840Z" creationid="pingfangx" creationdate="20180525T022840Z">
        <seg>objects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>of Class2 and invokes displayStrings on that instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021207Z" creationid="pingfangx" creationdate="20190102T021207Z">
        <seg>of Class2 and invokes displayStrings on that instance.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>of both Class1 and its inner class, InnerClass1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021200Z" creationid="pingfangx" creationdate="20190102T021200Z">
        <seg>of both Class1 and its inner class, InnerClass1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>only by its enclosing class and perhaps their subclasses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021017Z" creationid="pingfangx" creationdate="20190102T021017Z">
        <seg>only by its enclosing class and perhaps their subclasses.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>op1.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072158Z" creationid="pingfangx" creationdate="20180518T072158Z">
        <seg>op1.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>op2.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072210Z" creationid="pingfangx" creationdate="20180518T072210Z">
        <seg>op2.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>op3.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072246Z" creationid="pingfangx" creationdate="20180518T072246Z">
        <seg>op3.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>operators.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072137Z" creationid="pingfangx" creationdate="20180518T072137Z">
        <seg>operators.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>opsummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072335Z" creationid="pingfangx" creationdate="20180518T072335Z">
        <seg>opsummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023942Z" creationid="pingfangx" creationdate="20190102T023942Z">
        <seg>或者</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or like this</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033229Z" creationid="pingfangx" creationdate="20180601T033229Z">
        <seg>或者像这样</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or with yet a different number of arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033247Z" creationid="pingfangx" creationdate="20180601T033247Z">
        <seg>或者具有不同数量的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T084839Z" creationid="pingfangx" creationdate="20180601T084839Z">
        <seg>或：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>origin = new Point(0, 0);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062614Z" creationid="pingfangx" creationdate="20180601T062614Z">
        <seg>origin = new Point(0, 0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>origin = p;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062616Z" creationid="pingfangx" creationdate="20180601T062616Z">
        <seg>origin = p;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>origin.x = x;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062622Z" creationid="pingfangx" creationdate="20180601T062622Z">
        <seg>origin.x = x;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>origin.y = y;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062626Z" creationid="pingfangx" creationdate="20180601T062626Z">
        <seg>origin.y = y;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>originOne is null.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T042827Z" creationid="pingfangx" creationdate="20180601T042827Z">
        <seg>originOne 为 null。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>originOne now points to a Point object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062550Z" creationid="pingfangx" creationdate="20180601T062550Z">
        <seg>originOne 现在指向一个 Point 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>original_result = result;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064529Z" creationid="pingfangx" creationdate="20180521T064529Z">
        <seg>original_result = result;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>override.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042703Z" creationid="pingfangx" creationdate="20190102T042703Z">
        <seg>override.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>p -&gt; p.getEmailAddress(),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100104Z" creationid="pingfangx" creationdate="20180706T100104Z">
        <seg>p -&gt; p.getEmailAddress(),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>p -&gt; p.getGender() == Person.Sex.MALE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093731Z" creationid="pingfangx" creationdate="20180706T093731Z">
        <seg>p -&gt; p.getGender() == Person.Sex.MALE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>p -&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075518Z" creationid="pingfangx" creationdate="20181228T075518Z">
        <seg>p -&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>p = 10;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034028Z" creationid="pingfangx" creationdate="20180601T034028Z">
        <seg>p = 10;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>p, p.surfaceWeight(mass));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020037Z" creationid="pingfangx" creationdate="20190102T020037Z">
        <seg>p, p.surfaceWeight(mass));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>p, p.surfaceWeight(mass));
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015531Z" creationid="pingfangx" creationdate="20190102T015531Z">
        <seg>p, p.surfaceWeight(mass));
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>p.getAge() &lt;= 25;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090345Z" creationid="pingfangx" creationdate="20180706T090345Z">
        <seg>p.getAge() &lt;= 25;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>p.getAge() &gt;= 18 &amp;&amp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090344Z" creationid="pingfangx" creationdate="20180706T090344Z">
        <seg>p.getAge() &gt;= 18 &amp;&amp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>p.getGender() == Person.Sex.MALE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075503Z" creationid="pingfangx" creationdate="20181228T075503Z">
        <seg>p.getGender() == Person.Sex.MALE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>p.printPerson();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085630Z" creationid="pingfangx" creationdate="20180706T085630Z">
        <seg>p.printPerson();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075735Z" creationid="pingfangx" creationdate="20180518T075735Z">
        <seg>package</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package defaultmethods;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061340Z" creationid="pingfangx" creationdate="20190102T061340Z">
        <seg>package defaultmethods;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package defaultmethods;

import java.time.*;
import java.lang.*;
import java.util.*;

public class SimpleTimeClient implements TimeClient {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061151Z" creationid="pingfangx" creationdate="20190102T061151Z">
        <seg>package defaultmethods;

import java.time.*;
import java.lang.*;
import java.util.*;

public class SimpleTimeClient implements TimeClient {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package defaultmethods;

import java.util.*;
import java.util.stream.*;
import java.lang.*;

public class SortByRankThenSuit implements Comparator&lt;Card&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071026Z" creationid="pingfangx" creationdate="20190102T071026Z">
        <seg>package defaultmethods;

import java.util.*;
import java.util.stream.*;
import java.lang.*;

public class SortByRankThenSuit implements Comparator&lt;Card&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package defaultmethods;

public interface Card extends Comparable&lt;Card&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065232Z" creationid="pingfangx" creationdate="20190102T065232Z">
        <seg>package defaultmethods;

public interface Card extends Comparable&lt;Card&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042737Z" creationid="pingfangx" creationdate="20180518T042737Z">
        <seg>package.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package/QandE/packages-questions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093030Z" creationid="pingfangx" creationdate="20180521T093030Z">
        <seg>package/QandE/packages-questions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package/createpkgs.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093010Z" creationid="pingfangx" creationdate="20180521T093010Z">
        <seg>package/createpkgs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042611Z" creationid="pingfangx" creationdate="20180518T042611Z">
        <seg>package/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package/managingfiles.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093019Z" creationid="pingfangx" creationdate="20180521T093019Z">
        <seg>package/managingfiles.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package/namingpkgs.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093013Z" creationid="pingfangx" creationdate="20180521T093013Z">
        <seg>package/namingpkgs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package/packages.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093006Z" creationid="pingfangx" creationdate="20180521T093006Z">
        <seg>package/packages.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package/summary-package.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093022Z" creationid="pingfangx" creationdate="20180521T093022Z">
        <seg>package/summary-package.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package/usepkgs.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T093016Z" creationid="pingfangx" creationdate="20180521T093016Z">
        <seg>package/usepkgs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>palindrome.charAt(i);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064017Z" creationid="pingfangx" creationdate="20190103T064017Z">
        <seg>palindrome.charAt(i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>palindrome.getChars(0, len, tempCharArray, 0);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064225Z" creationid="pingfangx" creationdate="20190103T064225Z">
        <seg>palindrome.getChars(0, len, tempCharArray, 0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>passMethod(x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033938Z" creationid="pingfangx" creationdate="20180601T033938Z">
        <seg>passMethod(x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pathSeparator = sep;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074930Z" creationid="pingfangx" creationdate="20190103T074930Z">
        <seg>pathSeparator = sep;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>polymorphism.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042704Z" creationid="pingfangx" creationdate="20190102T042704Z">
        <seg>polymorphism.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>positive value (numbers are</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071332Z" creationid="pingfangx" creationdate="20180521T071332Z">
        <seg>表示正值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>positive without this, however)
-       Unary minus operator; negates</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071423Z" creationid="pingfangx" creationdate="20180521T071346Z">
        <seg>（没有它也是正值）
-       一元减运算符；</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>postfix</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062953Z" creationid="pingfangx" creationdate="20180521T062953Z">
        <seg>后缀</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>predefined.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023234Z" creationid="pingfangx" creationdate="20190102T023234Z">
        <seg>predefined.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>primaryStage.setScene(new Scene(root, 300, 250));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065648Z" creationid="pingfangx" creationdate="20180706T065648Z">
        <seg>primaryStage.setScene(new Scene(root, 300, 250));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>primaryStage.setTitle("Hello World!");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065639Z" creationid="pingfangx" creationdate="20180706T065639Z">
        <seg>primaryStage.setTitle("Hello World!");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>primaryStage.show();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065648Z" creationid="pingfangx" creationdate="20180706T065648Z">
        <seg>primaryStage.show();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>printPersons(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090352Z" creationid="pingfangx" creationdate="20180706T090352Z">
        <seg>printPersons(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>printPersonsWithPredicate(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093731Z" creationid="pingfangx" creationdate="20180706T093731Z">
        <seg>printPersonsWithPredicate(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075738Z" creationid="pingfangx" creationdate="20180518T075738Z">
        <seg>private</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private &lt;b0&gt;static&lt;/b0&gt; int numberOfBicycles = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065614Z" creationid="pingfangx" creationdate="20180705T065614Z">
        <seg>private &lt;b0&gt;static&lt;/b0&gt; int numberOfBicycles = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private &lt;b3&gt;static&lt;/b3&gt; int numberOfBicycles = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043048Z" creationid="pingfangx" creationdate="20180607T043048Z">
        <seg>private &lt;b3&gt;static&lt;/b3&gt; int numberOfBicycles = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private List&lt;Card&gt; entireDeck;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065424Z" creationid="pingfangx" creationdate="20190102T065424Z">
        <seg>private List&lt;Card&gt; entireDeck;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private LocalDateTime dateAndTime;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061152Z" creationid="pingfangx" creationdate="20190102T061152Z">
        <seg>private LocalDateTime dateAndTime;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private String fullPath;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074928Z" creationid="pingfangx" creationdate="20190103T074928Z">
        <seg>private String fullPath;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private String suspension;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093808Z" creationid="pingfangx" creationdate="20190102T093808Z">
        <seg>private String suspension;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private boolean full = false;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065710Z" creationid="pingfangx" creationdate="20180705T065710Z">
        <seg>private boolean full = false;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private char pathSeparator,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074928Z" creationid="pingfangx" creationdate="20190103T074928Z">
        <seg>private char pathSeparator,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private class EvenIterator implements DataStructureIterator {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101028Z" creationid="pingfangx" creationdate="20180705T101028Z">
        <seg>private class EvenIterator implements DataStructureIterator {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private double mass() { return mass; }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020028Z" creationid="pingfangx" creationdate="20190102T020028Z">
        <seg>private double mass() { return mass; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private double radius() { return radius; }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020029Z" creationid="pingfangx" creationdate="20190102T020029Z">
        <seg>private double radius() { return radius; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private final String text;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065237Z" creationid="pingfangx" creationdate="20190102T065237Z">
        <seg>private final String text;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private final double mass;   // in kilograms</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020021Z" creationid="pingfangx" creationdate="20190102T020021Z">
        <seg>private final double mass;   // in kilograms</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private final double radius; // in meters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020023Z" creationid="pingfangx" creationdate="20190102T020023Z">
        <seg>private final double radius; // in meters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private final int value;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065236Z" creationid="pingfangx" creationdate="20190102T065236Z">
        <seg>private final int value;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private final static int SIZE = 15;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100901Z" creationid="pingfangx" creationdate="20180705T100901Z">
        <seg>private final static int SIZE = 15;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private inner class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021043Z" creationid="pingfangx" creationdate="20190102T021043Z">
        <seg>private inner class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private int cadence;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064208Z" creationid="pingfangx" creationdate="20180525T064208Z">
        <seg>private int cadence;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private int gear;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064209Z" creationid="pingfangx" creationdate="20180525T064209Z">
        <seg>private int gear;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private int id;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043046Z" creationid="pingfangx" creationdate="20180607T043046Z">
        <seg>private int id;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private int nextIndex = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101059Z" creationid="pingfangx" creationdate="20180705T101059Z">
        <seg>private int nextIndex = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private int speed;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064209Z" creationid="pingfangx" creationdate="20180525T064209Z">
        <seg>private int speed;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private int tireWidth;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094001Z" creationid="pingfangx" creationdate="20190102T094001Z">
        <seg>private int tireWidth;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private int width, height;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020141Z" creationid="pingfangx" creationdate="20180607T020141Z">
        <seg>private int width, height;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private int x, y, radius;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033612Z" creationid="pingfangx" creationdate="20180601T033612Z">
        <seg>private int x, y, radius;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private int x, y;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020141Z" creationid="pingfangx" creationdate="20180607T020141Z">
        <seg>private int x, y;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private int[] arrayOfInts = new int[SIZE];</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100901Z" creationid="pingfangx" creationdate="20180705T100901Z">
        <seg>private int[] arrayOfInts = new int[SIZE];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private static int numberOfBicycles = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043205Z" creationid="pingfangx" creationdate="20180607T043205Z">
        <seg>private static int numberOfBicycles = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private static nested class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021042Z" creationid="pingfangx" creationdate="20190102T021042Z">
        <seg>private static nested class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private static varType initializeClassVariable() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070546Z" creationid="pingfangx" creationdate="20180705T070546Z">
        <seg>private static varType initializeClassVariable() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private varType myVar = initializeInstanceVariable();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070751Z" creationid="pingfangx" creationdate="20180705T070751Z">
        <seg>private varType myVar = initializeInstanceVariable();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>problems/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T032506Z" creationid="pingfangx" creationdate="20180518T032506Z">
        <seg>problems/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>processElements(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100717Z" creationid="pingfangx" creationdate="20180706T100717Z">
        <seg>processElements(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>processPersons(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094225Z" creationid="pingfangx" creationdate="20180706T094225Z">
        <seg>processPersons(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>processPersonsWithFunction(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100103Z" creationid="pingfangx" creationdate="20180706T100103Z">
        <seg>processPersonsWithFunction(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>protected</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075740Z" creationid="pingfangx" creationdate="20180518T075740Z">
        <seg>protected</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>protected Object clone() throws CloneNotSupportedException</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101601Z" creationid="pingfangx" creationdate="20190102T101601Z">
        <seg>protected Object clone() throws CloneNotSupportedException</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>protected final varType initializeInstanceVariable() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070751Z" creationid="pingfangx" creationdate="20180705T070751Z">
        <seg>protected final varType initializeInstanceVariable() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>protected inner class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021039Z" creationid="pingfangx" creationdate="20190102T021039Z">
        <seg>protected inner class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>protected static String removeJunk(String string) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085924Z" creationid="pingfangx" creationdate="20190103T085924Z">
        <seg>protected static String removeJunk(String string) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>protected static String sort(String string) {
	    char[] charArray = string.toCharArray();

	    java.util.Arrays.sort(charArray);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085927Z" creationid="pingfangx" creationdate="20190103T085927Z">
        <seg>protected static String sort(String string) {
	    char[] charArray = string.toCharArray();

	    java.util.Arrays.sort(charArray);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>protected static nested class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021041Z" creationid="pingfangx" creationdate="20190102T021041Z">
        <seg>protected static nested class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075743Z" creationid="pingfangx" creationdate="20180518T075743Z">
        <seg>public</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public &lt;b0&gt;static&lt;/b0&gt; int getNumberOfBicycles() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065103Z" creationid="pingfangx" creationdate="20180705T065103Z">
        <seg>public &lt;b0&gt;static&lt;/b0&gt; int getNumberOfBicycles() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public @interface Meal { ... }

@Meal("breakfast", mainDish="cereal")
@Meal("lunch", mainDish="pizza")
@Meal("dinner", mainDish="salad")
public void evaluateDiet() { ... }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041618Z" creationid="pingfangx" creationdate="20190102T041618Z">
        <seg>public @interface Meal { ... }

@Meal("breakfast", mainDish="cereal")
@Meal("lunch", mainDish="pizza")
@Meal("dinner", mainDish="salad")
public void evaluateDiet() { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public @interface Schedules {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041253Z" creationid="pingfangx" creationdate="20190102T041253Z">
        <seg>public @interface Schedules {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Bicycle seeWhosFastest(Bicycle myBike, Bicycle yourBike,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091701Z" creationid="pingfangx" creationdate="20180601T091701Z">
        <seg>public Bicycle seeWhosFastest(Bicycle myBike, Bicycle yourBike,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Bicycle() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034750Z" creationid="pingfangx" creationdate="20180528T034750Z">
        <seg>public Bicycle() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Bicycle(int startCadence,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065614Z" creationid="pingfangx" creationdate="20180705T065614Z">
        <seg>public Bicycle(int startCadence,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Bicycle(int startCadence, int startSpeed, int startGear) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025654Z" creationid="pingfangx" creationdate="20180525T025654Z">
        <seg>public Bicycle(int startCadence, int startSpeed, int startGear) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Bicycle(int startCadence, int startSpeed, int startGear){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043205Z" creationid="pingfangx" creationdate="20180607T043205Z">
        <seg>public Bicycle(int startCadence, int startSpeed, int startGear){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Calendar getBirthday() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082808Z" creationid="pingfangx" creationdate="20181228T082808Z">
        <seg>public Calendar getBirthday() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Card.Rank getRank();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065251Z" creationid="pingfangx" creationdate="20190102T065251Z">
        <seg>public Card.Rank getRank();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Card.Suit getSuit();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065251Z" creationid="pingfangx" creationdate="20190102T065251Z">
        <seg>public Card.Suit getSuit();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public DataStructure() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100902Z" creationid="pingfangx" creationdate="20180705T100902Z">
        <seg>public DataStructure() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public EnumTest(Day day) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015339Z" creationid="pingfangx" creationdate="20190102T015339Z">
        <seg>public EnumTest(Day day) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Filename(String str, char sep, char ext) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074929Z" creationid="pingfangx" creationdate="20190103T074929Z">
        <seg>public Filename(String str, char sep, char ext) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public ImaginaryNumber returnANumber() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092116Z" creationid="pingfangx" creationdate="20180601T092116Z">
        <seg>public ImaginaryNumber returnANumber() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Integer next() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101105Z" creationid="pingfangx" creationdate="20180705T101105Z">
        <seg>public Integer next() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public LocalDateTime getLocalDateTime() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061203Z" creationid="pingfangx" creationdate="20190102T061203Z">
        <seg>public LocalDateTime getLocalDateTime() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public MountainBike myBike = new MountainBike();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083101Z" creationid="pingfangx" creationdate="20190102T083101Z">
        <seg>public MountainBike myBike = new MountainBike();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public MountainBike(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093809Z" creationid="pingfangx" creationdate="20190102T093809Z">
        <seg>public MountainBike(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public MountainBike(int startHeight,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081938Z" creationid="pingfangx" creationdate="20190102T081938Z">
        <seg>public MountainBike(int startHeight,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public MountainBike(int startHeight, int startCadence,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025712Z" creationid="pingfangx" creationdate="20180525T025712Z">
        <seg>public MountainBike(int startHeight, int startCadence,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Number returnANumber() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091931Z" creationid="pingfangx" creationdate="20180601T091931Z">
        <seg>public Number returnANumber() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Object clone() throws CloneNotSupportedException</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101604Z" creationid="pingfangx" creationdate="20190102T101604Z">
        <seg>public Object clone() throws CloneNotSupportedException</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Object findLargest(Object object1, Object object2) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062627Z" creationid="pingfangx" creationdate="20190102T062627Z">
        <seg>public Object findLargest(Object object1, Object object2) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Object findSmallest(Object object1, Object object2) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062705Z" creationid="pingfangx" creationdate="20190102T062705Z">
        <seg>public Object findSmallest(Object object1, Object object2) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Point origin;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062611Z" creationid="pingfangx" creationdate="20180601T062611Z">
        <seg>public Point origin;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Point(int a, int b) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062443Z" creationid="pingfangx" creationdate="20180601T062443Z">
        <seg>public Point(int a, int b) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Point(int x, int y) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092803Z" creationid="pingfangx" creationdate="20180601T092803Z">
        <seg>public Point(int x, int y) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Polygon polygonFrom(Point... corners) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033045Z" creationid="pingfangx" creationdate="20180601T033045Z">
        <seg>public Polygon polygonFrom(Point... corners) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Polygon polygonFrom(Point[] corners) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032648Z" creationid="pingfangx" creationdate="20180601T032648Z">
        <seg>public Polygon polygonFrom(Point[] corners) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public PrintStream format(Locale l, String format, Object... args)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033116Z" creationid="pingfangx" creationdate="20190103T033116Z">
        <seg>public PrintStream format(Locale l, String format, Object... args)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public PrintStream format(String format, Object... args)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032442Z" creationid="pingfangx" creationdate="20190103T032442Z">
        <seg>public PrintStream format(String format, Object... args)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public PrintStream printf(String format, Object... args)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033219Z" creationid="pingfangx" creationdate="20180601T033219Z">
        <seg>public PrintStream printf(String format, Object... args)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Rectangle() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062613Z" creationid="pingfangx" creationdate="20180601T062613Z">
        <seg>public Rectangle() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Rectangle(Point p) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062616Z" creationid="pingfangx" creationdate="20180601T062616Z">
        <seg>public Rectangle(Point p) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Rectangle(Point p, int w, int h) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062619Z" creationid="pingfangx" creationdate="20180601T062619Z">
        <seg>public Rectangle(Point p, int w, int h) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Rectangle(int w, int h) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062617Z" creationid="pingfangx" creationdate="20180601T062617Z">
        <seg>public Rectangle(int w, int h) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Rectangle(int width, int height) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020144Z" creationid="pingfangx" creationdate="20180607T020144Z">
        <seg>public Rectangle(int width, int height) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public Rectangle(int x, int y, int width, int height) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020145Z" creationid="pingfangx" creationdate="20180607T020145Z">
        <seg>public Rectangle(int x, int y, int width, int height) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public RectanglePlus() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062156Z" creationid="pingfangx" creationdate="20190102T062156Z">
        <seg>public RectanglePlus() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public RectanglePlus(Point p) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062157Z" creationid="pingfangx" creationdate="20190102T062157Z">
        <seg>public RectanglePlus(Point p) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public RectanglePlus(Point p, int w, int h) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062158Z" creationid="pingfangx" creationdate="20190102T062158Z">
        <seg>public RectanglePlus(Point p, int w, int h) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public RectanglePlus(int w, int h) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062157Z" creationid="pingfangx" creationdate="20190102T062157Z">
        <seg>public RectanglePlus(int w, int h) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public RoadBike(int startCadence,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094001Z" creationid="pingfangx" creationdate="20190102T094001Z">
        <seg>public RoadBike(int startCadence,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public SimpleTimeClient() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061155Z" creationid="pingfangx" creationdate="20190102T061155Z">
        <seg>public SimpleTimeClient() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public String extension() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074931Z" creationid="pingfangx" creationdate="20190103T074931Z">
        <seg>public String extension() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public String filename() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074933Z" creationid="pingfangx" creationdate="20190103T074933Z">
        <seg>public String filename() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public String getNumber() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122503Z" creationid="pingfangx" creationdate="20180705T122503Z">
        <seg>public String getNumber() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public String getSuspension(){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093813Z" creationid="pingfangx" creationdate="20190102T093813Z">
        <seg>public String getSuspension(){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public String identifyMyself() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091500Z" creationid="pingfangx" creationdate="20190102T091500Z">
        <seg>public String identifyMyself() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public String path() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074934Z" creationid="pingfangx" creationdate="20190103T074934Z">
        <seg>public String path() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public String text() {return text;}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065239Z" creationid="pingfangx" creationdate="20190102T065239Z">
        <seg>public String text() {return text;}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public String toString() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061204Z" creationid="pingfangx" creationdate="20190102T061204Z">
        <seg>public String toString() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public ZonedDateTime getZonedDateTime(String zoneString);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063458Z" creationid="pingfangx" creationdate="20190102T063458Z">
        <seg>public ZonedDateTime getZonedDateTime(String zoneString);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public abstract class GraphicObject {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T015953Z" creationid="pingfangx" creationdate="20190103T015953Z">
        <seg>public abstract class GraphicObject {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public boolean equals(Object obj) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102559Z" creationid="pingfangx" creationdate="20190102T102559Z">
        <seg>public boolean equals(Object obj) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public boolean hasNext() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101059Z" creationid="pingfangx" creationdate="20180705T101059Z">
        <seg>public boolean hasNext() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public boolean test(Person p) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090343Z" creationid="pingfangx" creationdate="20180706T090343Z">
        <seg>public boolean test(Person p) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Anagram {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085921Z" creationid="pingfangx" creationdate="20190103T085921Z">
        <seg>public class Anagram {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Animal {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090635Z" creationid="pingfangx" creationdate="20190102T090635Z">
        <seg>public class Animal {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class BasicMathDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T035752Z" creationid="pingfangx" creationdate="20190103T035752Z">
        <seg>public class BasicMathDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class BedAndBreakfast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065700Z" creationid="pingfangx" creationdate="20180705T065700Z">
        <seg>public class BedAndBreakfast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Bicycle {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025641Z" creationid="pingfangx" creationdate="20180525T025641Z">
        <seg>public class Bicycle {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Book {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102553Z" creationid="pingfangx" creationdate="20190102T102553Z">
        <seg>public class Book {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Calculator {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075615Z" creationid="pingfangx" creationdate="20181228T075615Z">
        <seg>public class Calculator {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Cat extends Animal {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090647Z" creationid="pingfangx" creationdate="20190102T090647Z">
        <seg>public class Cat extends Animal {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Circle {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033611Z" creationid="pingfangx" creationdate="20180601T033611Z">
        <seg>public class Circle {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class ClassA {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023447Z" creationid="pingfangx" creationdate="20190103T023447Z">
        <seg>public class ClassA {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class ComputeInitials {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085903Z" creationid="pingfangx" creationdate="20190103T085903Z">
        <seg>public class ComputeInitials {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class ComputeResult {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085253Z" creationid="pingfangx" creationdate="20190103T085253Z">
        <seg>public class ComputeResult {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class CreateObjectDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040011Z" creationid="pingfangx" creationdate="20180601T040011Z">
        <seg>public class CreateObjectDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class DataArtist {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065417Z" creationid="pingfangx" creationdate="20180525T065417Z">
        <seg>public class DataArtist {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class DataStructure {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100858Z" creationid="pingfangx" creationdate="20180705T100858Z">
        <seg>public class DataStructure {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Dragon implements EggLayer, FireBreather {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091700Z" creationid="pingfangx" creationdate="20190102T091700Z">
        <seg>public class Dragon implements EggLayer, FireBreather {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class EnumTest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015338Z" creationid="pingfangx" creationdate="20190102T015338Z">
        <seg>public class EnumTest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class ExponentialDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040137Z" creationid="pingfangx" creationdate="20190103T040137Z">
        <seg>public class ExponentialDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Filename {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074927Z" creationid="pingfangx" creationdate="20190103T074927Z">
        <seg>public class Filename {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class FilenameDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074942Z" creationid="pingfangx" creationdate="20190103T074942Z">
        <seg>public class FilenameDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class FlyingCar implements OperateCar, FlyCar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091816Z" creationid="pingfangx" creationdate="20190102T091816Z">
        <seg>public class FlyingCar implements OperateCar, FlyCar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Generation3List extends Generation2List {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024825Z" creationid="pingfangx" creationdate="20190102T024825Z">
        <seg>public class Generation3List extends Generation2List {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class HelloWorld extends Application {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065637Z" creationid="pingfangx" creationdate="20180706T065637Z">
        <seg>public class HelloWorld extends Application {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class HelloWorldAnonymousClasses {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061124Z" creationid="pingfangx" creationdate="20180706T061124Z">
        <seg>public class HelloWorldAnonymousClasses {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Horse {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091459Z" creationid="pingfangx" creationdate="20190102T091459Z">
        <seg>public class Horse {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class IdentifyMyParts {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082501Z" creationid="pingfangx" creationdate="20180705T082501Z">
        <seg>public class IdentifyMyParts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class LocalClassExample {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122438Z" creationid="pingfangx" creationdate="20180705T122438Z">
        <seg>public class LocalClassExample {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class MountainBike extends Bicycle {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025707Z" creationid="pingfangx" creationdate="20180525T025707Z">
        <seg>public class MountainBike extends Bicycle {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Mustang extends Horse implements Mammal {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092125Z" creationid="pingfangx" creationdate="20190102T092125Z">
        <seg>public class Mustang extends Horse implements Mammal {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class MyHouse implements House {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041558Z" creationid="pingfangx" creationdate="20190102T041558Z">
        <seg>public class MyHouse implements House {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class NumberHolder {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083302Z" creationid="pingfangx" creationdate="20180705T083302Z">
        <seg>public class NumberHolder {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class NumberHolderDisplay {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083731Z" creationid="pingfangx" creationdate="20180705T083731Z">
        <seg>public class NumberHolderDisplay {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class OperateBMW760i implements OperateCar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054204Z" creationid="pingfangx" creationdate="20190102T054204Z">
        <seg>public class OperateBMW760i implements OperateCar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class PassPrimitiveByValue {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033911Z" creationid="pingfangx" creationdate="20180601T033911Z">
        <seg>public class PassPrimitiveByValue {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Pegasus extends Horse implements Flyer, Mythical {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091508Z" creationid="pingfangx" creationdate="20190102T091508Z">
        <seg>public class Pegasus extends Horse implements Flyer, Mythical {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Person {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085433Z" creationid="pingfangx" creationdate="20180706T085433Z">
        <seg>public class Person {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Point {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062440Z" creationid="pingfangx" creationdate="20180601T062440Z">
        <seg>public class Point {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Rectangle {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062609Z" creationid="pingfangx" creationdate="20180601T062609Z">
        <seg>public class Rectangle {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class RectanglePlus</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062154Z" creationid="pingfangx" creationdate="20190102T062154Z">
        <seg>public class RectanglePlus</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class RegionMatchesDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T075854Z" creationid="pingfangx" creationdate="20190103T075854Z">
        <seg>public class RegionMatchesDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class RoadBike extends Bicycle{</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094000Z" creationid="pingfangx" creationdate="20190102T094000Z">
        <seg>public class RoadBike extends Bicycle{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class ShadowTest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091529Z" creationid="pingfangx" creationdate="20180705T091529Z">
        <seg>public class ShadowTest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class SomethingIsRight {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083718Z" creationid="pingfangx" creationdate="20180705T083718Z">
        <seg>public class SomethingIsRight {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class SomethingIsWrong {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083216Z" creationid="pingfangx" creationdate="20180705T083216Z">
        <seg>public class SomethingIsWrong {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class StandardDeck implements Deck {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065424Z" creationid="pingfangx" creationdate="20190102T065424Z">
        <seg>public class StandardDeck implements Deck {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class StringBuilderDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082802Z" creationid="pingfangx" creationdate="20190103T082802Z">
        <seg>public class StringBuilderDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class StringDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064007Z" creationid="pingfangx" creationdate="20190103T064007Z">
        <seg>public class StringDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class StringSwitchDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082551Z" creationid="pingfangx" creationdate="20180521T082551Z">
        <seg>public class StringSwitchDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Subclass extends Superclass {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094942Z" creationid="pingfangx" creationdate="20190102T094942Z">
        <seg>public class Subclass extends Superclass {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class Superclass {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094934Z" creationid="pingfangx" creationdate="20190102T094934Z">
        <seg>public class Superclass {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class SwitchDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082014Z" creationid="pingfangx" creationdate="20180521T082014Z">
        <seg>public class SwitchDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class SwitchDemoFallThrough {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082351Z" creationid="pingfangx" creationdate="20180521T082351Z">
        <seg>public class SwitchDemoFallThrough {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class TestBikes {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094038Z" creationid="pingfangx" creationdate="20190102T094038Z">
        <seg>public class TestBikes {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class ToStringDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065436Z" creationid="pingfangx" creationdate="20190103T065436Z">
        <seg>public class ToStringDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class TrigonometricDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040418Z" creationid="pingfangx" creationdate="20190103T040418Z">
        <seg>public class TrigonometricDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public class ValueOfDemo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T065159Z" creationid="pingfangx" creationdate="20190103T065159Z">
        <seg>public class ValueOfDemo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public double calculateAnswer(double wingSpan, int numberOfEngines,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064732Z" creationid="pingfangx" creationdate="20180525T064732Z">
        <seg>public double calculateAnswer(double wingSpan, int numberOfEngines,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public double computePayment(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032058Z" creationid="pingfangx" creationdate="20180601T032058Z">
        <seg>public double computePayment(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public enum Day {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015305Z" creationid="pingfangx" creationdate="20190102T015305Z">
        <seg>public enum Day {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public enum Planet {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020017Z" creationid="pingfangx" creationdate="20190102T020017Z">
        <seg>public enum Planet {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public enum Rank {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065239Z" creationid="pingfangx" creationdate="20190102T065239Z">
        <seg>public enum Rank {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public enum Sex {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085435Z" creationid="pingfangx" creationdate="20180706T085435Z">
        <seg>public enum Sex {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public enum Suit {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065233Z" creationid="pingfangx" creationdate="20190102T065233Z">
        <seg>public enum Suit {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public final void notify()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101054Z" creationid="pingfangx" creationdate="20190102T101054Z">
        <seg>public final void notify()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public final void notifyAll()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101055Z" creationid="pingfangx" creationdate="20190102T101055Z">
        <seg>public final void notifyAll()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public final void wait()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101056Z" creationid="pingfangx" creationdate="20190102T101056Z">
        <seg>public final void wait()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public final void wait(long timeout)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101056Z" creationid="pingfangx" creationdate="20190102T101056Z">
        <seg>public final void wait(long timeout)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public final void wait(long timeout, int nanos)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101057Z" creationid="pingfangx" creationdate="20190102T101057Z">
        <seg>public final void wait(long timeout, int nanos)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public float aFloat;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083303Z" creationid="pingfangx" creationdate="20180705T083303Z">
        <seg>public float aFloat;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int anInt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083302Z" creationid="pingfangx" creationdate="20180705T083302Z">
        <seg>public int anInt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int cadence;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025651Z" creationid="pingfangx" creationdate="20180525T025651Z">
        <seg>public int cadence;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int cadence;
public int gear;
public int speed;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T063156Z" creationid="pingfangx" creationdate="20180525T063156Z">
        <seg>public int cadence;
public int gear;
public int speed;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int compare(Card firstCard, Card secondCard) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071028Z" creationid="pingfangx" creationdate="20190102T071028Z">
        <seg>public int compare(Card firstCard, Card secondCard) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int compare(Person a, Person b) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084046Z" creationid="pingfangx" creationdate="20181228T084046Z">
        <seg>public int compare(Person a, Person b) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int compareByAge(Person a, Person b) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084718Z" creationid="pingfangx" creationdate="20181228T084718Z">
        <seg>public int compareByAge(Person a, Person b) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int compareByName(Person a, Person b) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084716Z" creationid="pingfangx" creationdate="20181228T084716Z">
        <seg>public int compareByName(Person a, Person b) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int gear;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025652Z" creationid="pingfangx" creationdate="20180525T025652Z">
        <seg>public int gear;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int getAge() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085438Z" creationid="pingfangx" creationdate="20180706T085438Z">
        <seg>public int getAge() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int getArea() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062627Z" creationid="pingfangx" creationdate="20180601T062627Z">
        <seg>public int getArea() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int getCadence() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064211Z" creationid="pingfangx" creationdate="20180525T064211Z">
        <seg>public int getCadence() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int getGear() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064212Z" creationid="pingfangx" creationdate="20180525T064212Z">
        <seg>public int getGear() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int getGear(){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065618Z" creationid="pingfangx" creationdate="20180705T065618Z">
        <seg>public int getGear(){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int getID() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043218Z" creationid="pingfangx" creationdate="20180607T043218Z">
        <seg>public int getID() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int getSpeed() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064213Z" creationid="pingfangx" creationdate="20180525T064213Z">
        <seg>public int getSpeed() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int getTireWidth(){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094003Z" creationid="pingfangx" creationdate="20190102T094003Z">
        <seg>public int getTireWidth(){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int hashCode() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065609Z" creationid="pingfangx" creationdate="20190102T065609Z">
        <seg>public int hashCode() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int height = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062610Z" creationid="pingfangx" creationdate="20180601T062610Z">
        <seg>public int height = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int isLargerThan(Relatable other) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062201Z" creationid="pingfangx" creationdate="20190102T062201Z">
        <seg>public int isLargerThan(Relatable other) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int isLargerThan(Relatable other);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061943Z" creationid="pingfangx" creationdate="20190102T061943Z">
        <seg>public int isLargerThan(Relatable other);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int operateBinary(int a, int b, IntegerMath op) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075617Z" creationid="pingfangx" creationdate="20181228T075617Z">
        <seg>public int operateBinary(int a, int b, IntegerMath op) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int seatHeight;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025710Z" creationid="pingfangx" creationdate="20180525T025710Z">
        <seg>public int seatHeight;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int speed;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025652Z" creationid="pingfangx" creationdate="20180525T025652Z">
        <seg>public int speed;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int startEngine(EncryptedKey key) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091817Z" creationid="pingfangx" creationdate="20190102T091817Z">
        <seg>public int startEngine(EncryptedKey key) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int value() {return value;}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065239Z" creationid="pingfangx" creationdate="20190102T065239Z">
        <seg>public int value() {return value;}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int width = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062610Z" creationid="pingfangx" creationdate="20180601T062610Z">
        <seg>public int width = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int x = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062441Z" creationid="pingfangx" creationdate="20180601T062441Z">
        <seg>public int x = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int x = 1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091529Z" creationid="pingfangx" creationdate="20180705T091529Z">
        <seg>public int x = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int y = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092755Z" creationid="pingfangx" creationdate="20180601T092755Z">
        <seg>public int y = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int y = 0;&lt;b0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062442Z" creationid="pingfangx" creationdate="20180601T062442Z">
        <seg>public int y = 0;&lt;b0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int y = 3;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082815Z" creationid="pingfangx" creationdate="20180705T082815Z">
        <seg>public int y = 3;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public int y = 3; 
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082503Z" creationid="pingfangx" creationdate="20180705T082503Z">
        <seg>public int y = 3; 
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface AbstractZoneTimeClient extends TimeClient {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063457Z" creationid="pingfangx" creationdate="20190102T063457Z">
        <seg>public interface AbstractZoneTimeClient extends TimeClient {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface Animal {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091648Z" creationid="pingfangx" creationdate="20190102T091648Z">
        <seg>public interface Animal {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface AnotherTimeClient extends TimeClient { }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063445Z" creationid="pingfangx" creationdate="20190102T063445Z">
        <seg>public interface AnotherTimeClient extends TimeClient { }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface Deck {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065304Z" creationid="pingfangx" creationdate="20190102T065304Z">
        <seg>public interface Deck {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface DoIt {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062839Z" creationid="pingfangx" creationdate="20190102T062839Z">
        <seg>public interface DoIt {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface DoItPlus extends DoIt {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063106Z" creationid="pingfangx" creationdate="20190102T063106Z">
        <seg>public interface DoItPlus extends DoIt {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface EggLayer extends Animal {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091652Z" creationid="pingfangx" creationdate="20190102T091652Z">
        <seg>public interface EggLayer extends Animal {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface FireBreather extends Animal { }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091658Z" creationid="pingfangx" creationdate="20190102T091658Z">
        <seg>public interface FireBreather extends Animal { }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface FlyCar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091802Z" creationid="pingfangx" creationdate="20190102T091802Z">
        <seg>public interface FlyCar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface Flyer {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091503Z" creationid="pingfangx" creationdate="20190102T091503Z">
        <seg>public interface Flyer {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface GroupedInterface extends Interface1, Interface2, Interface3 {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061521Z" creationid="pingfangx" creationdate="20190102T061521Z">
        <seg>public interface GroupedInterface extends Interface1, Interface2, Interface3 {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface HandleInvalidTimeZoneClient extends TimeClient {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063521Z" creationid="pingfangx" creationdate="20190102T063521Z">
        <seg>public interface HandleInvalidTimeZoneClient extends TimeClient {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface House {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041549Z" creationid="pingfangx" creationdate="20190102T041549Z">
        <seg>public interface House {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface Mammal {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T092122Z" creationid="pingfangx" creationdate="20190102T092122Z">
        <seg>public interface Mammal {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface Marker {
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074539Z" creationid="pingfangx" creationdate="20190102T074539Z">
        <seg>public interface Marker {
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface Mythical {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091506Z" creationid="pingfangx" creationdate="20190102T091506Z">
        <seg>public interface Mythical {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface OperateCar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T054127Z" creationid="pingfangx" creationdate="20190102T054127Z">
        <seg>public interface OperateCar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface Relatable {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061940Z" creationid="pingfangx" creationdate="20190102T061940Z">
        <seg>public interface Relatable {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface Runnable {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082126Z" creationid="pingfangx" creationdate="20181228T082126Z">
        <seg>public interface Runnable {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface SomethingIsWrong {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074530Z" creationid="pingfangx" creationdate="20190102T074530Z">
        <seg>public interface SomethingIsWrong {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public interface TimeClient {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060823Z" creationid="pingfangx" creationdate="20190102T060823Z">
        <seg>public interface TimeClient {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static &lt;T, SOURCE extends Collection&lt;T&gt;, DEST extends Collection&lt;T&gt;&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084928Z" creationid="pingfangx" creationdate="20181228T084928Z">
        <seg>public static &lt;T, SOURCE extends Collection&lt;T&gt;, DEST extends Collection&lt;T&gt;&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static &lt;X, Y&gt; void processElements(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T100544Z" creationid="pingfangx" creationdate="20180706T100544Z">
        <seg>public static &lt;X, Y&gt; void processElements(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static boolean areAnagrams(String string1,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085921Z" creationid="pingfangx" creationdate="20190103T085921Z">
        <seg>public static boolean areAnagrams(String string1,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static final String farewell = "Bye bye";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T145237Z" creationid="pingfangx" creationdate="20180705T145237Z">
        <seg>public static final String farewell = "Bye bye";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static final double G = 6.67300E-11;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020030Z" creationid="pingfangx" creationdate="20190102T020030Z">
        <seg>public static final double G = 6.67300E-11;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static int absoluteValue(int i) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084614Z" creationid="pingfangx" creationdate="20190103T084614Z">
        <seg>public static int absoluteValue(int i) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static int capacity = 10;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065706Z" creationid="pingfangx" creationdate="20180705T065706Z">
        <seg>public static int capacity = 10;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static int compareByAge(Person a, Person b) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082816Z" creationid="pingfangx" creationdate="20181228T082816Z">
        <seg>public static int compareByAge(Person a, Person b) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static int getMonthNumber(String month) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082553Z" creationid="pingfangx" creationdate="20180521T082553Z">
        <seg>public static int getMonthNumber(String month) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static int getNumberOfBicycles() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065617Z" creationid="pingfangx" creationdate="20180705T065617Z">
        <seg>public static int getNumberOfBicycles() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static int sumEven(List&lt;Integer&gt; li) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084408Z" creationid="pingfangx" creationdate="20190103T084408Z">
        <seg>public static int sumEven(List&lt;Integer&gt; li) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static int x = 7;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082502Z" creationid="pingfangx" creationdate="20180705T082502Z">
        <seg>public static int x = 7;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static nested class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021040Z" creationid="pingfangx" creationdate="20190102T021040Z">
        <seg>public static nested class</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static varType myVar = initializeClassVariable();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070543Z" creationid="pingfangx" creationdate="20180705T070543Z">
        <seg>public static varType myVar = initializeClassVariable();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void arraycopy(Object src, int srcPos,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042411Z" creationid="pingfangx" creationdate="20180521T042411Z">
        <seg>public static void arraycopy(Object src, int srcPos,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void main (String... args) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091701Z" creationid="pingfangx" creationdate="20190102T091701Z">
        <seg>public static void main (String... args) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void main (String[] args) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064517Z" creationid="pingfangx" creationdate="20180521T064517Z">
        <seg>public static void main (String[] args) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void main (String[] args){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072624Z" creationid="pingfangx" creationdate="20180521T072624Z">
        <seg>public static void main (String[] args){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void main(&lt;b0&gt;String[] args&lt;/b0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035723Z" creationid="pingfangx" creationdate="20180518T035723Z">
        <seg>public static void main(&lt;b0&gt;String[] args&lt;/b0&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void main(String s[]) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101113Z" creationid="pingfangx" creationdate="20180705T101113Z">
        <seg>public static void main(String s[]) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void main(String... args) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091533Z" creationid="pingfangx" creationdate="20180705T091533Z">
        <seg>public static void main(String... args) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void main(String[] args)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035635Z" creationid="pingfangx" creationdate="20180518T035635Z">
        <seg>public static void main(String[] args)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void main(String[] args) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035247Z" creationid="pingfangx" creationdate="20180518T035247Z">
        <seg>public static void main(String[] args) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void main(String[] args) {
	NumberHolder aNumberHolder = new NumberHolder();
	aNumberHolder.anInt = 1;
	aNumberHolder.aFloat = 2.3f;
	System.out.println(aNumberHolder.anInt);
	System.out.println(aNumberHolder.aFloat);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T083731Z" creationid="pingfangx" creationdate="20180705T083731Z">
        <seg>public static void main(String[] args) {
	NumberHolder aNumberHolder = new NumberHolder();
	aNumberHolder.anInt = 1;
	aNumberHolder.aFloat = 2.3f;
	System.out.println(aNumberHolder.anInt);
	System.out.println(aNumberHolder.aFloat);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void main(String[] args){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064827Z" creationid="pingfangx" creationdate="20180521T064827Z">
        <seg>public static void main(String[] args){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void methodFour(int i) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023450Z" creationid="pingfangx" creationdate="20190103T023450Z">
        <seg>public static void methodFour(int i) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void methodOne(int i) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023452Z" creationid="pingfangx" creationdate="20190103T023452Z">
        <seg>public static void methodOne(int i) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void methodThree(int i) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023450Z" creationid="pingfangx" creationdate="20190103T023450Z">
        <seg>public static void methodThree(int i) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void passMethod(int p) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034027Z" creationid="pingfangx" creationdate="20180601T034027Z">
        <seg>public static void passMethod(int p) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void printPersons(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085931Z" creationid="pingfangx" creationdate="20180706T085931Z">
        <seg>public static void printPersons(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void printPersonsOlderThan(List&lt;Person&gt; roster, int age) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085628Z" creationid="pingfangx" creationdate="20180706T085628Z">
        <seg>public static void printPersonsOlderThan(List&lt;Person&gt; roster, int age) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void printPersonsWithPredicate(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T093434Z" creationid="pingfangx" creationdate="20180706T093434Z">
        <seg>public static void printPersonsWithPredicate(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void printPersonsWithinAgeRange(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085839Z" creationid="pingfangx" creationdate="20180706T085839Z">
        <seg>public static void printPersonsWithinAgeRange(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void processPersons(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094104Z" creationid="pingfangx" creationdate="20180706T094104Z">
        <seg>public static void processPersons(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void processPersonsWithFunction(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T094308Z" creationid="pingfangx" creationdate="20180706T094308Z">
        <seg>public static void processPersonsWithFunction(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void sayGoodbye() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144541Z" creationid="pingfangx" creationdate="20180705T144541Z">
        <seg>public static void sayGoodbye() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void testClassMethod() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090636Z" creationid="pingfangx" creationdate="20190102T090636Z">
        <seg>public static void testClassMethod() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public static void validatePhoneNumber(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122440Z" creationid="pingfangx" creationdate="20180705T122440Z">
        <seg>public static void validatePhoneNumber(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void applyBrake(int decrement) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025659Z" creationid="pingfangx" creationdate="20180525T025659Z">
        <seg>public void applyBrake(int decrement) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void draw(String s) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065418Z" creationid="pingfangx" creationdate="20180525T065418Z">
        <seg>public void draw(String s) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void draw(double f) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065419Z" creationid="pingfangx" creationdate="20180525T065419Z">
        <seg>public void draw(double f) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void draw(int i) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065419Z" creationid="pingfangx" creationdate="20180525T065419Z">
        <seg>public void draw(int i) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void draw(int i, double f) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065420Z" creationid="pingfangx" creationdate="20180525T065420Z">
        <seg>public void draw(int i, double f) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void greet() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T143124Z" creationid="pingfangx" creationdate="20180705T143124Z">
        <seg>public void greet() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void greet();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T143119Z" creationid="pingfangx" creationdate="20180705T143032Z">
        <seg>public void greet();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void greetInEnglish() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T143106Z" creationid="pingfangx" creationdate="20180705T143031Z">
        <seg>public void greetInEnglish() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void greetSomeone(String someone) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061128Z" creationid="pingfangx" creationdate="20180706T061128Z">
        <seg>public void greetSomeone(String someone) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void greetSomeone(String someone);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061125Z" creationid="pingfangx" creationdate="20180706T061125Z">
        <seg>public void greetSomeone(String someone);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void handle(ActionEvent e) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070014Z" creationid="pingfangx" creationdate="20180706T070014Z">
        <seg>public void handle(ActionEvent e) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void methodOne(int i) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023448Z" creationid="pingfangx" creationdate="20190103T023448Z">
        <seg>public void methodOne(int i) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void methodThree(int i) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023452Z" creationid="pingfangx" creationdate="20190103T023452Z">
        <seg>public void methodThree(int i) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void methodTwo(int i) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023449Z" creationid="pingfangx" creationdate="20190103T023449Z">
        <seg>public void methodTwo(int i) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void move(int x, int y) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062621Z" creationid="pingfangx" creationdate="20180601T062621Z">
        <seg>public void move(int x, int y) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void moveCircle(Circle circle, int deltaX, int deltaY) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T034306Z" creationid="pingfangx" creationdate="20180601T034306Z">
        <seg>public void moveCircle(Circle circle, int deltaX, int deltaY) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void open() {}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041559Z" creationid="pingfangx" creationdate="20190102T041559Z">
        <seg>public void open() {}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void open();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041656Z" creationid="pingfangx" creationdate="20190102T041656Z">
        <seg>public void open();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void openBackDoor() {}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041600Z" creationid="pingfangx" creationdate="20190102T041600Z">
        <seg>public void openBackDoor() {}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void openBackDoor();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041657Z" creationid="pingfangx" creationdate="20190102T041657Z">
        <seg>public void openBackDoor();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void openFrontDoor() {}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041559Z" creationid="pingfangx" creationdate="20190102T041559Z">
        <seg>public void openFrontDoor() {}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void openFrontDoor();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041657Z" creationid="pingfangx" creationdate="20190102T041657Z">
        <seg>public void openFrontDoor();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void printDescription() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093815Z" creationid="pingfangx" creationdate="20190102T093815Z">
        <seg>public void printDescription() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void printDescription(){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093233Z" creationid="pingfangx" creationdate="20190102T093233Z">
        <seg>public void printDescription(){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void printEven() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100907Z" creationid="pingfangx" creationdate="20180705T100907Z">
        <seg>public void printEven() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void printMethod() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094935Z" creationid="pingfangx" creationdate="20190102T094935Z">
        <seg>public void printMethod() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void printOriginalNumbers() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T123227Z" creationid="pingfangx" creationdate="20180705T123227Z">
        <seg>public void printOriginalNumbers() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void printPerson() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T085440Z" creationid="pingfangx" creationdate="20180706T085440Z">
        <seg>public void printPerson() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void sayGoodbye() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T145238Z" creationid="pingfangx" creationdate="20180705T145238Z">
        <seg>public void sayGoodbye() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void sayGoodbyeInEnglish() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T144538Z" creationid="pingfangx" creationdate="20180705T144538Z">
        <seg>public void sayGoodbyeInEnglish() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void sayHello() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061126Z" creationid="pingfangx" creationdate="20180706T061126Z">
        <seg>public void sayHello() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void setCadence(int newValue) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025656Z" creationid="pingfangx" creationdate="20180525T025656Z">
        <seg>public void setCadence(int newValue) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void setDate(int day, int month, int year) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061159Z" creationid="pingfangx" creationdate="20190102T061159Z">
        <seg>public void setDate(int day, int month, int year) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void setDateAndTime(int day, int month, int year,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061201Z" creationid="pingfangx" creationdate="20190102T061201Z">
        <seg>public void setDateAndTime(int day, int month, int year,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void setGear(int newValue) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025657Z" creationid="pingfangx" creationdate="20180525T025657Z">
        <seg>public void setGear(int newValue) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void setHeight(int newValue) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025715Z" creationid="pingfangx" creationdate="20180525T025715Z">
        <seg>public void setHeight(int newValue) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void setOrigin(int x, int y) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033613Z" creationid="pingfangx" creationdate="20180601T033613Z">
        <seg>public void setOrigin(int x, int y) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void setSuspension(String suspensionType) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093814Z" creationid="pingfangx" creationdate="20190102T093814Z">
        <seg>public void setSuspension(String suspensionType) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void setTime(int hour, int minute, int second) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061155Z" creationid="pingfangx" creationdate="20190102T061155Z">
        <seg>public void setTime(int hour, int minute, int second) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void setTireWidth(int newTireWidth){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094004Z" creationid="pingfangx" creationdate="20190102T094004Z">
        <seg>public void setTireWidth(int newTireWidth){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void sort() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065425Z" creationid="pingfangx" creationdate="20190102T065425Z">
        <seg>public void sort() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void sort(Comparator&lt;Card&gt; c) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T070922Z" creationid="pingfangx" creationdate="20190102T070922Z">
        <seg>public void sort(Comparator&lt;Card&gt; c) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void speedUp(int increment) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025700Z" creationid="pingfangx" creationdate="20180525T025700Z">
        <seg>public void speedUp(int increment) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void start(Stage primaryStage) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065639Z" creationid="pingfangx" creationdate="20180706T065639Z">
        <seg>public void start(Stage primaryStage) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void start(Stage stage) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065951Z" creationid="pingfangx" creationdate="20180706T065951Z">
        <seg>public void start(Stage stage) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void tellItLikeItIs() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015340Z" creationid="pingfangx" creationdate="20190102T015340Z">
        <seg>public void tellItLikeItIs() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public void testInstanceMethod() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T090640Z" creationid="pingfangx" creationdate="20190102T090640Z">
        <seg>public void testInstanceMethod() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>quit();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021140Z" creationid="pingfangx" creationdate="20190102T021140Z">
        <seg>quit();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>r.run();
}

&lt;T&gt; T invoke(Callable&lt;T&gt; c) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082202Z" creationid="pingfangx" creationdate="20181228T082202Z">
        <seg>r.run();
}

&lt;T&gt; T invoke(Callable&lt;T&gt; c) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rather than using one of the &lt;c0&gt;String&lt;/c0&gt; constructors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T083317Z" creationid="pingfangx" creationdate="20190103T083317Z">
        <seg>而不是使用 &lt;c0&gt;String&lt;/c0&gt; 构造函数之一。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reaches a &lt;c0&gt;return&lt;/c0&gt; statement, or</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091201Z" creationid="pingfangx" creationdate="20180601T091201Z">
        <seg>达到 &lt;c0&gt;return&lt;/c0&gt; 语句或</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>really big index button</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030525Z" creationid="pingfangx" creationdate="20180518T030525Z">
        <seg>真的很大的 index 按钮</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reallybigindex.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030511Z" creationid="pingfangx" creationdate="20180518T030511Z">
        <seg>reallybigindex.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rectTwo.move(40, 72);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040038Z" creationid="pingfangx" creationdate="20180601T040038Z">
        <seg>rectTwo.move(40, 72);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rectTwo.origin = originOne;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T040030Z" creationid="pingfangx" creationdate="20180601T040030Z">
        <seg>rectTwo.origin = originOne;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reflect/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031744Z" creationid="pingfangx" creationdate="20180518T031744Z">
        <seg>reflect/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>regularExpression, "");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122500Z" creationid="pingfangx" creationdate="20180705T122500Z">
        <seg>regularExpression, "");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>relational</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063030Z" creationid="pingfangx" creationdate="20180521T063030Z">
        <seg>关系</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repeating.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023238Z" creationid="pingfangx" creationdate="20190102T023238Z">
        <seg>repeating.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result %= 7; // result is now 3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073347Z" creationid="pingfangx" creationdate="20180521T073347Z">
        <seg>result %= 7; // result is now 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result *= 2; // result is now 4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073344Z" creationid="pingfangx" creationdate="20180521T073344Z">
        <seg>result *= 2; // result is now 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result += 8; // result is now 10</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073345Z" creationid="pingfangx" creationdate="20180521T073345Z">
        <seg>result += 8; // result is now 10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result -= 1; // result is now 2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073341Z" creationid="pingfangx" creationdate="20180521T073341Z">
        <seg>result -= 1; // result is now 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result /= 2; // result is now 2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073345Z" creationid="pingfangx" creationdate="20180521T073345Z">
        <seg>result /= 2; // result is now 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = -result;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065222Z" creationid="pingfangx" creationdate="20180521T065222Z">
        <seg>result = -result;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = result % 7;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064541Z" creationid="pingfangx" creationdate="20180521T064541Z">
        <seg>result = result % 7;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = result % 7; // result is now 3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072709Z" creationid="pingfangx" creationdate="20180521T072709Z">
        <seg>result = result % 7; //结果现在是 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = result * 2;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064529Z" creationid="pingfangx" creationdate="20180521T064529Z">
        <seg>result = result * 2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = result * 2; // result is now 4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072651Z" creationid="pingfangx" creationdate="20180521T072651Z">
        <seg>result = result * 2; //结果现在是 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = result + 8;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064537Z" creationid="pingfangx" creationdate="20180521T064537Z">
        <seg>result = result + 8;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = result + 8; // result is now 10</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072700Z" creationid="pingfangx" creationdate="20180521T072700Z">
        <seg>result = result + 8; //结果现在是 10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = result - 1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064525Z" creationid="pingfangx" creationdate="20180521T064525Z">
        <seg>result = result - 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = result - 1; // result is now 2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072645Z" creationid="pingfangx" creationdate="20180521T072645Z">
        <seg>result = result - 1; //结果现在是 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = result / 2;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T064533Z" creationid="pingfangx" creationdate="20180521T064533Z">
        <seg>result = result / 2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = result / 2; // result is now 2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072656Z" creationid="pingfangx" creationdate="20180521T072656Z">
        <seg>result = result / 2; //结果现在是 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result = someCondition ?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070337Z" creationid="pingfangx" creationdate="20180521T070337Z">
        <seg>result = someCondition ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result++;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065219Z" creationid="pingfangx" creationdate="20180521T065219Z">
        <seg>result++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result--;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T065217Z" creationid="pingfangx" creationdate="20180521T065217Z">
        <seg>result--;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result.add(t);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084932Z" creationid="pingfangx" creationdate="20181228T084932Z">
        <seg>result.add(t);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075746Z" creationid="pingfangx" creationdate="20180518T075746Z">
        <seg>return</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return "I am a horse.";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091501Z" creationid="pingfangx" creationdate="20190102T091501Z">
        <seg>return "I am a horse.";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return "I am a mythical creature.";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091507Z" creationid="pingfangx" creationdate="20190102T091507Z">
        <seg>return "I am a mythical creature.";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return "I am able to fly.";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091505Z" creationid="pingfangx" creationdate="20190102T091505Z">
        <seg>return "I am able to fly.";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return "I am able to lay eggs.";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091653Z" creationid="pingfangx" creationdate="20190102T091653Z">
        <seg>return "I am able to lay eggs.";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return "I am an animal.";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T091649Z" creationid="pingfangx" creationdate="20190102T091649Z">
        <seg>return "I am an animal.";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return ((suit.value()-1)*13)+rank.value();
}

public int compareTo(Card o) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065611Z" creationid="pingfangx" creationdate="20190102T065611Z">
        <seg>return ((suit.value()-1)*13)+rank.value();
}

public int compareTo(Card o) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return (i &lt; 0) ?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084614Z" creationid="pingfangx" creationdate="20190103T084614Z">
        <seg>return (i &lt; 0) ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return (nextIndex &lt;= SIZE - 1);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101104Z" creationid="pingfangx" creationdate="20180705T101104Z">
        <seg>return (nextIndex &lt;= SIZE - 1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return ++count;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090718Z" creationid="pingfangx" creationdate="20180521T090718Z">
        <seg>return ++count;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return -1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062204Z" creationid="pingfangx" creationdate="20190102T062204Z">
        <seg>return -1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062205Z" creationid="pingfangx" creationdate="20190102T062205Z">
        <seg>return 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return 1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062205Z" creationid="pingfangx" creationdate="20190102T062205Z">
        <seg>return 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return ChessPlayer.WHITE;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104641Z" creationid="pingfangx" creationdate="20190102T104641Z">
        <seg>return ChessPlayer.WHITE;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return G * mass / (radius * radius);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020031Z" creationid="pingfangx" creationdate="20190102T020031Z">
        <seg>return G * mass / (radius * radius);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return ISBN.equals((Book)obj.getISBN());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102603Z" creationid="pingfangx" creationdate="20190102T102603Z">
        <seg>return ISBN.equals((Book)obj.getISBN());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return ZoneId.of(zoneString);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061343Z" creationid="pingfangx" creationdate="20190102T061343Z">
        <seg>return ZoneId.of(zoneString);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return ZoneId.systemDefault();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061344Z" creationid="pingfangx" creationdate="20190102T061344Z">
        <seg>return ZoneId.systemDefault();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return ZonedDateTime.of(getLocalDateTime(), getZoneId(zoneString));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061346Z" creationid="pingfangx" creationdate="20190102T061346Z">
        <seg>return ZonedDateTime.of(getLocalDateTime(), getZoneId(zoneString));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return ZonedDateTime.of(getLocalDateTime(),ZoneId.of(zoneString));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063524Z" creationid="pingfangx" creationdate="20190102T063524Z">
        <seg>return ZonedDateTime.of(getLocalDateTime(),ZoneId.of(zoneString));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return ZonedDateTime.of(getLocalDateTime(),ZoneId.systemDefault());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063526Z" creationid="pingfangx" creationdate="20190102T063526Z">
        <seg>return ZonedDateTime.of(getLocalDateTime(),ZoneId.systemDefault());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return a.birthday.compareTo(b.birthday);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082817Z" creationid="pingfangx" creationdate="20181228T082817Z">
        <seg>return a.birthday.compareTo(b.birthday);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return a.getBirthday().compareTo(b.getBirthday());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084048Z" creationid="pingfangx" creationdate="20181228T084048Z">
        <seg>return a.getBirthday().compareTo(b.getBirthday());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return a.getName().compareTo(b.getName());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084716Z" creationid="pingfangx" creationdate="20181228T084716Z">
        <seg>return a.getName().compareTo(b.getName());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return answer;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T032105Z" creationid="pingfangx" creationdate="20180601T032105Z">
        <seg>return answer;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return birthday;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082814Z" creationid="pingfangx" creationdate="20181228T082814Z">
        <seg>return birthday;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return c.call();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082203Z" creationid="pingfangx" creationdate="20181228T082203Z">
        <seg>return c.call();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return cadence;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064211Z" creationid="pingfangx" creationdate="20180525T064211Z">
        <seg>return cadence;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return compVal;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071031Z" creationid="pingfangx" creationdate="20190102T071031Z">
        <seg>return compVal;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return compare;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071848Z" creationid="pingfangx" creationdate="20190102T071848Z">
        <seg>return compare;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return dateAndTime.toString();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061205Z" creationid="pingfangx" creationdate="20190102T061205Z">
        <seg>return dateAndTime.toString();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return dateAndTime;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061204Z" creationid="pingfangx" creationdate="20190102T061204Z">
        <seg>return dateAndTime;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return dest.toString();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085926Z" creationid="pingfangx" creationdate="20190103T085926Z">
        <seg>return dest.toString();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return false;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T102603Z" creationid="pingfangx" creationdate="20190102T102603Z">
        <seg>return false;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return false;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062710Z" creationid="pingfangx" creationdate="20190102T062710Z">
        <seg>return false;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return fastest;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091714Z" creationid="pingfangx" creationdate="20180601T091714Z">
        <seg>return fastest;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return firstCard.getSuit().value() - secondCard.getSuit().value();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071032Z" creationid="pingfangx" creationdate="20190102T071032Z">
        <seg>return firstCard.getSuit().value() - secondCard.getSuit().value();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return formattedPhoneNumber;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122503Z" creationid="pingfangx" creationdate="20180705T122503Z">
        <seg>return formattedPhoneNumber;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return fullPath.substring(0, sep);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074934Z" creationid="pingfangx" creationdate="20190103T074934Z">
        <seg>return fullPath.substring(0, sep);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return fullPath.substring(dot + 1);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074932Z" creationid="pingfangx" creationdate="20190103T074932Z">
        <seg>return fullPath.substring(dot + 1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return fullPath.substring(sep + 1, dot);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T074933Z" creationid="pingfangx" creationdate="20190103T074933Z">
        <seg>return fullPath.substring(sep + 1, dot);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return gear;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064212Z" creationid="pingfangx" creationdate="20180525T064212Z">
        <seg>return gear;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return id;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T043222Z" creationid="pingfangx" creationdate="20180607T043222Z">
        <seg>return id;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return monthNumber;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082554Z" creationid="pingfangx" creationdate="20180521T082554Z">
        <seg>return monthNumber;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return new String(charArray);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085927Z" creationid="pingfangx" creationdate="20190103T085927Z">
        <seg>return new String(charArray);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return numberOfBicycles;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065617Z" creationid="pingfangx" creationdate="20180705T065617Z">
        <seg>return numberOfBicycles;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return numberOfBicycles;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065104Z" creationid="pingfangx" creationdate="20180705T065104Z">
        <seg>return numberOfBicycles;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return object1;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062630Z" creationid="pingfangx" creationdate="20190102T062630Z">
        <seg>return object1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return object2;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062630Z" creationid="pingfangx" creationdate="20190102T062630Z">
        <seg>return object2;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return object2;
}

public boolean isEqual(Object object1, Object object2) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062707Z" creationid="pingfangx" creationdate="20190102T062707Z">
        <seg>return object2;
}

public boolean isEqual(Object object1, Object object2) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return op.operation(a, b);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T075617Z" creationid="pingfangx" creationdate="20181228T075617Z">
        <seg>return op.operation(a, b);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return otherMass * surfaceGravity();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020032Z" creationid="pingfangx" creationdate="20190102T020032Z">
        <seg>return otherMass * surfaceGravity();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return p.gender == Person.Sex.MALE &amp;&amp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090344Z" creationid="pingfangx" creationdate="20180706T090344Z">
        <seg>return p.gender == Person.Sex.MALE &amp;&amp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return p.getGender() == Person.Sex.MALE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091510Z" creationid="pingfangx" creationdate="20180706T091510Z">
        <seg>return p.getGender() == Person.Sex.MALE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return result;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084933Z" creationid="pingfangx" creationdate="20181228T084933Z">
        <seg>return result;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return retValue;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T101111Z" creationid="pingfangx" creationdate="20180705T101111Z">
        <seg>return retValue;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return returnValue;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091400Z" creationid="pingfangx" creationdate="20180601T091400Z">
        <seg>return returnValue;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return speed;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064214Z" creationid="pingfangx" creationdate="20180525T064214Z">
        <seg>return speed;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return sum;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084412Z" creationid="pingfangx" creationdate="20190103T084412Z">
        <seg>return sum;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return this.hashCode() - o.hashCode();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065612Z" creationid="pingfangx" creationdate="20190102T065612Z">
        <seg>return this.hashCode() - o.hashCode();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return this.suspension;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093813Z" creationid="pingfangx" creationdate="20190102T093813Z">
        <seg>return this.suspension;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return this.tireWidth;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094004Z" creationid="pingfangx" creationdate="20190102T094004Z">
        <seg>return this.tireWidth;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return true;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062709Z" creationid="pingfangx" creationdate="20190102T062709Z">
        <seg>return true;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return width * height;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062628Z" creationid="pingfangx" creationdate="20180601T062628Z">
        <seg>return width * height;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return workingCopy1.equals(workingCopy2);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085923Z" creationid="pingfangx" creationdate="20190103T085923Z">
        <seg>return workingCopy1.equals(workingCopy2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090733Z" creationid="pingfangx" creationdate="20180521T090733Z">
        <seg>return;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>returnvalue.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022843Z" creationid="pingfangx" creationdate="20180525T022843Z">
        <seg>returnvalue.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reviewers = {"Alice", "Bob", "Cindy"}
)
public class Generation3List extends Generation2List {

// class code goes here

}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T025150Z" creationid="pingfangx" creationdate="20190102T025150Z">
        <seg>reviewers = {"Alice", "Bob", "Cindy"}
)
public class Generation3List extends Generation2List {

// class code goes here

}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rmi/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031728Z" creationid="pingfangx" creationdate="20180518T031728Z">
        <seg>rmi/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>root.getChildren().add(btn);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065647Z" creationid="pingfangx" creationdate="20180706T065647Z">
        <seg>root.getChildren().add(btn);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>roster</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074339Z" creationid="pingfangx" creationdate="20181228T074339Z">
        <seg>roster</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>roster,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091508Z" creationid="pingfangx" creationdate="20180706T091508Z">
        <seg>roster,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>roster, new CheckPersonEligibleForSelectiveService());</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T090354Z" creationid="pingfangx" creationdate="20180706T090354Z">
        <seg>roster, new CheckPersonEligibleForSelectiveService());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>run
runFast
getBackground
getFinalData
compareTo
setX
isEmpty</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T065153Z" creationid="pingfangx" creationdate="20180525T065153Z">
        <seg>run
runFast
getBackground
getFinalData
compareTo
setX
isEmpty</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>s.printMethod();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094945Z" creationid="pingfangx" creationdate="20190102T094945Z">
        <seg>s.printMethod();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sb.reverse();  // reverse it</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082803Z" creationid="pingfangx" creationdate="20190103T082803Z">
        <seg>sb.reverse();  // reverse it</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scene.setRoot(grid);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065957Z" creationid="pingfangx" creationdate="20180706T065957Z">
        <seg>scene.setRoot(grid);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sdp/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031833Z" creationid="pingfangx" creationdate="20180518T031833Z">
        <seg>sdp/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>se</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085845Z" creationid="pingfangx" creationdate="20190103T085845Z">
        <seg>se</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>search:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090132Z" creationid="pingfangx" creationdate="20180521T090132Z">
        <seg>search:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>seatHeight = newValue;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025716Z" creationid="pingfangx" creationdate="20180525T025716Z">
        <seg>seatHeight = newValue;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>seatHeight = startHeight;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025713Z" creationid="pingfangx" creationdate="20180525T025713Z">
        <seg>seatHeight = startHeight;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>seatHeight = startHeight;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095511Z" creationid="pingfangx" creationdate="20190102T095511Z">
        <seg>seatHeight = startHeight;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>second string
third string</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091433Z" creationid="pingfangx" creationdate="20180521T091433Z">
        <seg>second string
third string</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>security/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031816Z" creationid="pingfangx" creationdate="20180518T031816Z">
        <seg>security/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>seventhDay.tellItLikeItIs();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015354Z" creationid="pingfangx" creationdate="20190102T015354Z">
        <seg>seventhDay.tellItLikeItIs();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shift</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063718Z" creationid="pingfangx" creationdate="20180521T063024Z">
        <seg>移位</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>short</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075750Z" creationid="pingfangx" creationdate="20180518T075750Z">
        <seg>short</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>short shortValue()&lt;br1/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030640Z" creationid="pingfangx" creationdate="20190103T030640Z">
        <seg>short shortValue()&lt;br1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>should override the getAnotherString method to return</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021203Z" creationid="pingfangx" creationdate="20190102T021203Z">
        <seg>should override the getAnotherString method to return</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>should return &lt;c0&gt;true&lt;/c0&gt;, so there will be no error message.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T082631Z" creationid="pingfangx" creationdate="20180705T082631Z">
        <seg>应返回 &lt;c0&gt;true&lt;/c0&gt;，因此不会出现错误消息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>si</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085845Z" creationid="pingfangx" creationdate="20190103T085845Z">
        <seg>si</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>situations?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020954Z" creationid="pingfangx" creationdate="20190102T020936Z">
        <seg>situations?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sixthDay.tellItLikeItIs();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015352Z" creationid="pingfangx" creationdate="20190102T015352Z">
        <seg>sixthDay.tellItLikeItIs();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sound/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031824Z" creationid="pingfangx" creationdate="20180518T031824Z">
        <seg>sound/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>spanishGreeting.greet();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061137Z" creationid="pingfangx" creationdate="20180706T061137Z">
        <seg>spanishGreeting.greet();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>speed + " gear:" + gear);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062545Z" creationid="pingfangx" creationdate="20180518T062545Z">
        <seg>speed + " gear:" + gear);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>speed += increment;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025700Z" creationid="pingfangx" creationdate="20180525T025700Z">
        <seg>speed += increment;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>speed -= decrement;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025659Z" creationid="pingfangx" creationdate="20180525T025659Z">
        <seg>speed -= decrement;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>speed = 0;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034751Z" creationid="pingfangx" creationdate="20180528T034751Z">
        <seg>speed = 0;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>speed = speed + increment;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062540Z" creationid="pingfangx" creationdate="20180518T062540Z">
        <seg>speed = speed + increment;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>speed = speed - decrement;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062543Z" creationid="pingfangx" creationdate="20180518T062543Z">
        <seg>speed = speed - decrement;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>speed = startSpeed;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025655Z" creationid="pingfangx" creationdate="20180525T025655Z">
        <seg>speed = startSpeed;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>speed = startSpeed;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180528T034639Z" creationid="pingfangx" creationdate="20180528T034639Z">
        <seg>speed = startSpeed;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>squareOfSide1 = (corners[1].x - corners[0].x)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T033048Z" creationid="pingfangx" creationdate="20180601T033048Z">
        <seg>squareOfSide1 = (corners[1].x - corners[0].x)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>stage.setScene(scene);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065954Z" creationid="pingfangx" creationdate="20180706T065954Z">
        <seg>stage.setScene(scene);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>stage.setTitle("Text Field Sample");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T065954Z" creationid="pingfangx" creationdate="20180706T065954Z">
        <seg>stage.setTitle("Text Field Sample");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>stage.show();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070017Z" creationid="pingfangx" creationdate="20180706T070017Z">
        <seg>stage.show();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>startGear);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093811Z" creationid="pingfangx" creationdate="20190102T093811Z">
        <seg>startGear);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>startSpeed,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093811Z" creationid="pingfangx" creationdate="20190102T093811Z">
        <seg>startSpeed,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>statement(s)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082836Z" creationid="pingfangx" creationdate="20180521T082836Z">
        <seg>statement(s)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>statement(s)
} while (expression);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083025Z" creationid="pingfangx" creationdate="20180521T083025Z">
        <seg>statement(s)
} while (expression);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075755Z" creationid="pingfangx" creationdate="20180518T075755Z">
        <seg>static</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static &lt;T&gt; void sort(T[] a, Comparator&lt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084059Z" creationid="pingfangx" creationdate="20181228T084059Z">
        <seg>static &lt;T&gt; void sort(T[] a, Comparator&lt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static Integer decode(String s)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030856Z" creationid="pingfangx" creationdate="20190103T030856Z">
        <seg>static Integer decode(String s)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static Integer valueOf(String s)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T031019Z" creationid="pingfangx" creationdate="20190103T031019Z">
        <seg>static Integer valueOf(String s)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static Integer valueOf(String s, int radix)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T031105Z" creationid="pingfangx" creationdate="20190103T031105Z">
        <seg>static Integer valueOf(String s, int radix)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static Integer valueOf(int i)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030952Z" creationid="pingfangx" creationdate="20190103T030952Z">
        <seg>static Integer valueOf(int i)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static String regularExpression = "[^0-9]";</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122439Z" creationid="pingfangx" creationdate="20180705T122439Z">
        <seg>static String regularExpression = "[^0-9]";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static String toString(int i)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030942Z" creationid="pingfangx" creationdate="20190103T030942Z">
        <seg>static String toString(int i)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static ZoneId getZoneId (String zoneString) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061341Z" creationid="pingfangx" creationdate="20190102T061341Z">
        <seg>static ZoneId getZoneId (String zoneString) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static class StaticNestedClass {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T090550Z" creationid="pingfangx" creationdate="20180705T090550Z">
        <seg>static class StaticNestedClass {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static final double PI = 3.141592653589793;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T065303Z" creationid="pingfangx" creationdate="20180705T065303Z">
        <seg>static final double PI = 3.141592653589793;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static int parseInt(String s)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030907Z" creationid="pingfangx" creationdate="20190103T030907Z">
        <seg>static int parseInt(String s)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static int parseInt(String s, int radix)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T030915Z" creationid="pingfangx" creationdate="20190103T030915Z">
        <seg>static int parseInt(String s, int radix)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static public ZoneId getZoneId (String zoneString) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064907Z" creationid="pingfangx" creationdate="20190102T064907Z">
        <seg>static public ZoneId getZoneId (String zoneString) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static public void customFormat(String pattern, double value ) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034049Z" creationid="pingfangx" creationdate="20190103T034049Z">
        <seg>static public void customFormat(String pattern, double value ) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static public void main(String[] args) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T034051Z" creationid="pingfangx" creationdate="20190103T034051Z">
        <seg>static public void main(String[] args) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static void deprecatedMethod() { }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033410Z" creationid="pingfangx" creationdate="20190102T033410Z">
        <seg>static void deprecatedMethod() { }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>static {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070118Z" creationid="pingfangx" creationdate="20180705T070118Z">
        <seg>static {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>string1.concat(string2);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064320Z" creationid="pingfangx" creationdate="20190103T064320Z">
        <seg>string1.concat(string2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>strings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024416Z" creationid="pingfangx" creationdate="20190103T024416Z">
        <seg>strings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>stringsummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T024419Z" creationid="pingfangx" creationdate="20190103T024419Z">
        <seg>stringsummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>subclasses Class2 and InnerClass2, respectively.)  InnerClass2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021202Z" creationid="pingfangx" creationdate="20190102T021202Z">
        <seg>subclasses Class2 and InnerClass2, respectively.)  InnerClass2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>subclasses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021003Z" creationid="pingfangx" creationdate="20190102T021003Z">
        <seg>subclasses.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>subclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042702Z" creationid="pingfangx" creationdate="20190102T042702Z">
        <seg>subclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>submit.setOnAction(new EventHandler&lt;ActionEvent&gt;() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070013Z" creationid="pingfangx" creationdate="20180706T070013Z">
        <seg>submit.setOnAction(new EventHandler&lt;ActionEvent&gt;() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>substring.length();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090641Z" creationid="pingfangx" creationdate="20180521T090641Z">
        <seg>substring.length();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sum += i.intValue();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084500Z" creationid="pingfangx" creationdate="20190103T084500Z">
        <seg>sum += i.intValue();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sum += i;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084412Z" creationid="pingfangx" creationdate="20190103T084412Z">
        <seg>sum += i;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sum.setPrefColumnCount(10);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070009Z" creationid="pingfangx" creationdate="20180706T070009Z">
        <seg>sum.setPrefColumnCount(10);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sum.setPromptText("Enter the total");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070008Z" creationid="pingfangx" creationdate="20180706T070008Z">
        <seg>sum.setPromptText("Enter the total");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>summary-interface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042701Z" creationid="pingfangx" creationdate="20190102T042701Z">
        <seg>summary-interface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>summaryclasses.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022847Z" creationid="pingfangx" creationdate="20180525T022847Z">
        <seg>summaryclasses.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>summaryinherit.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042708Z" creationid="pingfangx" creationdate="20190102T042708Z">
        <seg>summaryinherit.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075801Z" creationid="pingfangx" creationdate="20180518T075801Z">
        <seg>super</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super T,?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074632Z" creationid="pingfangx" creationdate="20181228T074632Z">
        <seg>super T,?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super T&gt; action)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074639Z" creationid="pingfangx" creationdate="20181228T074639Z">
        <seg>super T&gt; action)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super T&gt; c)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084100Z" creationid="pingfangx" creationdate="20181228T084100Z">
        <seg>super T&gt; c)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super T&gt; c)&lt;/c3&gt;&lt;/a2&gt; (the version of the &lt;c4&gt;sort&lt;/c4&gt; method that includes a &lt;c5&gt;Comparator&lt;/c5&gt; parameter).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T070916Z" creationid="pingfangx" creationdate="20190102T070916Z">
        <seg>super T&gt; c)&lt;/c3&gt;&lt;/a2&gt; （包含 &lt;c5&gt;Comparator&lt;/c5&gt; 参数的 &lt;c4&gt;sort&lt;/c4&gt; 方法的版本）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super T&gt; predicate)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074604Z" creationid="pingfangx" creationdate="20181228T074604Z">
        <seg>super T&gt; predicate)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095523Z" creationid="pingfangx" creationdate="20190102T095523Z">
        <seg>super();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super(parameter list);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T095525Z" creationid="pingfangx" creationdate="20190102T095525Z">
        <seg>super(parameter list);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super(startCadence,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093810Z" creationid="pingfangx" creationdate="20190102T093810Z">
        <seg>super(startCadence,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super(startCadence, startSpeed, startGear);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025713Z" creationid="pingfangx" creationdate="20180525T025713Z">
        <seg>super(startCadence, startSpeed, startGear);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042705Z" creationid="pingfangx" creationdate="20190102T042705Z">
        <seg>super.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super.printDescription();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093816Z" creationid="pingfangx" creationdate="20190102T093816Z">
        <seg>super.printDescription();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>super.printMethod();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094943Z" creationid="pingfangx" creationdate="20190102T094943Z">
        <seg>super.printMethod();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>swe</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085846Z" creationid="pingfangx" creationdate="20190103T085846Z">
        <seg>swe</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>swear oft</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085847Z" creationid="pingfangx" creationdate="20190103T085847Z">
        <seg>swear oft</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sweoft</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T085846Z" creationid="pingfangx" creationdate="20190103T085846Z">
        <seg>sweoft</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>switch</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075733Z" creationid="pingfangx" creationdate="20180518T075733Z">
        <seg>switch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>switch (day) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015341Z" creationid="pingfangx" creationdate="20190102T015341Z">
        <seg>switch (day) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>switch (month) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082017Z" creationid="pingfangx" creationdate="20180521T082017Z">
        <seg>switch (month) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>switch (month.toLowerCase()) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082555Z" creationid="pingfangx" creationdate="20180521T082555Z">
        <seg>switch (month.toLowerCase()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>switch.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072440Z" creationid="pingfangx" creationdate="20180518T072440Z">
        <seg>switch.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>synchronized</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075736Z" creationid="pingfangx" creationdate="20180518T075736Z">
        <seg>synchronized</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tB</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033307Z" creationid="pingfangx" creationdate="20190103T033307Z">
        <seg>tB</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tD</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033504Z" creationid="pingfangx" creationdate="20190103T033504Z">
        <seg>tD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tM</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033435Z" creationid="pingfangx" creationdate="20190103T033435Z">
        <seg>tM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>table listing primitive types and the corresponding wrapper classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T084656Z" creationid="pingfangx" creationdate="20190103T084656Z">
        <seg>表列出了基本类型和相应的包装类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>td has leading zeroes as needed, te does not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033409Z" creationid="pingfangx" creationdate="20190103T033409Z">
        <seg>td 根据需要有前导零，te 没有。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>td, te</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033314Z" creationid="pingfangx" creationdate="20190103T033314Z">
        <seg>td, te</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tempCharArray[i] =</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064016Z" creationid="pingfangx" creationdate="20190103T064016Z">
        <seg>tempCharArray[i] =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tempCharArray[len - 1 - j];</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064021Z" creationid="pingfangx" creationdate="20190103T064021Z">
        <seg>tempCharArray[len - 1 - j];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ternary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063152Z" creationid="pingfangx" creationdate="20180521T063152Z">
        <seg>三元</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090641Z" creationid="pingfangx" creationdate="20180521T090641Z">
        <seg>test:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the enclosing class or instances of the enclosing class's</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021001Z" creationid="pingfangx" creationdate="20190102T020951Z">
        <seg>the enclosing class or instances of the enclosing class's</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the first (or only) word in a method name should be a verb.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064410Z" creationid="pingfangx" creationdate="20180525T064410Z">
        <seg>方法名中的第一个(或唯一)单词应该是一个动词。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the first letter of a class name should be capitalized, and</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T064352Z" creationid="pingfangx" creationdate="20180525T064352Z">
        <seg>类名的第一个字母应该大写，并且</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the programs.]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T021105Z" creationid="pingfangx" creationdate="20190102T021105Z">
        <seg>the programs.]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>then &lt;c0&gt;myBike&lt;/c0&gt; is of type &lt;c1&gt;MountainBike&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083105Z" creationid="pingfangx" creationdate="20190102T083105Z">
        <seg>那么 &lt;c0&gt;myBike&lt;/c0&gt; 的类型为 &lt;c1&gt;MountainBike&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>then &lt;c0&gt;obj&lt;/c0&gt; is both an &lt;c1&gt;Object&lt;/c1&gt; and a &lt;c2&gt;MountainBike&lt;/c2&gt; (until such time as &lt;c3&gt;obj&lt;/c3&gt; is assigned another object that is &lt;i4&gt;not&lt;/i4&gt; a &lt;c5&gt;MountainBike&lt;/c5&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083454Z" creationid="pingfangx" creationdate="20190102T083454Z">
        <seg>然后 &lt;c0&gt;obj&lt;/c0&gt; 既是 &lt;c1&gt;Object&lt;/c1&gt; 又是 &lt;c2&gt;MountainBike&lt;/c2&gt;(直到 &lt;c3&gt;obj&lt;/c3&gt; 分配另一个对象 &lt;i4&gt;不是&lt;/i4&gt; 一个 &lt;c5&gt;MountainBike&lt;/c5&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>then your objects can invoke the &lt;c1&gt;clone()&lt;/c1&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T101701Z" creationid="pingfangx" creationdate="20190102T101701Z">
        <seg>那么你的对象可以调用 &lt;c1&gt;clone()&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>thirdDay.tellItLikeItIs();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015350Z" creationid="pingfangx" creationdate="20190102T015350Z">
        <seg>thirdDay.tellItLikeItIs();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075738Z" creationid="pingfangx" creationdate="20180518T075738Z">
        <seg>this</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.day = day;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T015339Z" creationid="pingfangx" creationdate="20190102T015339Z">
        <seg>this.day = day;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.height = height;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020147Z" creationid="pingfangx" creationdate="20180607T020147Z">
        <seg>this.height = height;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.mass = mass;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020026Z" creationid="pingfangx" creationdate="20190102T020026Z">
        <seg>this.mass = mass;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.radius = radius;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020027Z" creationid="pingfangx" creationdate="20190102T020027Z">
        <seg>this.radius = radius;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.setSuspension(suspensionType);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093812Z" creationid="pingfangx" creationdate="20190102T093812Z">
        <seg>this.setSuspension(suspensionType);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.setTireWidth(newTireWidth);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094002Z" creationid="pingfangx" creationdate="20190102T094002Z">
        <seg>this.setTireWidth(newTireWidth);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.suspension = suspensionType;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T093814Z" creationid="pingfangx" creationdate="20190102T093814Z">
        <seg>this.suspension = suspensionType;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.text = text;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065238Z" creationid="pingfangx" creationdate="20190102T065238Z">
        <seg>this.text = text;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.tireWidth = newTireWidth;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T094005Z" creationid="pingfangx" creationdate="20190102T094005Z">
        <seg>this.tireWidth = newTireWidth;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.value = value;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065238Z" creationid="pingfangx" creationdate="20190102T065238Z">
        <seg>this.value = value;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.width = width;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180607T020146Z" creationid="pingfangx" creationdate="20180607T020146Z">
        <seg>this.width = width;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.x = x;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092803Z" creationid="pingfangx" creationdate="20180601T092803Z">
        <seg>this.x = x;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.y = y;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T092803Z" creationid="pingfangx" creationdate="20180601T092803Z">
        <seg>this.y = y;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>thiskey.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022844Z" creationid="pingfangx" creationdate="20180525T022844Z">
        <seg>thiskey.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>throw</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075741Z" creationid="pingfangx" creationdate="20180518T075741Z">
        <seg>throw</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>throws</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075744Z" creationid="pingfangx" creationdate="20180518T075744Z">
        <seg>throws</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>throws IllegalArgumentException;

}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065312Z" creationid="pingfangx" creationdate="20190102T065312Z">
        <seg>throws IllegalArgumentException;

}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>throws an exception (covered later),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091205Z" creationid="pingfangx" creationdate="20180601T091205Z">
        <seg>抛出一个异常(稍后介绍)，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tl</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033421Z" creationid="pingfangx" creationdate="20190103T033421Z">
        <seg>tl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tm</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033452Z" creationid="pingfangx" creationdate="20190103T033452Z">
        <seg>tm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>to make it compile?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020651Z" creationid="pingfangx" creationdate="20190102T020651Z">
        <seg>让它编译？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>to separate groups of digits in numeric literals, which can improve the readability of your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T084314Z" creationid="pingfangx" creationdate="20180518T084314Z">
        <seg>以数字字面量分隔数字组，这可以提高代码的可读性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>toString(char ch)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062243Z" creationid="pingfangx" creationdate="20190103T062243Z">
        <seg>toString(char ch)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033442Z" creationid="pingfangx" creationdate="20190103T033442Z">
        <seg>tp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>trail icon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T042130Z" creationid="pingfangx" creationdate="20180518T042130Z">
        <seg>trail icon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>transferElements(roster, () -&gt; { return new HashSet&lt;&gt;(); });</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T085029Z" creationid="pingfangx" creationdate="20181228T085029Z">
        <seg>transferElements(roster, () -&gt; { return new HashSet&lt;&gt;(); });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>transient</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075747Z" creationid="pingfangx" creationdate="20180518T075747Z">
        <seg>transient</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>try</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075753Z" creationid="pingfangx" creationdate="20180518T075753Z">
        <seg>try</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>try {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061342Z" creationid="pingfangx" creationdate="20190102T061342Z">
        <seg>try {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorialLearningPaths.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T030458Z" creationid="pingfangx" creationdate="20180518T030458Z">
        <seg>tutorialLearningPaths.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ty, tY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T033410Z" creationid="pingfangx" creationdate="20190103T033410Z">
        <seg>ty, tY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>type_annotations.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T023238Z" creationid="pingfangx" creationdate="20190102T023238Z">
        <seg>type_annotations.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>uiswing/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T031343Z" creationid="pingfangx" creationdate="20180518T031343Z">
        <seg>uiswing/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>unary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T062958Z" creationid="pingfangx" creationdate="20180521T062958Z">
        <seg>一元</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>unix.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034017Z" creationid="pingfangx" creationdate="20180518T034017Z">
        <seg>unix.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>uppercase letter A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034547Z" creationid="pingfangx" creationdate="20180518T034547Z">
        <seg>uppercase letter A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>uses the &lt;c0&gt;System&lt;/c0&gt; class from the core library to print the "Hello World!" message to standard output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035812Z" creationid="pingfangx" creationdate="20180518T035812Z">
        <seg>使用核心库中的 &lt;c0&gt;System&lt;/c0&gt; 类来打印 "Hello World!" 消息发送到标准输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>usinginterface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T042658Z" creationid="pingfangx" creationdate="20190102T042658Z">
        <seg>usinginterface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>usingobject.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022842Z" creationid="pingfangx" creationdate="20180525T022842Z">
        <seg>usingobject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>validatePhoneNumber("123-456-7890", "456-7890");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T122528Z" creationid="pingfangx" creationdate="20180705T122528Z">
        <seg>validatePhoneNumber("123-456-7890", "456-7890");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>value1 != value2
value1 &lt;  value2
value1 &lt;= value2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070036Z" creationid="pingfangx" creationdate="20180521T070036Z">
        <seg>value1 != value2
value1 &lt;  value2
value1 &lt;= value2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>value1 : value2;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070338Z" creationid="pingfangx" creationdate="20180521T070338Z">
        <seg>value1 : value2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>value1 : value2;&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T072616Z" creationid="pingfangx" creationdate="20180521T072616Z">
        <seg>value1 : value2;&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>value1 : value2;&lt;/c1&gt;&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T073310Z" creationid="pingfangx" creationdate="20180521T073310Z">
        <seg>value1 : value2;&lt;/c1&gt;&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T020659Z" creationid="pingfangx" creationdate="20190102T020659Z">
        <seg>变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>variables.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T071948Z" creationid="pingfangx" creationdate="20180518T071948Z">
        <seg>variables.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>variables.html#naming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T033232Z" creationid="pingfangx" creationdate="20180521T033232Z">
        <seg>variables.html#naming</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>variablesummary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072112Z" creationid="pingfangx" creationdate="20180518T072112Z">
        <seg>variablesummary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075756Z" creationid="pingfangx" creationdate="20180518T075756Z">
        <seg>void</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void &lt;s0&gt;forEach&lt;/s0&gt;(Consumer&lt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T074638Z" creationid="pingfangx" creationdate="20181228T074638Z">
        <seg>void &lt;s0&gt;forEach&lt;/s0&gt;(Consumer&lt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void aMethod(int aValue) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074723Z" creationid="pingfangx" creationdate="20190102T074723Z">
        <seg>void aMethod(int aValue) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void aMethod(int aValue);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074738Z" creationid="pingfangx" creationdate="20190102T074738Z">
        <seg>void aMethod(int aValue);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void aMethod(int aValue){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T074530Z" creationid="pingfangx" creationdate="20190102T074530Z">
        <seg>void aMethod(int aValue){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void addCard(Card card);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065306Z" creationid="pingfangx" creationdate="20190102T065306Z">
        <seg>void addCard(Card card);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void addCards(List&lt;Card&gt; cards);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065307Z" creationid="pingfangx" creationdate="20190102T065307Z">
        <seg>void addCards(List&lt;Card&gt; cards);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void addDeck(Deck deck);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065307Z" creationid="pingfangx" creationdate="20190102T065307Z">
        <seg>void addDeck(Deck deck);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void applyBrakes() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T080903Z" creationid="pingfangx" creationdate="20180521T080903Z">
        <seg>void applyBrakes() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void applyBrakes(int decrement) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062542Z" creationid="pingfangx" creationdate="20180518T062542Z">
        <seg>void applyBrakes(int decrement) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void applyBrakes(int decrement);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063857Z" creationid="pingfangx" creationdate="20180518T063857Z">
        <seg>void applyBrakes(int decrement);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void changeCadence(int newValue) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062536Z" creationid="pingfangx" creationdate="20180518T062536Z">
        <seg>void changeCadence(int newValue) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void changeCadence(int newValue);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063855Z" creationid="pingfangx" creationdate="20180518T063855Z">
        <seg>void changeCadence(int newValue);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void changeGear(int newValue) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062538Z" creationid="pingfangx" creationdate="20180518T062538Z">
        <seg>void changeGear(int newValue) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void changeGear(int newValue);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063856Z" creationid="pingfangx" creationdate="20180518T063856Z">
        <seg>void changeGear(int newValue);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void doSomething (int i, double x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061524Z" creationid="pingfangx" creationdate="20190102T061524Z">
        <seg>void doSomething (int i, double x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void doSomething(int i, double x);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T062840Z" creationid="pingfangx" creationdate="20190102T062840Z">
        <seg>void doSomething(int i, double x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void draw() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022317Z" creationid="pingfangx" creationdate="20190103T022317Z">
        <seg>void draw() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void ensureCapacity(int minCapacity)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081431Z" creationid="pingfangx" creationdate="20190103T081431Z">
        <seg>void ensureCapacity(int minCapacity)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void invoke(Runnable r) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082201Z" creationid="pingfangx" creationdate="20181228T082201Z">
        <seg>void invoke(Runnable r) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void methodInFirstLevel(int x) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091530Z" creationid="pingfangx" creationdate="20180705T091530Z">
        <seg>void methodInFirstLevel(int x) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void monitorTemperature() throws</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T024211Z" creationid="pingfangx" creationdate="20190102T024211Z">
        <seg>void monitorTemperature() throws</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void moveTo(int newX, int newY) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022302Z" creationid="pingfangx" creationdate="20190103T022302Z">
        <seg>void moveTo(int newX, int newY) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void open();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041550Z" creationid="pingfangx" creationdate="20190102T041550Z">
        <seg>void open();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void openBackDoor();
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041551Z" creationid="pingfangx" creationdate="20190102T041551Z">
        <seg>void openBackDoor();
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void openFrontDoor();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T041551Z" creationid="pingfangx" creationdate="20190102T041551Z">
        <seg>void openFrontDoor();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void printClassName(Object obj) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T103551Z" creationid="pingfangx" creationdate="20190102T103551Z">
        <seg>void printClassName(Object obj) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void printStates() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062543Z" creationid="pingfangx" creationdate="20180518T062543Z">
        <seg>void printStates() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void resize() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022317Z" creationid="pingfangx" creationdate="20190103T022317Z">
        <seg>void resize() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void run();
}

public interface Callable&lt;V&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082127Z" creationid="pingfangx" creationdate="20181228T082127Z">
        <seg>void run();
}

public interface Callable&lt;V&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setCharAt(int index, char c)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T082148Z" creationid="pingfangx" creationdate="20190103T082148Z">
        <seg>void setCharAt(int index, char c)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setDate(int day, int month, int year);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060824Z" creationid="pingfangx" creationdate="20190102T060824Z">
        <seg>void setDate(int day, int month, int year);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setDateAndTime(int day, int month, int year,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060825Z" creationid="pingfangx" creationdate="20190102T060825Z">
        <seg>void setDateAndTime(int day, int month, int year,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setLength(int newLength)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081403Z" creationid="pingfangx" creationdate="20190103T081403Z">
        <seg>void setLength(int newLength)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setTime(int hour, int minute, int second);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T060824Z" creationid="pingfangx" creationdate="20190102T060824Z">
        <seg>void setTime(int hour, int minute, int second);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void shuffle();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065308Z" creationid="pingfangx" creationdate="20190102T065308Z">
        <seg>void shuffle();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void sort();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065308Z" creationid="pingfangx" creationdate="20190102T065308Z">
        <seg>void sort();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void sort(Comparator&lt;Card&gt; c);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T065309Z" creationid="pingfangx" creationdate="20190102T065309Z">
        <seg>void sort(Comparator&lt;Card&gt; c);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void speedUp(int increment) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T062539Z" creationid="pingfangx" creationdate="20180518T062539Z">
        <seg>void speedUp(int increment) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void speedUp(int increment);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T063856Z" creationid="pingfangx" creationdate="20180518T063856Z">
        <seg>void speedUp(int increment);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void useDeprecatedMethod() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T033605Z" creationid="pingfangx" creationdate="20190102T033605Z">
        <seg>void useDeprecatedMethod() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>volatile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075759Z" creationid="pingfangx" creationdate="20180518T075759Z">
        <seg>volatile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>we would get a compile-time error because &lt;c0&gt;obj&lt;/c0&gt; is not known to the compiler to be a &lt;c1&gt;MountainBike&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T083526Z" creationid="pingfangx" creationdate="20190102T083526Z">
        <seg>我们会得到编译时错误，因为编译器不知道 &lt;c0&gt;obj&lt;/c0&gt; 是 &lt;c1&gt;MountainBike&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>whentouse.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T022855Z" creationid="pingfangx" creationdate="20180525T022855Z">
        <seg>whentouse.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>where &lt;c0&gt;format&lt;/c0&gt; is a string that specifies the formatting to be used and &lt;c1&gt;args&lt;/c1&gt; is a list of the variables to be printed using that formatting.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T032805Z" creationid="pingfangx" creationdate="20190103T032805Z">
        <seg>其中 &lt;c0&gt;format&lt;/c0&gt; 是一个字符串，用于指定要使用的格式，&lt;c1&gt;args&lt;/c1&gt; 是使用该格式打印的变量列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>which prints</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064436Z" creationid="pingfangx" creationdate="20190103T064436Z">
        <seg>这会打印</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>which results in</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064420Z" creationid="pingfangx" creationdate="20190103T064420Z">
        <seg>结果是</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>which would, for a properly overridden &lt;c0&gt;toString()&lt;/c0&gt; method, print something useful, like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T104112Z" creationid="pingfangx" creationdate="20190102T104112Z">
        <seg>对于正确覆盖的 &lt;c0&gt;toString()&lt;/c0&gt; 方法，打印一些有用的东西，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>whichever occurs first.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T091210Z" creationid="pingfangx" creationdate="20180601T091210Z">
        <seg>以先发生者为准。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T075802Z" creationid="pingfangx" creationdate="20180518T075802Z">
        <seg>while</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (count &lt; 11) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083002Z" creationid="pingfangx" creationdate="20180521T083002Z">
        <seg>while (count &lt; 11) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (expression) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082835Z" creationid="pingfangx" creationdate="20180521T082835Z">
        <seg>while (expression) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (iterator.hasNext()) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T100912Z" creationid="pingfangx" creationdate="20180705T100912Z">
        <seg>while (iterator.hasNext()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (n-- != 0) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090644Z" creationid="pingfangx" creationdate="20180521T090644Z">
        <seg>while (n-- != 0) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (true) {

}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091411Z" creationid="pingfangx" creationdate="20180521T091411Z">
        <seg>while (true) {

}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (true){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083012Z" creationid="pingfangx" creationdate="20180521T083012Z">
        <seg>while (true){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T072442Z" creationid="pingfangx" creationdate="20180518T072442Z">
        <seg>while.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>width = w;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062617Z" creationid="pingfangx" creationdate="20180601T062617Z">
        <seg>width = w;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>will produce a string builder with a length of 9 and a capacity of 16:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T081323Z" creationid="pingfangx" creationdate="20190103T081223Z">
        <seg>将生成一个长度为 9 且容量为 16 的 string builder：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>win32.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034016Z" creationid="pingfangx" creationdate="20180518T034016Z">
        <seg>win32.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x + (y / 100) // unambiguous, recommended</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074732Z" creationid="pingfangx" creationdate="20180521T074732Z">
        <seg>x + (y / 100) //明确的，推荐</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x + y / 100    // ambiguous</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074457Z" creationid="pingfangx" creationdate="20180521T074450Z">
        <seg>x + y / 100    // 不明确</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x + y / 100 &lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T074718Z" creationid="pingfangx" creationdate="20180521T074718Z">
        <seg>x + y / 100 &lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x = 23
this.x = 1
ShadowTest.this.x = 0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T091539Z" creationid="pingfangx" creationdate="20180705T091539Z">
        <seg>x = 23
this.x = 1
ShadowTest.this.x = 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x = 23
y = 23
this.x = 1
LambdaScopeTest.this.x = 0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T080008Z" creationid="pingfangx" creationdate="20181228T080008Z">
        <seg>x = 23
y = 23
this.x = 1
LambdaScopeTest.this.x = 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x = a;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062444Z" creationid="pingfangx" creationdate="20180601T062444Z">
        <seg>x = a;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x, Math.exp(x));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040140Z" creationid="pingfangx" creationdate="20190103T040140Z">
        <seg>x, Math.exp(x));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x, Math.log(x));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040141Z" creationid="pingfangx" creationdate="20190103T040141Z">
        <seg>x, Math.log(x));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x, Math.sqrt(x));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040143Z" creationid="pingfangx" creationdate="20190103T040143Z">
        <seg>x, Math.sqrt(x));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x, y, Math.pow(x, y));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T040142Z" creationid="pingfangx" creationdate="20190103T040142Z">
        <seg>x, y, Math.pow(x, y));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>y = b;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062444Z" creationid="pingfangx" creationdate="20180601T062444Z">
        <seg>y = b;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>you can write</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T064832Z" creationid="pingfangx" creationdate="20190103T064832Z">
        <seg>你可以写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>you would write</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T062619Z" creationid="pingfangx" creationdate="20190103T062619Z">
        <seg>你应该写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180705T070653Z" creationid="pingfangx" creationdate="20180705T070653Z">
        <seg>{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{ 12, 1076, 2000, 8 },</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090129Z" creationid="pingfangx" creationdate="20180521T090129Z">
        <seg>{ 12, 1076, 2000, 8 },</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{ 32, 87, 3, 589 },</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090128Z" creationid="pingfangx" creationdate="20180521T090128Z">
        <seg>{ 32, 87, 3, 589 },</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{ 32, 87, 3, 589,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085844Z" creationid="pingfangx" creationdate="20180521T085844Z">
        <seg>{ 32, 87, 3, 589,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{ 622, 127, 77, 955 }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T090129Z" creationid="pingfangx" creationdate="20180521T090129Z">
        <seg>{ 622, 127, 77, 955 }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{"Mr. ", "Mrs. ", "Ms. "},</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042312Z" creationid="pingfangx" creationdate="20180521T042312Z">
        <seg>{"Mr. ", "Mrs. ", "Ms. "},</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{"Smith", "Jones"}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042313Z" creationid="pingfangx" creationdate="20180521T042313Z">
        <seg>{"Smith", "Jones"}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{1,2,3,4,5,6,7,8,9,10};</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T085625Z" creationid="pingfangx" creationdate="20180521T085625Z">
        <seg>{1,2,3,4,5,6,7,8,9,10};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>|</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063144Z" creationid="pingfangx" creationdate="20180521T063144Z">
        <seg>|</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>||</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T063149Z" creationid="pingfangx" creationdate="20180521T063149Z">
        <seg>||</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>|| (year % 400 == 0))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T082518Z" creationid="pingfangx" creationdate="20180521T082518Z">
        <seg>|| (year % 400 == 0))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035602Z" creationid="pingfangx" creationdate="20180518T035602Z">
        <seg>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T091514Z" creationid="pingfangx" creationdate="20180706T091514Z">
        <seg>}
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
&lt;b1&gt;}&lt;/b1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035553Z" creationid="pingfangx" creationdate="20180518T035553Z">
        <seg>}
&lt;b1&gt;}&lt;/b1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T035248Z" creationid="pingfangx" creationdate="20180518T035248Z">
        <seg>}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

System.out.println("third string");</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T091645Z" creationid="pingfangx" creationdate="20180521T091645Z">
        <seg>}
}

System.out.println("third string");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

class Parent {}
class Child extends Parent implements MyInterface {}
interface MyInterface {}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T070510Z" creationid="pingfangx" creationdate="20180521T070510Z">
        <seg>}
}

class Parent {}
class Child extends Parent implements MyInterface {}
interface MyInterface {}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

public class ClassB extends ClassA {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T023451Z" creationid="pingfangx" creationdate="20190103T023451Z">
        <seg>}
}

public class ClassB extends ClassA {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}
ComparisonProvider myComparisonProvider = new ComparisonProvider();
Arrays.sort(rosterAsArray, &lt;s0&gt;myComparisonProvider::compareByName&lt;/s0&gt;);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T084720Z" creationid="pingfangx" creationdate="20181228T084720Z">
        <seg>}
}
ComparisonProvider myComparisonProvider = new ComparisonProvider();
Arrays.sort(rosterAsArray, &lt;s0&gt;myComparisonProvider::compareByName&lt;/s0&gt;);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}
class Rectangle extends GraphicObject {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190103T022318Z" creationid="pingfangx" creationdate="20190103T022318Z">
        <seg>}
}
class Rectangle extends GraphicObject {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} 
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081131Z" creationid="pingfangx" creationdate="20180521T081131Z">
        <seg>} 
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}   

}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180525T025716Z" creationid="pingfangx" creationdate="20180525T025716Z">
        <seg>}   

}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}   
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T081940Z" creationid="pingfangx" creationdate="20190102T081940Z">
        <seg>}   
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}    
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T064908Z" creationid="pingfangx" creationdate="20190102T064908Z">
        <seg>}    
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}      
);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T071849Z" creationid="pingfangx" creationdate="20190102T071849Z">
        <seg>}      
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}            
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T061140Z" creationid="pingfangx" creationdate="20180706T061140Z">
        <seg>}            
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} &lt;s1&gt;// end block one&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075354Z" creationid="pingfangx" creationdate="20180521T075354Z">
        <seg>} &lt;s1&gt;// end block one&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} &lt;s3&gt;// end block 2&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T075356Z" creationid="pingfangx" creationdate="20180521T075356Z">
        <seg>} &lt;s3&gt;// end block 2&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} catch (DateTimeException e) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T061343Z" creationid="pingfangx" creationdate="20190102T061343Z">
        <seg>} catch (DateTimeException e) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} else if (testscore &gt;= 60) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081148Z" creationid="pingfangx" creationdate="20180521T081148Z">
        <seg>} else if (testscore &gt;= 60) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} else if (testscore &gt;= 70) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081147Z" creationid="pingfangx" creationdate="20180521T081147Z">
        <seg>} else if (testscore &gt;= 70) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} else if (testscore &gt;= 80) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081146Z" creationid="pingfangx" creationdate="20180521T081146Z">
        <seg>} else if (testscore &gt;= 80) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} else {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T081130Z" creationid="pingfangx" creationdate="20180521T081130Z">
        <seg>} else {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} while (count &lt; 11);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T083045Z" creationid="pingfangx" creationdate="20180521T083045Z">
        <seg>} while (count &lt; 11);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>});</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180706T070015Z" creationid="pingfangx" creationdate="20180706T070015Z">
        <seg>});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>};</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T042313Z" creationid="pingfangx" creationdate="20180521T042313Z">
        <seg>};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}&lt;/b0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180601T062446Z" creationid="pingfangx" creationdate="20180601T062446Z">
        <seg>}&lt;/b0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T063126Z" creationid="pingfangx" creationdate="20190102T063126Z">
        <seg>}&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20181228T082817Z" creationid="pingfangx" creationdate="20181228T082817Z">
        <seg>}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>~       Unary bitwise complement
&lt;&lt;      Signed left shift
&gt;&gt;      Signed right shift
&gt;&gt;&gt;     Unsigned right shift
&amp;       Bitwise AND
^       Bitwise exclusive OR
|       Bitwise inclusive OR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180521T071847Z" creationid="pingfangx" creationdate="20180521T071847Z">
        <seg>~       一元按位补码
&lt;&lt;      有符号左移
&gt;&gt;      有符号右移
&gt;&gt;&gt;     无符号右移
&amp;       按位与
^       按位异或
|       按位或</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> */
class HelloWorldApp {
    public static void main(String[] args) {
        System.out.println("Hello World!"); // Display the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034535Z" creationid="pingfangx" creationdate="20180518T034535Z">
        <seg> */
class HelloWorldApp {
    public static void main(String[] args) {
        System.out.println("Hello World!"); // Display the string.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T034537Z" creationid="pingfangx" creationdate="20180518T034537Z">
        <seg>    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>      Called by the garbage collector on an object when garbage&lt;br2/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100834Z" creationid="pingfangx" creationdate="20190102T100834Z">
        <seg>      由垃圾回收器在对象上调用&lt;br2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>      Creates and returns a copy of this object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100632Z" creationid="pingfangx" creationdate="20190102T100632Z">
        <seg>      创建并返回此对象的副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>      Indicates whether some other object is "equal to" this one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100642Z" creationid="pingfangx" creationdate="20190102T100642Z">
        <seg>      指示某个其他对象是否 "等于" 此对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>      Returns a hash code value for the object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100910Z" creationid="pingfangx" creationdate="20190102T100910Z">
        <seg>      返回对象的哈希码值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>      Returns a string representation of the object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100918Z" creationid="pingfangx" creationdate="20190102T100918Z">
        <seg>      返回对象的字符串表示形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>      Returns the runtime class of an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100905Z" creationid="pingfangx" creationdate="20190102T100905Z">
        <seg>      返回对象的运行时类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>      collection determines that there are no more references to the object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20190102T100851Z" creationid="pingfangx" creationdate="20190102T100851Z">
        <seg>      当垃圾回收器确定不再有对该对象的引用时</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>« Previous</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180518T040704Z" creationid="pingfangx" creationdate="20180518T040704Z">
        <seg>« Previous</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
